{"version":3,"sources":["state/reducers/score.jsx","state/constants/score.jsx","state/reducers/colors.jsx","state/constants/colors.jsx","state/reducers/index.jsx","lib/isNullOrUndefined.jsx","lib/pick.jsx","state/readers/score.jsx","state/readers/colors.jsx","state/actions/colors.jsx","components/ColorPicker.jsx","components/ScoreDisplay.jsx","state/actions/score.jsx","components/ScoreChangeButtonBar.jsx","components/ScoreHistoryItem.jsx","lib/redux/deepConnect.jsx","components/ScoreHistory.jsx","components/ScoreColorPickers.jsx","components/MainLayout.jsx","App.jsx","serviceWorker.js","index.js"],"names":["defaultState","playerScore","totalGames","history","addResultWithResult","state","resultType","direction","resultTypeScore","convertResultTypeToScore","historyItem","id","uuid4","ts","moment","unix","score","cancelable","isCancellation","update","$push","$merge","_defaultState","Object","defineProperty","reducers","combineReducers","arguments","length","undefined","action","type","historyItemsWithID","filter","item","newState","map","colors","colorID","color","isNotNullOrUndefined","val","isNullOrUndefined","pick","idx","getScoreState","getScoreStateHistory","getPlayerScore","getTotalGames","getScoreHistoryItemsCount","getScoreHistoryItemByIDX","getColorByColorID","changeColor","ColorPickerInner","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlePickerClick","setState","visible","handleClose","handleChange","dispatch","hex","buttonStyle","backgroundColor","popover","react_default","a","createElement","className","onClick","lib","onChange","Fragment","style","PureComponent","ColorPicker","connect","ownProps","ScoreDisplayInner","_this$props","styles","overall","scoreBackgroundColor","scoreText","scoreTextColor","scorePlayer","scorePlayerColor","scoreSlash","scoreSlashColor","scoreTotal","scoreTotalColor","ScoreDisplay","addResult","removeResult","clearResults","ScoreChangeButtonBarInner","addResultFunc","ButtonGroup","Button","ScoreChangeButtonBar","ScoreHistoryItemInner","removeItem","dt","format","cancel","ScoreHistoryItem","mapStateToProps","options","mapDispatchToProps","mergeProps","$unset","areStatePropsEqual","_","isEqual","deepConnect","ScoreHistoryInner","items","historyItemsCount","push","Table","ScoreHistory","ScoreColorPickers","_PureComponent","apply","inherits","createClass","key","value","MainLayout","Container","Row","Col","md","Jumbotron","ScoreColorPickers_ScoreColorPickers","href","App","store","createStore","es","MainLayout_MainLayout","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a2e6eb1.chunk.js","sourcesContent":["import {ADD_RESULT, CLEAR_RESULTS, DRAW, LOSS, REMOVE_RESULT, WIN} from \"../constants/score\";\nimport update from \"immutability-helper\";\nimport moment from \"moment\";\nimport uuid4 from \"uuid/v4\";\n\nconst defaultState = {\n    playerScore: 0,\n    totalGames: 0,\n    history: [],\n};\n\nconst convertResultTypeToScore = (resultType) => {\n    switch (resultType) {\n        case WIN:\n            return 1;\n        case DRAW:\n            return 0.5;\n        case LOSS:\n            return 0;\n\n        default:\n            return 0;\n    }\n};\n\nconst addResultWithResult = (state, resultType, direction) => {\n    const resultTypeScore = direction * convertResultTypeToScore(resultType);\n\n    const historyItem = {\n        id: uuid4(),\n        ts: moment().unix(),\n        resultType: resultType,\n        score: resultTypeScore,\n        cancelable: direction === 1,\n        isCancellation: direction === -1,\n    };\n    const history = update(state.history, {$push: [historyItem]});\n\n    return update(state, {$merge: {\n        id: uuid4(),\n        playerScore: state.playerScore + resultTypeScore,\n        totalGames: state.totalGames + direction,\n        history: history,\n    }});\n};\n\nexport const scoreReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case ADD_RESULT:\n            return addResultWithResult(state, action.resultType, 1);\n\n        case REMOVE_RESULT:\n            const historyItemsWithID = state.history.filter(item => {\n                return item.id === action.id\n            });\n            if (historyItemsWithID.length !== 1) {\n                return state;\n            }\n\n            const resultType = historyItemsWithID[0].resultType;\n\n            const newState = addResultWithResult(state, resultType, -1);\n\n            return update(newState, {$merge: {\n                history: newState.history.map((item) => {\n                    if (item.id !== action.id) {\n                        return item\n                    }\n                    return update(item, {$merge: {\n                        cancelable: false,\n                    }});\n                })\n            }});\n\n        case CLEAR_RESULTS:\n            return defaultState;\n\n        default:\n            return state;\n    }\n};\n","export const ADD_RESULT = 'ADD_RESULT';\nexport const REMOVE_RESULT = 'REMOVE_RESULT';\nexport const CLEAR_RESULTS = 'CLEAR_RESULTS';\n\nexport const WIN = 'WIN';\nexport const DRAW = 'DRAW';\nexport const LOSS = 'LOSS';\n","import {\n    CHANGE_COLOR,\n    SCORE_BACKGROUND_COLOR_ID,\n    SCORE_PLAYER_COLOR_ID,\n    SCORE_SLASH_COLOR_ID,\n    SCORE_TEXT_COLOR_ID, SCORE_TOTAL_COLOR_ID\n} from \"../constants/colors\";\nimport update from \"immutability-helper\";\n\nconst defaultState = {\n    [SCORE_BACKGROUND_COLOR_ID]: '#e9ecef',\n    [SCORE_TEXT_COLOR_ID]: '#202428',\n    [SCORE_PLAYER_COLOR_ID]: '#202428',\n    [SCORE_SLASH_COLOR_ID]: '#202428',\n    [SCORE_TOTAL_COLOR_ID]: '#202428',\n};\n\nexport const colorReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case CHANGE_COLOR:\n            return update(state, {$merge: {\n                [action.colorID]: action.color,\n            }});\n\n        default:\n            return state;\n    }\n};\n","export const CHANGE_COLOR = 'CHANGE_COLOR';\n\nexport const SCORE_BACKGROUND_COLOR_ID = 'SCORE_BACKGROUND_COLOR_ID';\nexport const SCORE_TEXT_COLOR_ID = 'SCORE_TEXT_COLOR_ID';\nexport const SCORE_PLAYER_COLOR_ID = 'SCORE_PLAYER_COLOR_ID';\nexport const SCORE_SLASH_COLOR_ID = 'SCORE_SLASH_COLOR_ID';\nexport const SCORE_TOTAL_COLOR_ID = 'SCORE_TOTAL_COLOR_ID';\n","import {scoreReducer} from \"./score\";\nimport {combineReducers} from \"redux\";\nimport {colorReducer} from \"./colors\";\n\nexport const reducers = combineReducers({\n    score: scoreReducer,\n    colors: colorReducer,\n});\n","export function isNullOrUndefined(val) {\n    return val === null || val === undefined\n}\n\nexport const isNotNullOrUndefined = (val) => {\n    return !isNullOrUndefined(val)\n};\n","import {isNotNullOrUndefined} from \"./isNullOrUndefined\";\n\n\nexport function pick() {\n    for (let idx = 0; idx < arguments.length; idx++) {\n        if (isNotNullOrUndefined(arguments[idx])) {\n            return arguments[idx]\n        }\n    }\n    return null;\n}\n","import {pick} from \"../../lib/pick\";\n\nconst getScoreState = (state) => {\n    return pick(state.score, {});\n};\n\nconst getScoreStateHistory = (state) => {\n    return pick(getScoreState(state).history, [])\n}\n\nexport const getPlayerScore = (state) => {\n    return pick(getScoreState(state).playerScore, 0)\n};\n\nexport const getTotalGames = (state) => {\n    return pick(getScoreState(state).totalGames, 0)\n};\n\nexport const getScoreHistoryItemsCount = (state) => {\n    return pick(getScoreStateHistory(state).length, 0);\n};\n\nexport const getScoreHistoryItemByIDX = (state, idx) => {\n    return pick(getScoreStateHistory(state)[idx], {});\n};\n","import {pick} from \"../../lib/pick\";\n\nexport const getColorByColorID = (state, colorID) => {\n    return pick(state.colors[colorID], {})\n}\n","import {CHANGE_COLOR} from \"../constants/colors\";\n\nexport const changeColor = (colorID, color) => {\n    return {\n        type: CHANGE_COLOR,\n        colorID,\n        color,\n    }\n};\n","import React, {PureComponent} from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport {SketchPicker} from \"react-color\";\nimport {connect} from \"react-redux\";\nimport {getColorByColorID} from \"../state/readers/colors\";\nimport {changeColor} from \"../state/actions/colors\";\n\nclass ColorPickerInner extends PureComponent {\n    static propTypes = {\n        colorID: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            visible: false,\n        }\n    }\n\n    handlePickerClick = () => {\n        this.setState({visible: !this.state.visible});\n    };\n\n    handleClose = () => {\n        this.setState({visible: false});\n    };\n\n    handleChange = (color) => {\n        this.props.dispatch(changeColor(this.props.colorID, color.hex))\n    };\n\n    render() {\n        const buttonStyle = {backgroundColor: this.props.color};\n\n        let popover = null;\n        if (this.state.visible) {\n            popover = <div className=\"color-picker-popover\">\n                <div className=\"color-picker-cover\" onClick={this.handleClose}/>\n                <SketchPicker color={this.props.color} onChange={this.handleChange}/>\n            </div>\n        }\n\n        return <React.Fragment>\n            <div\n                className=\"color-picker-button\"\n                style={buttonStyle}\n                onClick={this.handlePickerClick}\n            />\n\n            {popover}\n        </React.Fragment>\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        color: getColorByColorID(state, ownProps.colorID),\n    }\n};\n\nexport const ColorPicker = connect(mapStateToProps)(ColorPickerInner);\n","import React, {PureComponent} from \"react\";\nimport {connect} from \"react-redux\";\nimport {getPlayerScore, getTotalGames} from \"../state/readers/score\";\nimport * as PropTypes from \"prop-types\";\nimport {ColorPicker} from \"./ColorPicker\";\nimport {getColorByColorID} from \"../state/readers/colors\";\nimport {\n    SCORE_BACKGROUND_COLOR_ID,\n    SCORE_PLAYER_COLOR_ID,\n    SCORE_SLASH_COLOR_ID,\n    SCORE_TEXT_COLOR_ID, SCORE_TOTAL_COLOR_ID\n} from \"../state/constants/colors\";\n\nclass ScoreDisplayInner extends PureComponent {\n    static propTypes = {\n        playerScore: PropTypes.number.isRequired,\n        totalGames: PropTypes.number.isRequired,\n\n        scoreBackgroundColor: PropTypes.string.isRequired,\n        scoreTextColor: PropTypes.string.isRequired,\n        scorePlayerColor: PropTypes.string.isRequired,\n        scoreSlashColor: PropTypes.string.isRequired,\n        scoreTotalColor: PropTypes.string.isRequired,\n    };\n\n    render() {\n        const {playerScore, totalGames} = this.props;\n\n        const styles = {\n            overall: {backgroundColor: this.props.scoreBackgroundColor},\n            scoreText: {color: this.props.scoreTextColor},\n            scorePlayer: {color: this.props.scorePlayerColor},\n            scoreSlash: {color: this.props.scoreSlashColor},\n            scoreTotal: {color: this.props.scoreTotalColor},\n        };\n\n        return <div id=\"score\" style={styles.overall}>\n            <strong style={styles.scoreText}>Score:</strong>\n            <span style={styles.scorePlayer}>{playerScore}</span>\n            <span  style={styles.scoreSlash}>/</span>\n            <span style={styles.scoreTotal}>{totalGames}</span>\n        </div>\n    }\n}\n\nexport const mapStateToProps = (state) => {\n    return {\n        playerScore: getPlayerScore(state),\n        totalGames: getTotalGames(state),\n\n        scoreBackgroundColor: getColorByColorID(state, SCORE_BACKGROUND_COLOR_ID),\n        scoreTextColor: getColorByColorID(state, SCORE_TEXT_COLOR_ID),\n        scorePlayerColor: getColorByColorID(state, SCORE_PLAYER_COLOR_ID),\n        scoreSlashColor: getColorByColorID(state, SCORE_SLASH_COLOR_ID),\n        scoreTotalColor: getColorByColorID(state, SCORE_TOTAL_COLOR_ID),\n    }\n};\n\nexport const ScoreDisplay = connect(mapStateToProps)(ScoreDisplayInner);\n","import {ADD_RESULT, CLEAR_RESULTS, REMOVE_RESULT} from \"../constants/score\";\n\nexport const addResult = (resultType) => {\n    return {\n        type: ADD_RESULT,\n        resultType,\n    }\n};\n\nexport const removeResult = (id) => {\n    return {\n        type: REMOVE_RESULT,\n        id,\n    }\n};\n\nexport const clearResults = () => {\n    return {\n        type: CLEAR_RESULTS,\n    }\n};\n","import React, {PureComponent} from \"react\";\nimport {connect} from \"react-redux\";\nimport {Button, ButtonGroup} from \"reactstrap\";\nimport {addResult, clearResults} from \"../state/actions/score\";\nimport {DRAW, LOSS, WIN} from \"../state/constants/score\";\n\nclass ScoreChangeButtonBarInner extends PureComponent {\n    addResultFunc = (resultType) => {\n        return () => this.props.dispatch(addResult(resultType));\n    };\n\n    clearResults = () => {\n        return () => this.props.dispatch(clearResults())\n    };\n\n    render() {\n        return <div>\n            <ButtonGroup>\n                <Button color=\"success\" onClick={this.addResultFunc(WIN)}>Add WIN</Button>\n                <Button color=\"warning\" onClick={this.addResultFunc(DRAW)}>Add DRAW</Button>\n                <Button color=\"danger\" onClick={this.addResultFunc(LOSS)}>Add LOSS</Button>\n            </ButtonGroup>\n\n            <span id=\"clear_spacer\"></span>\n\n            <Button color=\"primary\" onClick={this.clearResults()}>Clear</Button>\n        </div>\n\n    }\n}\n\nexport const ScoreChangeButtonBar = connect()(ScoreChangeButtonBarInner);\n","import React, {PureComponent} from \"react\";\nimport {getScoreHistoryItemByIDX} from \"../state/readers/score\";\nimport {deepConnect} from \"../lib/redux/deepConnect\";\nimport * as PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport {removeResult} from \"../state/actions/score\";\n\nclass ScoreHistoryItemInner extends PureComponent {\n    static propTypes = {\n        idx: PropTypes.number.isRequired,\n        item: PropTypes.object.isRequired,\n    };\n\n    removeItem = () => {\n        return () => this.props.dispatch(removeResult(this.props.item.id));\n    };\n\n    render() {\n        const {item} = this.props;\n\n        const dt = moment.unix(item.ts).format(\"YYYY-MM-DD HH:mm:ss\");\n\n        let cancel = null;\n        if (item.cancelable) {\n            cancel = <a onClick={this.removeItem()}>[cancel]</a>\n        }\n\n        let isCancellation = null;\n        if (item.isCancellation) {\n            isCancellation = \"cancellation, \";\n        }\n\n        return <tr>\n            <td>{this.props.idx + 1}</td>\n            <td>{dt}</td>\n            <td>{item.resultType} ({isCancellation}{item.score})</td>\n            <td>{cancel}</td>\n        </tr>\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        item: getScoreHistoryItemByIDX(state, ownProps.idx),\n    }\n};\n\nexport const ScoreHistoryItem = deepConnect(mapStateToProps)(ScoreHistoryItemInner);\n","import {connect} from \"react-redux\";\nimport _ from \"lodash\"\nimport update from \"immutability-helper\";\nimport {pick} from \"../pick\";\n\nexport const deepConnect = (mapStateToProps, options = {}) => {\n    const mapDispatchToProps = pick(options.mapDispatchToProps, null);\n    const mergeProps = pick(options.mergeProps, null);\n\n    options = update(options, {$unset: ['mapDispatchToProps', 'mergeProps']});\n    options = update(options, {$merge: {\n        areStatePropsEqual: _.isEqual,\n    }});\n\n    return connect(mapStateToProps, mapDispatchToProps, mergeProps, options)\n};\n","import React, {PureComponent} from \"react\";\nimport {getScoreHistoryItemsCount} from \"../state/readers/score\";\nimport {connect} from \"react-redux\";\nimport * as PropTypes from \"prop-types\";\nimport {Table} from \"reactstrap\";\nimport {ScoreHistoryItem} from \"./ScoreHistoryItem\";\n\nclass ScoreHistoryInner extends PureComponent {\n    static propTypes = {\n        historyItemsCount: PropTypes.number.isRequired,\n    };\n\n    render() {\n        const items = [];\n\n        for (let idx = 0; idx < this.props.historyItemsCount; idx++) {\n            items.push(<ScoreHistoryItem idx={idx} />);\n        }\n\n        if (items.length === 0) {\n            items.push(<p>No history item currently available.</p>)\n        }\n\n        return <div id=\"score_history\">\n            <h3>History</h3>\n\n            <div id=\"score_history_wrapper\">\n                <Table>\n                    <tbody>{items}</tbody>\n                </Table>\n            </div>\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        historyItemsCount: getScoreHistoryItemsCount(state),\n    }\n};\n\nexport const ScoreHistory = connect(mapStateToProps)(ScoreHistoryInner);\n","import React, {PureComponent} from \"react\";\nimport {ColorPicker} from \"./ColorPicker\";\nimport {\n    SCORE_BACKGROUND_COLOR_ID,\n    SCORE_PLAYER_COLOR_ID,\n    SCORE_SLASH_COLOR_ID,\n    SCORE_TEXT_COLOR_ID, SCORE_TOTAL_COLOR_ID\n} from \"../state/constants/colors\";\n\nexport class ScoreColorPickers extends PureComponent {\n    render() {\n        return <div className=\"color-pickers\">\n            <ColorPicker colorID={SCORE_BACKGROUND_COLOR_ID} />\n            <ColorPicker colorID={SCORE_TEXT_COLOR_ID} />\n            <ColorPicker colorID={SCORE_PLAYER_COLOR_ID} />\n            <ColorPicker colorID={SCORE_SLASH_COLOR_ID} />\n            <ColorPicker colorID={SCORE_TOTAL_COLOR_ID} />\n        </div>\n    }\n}\n","import React, {PureComponent} from \"react\";\nimport {Col, Container, Jumbotron, Row} from \"reactstrap\";\nimport {ScoreDisplay} from \"./ScoreDisplay\";\nimport {ScoreChangeButtonBar} from \"./ScoreChangeButtonBar\";\nimport {ScoreHistory} from \"./ScoreHistory\";\nimport {ScoreColorPickers} from \"./ScoreColorPickers\";\n\nexport class MainLayout extends PureComponent {\n    render() {\n        return <Container>\n            <Row>\n                <Col md={6}>\n                    <Jumbotron>\n                        <div id=\"score_display\" className=\"lead\"><ScoreDisplay/></div>\n\n                        <div className=\"lead\"><ScoreChangeButtonBar /></div>\n\n                        <div className=\"lead\"><ScoreColorPickers /></div>\n                    </Jumbotron>\n                </Col>\n\n                <Col md={6}>\n                    <ScoreHistory />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col md={12}>\n                    <p className=\"footer\">\n                        Made by <a href=\"https://twitter.com/98810f8c06\" className=\"discreet-link\">Franck Michea</a> &mdash;{' '}\n                        <a href=\"https://github.com/fmichea/chess-score-tracker\" className=\"discreet-link\">\n                            <i className=\"fa fa-github\"></i> Sources\n                        </a>\n                    </p>\n                </Col>\n            </Row>\n        </Container>\n    }\n}\n","import React, {PureComponent} from \"react\";\nimport {Provider} from \"react-redux\";\nimport {createStore} from \"redux\";\nimport {reducers} from \"./state/reducers\";\n\nimport {MainLayout} from \"./components/MainLayout\";\n\nexport class App extends PureComponent {\n  render() {\n    const store = createStore(reducers);\n\n    return <Provider store={store}>\n      <MainLayout />\n    </Provider>\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}