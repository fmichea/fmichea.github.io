{"version":3,"sources":["components/anti-ice/AntiIceAircraftNotFound.jsx","components/anti-ice/AntiIceConfigurationSelector.jsx","components/lib/CenteringContainer.jsx","components/anti-ice/AntiIceMoistureSelector.jsx","components/anti-ice/AntiIceTableFootnote.jsx","components/anti-ice/AntiIceTableFootnotes.jsx","components/lib/NotImplementedContainer.jsx","lib/anti-ice/data/modeStates.jsx","lib/isNullOrUndefined.jsx","lib/checklist/data/transforms.jsx","lib/anti-ice/data/modeStatesData.jsx","lib/anti-ice/data/tags.jsx","lib/pick.jsx","components/anti-ice/AntiIceRecommendationDisplay.jsx","components/anti-ice/AntiIceTemperatureSelector.jsx","components/anti-ice/AntiIceTemperatureTitle.jsx","lib/anti-ice/data/aircrafts.jsx","lib/anti-ice/data/images.jsx","lib/anti-ice/data/operationModes.jsx","lib/anti-ice/data/systemModes.jsx","lib/anti-ice/data/aircraftsData.jsx","lib/anti-ice/data/systemModesData.jsx","lib/anti-ice/data/operationModesData.jsx","lib/anti-ice/hooks/useAntiIceOperationModeData.jsx","lib/anti-ice/data/imagesData.jsx","lib/anti-ice/hooks/useAntiIce.jsx","lib/anti-ice/hooks/useAntiIceMenuItems.jsx","lib/anti-ice/hooks/useAntiIceRecommendation.jsx","components/anti-ice/AntiIceDisplay.jsx","components/lib/CenteredContentContainer.jsx","lib/hooks/useQueryParams.jsx","lib/routes.jsx","lib/anti-ice/hooks/useAntiIceURLConfig.jsx","components/anti-ice/AntiIce.jsx","lib/anti-ice/hooks/useAntiIceCheck.jsx","components/lib/Clearfix.jsx","components/checklists/ChecklistConfigurationSwitch.jsx","lib/hooks/deep.jsx","lib/checklist/hooks/useChecklistURLConfig.jsx","components/checklists/propTypes.jsx","lib/hooks/useWindowDimensions.jsx","state/constants/checklist.jsx","state/readers/checklist.jsx","lib/checklist/hooks/useChecklistLayoutConfig.jsx","state/actions/checklist.jsx","lib/hooks/useBooleanToggle.jsx","components/checklists/ChecklistConfigureButton.jsx","components/lib/ButtonWithConfirm.jsx","components/lib/colors.jsx","components/lib/spaces.jsx","components/checklists/ChecklistInfo.jsx","lib/hooks/useDocumentTitle.jsx","lib/checklist/hooks/useChecklistListInfoData.jsx","components/checklists/ChecklistListInfo.jsx","components/checklists/formatting.jsx","components/lib/Monospaced.jsx","lib/numbers.jsx","components/checklists/ChecklistListItemHelp.jsx","components/checklists/ChecklistListItemSwitch.jsx","components/checklists/ChecklistListItemTags.jsx","lib/checklist/data/tags.jsx","lib/checklist/listItemKey.jsx","lib/checklist/hooks/useChecklistListItemData.jsx","components/checklists/ChecklistListItemDisplay.jsx","lib/checklist/hooks/useChecklistDoubleClickCallback.jsx","components/checklists/ChecklistNextListButton.jsx","components/checklists/ChecklistNextListButtonDisplay.jsx","components/checklists/ChecklistProgressAlert.jsx","components/checklists/ChecklistNextListButtonsDisplay.jsx","components/checklists/ChecklistListDisplay.jsx","lib/objects.jsx","lib/checklist/hooks/useChecklistCountersInit.jsx","components/lib/ExternalLink.jsx","lib/checklist/data/checklists.jsx","lib/checklist/data/listItems.jsx","lib/checklist/data/lists.jsx","lib/checklist/data/checklistsData/a32nx.jsx","lib/checklist/data/filters.jsx","lib/checklist/data/checklistsData/c172g1000.jsx","lib/checklist/data/checklistsData/c172steam.jsx","lib/checklist/data/checklistsData/cj4.jsx","lib/checklist/data/checklistsData/crj.jsx","lib/checklist/data/checklistsData.jsx","lib/checklist/data/filtersResults.jsx","lib/checklist/data/lib/filtersData.jsx","lib/checklist/data/filtersData.jsx","components/lib/KeyboardInputs.jsx","components/lib/vernacular/Vernacular.jsx","components/lib/vernacular/common.jsx","lib/checklist/data/listItemsData/a32nx.jsx","components/lib/CASMessage.jsx","lib/checklist/data/listItemsData/c172.jsx","lib/checklist/data/listItemsData/c172g1000.jsx","lib/checklist/data/listItemsData/c172steam.jsx","components/lib/vernacular/cj4.jsx","lib/checklist/data/listItemsData/cj4.jsx","lib/checklist/data/listItemsData/cj4ext.jsx","components/lib/vernacular/crj.jsx","lib/checklist/data/listItemsData/crj.jsx","lib/checklist/data/listItemsData/crjext.jsx","lib/checklist/data/listItemsData/nav.jsx","lib/checklist/data/listItemsData/simulatorSetup.jsx","components/lib/List.jsx","lib/checklist/data/listItemsData/vatsim.jsx","lib/checklist/data/listItemsData.jsx","lib/checklist/data/listsData.jsx","lib/checklist/data/tagsData.jsx","lib/checklist/hooks/useChecklistFilteredLists.jsx","lib/checklist/hooks/useChecklist.jsx","lib/checklist/hooks/useChecklistData.jsx","components/checklists/ChecklistDisplay.jsx","lib/checklist/hooks/useChecklistSelectedListScroll.jsx","components/checklists/ChecklistNotFound.jsx","components/checklists/Checklist.jsx","lib/checklist/hooks/useChecklistCheck.jsx","components/layout/Footer.jsx","components/layout/HeaderLogo.jsx","components/layout/Navbar.jsx","components/layout/Layout.jsx","components/MainPage.jsx","components/metar/renderers/airportIdentifier/propTypes.jsx","components/metar/renderers/airportIdentifier/AirportIdenfitierValue.jsx","components/metar/renderers/airportIdentifier/AirportIdentifierShort.jsx","components/metar/renderers/airportIdentifier/renderers.jsx","components/metar/renderers/altimeter/propTypes.jsx","lib/metar/enums.jsx","components/metar/renderers/altimeter/AltimeterShort.jsx","components/metar/renderers/altimeter/AltimeterValue.jsx","components/metar/renderers/altimeter/renderers.jsx","components/metar/renderers/cloudCoverage/propTypes.jsx","components/metar/renderers/cloudCoverage/CloudCoverageShort.jsx","components/metar/renderers/cloudCoverage/CloudCoverageValue.jsx","components/metar/renderers/cloudCoverage/renderers.jsx","components/metar/renderers/colorSystems/renderers.jsx","components/metar/renderers/colorSystems/propTypes.jsx","components/metar/renderers/colorSystems/ColorSystemsValue.jsx","components/metar/renderers/colorSystems/ColorSystemsShort.jsx","components/metar/renderers/metarTime/propTypes.jsx","components/metar/renderers/metarTime/METARTimeShort.jsx","components/metar/renderers/metarTime/METARTimeValue.jsx","components/metar/renderers/metarTime/renderers.jsx","components/metar/renderers/missingData/propTypes.jsx","components/metar/renderers/missingData/MissingDataShort.jsx","components/metar/renderers/missingData/MissingDataValue.jsx","components/metar/renderers/missingData/renderers.jsx","components/metar/renderers/notRecognized/propTypes.jsx","components/metar/renderers/notRecognized/NotRecognizedShort.jsx","components/metar/renderers/notRecognized/NotRecognizedValue.jsx","components/metar/renderers/notRecognized/renderers.jsx","components/metar/renderers/prefix/propTypes.jsx","components/metar/renderers/prefix/PrefixShort.jsx","components/metar/renderers/prefix/PrefixTitle.jsx","components/metar/renderers/prefix/PrefixValue.jsx","components/metar/renderers/prefix/renderers.jsx","components/metar/renderers/presentWeather/propTypes.jsx","components/metar/renderers/presentWeather/PresentWeatherShort.jsx","components/metar/renderers/presentWeather/PresentWeatherValue.jsx","components/metar/renderers/presentWeather/renderers.jsx","components/metar/renderers/prevailingVisibility/propTypes.jsx","components/metar/renderers/prevailingVisibility/PrevailingVisibilityShort.jsx","components/metar/renderers/prevailingVisibility/PrevailingVisibilityValue.jsx","components/metar/renderers/prevailingVisibility/renderers.jsx","components/metar/renderers/recentWeather/propTypes.jsx","components/metar/renderers/recentWeather/RecentWeatherShort.jsx","components/metar/renderers/recentWeather/RecentWeatherValue.jsx","components/metar/renderers/recentWeather/renderers.jsx","components/metar/renderers/remarks/propTypes.jsx","components/metar/renderers/remarks/RemarksValue.jsx","components/metar/renderers/remarks/renderers.jsx","components/metar/renderers/remarks/RemarksShort.jsx","components/metar/renderers/runwayState/propTypes.jsx","components/metar/renderers/runwayState/RunwayStateShort.jsx","components/metar/renderers/runwayState/RunwayStateValue.jsx","components/metar/renderers/runwayState/renderers.jsx","components/metar/renderers/runwayVisualRange/propTypes.jsx","components/metar/renderers/runwayVisualRange/RunwayVisualRangeShort.jsx","components/metar/renderers/runwayVisualRange/RunwayVisualRangeValue.jsx","components/metar/renderers/runwayVisualRange/renderers.jsx","components/metar/renderers/seaSurface/propTypes.jsx","components/metar/renderers/temperatures/propTypes.jsx","components/metar/renderers/temperatures/TemperaturesShort.jsx","components/metar/renderers/seaSurface/SeaSurfaceShort.jsx","components/metar/renderers/seaSurface/SeaSurfaceValue.jsx","components/metar/renderers/seaSurface/renderers.jsx","components/metar/renderers/temperatures/renderers.jsx","components/metar/renderers/temperatures/TemperaturesValue.jsx","components/metar/renderers/trend/propTypes.jsx","components/metar/renderers/trend/TrendShort.jsx","components/metar/renderers/trend/TrendValue.jsx","components/metar/renderers/trend/renderers.jsx","components/metar/renderers/verticalVisibility/propTypes.jsx","components/metar/renderers/verticalVisibility/VerticalVisibilityShort.jsx","components/metar/renderers/verticalVisibility/VerticalVisibilityValue.jsx","components/metar/renderers/verticalVisibility/renderers.jsx","components/metar/renderers/wind/WindShort.jsx","components/metar/renderers/wind/propTypes.jsx","components/metar/renderers/wind/renderers.jsx","components/metar/renderers/wind/WindValue.jsx","components/metar/renderers/windShear/propTypes.jsx","components/metar/renderers/windShear/WindShearShort.jsx","components/metar/renderers/windShear/WindShearValue.jsx","components/metar/renderers/windShear/renderers.jsx","components/metar/renderers/mapping.jsx","lib/isLocalServer.jsx","lib/metar/hooks/useMetarURLConfig.jsx","lib/metar/parsers/altimeter.jsx","lib/metar/parsers/cloudDescriptors.jsx","lib/metar/parsers/internal/varargs.jsx","lib/metar/parsers/metarPrefixes.jsx","lib/metar/parsers/internal/weather.jsx","lib/metar/parsers/presentWeather.jsx","lib/metar/parsers/prevailingVisibility.jsx","lib/metar/parsers/recentWeather.jsx","lib/metar/parsers/runwayState.jsx","lib/metar/parsers/internal/temperatures.jsx","lib/metar/parsers/seaSurface.jsx","lib/metar/parsers/trend.jsx","lib/metar/parsers/verticalVisibility.jsx","lib/metar/parsers/wind.jsx","lib/metar/parsers/windShear.jsx","lib/metar/parserState.jsx","lib/metar/parser.jsx","lib/metar/parsers/remarks.jsx","lib/metar/parsers/runwayVisualRange.jsx","lib/metar/parsers/temperatures.jsx","lib/metar/parsers/colorSystems.jsx","lib/metar/parsers/missingData.jsx","components/metar/Metar.jsx","lib/getFullBaseURL.jsx","state/reducers/checklist.jsx","lib/sets.jsx","state/reducers/index.jsx","state/store.jsx","App.jsx","index.jsx"],"names":["AntiIceAircraftNotFound","aircraftName","description","to","Option","Select","AntiIceConfigurationSelector","currentConfiguration","setCurrentConfiguration","optionalModesOrder","optionalModesMapping","hasMoreConfigs","length","optionalModesOptions","map","uid","value","title","onChange","disabled","style","width","CenteringContainer","styled","display","justifyContent","RightJustifyingContainer","AntiIceMoistureSelector","moisture","setMoisture","useMemo","event","target","Group","buttonStyle","Button","AntiIceTableFootnote","footnoteID","footnote","useStyletron","css","span","className","textAlign","paddingRight","FootnotesContainer","marginTop","marginBottom","fontSize","AntiIceTableFootnotes","NotImplementedContainer","opacity","commonModeStates","Object","freeze","ON","OPTIONALLY_ON","OPTIONALLY_OFF","OFF","AntiIceModeStates","isNullOrUndefined","undefined","isNotNullOrUndefined","transformTagsInit","tags","transformTagsMakeSet","tagsSet","Set","transformValueBuilder","transforms","allTransforms","transformedValue","forEach","transform","createTransformedMapping","values","result","transformValueFN","Error","createTransformedList","commonModeStatesData","label","color","isOptional","AntiIceModeStatesData","commonTags","NOT_IMPLEMENTED","AntiIceTags","pick","idx","arg","Title","Typography","ImageContainer","height","backgroundSize","columns","render","isNotImplemented","state","isNonDefault","AntiIceRecommendationDisplay","antiIceAircraftData","recommendations","defaultStates","states","image","recs","path","data","modesOrderData","defaultState","key","has","dataSource","size","pagination","position","level","backgroundImage","process","AntiIceTemperatureSelector","temperature","sliderData","marks","min","max","included","handleStyle","tipFormatter","AntiIceTemperatureTitle","name","fullName","temperatureHelp","placement","overlayStyle","maxWidth","QuestionCircleOutlined","AntiIceAircrafts","WORKINGTITLE_CJ4","cj4Images","CJ4_ALL_OFF","CJ4_ENG_ONLY_ON","CJ4_PITOT_HEAT_ENG_ONLY_ON","CJ4_PITOT_ON","CJ4_PITOT_WING_ENG_ON","AntiIceImages","AntiIceOperationModes","GROUND_OPERATION","IN_FLIGHT_OPERATION","cj4IceProtectionSystemsModes","CJ4_WING_ENG_ANTI_ICE_MODE","CJ4_ENG_ONLY_ANTI_ICE_MODE","CJ4_TAIL_DEICE_ANTI_ICE_MODE","CJ4_PITOT_STATIC_HEAT_ANTI_ICE_MODE","AntiIceSystemModes","Strongish","AntiIceAircraftsData","modesOrder","operationModes","modeName","defaultMode","moistureHelp","limits","limit","optionalModes","cj4SystemModesData","AntiIceSystemModesData","baseOperationModes","AntiIceOperationModesData","SliderTempLabel","cj4ImagesData","AntiIceImagesData","useAntiIce","selectedOperationModeName","antiIceURLManager","baseData","menuItems","v","operationModeName","selectMenu","changeOperationMode","useAntiIceMenuItems","operationModeData","aircraftOperationData","filter","temperatures","operationalMode","push","sort","hasTemperatures","changeTemperature","useAntiIceOperationModeData","changeMoisture","omd","useAntiIceRecommendation","AntiIceDisplay","operationModeFound","useState","useEffect","menu","selectedKeys","mode","Item","onClick","ContentContainer","padding","CenteredContentContainer","withStyle","margin","useQueryParams","search","useLocation","URLSearchParams","ChecklistsWithNameAndListNameRoute","ChecklistsWithNameRoute","AntiIceWithNameRoute","AntiIceWithNameAndOperationModeNameRoute","MetarExplainerRoute","AntiIceURLManager","history","this","pushURL","baseURL","buildURL","urlParams","buildURLParams","fn","replace","generatePath","queryParams","set","toString","AntiIce","useHistory","useParams","get","useAntiIceURLConfig","knownLists","aircraftNames","operationModesSet","aircraftFound","useAntiIceCheck","Clearfix","clear","ChecklistConfigurationSwitchContainer","props","$disabled","ChecklistConfigurationSwitchSwitchContainer","float","marginLeft","ChecklistConfigurationSwitch","checked","defaultProps","useDeepDeps","deps","isFirst","useRef","prevDeps","counter","isFirstEffect","current","isSame","every","obj","index","isEqual","useDeepMemo","useDeepSelector","useSelector","ChecklistURLManager","checklistName","checklistListName","selectedFilters","filterName","filters","append","useChecklistURLConfig","getAll","useSelectedFilters","checklistURLManager","PropTypes","oneOfType","instanceOf","shape","changeChecklistList","func","isRequired","addFilter","removeFilter","selectableFilters","arrayOf","string","selectableFiltersData","getWindowDimensions","document","getElementById","clientWidth","clientHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","window","addEventListener","removeEventListener","TOGGLE_LEFT_HANDED_MODE","TOGGLE_HIDE_TAGS_MODE","TOGGLE_HIDE_HELP_MODE","TOGGLE_HIDE_SWITCHES_MODE","INITIALIZE_CHECKLIST","TOGGLE_ITEM","RESET_CHECKED_ITEMS","RESET_LIST_CHECKED_ITEMS","defaultChecklistListState","counters","listItemsChecked","listItemsTotals","checkedItems","defaultChecklistState","config","leftHandedMode","hideTagsMode","hideHelpMode","hideSwitchesMode","lists","getChecklistGlobalConfig","checklist","getChecklistData","useChecklistLayoutConfig","twoRowsMode","widthBlocked","hideChecklistProgress","hideTagsModeToggleable","hideHelpModeToggleable","hideSwitchesModeToggleable","useChecklistLayoutConfigWithTogglers","dispatch","useDispatch","layoutConfig","togglers","leftHandedModeToggle","type","hideTagsModeToggle","hideHelpModeToggle","hideSwitchesModeToggle","useBooleanToggle","defaultValue","setValue","toggleOn","toggleOff","toggleValue","modalStyle","ChecklistConfigureButton","checklistData","filtersData","selectedFiltersSet","modalVisible","filtersDataEnhanced","reduce","reduceData","filterData","filterUID","revExcl","isExclusion","filterActive","filterDataEnhanced","isTerminated","isTerminal","visible","onOk","onCancel","cancelButtonProps","maskClosable","header","ButtonTextContainer","ButtonTextToggle","$isDisplayed","minWidth","$minWidth","ButtonSecondaryTextToggle","top","left","buttonStates","PRIMARY","CONFIRMATION","SUCCESS","ButtonWithConfirm","children","otherProps","buttonState","setButtonState","onClickReal","tid","setTimeout","clearTimeout","CheckOutlined","DarkerGrey","DarkRed","DarkeningMask","VWSpace","$width","ThickSpace","ThinSpace","VerticalSpace","Text","ChecklistTitleContainer","backgroundColor","paddingTop","borderBottom","whiteSpace","ChecklistTitleButtonsContainer","titleStyle","overflow","textOverflow","ChecklistInfo","resetFullCallback","resetChecklistSelectCallback","useDocumentTitle","offsetTop","useChecklistListInfoData","checkedCount","totalsCount","getChecklistListCountersData","progressPercent","toFixed","listsData","setActiveCallback","resetCallback","resetChecklistListCheckedItems","ChecklistListTitleContainer","ChecklistListInfoDescription","ChecklistListProgressContainer","marginRight","ChecklistListInfo","percent","checklistListItemBackground","$isNotImplemented","$isChecked","$isOddItem","checklistListItemHoverBackground","ChecklistListItemWrapper","ChecklistListItemRow","ChecklistListSubItemRow","$isOddSubItem","ChecklistListItemTitle","$isSubItemsList","fontWeight","ChecklistListItemSubTitle","ChecklistListItemState","textTransform","ChecklistItemColumn","userSelect","cursor","$fitToContent","paddingBottom","paddingLeft","$isFirst","$isLast","ChecklistSubItemsTable","MonospacedFonts","Monospaced","fontFamily","isOdd","isEven","getOrdinalNumber","valueI","unit","decimal","ChecklistItemHelpWrapper","verticalAlign","maxHeight","modalBodyStyle","overflowX","iconInvisibleStyle","treeCharLastLeaf","treeCharLeaf","treeCharForward","treeCharWhitespace","renderItemLevelTree","levels","levelIdx","total","isLeafLevel","levelHasOtherItem","treeChar","Fragment","buildSubItemKey","join","renderSubItems","subItems","subItemsLength","subItem","subItemLevels","ChecklistListItemHelp","moreInfoShort","moreInfoLong","hasHelp","hasSubItems","itemHelpIcons","UnorderedListOutlined","modalTitle","bodyStyle","iconStyle","ChecklistListItemSwitch","isChecked","checkedChildren","unCheckedChildren","CloseOutlined","tagStyle","tagStyleLast","ChecklistListItemTags","tagsData","filteredTags","Array","from","tag","hidden","isLast","ChecklistTags","OFFICIAL","EXTENSION","FFOTD","IN_MEMORY_ITEM","CJ4","C172","C172_STEAM","C172_G1000","CRJ","A32NX","NAV","VATSIM","SIMSETUP","listItemKey","itemName","defaultData","useChecklistListItemData","itemKey","listItemsData","dynamicData","includes","getChecklistListItemData","toggleChecked","toggleItem","ChecklistListItemDisplay","isOddItem","doubleClickToggler","clickCounter","setClickCounter","onClickHandler","useChecklistDoubleClickCallback","subTitleItems","switchColumn","rightColumn","leftColumn","isSwitchColumnFirst","isTagsColumnFirst","isTitleColumnFirst","isSwitchColumnLast","isHelpColumnLast","isStateColumnLast","titleColumnContent","item","stateColumnContent","helpColumnContent","colspan","ChecklistNextListButton","isEmergency","classNames","buttonType","ChecklistNextListButtonDisplay","ChecklistProgressAlert","alertType","message","showIcon","ChecklistNextListButtonsDisplay","nextListNames","$style","gap","nextListName","ChecklistItemsTable","ChecklistListContainer","ChecklistListDisplay","items","Element","objectMap","callback","entries","keyValue","objectFromList","lst","lstValue","useChecklistCountersInit","filteredChecklistLists","initializeChecklistData","listName","useDeepEffect","checklistLists","initializeChecklist","ExternalLink","href","noIcon","rel","LinkOutlined","Checklists","AEROSOFT_CRJ","FLYBYWIRE_A32NX","cj4Items","CJ4_BEFORE_START_BATTERY_SWITCH","CJ4_BEFORE_START_EMERGENCY_LIGHTS_SWITCH","CJ4_BEFORE_START_STANDBY_FLIGHT_DISPLAY_SWITCH","CJ4_BEFORE_START_AVIONICS_SWITCH","CJ4_BEFORE_START_PARKING_BRAKES","CJ4_BEFORE_START_WHEEL_CHOCKS","CJ4_BEFORE_START_CABIN_DOOR","CJ4_BEFORE_START_PASSENGER_BRIEFING","CJ4_BEFORE_START_PILOTS_SEATS_ADJUSTED","CJ4_BEFORE_START_EXTERIOR_LIGHTS","CJ4_BEFORE_START_EICAS","CJ4_BEFORE_START_FMS","CJ4_BEFORE_START_CLIMATE_CONTROL_SELECTOR","CJ4_ENGINE_START_THROTTLES","CJ4_ENGINE_START_STARTER_BUTTON_PUSH","CJ4_ENGINE_START_RUNSTOP_BUTTON_TO_RUN","CJ4_ENGINE_START_ITT_RISE","CJ4_ENGINE_START_EICAS_CHECK","CJ4_ENGINE_START_OPPOSITE_ENGINE_START","CJ4_ENGINE_START_EXTERNAL_POWER_DISCONNECT","CJ4_ENGINE_START_ELECTRICAL_SYSTEM_CHECK","CJ4_BEFORE_TAXI_AVIONICS_SWITCH","CJ4_BEFORE_TAXI_CLIMATE_CONTROL_SWITCH","CJ4_BEFORE_TAXI_PASSENGER_LIGHTS_SAFETY","CJ4_BEFORE_TAXI_TRIMS","CJ4_BEFORE_TAXI_FLIGHT_CONTROLS_FREE","CJ4_BEFORE_TAXI_SPEEDBRAKE_CHECK","CJ4_BEFORE_TAXI_FLAPS","CJ4_BEFORE_TAXI_HYDRAULIC_PRESSURE_CHECK","CJ4_BEFORE_TAXI_ENGINE_ONLY_ANTI_ICE","CJ4_BEFORE_TAXI_TAKEOFF_DATA","CJ4_BEFORE_TAXI_AVIONICS_CHECK","CJ4_BEFORE_TAXI_AUTOPILOT_CONNECT_DISCONNECT","CJ4_BEFORE_TAXI_ALTIMETER_SET","CJ4_BEFORE_TAXI_PRESSURIZATION_CHECK","CJ4_BEFORE_TAXI_EICAS_CHECK","CJ4_BEFORE_TAXI_AFT_DIVIDER_DOORS_OPEN","CJ4_TAXI_EXTERIOR_LIGHTS","CJ4_TAXI_BRAKES_APPLIED","CJ4_TAXI_PARKING_BRAKE_RELEASED","CJ4_TAXI_BRAKES_CHECK","CJ4_TAXI_NOSE_WHEEL_STEERING_CHECK","CJ4_TAXI_FLIGHT_INSTRUMENTS_CHECK","CJ4_BEFORE_TAKEOFF_ICE_PROTECTION_SYSTEM_CHECK","CJ4_BEFORE_TAKEOFF_RUDDER_BIAS_SYSTEM_CHECK","CJ4_BEFORE_TAKEOFF_SEATS_UPRIGHT","CJ4_BEFORE_TAKEOFF_FLAPS_SET","CJ4_BEFORE_TAKEOFF_SPEEDBRAKES_OFF","CJ4_BEFORE_TAKEOFF_TRIMS_CHECK","CJ4_BEFORE_TAKEOFF_CREW_BRIEFING","CJ4_BEFORE_TAKEOFF_TCAS_TARA","CJ4_BEFORE_TAKEOFF_RADAR_AS_REQUIRED","CJ4_BEFORE_TAKEOFF_GA_BUTTON_PUSH","CJ4_BEFORE_TAKEOFF_BATTERY_AMPS_CHECK","CJ4_BEFORE_TAKEOFF_ICE_PROTECTION_SYSTEM_AS_REQUIRED","CJ4_BEFORE_TAKEOFF_PITOT_STATIC_HEAT_BUTTONS","CJ4_BEFORE_TAKEOFF_EICAS_CHECK","CJ4_BEFORE_TAKEOFF_EXTERIOR_LIGHTS","CJ4_TAKEOFF_THROTTLES","CJ4_TAKEOFF_N1_COMMAND_BUGS_GREEN","CJ4_TAKEOFF_BRAKES_RELEASED","CJ4_TAKEOFF_CONTROL_WHEEL_ROTATE_AT_VR","CJ4_AFTER_TAKEOFF_LANDING_GEAR_UP","CJ4_AFTER_TAKEOFF_FLAPS_0","CJ4_AFTER_TAKEOFF_THROTTLES_CLIMB","CJ4_AFTER_TAKEOFF_YAW_DAMPER_ON","CJ4_AFTER_TAKEOFF_AUTOPILOT_AS_REQUIRED","CJ4_AFTER_TAKEOFF_ICE_PROTECTION_SYSTEM_CHECK","CJ4_AFTER_TAKEOFF_PASSENGER_LIGHTS_AS_REQUIRED","CJ4_AFTER_TAKEOFF_EXTERIOR_LIGHTS","CJ4_AFTER_TAKEOFF_PRESSURIZATION_CHECK","CJ4_AFTER_TAKEOFF_ALTIMETERS_SET","CJ4_CRUISE_THROTTLES","CJ4_CRUISE_PRESSURIZATION","CJ4_CRUISE_ICE_PROTECTION_SYSTEMS","CJ4_DESCENT_PRESSURIZATION","CJ4_DESCENT_ICE_PROTECTION_SYSTEMS","CJ4_DESCENT_ALTIMETERS","CJ4_DESCENT_EXTERIOR_LIGHTS","CJ4_APPROACH_LANDING_DATA","CJ4_APPROACH_CREW_BRIEFING","CJ4_APPROACH_AVIONICS_FLIGHT_INSTRUMENTS","CJ4_APPROACH_MINIMUMS","CJ4_APPROACH_FUEL_TRANSFER_SELECTOR","CJ4_APPROACH_EXTERIOR_LIGHTS","CJ4_APPROACH_ICE_PROTECTION_SYSTEMS","CJ4_APPROACH_FLAPS","CJ4_APPROACH_PASSENGER_BRIEFING","CJ4_APPROACH_SEATS_UPRIGHT","CJ4_APPROACH_SEAT_BELTS","CJ4_APPROACH_PASSENGER_LIGHTS","CJ4_APPROACH_PRESSURIZATION","CJ4_BEFORE_LANDING_LANDING_GEAR","CJ4_BEFORE_LANDING_FLAPS","CJ4_BEFORE_LANDING_SPEEDBRAKES_OFF","CJ4_BEFORE_LANDING_AIRSPEED_VREF","CJ4_BEFORE_LANDING_AUTOPILOT_AND_YAW_DAMPER","CJ4_LANDING_THROTTLES","CJ4_LANDING_BRAKES","CJ4_LANDING_GROUND_SPOILERS","CJ4_GOAROUND_GA_BUTTON","CJ4_GOAROUND_THROTTLES_1","CJ4_GOAROUND_PITCH_ATTITUDE","CJ4_GOAROUND_FLAPS_1","CJ4_GOAROUND_LANDING_GEAR","CJ4_GOAROUND_FLAPS_2","CJ4_GOAROUND_AIRSPEED","CJ4_GOAROUND_THROTTLES_2","CJ4_GOAROUND_YAW_DAMPER","CJ4_GOAROUND_AUTOPILOT","CJ4_AFTER_LANDING_SPEEDBRAKES","CJ4_AFTER_LANDING_FLAPS","CJ4_AFTER_LANDING_PITOT_STATIC_HEAT","CJ4_AFTER_LANDING_ICE_PROTECTION_SYSTEMS","CJ4_AFTER_LANDING_RADAR","CJ4_AFTER_LANDING_EXTERIOR_LIGHTS","CJ4_SHUTDOWN_PARKING_BRAKE","CJ4_SHUTDOWN_EMERGENCY_LIGHTS","CJ4_SHUTDOWN_STANDBY_FLIGHT_DISPLAY","CJ4_SHUTDOWN_AVIONICS_SWITCH","CJ4_SHUTDOWN_CLIMATE_CONTROL_SELECTOR","CJ4_SHUTDOWN_ICE_PROTECTION_SYSTEMS","CJ4_SHUTDOWN_THROTTLES","CJ4_SHUTDOWN_ENGINE_RUNSTOP_BUTTONS","CJ4_SHUTDOWN_EXTERIOR_LIGHTS","CJ4_SHUTDOWN_BATTERY_SWITCH","CJ4_SHUTDOWN_CONTROL_LOCK","CJ4_SHUTDOWN_ENGINE_COVERS","cj4ExtItems","CJ4EXT_BEFORE_START_EXTERNAL_POWER","CJ4EXT_BEFORE_TAKEOFF_RUNWAY_HEADING","CJ4EXT_DESCENT_INTERIOR_LIGHTS","c172Items","C172_PREFLIGHT_AIRCRAFT_DOCUMENTS","C172_PREFLIGHT_PARKING_BRAKE","C172_PREFLIGHT_IGNITION","C172_PREFLIGHT_AVIONICS_SWITCHES_OFF","C172_PREFLIGHT_FUEL_QUANTITY","C172_PREFLIGHT_LOW_FUEL_ANNUNCIATORS","C172_PREFLIGHT_STATIC_PRESSURE_ALT_SOURCE_VALVE","C172_PREFLIGHT_FUEL_SELECTOR","C172_PREFLIGHT_PITOT_HEAT_ON","C172_PREFLIGHT_PITOT_HEAT_OFF","C172_BEFORE_START_PREFLIGHT_INSPECTION","C172_BEFORE_START_SEATS_BELTS","C172_BEFORE_START_ELECTRICAL_EQUIPMENT","C172_BEFORE_START_AVIONICS_SWITCHES","C172_BEFORE_START_FUEL_SELECTOR","C172_BEFORE_START_FUEL_SHUTOFF_VALVE","C172_ENGINE_START_THROTTLE","C172_ENGINE_START_MIXTURE_1","C172_ENGINE_START_PROPELLER_AREA","C172_ENGINE_START_BEACON_LIGHT","C172_ENGINE_START_MIXTURE_2","C172_ENGINE_START_AUX_FUEL_PUMP","C172_ENGINE_START_MIXTURE_3","C172_ENGINE_START_FEET_BRAKES","C172_ENGINE_START_IGNITION","C172_ENGINE_START_MIXTURE_4","C172_AFTER_START_THROTTLE","C172_AFTER_START_OIL_PRESSURE","C172_AFTER_START_FLAPS","C172_AFTER_START_AVIONICS_SWITCHES","C172_TAXI_TAXI_LIGHT","C172_TAXI_LANDING_LIGHT","C172_TAXI_STROBE_LIGHT","C172_TAXI_NAV_LIGHT","C172_TAXI_PARKING_BRAKE","C172_TAXI_BRAKES","C172_TAXI_RUDDER","C172_RUNUP_PARKING_BRAKE","C172_RUNUP_SEATS_BACKS","C172_RUNUP_SEATS_BELTS","C172_RUNUP_FLIGHT_CONTROLS_1","C172_RUNUP_FUEL_QUANTITY","C172_RUNUP_MIXTURE","C172_RUNUP_FUEL_SELECTOR","C172_RUNUP_AUTOPILOT","C172_RUNUP_FLIGHT_CONTROLS_2","C172_RUNUP_THROTTLE_1","C172_RUNUP_MAGNETOS_1","C172_RUNUP_MAGNETOS_2","C172_RUNUP_MAGNETOS_3","C172_RUNUP_VACCUM_GAUGE","C172_RUNUP_ENGINE_IDLE","C172_RUNUP_THROTTLE_2","C172_BEFORE_TAKEOFF_FLAPS","C172_BEFORE_TAKEOFF_CABIN_WINDOWS","C172_BEFORE_TAKEOFF_PARKING_BRAKE","C172_TAKEOFF_FLAPS_1","C172_TAKEOFF_THROTTLE","C172_TAKEOFF_MIXTURE","C172_TAKEOFF_AIRSPEED_INDICATOR","C172_TAKEOFF_LIFT_NOSEWHEEL","C172_TAKEOFF_INITIAL_CLIMB","C172_TAKEOFF_FLAPS_2","C172_CLIMB_AIRSPEED","C172_CLIMB_THROTTLE","C172_CLIMB_MIXTURE_1","C172_CLIMB_ENGINE_GAUGES","C172_CLIMB_TAXI_LANDING_LIGHTS","C172_CLIMB_MIXTURE_2","C172_CRUISE_POWER","C172_CRUISE_ELEVATOR_TRIM","C172_CRUISE_MIXTURE","C172_CRUISE_ENGINE_GAUGES","C172_DESCENT_POWER","C172_DESCENT_MIXTURE","C172_DESCENT_FUEL_SELECTOR","C172_DESCENT_FLAPS","C172_BEFORE_LANDING_SEATS_BACKS","C172_BEFORE_LANDING_SEATS_BELTS","C172_BEFORE_LANDING_FUEL_SELECTOR","C172_BEFORE_LANDING_MIXTURE","C172_BEFORE_LANDING_TAXI_LANDING_LIGHTS","C172_BEFORE_LANDING_AUTOPILOT","C172_LANDING_FLAPS","C172_LANDING_AIRSPEED","C172_LANDING_TOUCHDOWN","C172_LANDING_LANDING_ROLL","C172_LANDING_BRAKING","C172_AFTER_LANDING_FLAPS","C172_AFTER_LANDING_LANDING_LIGHT","C172_AFTER_LANDING_TAXI_LIGHT","C172_AFTER_LANDING_STROBE_LIGHT","C172_AFTER_LANDING_ELEVATOR_TRIM","C172_AFTER_LANDING_TRANSPONDER","C172_PARKING_PARKING_BRAKE","C172_PARKING_AVIONICS_SWITCHES","C172_PARKING_ENGINE_IDLE","C172_PARKING_MAGNETOS","C172_PARKING_MIXTURE","C172_SECURING_IGNITION","C172_SECURING_LANDING_LIGHT","C172_SECURING_TAXI_LIGHT","C172_SECURING_NAV_LIGHT","C172_SECURING_FUEL_SELECTOR","c172SteamItems","C172STEAM_PREFLIGHT_BATTERY_SWITCH_1","C172STEAM_PREFLIGHT_BATTERY_SWITCH_2","C172STEAM_PREFLIGHT_AVIONICS_SWITCHES_1","C172STEAM_PREFLIGHT_AVIONICS_SWITCHES_2","C172STEAM_PREFLIGHT_AVIONICS_COOLING_FAN","C172STEAM_PREFLIGHT_ANNUNCIATOR_PANEL","C172STEAM_PREFLIGHT_FUEL_SHUTOFF_VALVE","C172STEAM_PREFLIGHT_FLAPS_DOWN","C172STEAM_PREFLIGHT_ELEVATOR_TRIM","C172STEAM_ENGINE_START_BATTERY_SWITCH","C172STEAM_AFTER_START_ALTERNATOR","C172STEAM_AFTER_START_ALTERNATOR_INDICATOR","C172STEAM_AFTER_START_ANMETER","C172STEAM_AFTER_START_RADIOS","C172STEAM_AFTER_START_TRANSPONDER","C172STEAM_AFTER_START_HEADING_INDICATOR","C172STEAM_AFTER_START_ALTIMETER","C172STEAM_AFTER_START_ALTITUDE_INDICATOR","C172STEAM_TAXI_TURN_COORDINATOR","C172STEAM_TAXI_HEADING_INDICATOR","C172STEAM_TAXI_COMPASS","C172STEAM_RUNUP_FLIGHT_INSTRUMENTS","C172STEAM_RUNUP_AUTOPILOT","C172STEAM_RUNUP_OIL_PRESSURE","C172STEAM_RUNUP_OIL_TEMPERATURE","C172STEAM_RUNUP_ANMETER","C172STEAM_RUNUP_ANNUNCIATOR_PANEL","C172STEAM_BEFORE_TAKEOFF_RADIOS","C172STEAM_BEFORE_TAKEOFF_AVIONICS","C172STEAM_BEFORE_TAKEOFF_NAV_GPS_SWITCH","C172STEAM_BEFORE_TAKEOFF_TRANSPONDER","C172STEAM_BEFORE_TAKEOFF_AUTOPILOT","C172STEAM_BEFORE_TAKEOFF_ELEVATOR_TRIM","C172STEAM_TAKEOFF_ANNUNCIATORS","C172STEAM_CRUISE_FLIGHT_INSTRUMENTS","C172STEAM_DESCENT_ALTIMETER","C172STEAM_DESCENT_NAV_GPS","C172STEAM_PARKING_TRANSPONDER","C172STEAM_SECURING_ALTERNATOR","C172STEAM_SECURING_BATTERY","c172G1000Items","C172G1000_PREFLIGHT_MASTER_SWITCHES_1","C172G1000_PREFLIGHT_PFD","C172G1000_PREFLIGHT_OIL_PRESSURE_ANNUNCIATOR","C172G1000_PREFLIGHT_LOW_VACUUM_ANNUNCIATOR","C172G1000_PREFLIGHT_AVIONICS_SWITCH_1_ON","C172G1000_PREFLIGHT_AVIONICS_SWITCH_1_FAN","C172G1000_PREFLIGHT_AVIONICS_SWITCH_1_OFF","C172G1000_PREFLIGHT_AVIONICS_SWITCH_2_ON","C172G1000_PREFLIGHT_AVIONICS_SWITCH_2_FAN","C172G1000_PREFLIGHT_AVIONICS_SWITCH_2_OFF","C172G1000_PREFLIGHT_LOW_VOLTS_ANNUNCIATOR","C172G1000_PREFLIGHT_MASTER_SWITCHES_2","C172G1000_PREFLIGHT_ELEVATOR_TRIM","C172G1000_BEFORE_START_BRAKES","C172G1000_BEFORE_START_CIRCUIT_BREAKERS","C172G1000_ENGINE_START_STANDBY_BATT_TEST","C172G1000_ENGINE_START_STANDBY_BATT_ARM","C172G1000_ENGINE_START_ENGINE_INDICATING_SYSTEM","C172G1000_ENGINE_START_BUS_E_VOLTS","C172G1000_ENGINE_START_BUS_M_VOLTS","C172G1000_ENGINE_START_BATT_S_AMPS","C172G1000_ENGINE_START_STANDBY_BATT_ANNUNCIATOR","C172G1000_ENGINE_START_MASTER_SWITCH","C172G1000_AFTER_START_AMPS","C172G1000_AFTER_START_LOW_VOLTS_ANNUNCIATOR","C172G1000_RUNUP_DOORS","C172G1000_RUNUP_FLIGHT_INSTRUMENTS","C172G1000_RUNUP_ALTIMETER","C172G1000_RUNUP_STANDBY_ALTIMETER","C172G1000_RUNUP_ALTITUDE_SELECT","C172G1000_RUNUP_STANDBY_FLIGHT_INSTRUMENTS","C172G1000_RUNUP_AP_TRIM_DISC","C172G1000_RUNUP_FLIGHT_DIRECTOR","C172G1000_RUNUP_ELEVATOR_TRIM","C172G1000_RUNUP_ENGINE_INDICATORS","C172G1000_RUNUP_ANMETERS_VOLTMETERS","C172G1000_RUNUP_ANNUNCIATORS","C172G1000_BEFORE_TAKEOFF_COM_FREQS","C172G1000_BEFORE_TAKEOFF_NAV_FREQS","C172G1000_BEFORE_TAKEOFF_FMS_GPS","C172G1000_BEFORE_TAKEOFF_TRANSPONDER","C172G1000_BEFORE_TAKEOFF_CDI_NAV_SOURCE","C172G1000_BEFORE_TAKEOFF_CABIN_PWR","C172G1000_TAKEOFF_ANNUNCIATORS","C172G1000_CRUISE_FMS_GPS","C172G1000_DESCENT_ALTIMETER","C172G1000_DESCENT_STANDBY_ALTIMETER","C172G1000_DESCENT_ALTITUDE_SELECT","C172G1000_DESCENT_CDI_NAV","C172G1000_DESCENT_FMS_GPS","C172G1000_BEFORE_LANDING_CABIN_PWR","C172G1000_SECURING_MASTER_SWITCHES","C172G1000_SECURING_STANDBY_BATT","crjItems","CRJ_SAFETY_CHECK_CIRCUIT_BREAKERS","CRJ_SAFETY_CHECK_NOSEWHEEL","CRJ_SAFETY_CHECK_HYDRAULIC_PUMPS_1","CRJ_SAFETY_CHECK_LANDING_GEAR","CRJ_SAFETY_CHECK_FLIGHT_SPOILER_LEVER","CRJ_SAFETY_CHECK_SLATS_FLAPS_LEVER","CRJ_SAFETY_CHECK_RADAR","CRJ_SAFETY_CHECK_ADG_MANUAL_RELEASE","CRJ_SAFETY_CHECK_EMERGENCY_FLAP_SWITCH","CRJ_SAFETY_CHECK_BATTERY_MASTER_SWITCH","CRJ_SAFETY_CHECK_APU","CRJ_SAFETY_CHECK_AC_ELECTRICS","CRJ_SAFETY_CHECK_IRS","CRJ_SAFETY_CHECK_EMERGENCY_EQUIPMENT","CRJ_SAFETY_CHECK_GEAR_SAFETY_PINS","CRJ_SAFETY_CHECK_AIRPLANE_DOCUMENTS","CRJ_SAFETY_CHECK_HYDRAULIC_PUMPS_2","CRJ_SAFETY_CHECK_FMS_INITIALIZATION","CRJ_CABIN_INSPECTION_CABIN_INSPECTION","CRJ_CABIN_INSPECTION_WALKAROUND_INSPECTION","CRJ_ORIGINATING_CHECK_CREW_OXYGEN","CRJ_ORIGINATING_CHECK_AUDIO_WARNING_PANEL","CRJ_ORIGINATING_CHECK_ELECTRICAL_POWER_PANEL","CRJ_ORIGINATING_CHECK_FIRE_DETECTION","CRJ_ORIGINATING_CHECK_EXTERNAL_LIGHTS_PANEL","CRJ_ORIGINATING_CHECK_FUEL_PANEL","CRJ_ORIGINATING_CHECK_BLEED_AIR_PANEL","CRJ_ORIGINATING_CHECK_APU_PANEL","CRJ_ORIGINATING_CHECK_START_PANEL","CRJ_ORIGINATING_CHECK_HYDRAULIC_PANEL","CRJ_ORIGINATING_CHECK_ELT_SWITCH","CRJ_ORIGINATING_CHECK_CABIN_PRESSURE_PANEL","CRJ_ORIGINATING_CHECK_AIR_CONDITIONING_PANEL","CRJ_ORIGINATING_CHECK_ANTIICE_PANEL","CRJ_ORIGINATING_CHECK_WINDSHIELD_HEAT","CRJ_ORIGINATING_CHECK_EMERGENCY_LIGHTS","CRJ_ORIGINATING_CHECK_STANDBY_COMPASS","CRJ_ORIGINATING_CHECK_STALL_TEST","CRJ_ORIGINATING_CHECK_NOSEWHEEL","CRJ_ORIGINATING_CHECK_CLOCKS","CRJ_ORIGINATING_CHECK_EFIS_CONTROL_PANELS","CRJ_ORIGINATING_CHECK_INSTRUMENT_PANELS","CRJ_ORIGINATING_CHECK_EICAS_AND_STDBY","CRJ_ORIGINATING_CHECK_UPPER_PEDESTAL","CRJ_ORIGINATING_CHECK_THRUST_LEVER_QUADRANT","CRJ_ORIGINATING_CHECK_AVIONICS","CRJ_ORIGINATING_CHECK_TRIMS","CRJ_ORIGINATING_CHECK_YAW_DAMPER","CRJ_ORIGINATING_CHECK_SOURCE_SELECT_PANEL","CRJ_ORIGINATING_CHECK_LOWER_PEDESTAL","CRJ_BEFORE_START_CHECK_PASS_SIGNS","CRJ_BEFORE_START_CHECK_LANDING_ELEVATION","CRJ_BEFORE_START_CHECK_BOOST_PUMPS","CRJ_BEFORE_START_CHECK_ALTIMETERS","CRJ_BEFORE_START_CHECK_FMS","CRJ_BEFORE_START_CHECK_IRS","CRJ_BEFORE_START_CHECK_RADIOS","CRJ_BEFORE_START_CHECK_TAKEOFF_DATA","CRJ_BEFORE_START_CHECK_TAKEOFF_BRIEFING","CRJ_CLEARED_TO_START_CHECK_PERSONAL_ELECTRONIC_DEVICES","CRJ_CLEARED_TO_START_CHECK_APU","CRJ_CLEARED_TO_START_CHECK_ELECTRICS","CRJ_CLEARED_TO_START_CHECK_DOORS","CRJ_CLEARED_TO_START_CHECK_BEACON","CRJ_CLEARED_TO_START_CHECK_FUEL_PUMPS","CRJ_CLEARED_TO_START_CHECK_HYDRAULIC_PUMPS","CRJ_CLEARED_TO_START_CHECK_PARKING_BRAKE","CRJ_CLEARED_TO_START_ENGINE_START","CRJ_AFTER_START_CHECK_GENERATORS","CRJ_AFTER_START_CHECK_BLEED_VALVES","CRJ_AFTER_START_CHECK_PACKS","CRJ_AFTER_START_CHECK_SYNOPTIC_PAGES","CRJ_AFTER_START_CHECK_APU","CRJ_AFTER_START_CHECK_ANTIICE_PROBES","CRJ_AFTER_START_CHECK_ANTIICE","CRJ_AFTER_START_CHECK_NOSEWHEEL","CRJ_TAXI_CHECK_SLATS_FLAPS","CRJ_TAXI_CHECK_FLIGHT_CONTROLS","CRJ_TAXI_CHECK_TRIMS","CRJ_TAXI_CHECK_THRUST_REVERSERS","CRJ_TAXI_CHECK_FLIGHT_INSTRUMENTS","CRJ_TAXI_CHECK_BRAKE_TEMPS","CRJ_TAXI_CHECK_EXTERNAL_LIGHTS","CRJ_BEFORE_TAKEOFF_CHECK_EXTERNAL_LIGHTS","CRJ_BEFORE_TAKEOFF_CHECK_FUEL_XFLOW","CRJ_BEFORE_TAKEOFF_CHECK_FLIGHT_ATTENDANT","CRJ_BEFORE_TAKEOFF_CHECK_TRANSPONDER","CRJ_BEFORE_TAKEOFF_CHECK_RADAR","CRJ_BEFORE_TAKEOFF_CHECK_CAS","CRJ_CLIMB_CHECK_FUEL_XFLOW","CRJ_CLIMB_CHECK_BLEEDS_AND_APU","CRJ_CLIMB_CHECK_THRUST_REVERSERS","CRJ_CLIMB_CHECK_CAS","CRJ_DESCENT_CHECK_LANDING_ELEVATION","CRJ_DESCENT_CHECK_FUEL","CRJ_DESCENT_CHECK_TCAS","CRJ_DESCENT_CHECK_RADAR","CRJ_DESCENT_CHECK_CAS","CRJ_DESCENT_CHECK_LANDING_DATA","CRJ_DESCENT_CHECK_APPROACH_BRIEFING","CRJ_BEFORE_LANDING_CHECK_FLIGHT_ATTENDANT","CRJ_BEFORE_LANDING_CHECK_PASSENGER_SIGNS","CRJ_BEFORE_LANDING_CHECK_THRUST_REVERSERS","CRJ_BEFORE_LANDING_CHECK_LANDING_GEAR","CRJ_BEFORE_LANDING_CHECK_FLAPS","CRJ_AFTER_LANDING_CHECK_APU","CRJ_AFTER_LANDING_CHECK_TRANSPONDER_RADAR","CRJ_AFTER_LANDING_CHECK_FLAPS","CRJ_AFTER_LANDING_CHECK_EXTERNAL_LIGHTS","CRJ_AFTER_LANDING_CHECK_PROBES","CRJ_SHUTDOWN_CHECK_PARKING_BRAKE","CRJ_SHUTDOWN_CHECK_SEAT_BELTS","CRJ_SHUTDOWN_CHECK_THRUST_LEVERS","CRJ_SHUTDOWN_CHECK_ANTIICE","CRJ_SHUTDOWN_CHECK_FUEL_PUMPS","CRJ_SHUTDOWN_CHECK_BEACON","CRJ_SHUTDOWN_CHECK_NOSEWHEEL","CRJ_TERMINATING_CHECK_CHOCKS_AND_BRAKES","CRJ_TERMINATING_CHECK_IRS","CRJ_TERMINATING_CHECK_EMERGENCY_LIGHTS","CRJ_TERMINATING_CHECK_ANTIICE","CRJ_TERMINATING_CHECK_HYDRAULIC_PUMPS","CRJ_TERMINATING_CHECK_EXTERNAL_LIGHTS","CRJ_TERMINATING_CHECK_APU","CRJ_TERMINATING_CHECK_BATTERY_MASTER","CRJ_TERMINATING_CHECK_COCKPIT_LIGHTS","crjExtItems","CRJEXT_PRE_FLIGHT_AIRCRAFT_EFB_SETUP","CRJEXT_ORIGINATING_CHECK_FMS_INIT_REMINDER","CRJEXT_CRUISE_ANTIICE","CRJEXT_BEFORE_START_CHECK_DOORS_CHOCKS","vatsimItems","VATSIM_FILE_FLIGHT_PLAN","VATSIM_REQUEST_INITIAL_CLEARANCE","VATSIM_PUSHBACK_AND_START_CLEARANCE","VATSIM_DEPARTURE_SETTINGS","VATSIM_TAXI_CLEARANCE","VATSIM_TAXI_MODE_CHARLIE","VATSIM_TAKEOFF_CLEARANCE","VATSIM_DESCENT_CLEARANCE","VATSIM_APPROACH_CLEARANCE","VATSIM_LANDING_CLEARANCE","VATSIM_GOAROUND_ANNOUNCE","VATSIM_LANDING_CLEAR_OF_RUNWAY","VATSIM_DISCONNECT_GOODBYE","navItems","NAV_FLIGHT_PLANNING","NAV_TAKEOFF_DEPARTURE_BRIEFING","NAV_TAKEOFF_DEPARTURE_BRIEFING_SHORT","NAV_DESCENT_PLANNING","NAV_APPROACH_BRIEFING","NAV_POST_FLIGHT_NOTES","simulatorSetupItems","SIMSETUP_FLIGHT_TRACKING_START","SIMSETUP_FLIGHT_TRACKING_END","SIMSETUP_FLIGHT_RECORDING_START","SIMSETUP_FLIGHT_RECORDING_END","a32nxItems","A32NX_ORIGINATING_COCKPIT_PREP","A32NX_ORIGINATING_LOWER_PEDESTAL","A32NX_ORIGINATING_THRUST_LEVER_QUADRANT","A32NX_ORIGINATING_LANDING_GEAR","A32NX_ORIGINATING_AIR_CONDITION_PANEL","A32NX_ORIGINATING_HYDRAULIC_PANEL","A32NX_ORIGINATING_FUEL_PANEL","A32NX_ORIGINATING_FIRE_PANEL_TEST","A32NX_ORIGINATING_ANTI_ICE_PANEL","A32NX_ORIGINATING_EXTERIOR_LIGHTS","A32NX_ORIGINATING_SIGNS_PANEL","A32NX_ORIGINATING_PARKING_BRAKE","A32NX_ORIGINATING_ADIRS","A32NX_ORIGINATING_WIPER_SELECTORS","A32NX_ORIGINATING_OXYGEN_PANEL","A32NX_ORIGINATING_EXT_POWER","A32NX_ORIGINATING_BATTERY","A32NX_ORIGINATING_APU","A32NX_ORIGINATING_CABIN_PRESSURE_PANEL","A32NX_ORIGINATING_VENTILATION_PANEL","A32NX_ORIGINATING_MAINTENANCE_PANEL","A32NX_ORIGINATING_EFIS_CONTROL_UNITS","A32NX_ORIGINATING_CENTER_INSTRUMENT_PANEL","A32NX_ORIGINATING_SWITCHING_PANEL","A32NX_ORIGINATING_EICAS","A32NX_ORIGINATING_RADIO_PANEL","A32NX_ORIGINATING_FUEL","A32NX_ORIGINATING_MCDU","A32NX_ORIGINATING_MCDU_SIMBRIEF","A32NX_BEFORE_ENGINE_START_APU","A32NX_BEFORE_ENGINE_START_EXT_POWER","A32NX_BEFORE_ENGINE_START_TCAS","A32NX_BEFORE_ENGINE_START_DOORS","A32NX_BEFORE_ENGINE_START_BEACON","A32NX_BEFORE_ENGINE_START_THRUST_LEVERS","A32NX_BEFORE_ENGINE_START_PARKING_BRAKE","A32NX_BEFORE_ENGINE_START_BRAKE_PRESSURE","A32NX_ENGINE_START_CHRONO_START","A32NX_ENGINE_START_ENGINE_MODE","A32NX_ENGINE_START_ENG2_START","A32NX_ENGINE_START_ENG1_START","A32NX_AFTER_ENGINE_START_ENGINE_MODE","A32NX_AFTER_ENGINE_START_FLAPS","A32NX_AFTER_ENGINE_START_GROUND_SPOILERS","A32NX_AFTER_ENGINE_START_APU_BLEED","A32NX_AFTER_ENGINE_START_APU","A32NX_AFTER_ENGINE_START_ANTI_ICE","A32NX_AFTER_ENGINE_START_PITCH_TRIM","A32NX_AFTER_ENGINE_START_RUDDER_TRIM","A32NX_AFTER_ENGINE_START_FLIGHT_CONTROLS","A32NX_BEFORE_TAXI_EXTERIOR_LIGHTS","A32NX_BEFORE_TAXI_RADAR","A32NX_BEFORE_TAXI_PREDICTIVE_WINDSHEAR_SYS","A32NX_BEFORE_TAXI_TCAS","A32NX_BEFORE_TAXI_PARKING_BRAKE","A32NX_BEFORE_TAXI_BRAKE_PRESSURE","A32NX_BEFORE_TAXI_TERRAIN_ON_ND","A32NX_BEFORE_TAKEOFF_AUTOBRAKE","A32NX_BEFORE_TAKEOFF_CABIN_CREW","A32NX_BEFORE_TAKEOFF_TAKEOFF_CONFIG_TEST","A32NX_BEFORE_TAKEOFF_BRAKE_TEMP","A32NX_BEFORE_TAKEOFF_EXTERIOR_LIGHTS","A32NX_CLIMB_LANDING_GEAR","A32NX_CLIMB_AUTOPILOT","A32NX_CLIMB_THRUST_LEVERS","A32NX_CLIMB_FLAPS","A32NX_CLIMB_GROUND_SPOILERS","A32NX_CLIMB_EXTERIOR_LIGHTS","A32NX_CLIMB_SEATBELT_SIGNS","A32NX_CLIMB_ALTIMETER","A32NX_CLIMB_RADAR","A32NX_CLIMB_ANTI_ICE","A32NX_CLIMB_EFIS","A32NX_CLIMB_ECAM_MEMO","A32NX_CLIMB_NAVAIDS","A32NX_CRUISE_ECAM_MEMO","A32NX_CRUISE_FLIGHT_PROGRESS","A32NX_CRUISE_FUEL","A32NX_CRUISE_NAVIGATION_ACCURACY","A32NX_CRUISE_RADAR","A32NX_BEFORE_DESCENT_WEATHER","A32NX_BEFORE_DESCENT_NAV_CHARTS","A32NX_BEFORE_DESCENT_EFB_LANDING_PERF","A32NX_BEFORE_DESCENT_MCDU","A32NX_BEFORE_DESCENT_GPWS_LDG_FLAPS_3","A32NX_BEFORE_DESCENT_LANDING_ELEV","A32NX_BEFORE_DESCENT_AUTO_BRAKE","A32NX_BEFORE_DESCENT_APPROACH_BRIEFING","A32NX_BEFORE_DESCENT_TERR_ON_ND","A32NX_BEFORE_DESCENT_RADAR","A32NX_BEFORE_DESCENT_ANTI_ICE","A32NX_DESCENT_MCDU_PERF","A32NX_DESCENT_ALTIMETER","A32NX_DESCENT_EXTERIOR_LIGHTS","A32NX_DESCENT_EFIS","A32NX_DESCENT_NAVAIDS","A32NX_APPROACH_FPLN_SEQUENCING","A32NX_APPROACH_APPROACH_PHASE","A32NX_APPROACH_MANAGED_SPEED","A32NX_APPROACH_SPEED_BRAKES","A32NX_APPROACH_RADAR","A32NX_APPROACH_FLAPS","A32NX_APPROACH_LANDING_GEAR","A32NX_APPROACH_GROUND_SPOILERS","A32NX_APPROACH_EXTERIOR_LIGHTS","A32NX_APPROACH_AUTO_THROTTLE","A32NX_APPROACH_ANTI_ICE","A32NX_APPROACH_SLIDING_TABLE","A32NX_APPROACH_CABIN_CREW","A32NX_APPROACH_LANDING_MEMO","A32NX_BEFORE_LANDING_FLAPS","A32NX_BEFORE_LANDING_LANDING_GEAR","A32NX_AFTER_LANDING_GROUND_SPOILERS","A32NX_AFTER_LANDING_EXTERIOR_LIGHTS","A32NX_AFTER_LANDING_RADAR","A32NX_AFTER_LANDING_PREDICTIVE_WINDSHEAR_SYSTEM","A32NX_AFTER_LANDING_ENG_MODE","A32NX_AFTER_LANDING_TCAS","A32NX_AFTER_LANDING_ATC","A32NX_AFTER_LANDING_APU","A32NX_PARKING_ANTI_ICE","A32NX_PARKING_PARKING_BRAKE","A32NX_PARKING_ENGINE_MASTERS","A32NX_PARKING_SEAT_BELT_SIGNS","A32NX_PARKING_FUEL_PUMPS","A32NX_PARKING_ATC","A32NX_PARKING_EXTERIOR_LIGHTS","A32NX_PARKING_EXT_POWER","A32NX_SECURING_PARKING_BRAKE","A32NX_SECURING_ADIRS","A32NX_SECURING_EXTERIOR_LIGHTS","A32NX_SECURING_APU_BLEED","A32NX_SECURING_APU","A32NX_SECURING_EMERGENCY_LIGHTS","A32NX_SECURING_SIGNS","A32NX_SECURING_BATTERIES","ChecklistItems","commonLists","PRE_FLIGHT","SAFETY","CABIN_INSPECTION","ORIGINATING","BEFORE_ENGINE_START","ENGINE_START","AFTER_ENGINE_START","BEFORE_TAXI","TAXI","RUN_UP","BEFORE_TAKEOFF","TAKEOFF","AFTER_TAKEOFF_CLIMB","CLIMB","CRUISE","BEFORE_DESCENT","DESCENT","APPROACH","BEFORE_LANDING","LANDING","AFTER_LANDING","ALL_ENGINES_GO_AROUND","PARKING","SECURING","SHUTDOWN","TERMINATING","POST_FLIGHT","ChecklistLists","A32NXChecklistData","ChecklistFilters","EXCLUDE_UNOFFICIAL","EXCLUDE_FFOTD","INCLUDE_VATSIM","EXCLUDE_VATSIM","INCLUDE_EXTENSIONS","EXCLUDE_EXTENSIONS","INCLUDE_SIMSETUP","EXCLUDE_SIMSETUP","INCLUDE_NAV","EXCLUDE_NAV","C172G1000ChecklistData","defaultFilters","C172SteamChecklistData","CJ4ChecklistData","CRJChecklistData","ChecklistsData","ChecklistFiltersResults","INCLUDE","EXCLUDE","PASS","buildTagFilterFNInclusion","buildTagFilterFNExclusion","vatsimFilterData","extensionsFilterData","simsetupFilterData","navFilterData","commonFiltersData","ChecklistFiltersData","KeyboardInputSep","KeyboardInput","borderRadius","KeyboardInputs","inputs","inp","Vernacular","FMS","SAT","OAT","QNH","APU","N1","N2","ITT","EGT","FADEC","VR","KIAS","AGL","filterNestedSubItemsList","aggregatedValue","currentValue","mcduInitializationSubItems","withSimbrief","withSimbriefP","withConditionalRet","simbrief","manual","conditionalInputItem","engineStartVitals","apuStartProcedure","A32NXChecklistItemsData","moreInfo","levelToColorsMapping","critical","warning","success","info","CASMessageContainer","$level","CASMessage","C172ChecklistItemsData","C172G1000ChecklistItemsData","C172SteamChecklistItemsData","PFD_CJ4","DCP_CJ4","MFD_CJ4","CCP_CJ4","EP_CJ4","TP_CJ4","EICAS_CJ4","SFD_CJ4","cj4AntiIceRules","CJ4ChecklistItemsData","CJ4ExtChecklistItemsData","EICAS_CRJ","ACRJChecklistItemsData","ACRJExtChecklistItemsData","NavChecklistItemsData","replaces","SimulatorSetupChecklistItemsData","List","listStyleType","ListItem","VATSIMChecklistItemsData","ChecklistItemsData","ChecklistItemsNotImplemented","ChecklistItemsReplacements","commonListsData","ChecklistListsData","commonTagsData","ChecklistTagsData","useChecklistFilteredLists","filterFN","defaultFiltersData","filterFNs","finalFilterResults","filteringResult","useChecklistFilterFunction","listNames","replacedItems","itemIncluded","filteredItems","agg","add","useChecklist","filtersDataFN","listItems","checklistList","listItemsU","useChecklistData","resetChecklistCheckedItems","checklistListsData","ChecklistDisplay","timeoutID","Scroll","scroller","scrollTo","duration","smooth","offset","useChecklistSelectedListScroll","ChecklistNotFound","Checklist","checklistsNames","checklistListNames","checklistFound","checklistListFound","useChecklistCheck","ANTDFooter","Layout","Footer","GithubOutlined","LogoContainer","lineHeight","HeaderLogo","clickHandler","Navbar","mapping","pathname","url","isSelected","startsWith","useNavbarMenus","wtCJ4MenuItem","wtCJ4AntiIceItem","c172ChecklistMenuItem","c172G1000ChecklistMenuItem","crjChecklistMenuItem","a32nxChecklistMenuItem","otherMetarExplainerMenuItem","theme","SubMenu","Header","ANTDLayout","Content","LayoutBackground","background","$smallScreen","minHeight","contentStyle","contentStyleSmall","smallScreen","MainPage","AirportIdentifierPropTypes","prettyArgs","airportCode","node","AirportIdentifierValue","propTypes","AirportIdentifierShort","AirportIdentifierRenderers","renderValue","renderTitle","renderShort","AltimeterPropTypes","altimeterUnitP","valueP","number","altimeterUnit","TokenTypes","NOT_RECOGNIZED","AIRPORT_IDENTIFIER","ALTIMETER_SETTING","CLOUD_COVERAGE","METAR_PREFIX","METAR_PREFIX_OTHER","METAR_TIME","MISSING_DATA","PRESENT_WEATHER","PREVAILING_VISIBILITY","REMARKS","RUNWAY_VISUAL_RANGE","TEMPERATURES","TREND","VERTICAL_VISIBILITY","WIND","WIND_SHEAR","RECENT_WEATHER","SEA_SURFACE","RUNWAY_STATE","COLOR_SYSTEMS","WindSpeedUnit","KNOTS","METERS_PER_SECOND","CloudLayerAmount","NSC","NCD","CLR","SKC","FEW","SCT","BKN","OVC","CloudTypes","CB","TCU","NOT_DESCRIBED","CloudLayerAltitude","BELOW","AltimeterUnit","INHG","HPA","AltimeterSetting","NOT_REPORTED","WindDirections","VRB","WindForce","Directions","N","NE","E","SE","S","SW","W","NW","NDV","PrevailingVisibility","CAVOK","TEN_K","MISSING","LESS_THAN_QUARTER_MILE","PrevailingVisibilityUnit","METERS","KILOMETERS","MILES","WeatherIntensity","LIGHT","HEAVY","WeatherProximity","VINCINITY","WeatherDescriptor","SHALLOW","PATCHES","PARTIAL","LOW_DRIFTING","BLOWING","SHOWER","THUNDERSTORM","FREEZING","WeatherPhenomena","DRIZZLE","RAIN","SNOW","SNOW_GRAINS","ICE_PELLETS","HAIL","SMALL_HAIL_SNOW","UNKNOWN_PRECIPITATION","MIST","FOG","SMOKE","VOLCANIC_HASH","DUST","SAND","HAZE","DUST_DEVILS","SQUALLS","FUNNEL_CLOUD","SANDSTORM","DUSTSTORM","NSW","RunwayVisualRangeQualifier","NONE","AT_LEAST","AT_MOST","WindShearRunway","ALL_RUNWAYS","SeaSurfaceInfoType","SURFACE_STATE","WAVE_HEIGHT","SeaSurfaceStateCode","CALM_GLASSY","CALM_RIPPLED","SMOOTH","SLIGHT","MODERATE","ROUGH","VERY_ROUGH","HIGH","VERY_HIGH","PHENOMENAL","RunwayDeposit","CLEAR_AND_DRY","DAMP","WET","RIME_AND_FROST","DRY_SNOW","WET_SNOW","SLUSH","ICE","COMPACTED_SNOW","FROZEN_RUTS","RunwayContaminationExtent","BELOW_TEN","TEN_TO_TWENTY_FIVE","TWENTY_FIVE_TO_FIFTY","ABOVE_FIFTY","UNKNOWN_RESERVED","RunwayContaminationDepth","TEN_CM","FIFTEEN_CM","TWENTY_CM","TWENTY_FIVE_CM","THIRTY_CM","THIRTY_FIVE_CM","FORTY_CM","NOT_OPERATIONAL","RunwaySurfaceFriction","BRAKING_ACTION_POOR","BRAKING_ACTION_MEDIUM_POOR","BRAKING_ACTION_MEDIUM","BRAKING_ACTION_MEDIUM_GOOD","BRAKING_ACTION_GOOD","UNRELIABLE","TrendType","NOSIG","BECOMING","TEMPORARY","TrendTimeType","FROM","UNTIL","AT","Temperatures","renderAltimeterValue","AltimeterShort","AltimeterRenderers","CloudCoveragePropTypes","altitudeP","amountP","cloudTypeP","amount","altitude","cloudType","renderAmount","renderAltitude","renderCloudType","CloudCoverageShort","renderAmountAltitude","CloudCoverageRenderers","ColorSystemsRenderers","args","array","any","prettyArgsOrdered","METARTimePropTypes","dayOfMonthP","hour","minutes","dayOfMonth","METARTimeShort","hourP","minutesP","METARTimeRenderers","MissingDataPropTypes","MissingDataShort","MissingDataValue","MissingDataRenderers","NotRecognizedPropTypes","NotRecognizedShort","NotRecognizedValue","NotRecognizedRenderers","PrefixPropTypes","PrefixShort","PrefixTitle","PrefixValue","PrefixRenderers","PresentWeatherPropTypes","intensityParts","descriptorParts","phenomenaParts","renderValues","parts","renderFN","contents","partData","argID","renderIntensity","intensityP","renderIntensities","renderProximity","proximityP","renderProximities","proximityParts","weatherPhenomenaInfo","link","renderWeatherPhenomena","phenomenaP","renderWeatherPhenomenons","mainPhenomena","slice","weatherDescriptorInfo","renderDescriptor","descriptorP","renderDescriptors","PresentWeatherShort","PresentWeatherRenderers","PrevailingVisibilityPropTypes","directionP","unitP","direction","renderVisibilityValue","renderDirection","renderNDV","PrevailingVisibilityShort","PrevailingVisibilityRenderers","RecentWeatherPropTypes","RecentWeatherShort","RecentWeatherRenderers","RemarksPropTypes","rmk","remarks","RemarksValue","RemarksRenderers","RunwayStatePropTypes","runwayP","depositP","extentP","depthP","frictionP","runway","deposit","extent","depth","friction","depositDescriptions","renderDeposit","contaminationExtentDescriptions","renderContaminationExtent","contaminationDepthDescriptions","renderContaminationDepth","desc","frictionDescriptions","renderFriction","frictionDesc","RunwayStateShort","RunwayStateRenderers","RunwayVisualRangePropTypes","qualifier","distance","distanceP","renderQualifier","qualifierP","RunwayVisualRangeShort","RunwayVisualRangeRenderers","SeaSurfacePropTypes","infoType","temperatureP","seaStateCodeP","waveHeightP","seaStateCode","waveHeight","TemperaturesPropTypes","oatP","dewPointP","oat","dewPoint","renderTemperature","tempP","temp","TemperaturesShort","seaStateCodeDescriptions","short","long","SeaSurfaceShort","codeDesc","SeaSurfaceRenderers","TemperaturesRenderers","TrendPropTypes","trendTypeP","timeParts","renderTimeParts","timeP","trendTimeType","TrendShort","trendType","TrendRenderers","VerticalVisibilityPropTypes","VerticalVisibilityShort","VerticalVisibilityRenderers","isCalm","bool","fromDirectionP","toDirectionP","forceP","gustsForceP","force","gustsForce","fromDirection","toDirection","renderForce","renderGustsForce","WindRenderers","WindShearPropTypes","renderRunway","WindShearShort","WindShearRenderers","TokenRenderers","isLocalServer","REACT_APP_IS_LOCAL_SERVER","MetarURLManager","metarData","useMetarURLConfig","initialValue","setInitialValue","lastValue","metarURLManager","fixAltimeterValue","fixCloudAltitude","createCloudDescriptorsToken","tokenType","buildVariableArgs","prefix","argsKey","countKey","partsKey","part","valueIdxKey","valueIdxKeyP","parsed","valueKey","valueKeyP","createPrefixToken","parseCOR","parser","completeMatch1","matchNextTokenAndForward","completeMatch","WeatherDescriptorPatterns","WeatherPhenomenaPatterns","weatherDescriptorMapping","MI","BC","PR","DR","BL","SH","TS","FZ","weatherPhenomenaMapping","DZ","RA","SN","SG","PL","GR","GS","UP","BR","FG","FU","VA","DU","SA","HZ","PO","SQ","FC","SS","DS","splitValuesIntoParts","valuesStr","parseValue","lengthOfValue","x","substring","splitWeatherProximitiesIntoParts","buildDescriptorsArgs","splitWeatherDescriptorsIntoParts","buildPhenomenonsArgs","splitWeatherPhenomenonsIntoParts","createPresentWeatherToken","intensitiesData","proximityData","buildProximitiessArgs","descriptorsData","phenomenonsData","intensityArgs","proximityArgs","descriptorArgs","phenomenaArgs","parsePresentWeatherCombination","descriptorCount","phenomenaCount","groups","intensities","proximities","descriptors","phenomenons","fixPVValue","matchResult1","match","RegExp","whole","numerator","denominator","matchResult2","isWithoutUnit","createPrevailingVisibility","parseRecentWeatherCombination","depositMapping","contaminationExtentMapping","parseContaminationExtent","contaminationDepthMapping","parseContaminationDepth","surfaceFrictionMapping","parseSurfaceFriction","TemperaturePattern","fixTemp","stateCodesMapping","createSeaSurfaceToken","trendTypesMapping","BECMG","TEMPO","createTrendToken","timeData","timeArgs","context","uuidv4","parseTimeToken","parseFrom","parseUntil","parseAt","parseTimeInfo","timeParserFuncs","i","finished","j","fnResult","createVerticalVisibilityToken","fixForce","windDirectionsMapping","createWindToken","parseWindVariableDirection","allRwyValue","createWindShearTokens","ParserState","metar","originalMetar","tokens","skipWhitespace","pattern","matched","trim","matchAndForward","matched1","result1","matched2","result2","pushToken","prefixFunctions","completeMatch2","parsersFunctions","nscCompleteMatch","ncdCompleteMatch","clrCompleteMatch","skcCompleteMatch","simpleGroups","belowGroups","cloudTypeOnlyGroups","combinations","combination","cavokCompleteMatch","groups1","groups2","groups4","groups5","groups3","completeMatchNOSIG","completeMatchBecoming","completeMatchTemporary","vvAltGroups","noDataCompleteMatch","withGustsGroups","completeMatchAllRwy","rwyGroups","seaStateGroups","waveHeightGroups","colorData","split","splitValues","colorArgs","parseNextToken","parseToken","skipToken","METARDataValueContainer","alignItems","METARColumnContainer","METARDataValue","Arg","ArgComponents","textDecoration","$isEven","ContextColors","buildPrettyArgs","argName","Comp","DisplayInfo","tokenTypeRenderers","renderDescription","renderedValue","renderedTitle","renderedShort","renderedDescription","containerStyle","contextCounter","isFirstInContext","useShareableLinkHandler","getFullBaseURL","navigator","clipboard","writeText","then","notification","Metar","Form","useForm","form","setMetarData","explainButtonEnabled","setExplainButtonEnabled","updateExplainedButtonEnabledState","setFieldsValue","metarFieldData","metarDataChanged","setMetarDataChanged","onChangeMETAR","onFinish","parsedData","cleanIrrelevantCharacters","hasMoreToMatch","parseMETAR","currentContext","token","onClickShareableLink","shareableButtonDisabled","autoComplete","labelCol","wrapperCol","TextArea","htmlType","renderItem","action","itemsSet","setA","setB","elem","intersection","checkItem","uncheckItem","checklistListReducer","toggleGlobalConfig","reducers","combineReducers","createAppStore","middlewares","thunkMiddleware","logger","createStore","applyMiddleware","App","compose","Component","store","Styletron","enhance","exact","component","root","createElement","ReactDOM","StrictMode"],"mappings":"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B,oBACzBlpB,MAAO,CACH4oB,GAAe3G,8BACf2G,GAAe1G,oCACf0G,GAAezG,+BACfyG,GAAexG,gCACfwG,GAAevG,iCACfuG,GAAetG,wCACfsG,GAAerG,wCACfqG,GAAepG,2CAGvB,CACI5hB,SAAU6pB,GAAetB,aACzBnpB,MAAO,CACH4oB,GAAenG,gCACfmG,GAAelG,+BACfkG,GAAejG,8BACfiG,GAAehG,gCAGvB,CACIhiB,SAAU6pB,GAAerB,mBACzBppB,MAAO,CACH4oB,GAAe/F,qCACf+F,GAAe9F,+BACf8F,GAAe7F,yCACf6F,GAAe5F,mCACf4F,GAAe3F,6BACf2F,GAAe1F,kCACf0F,GAAezF,oCACfyF,GAAexF,qCACfwF,GAAevF,2CAGvB,CACIziB,SAAU6pB,GAAepB,YACzBrpB,MAAO,CACH4oB,GAAetF,kCACfsF,GAAerF,wBACfqF,GAAepF,2CACfoF,GAAenF,uBACfmF,GAAelF,gCACfkF,GAAejF,iCACfiF,GAAehF,kCAGvB,CACIhjB,SAAU6pB,GAAejB,eACzBxpB,MAAO,CACH4oB,GAAe/E,+BACf+E,GAAe9E,gCACf8E,GAAe7E,yCACf6E,GAAe5E,gCACf4E,GAAe3E,uCAGvB,CACIrjB,SAAU6pB,GAAed,MACzB3pB,MAAO,CACH4oB,GAAe1E,yBACf0E,GAAezE,sBACfyE,GAAexE,0BACfwE,GAAevE,kBACfuE,GAAetE,4BACfsE,GAAerE,4BACfqE,GAAepE,2BACfoE,GAAenE,sBACfmE,GAAelE,kBACfkE,GAAejE,qBACfiE,GAAehE,iBACfgE,GAAe/D,sBACf+D,GAAe9D,sBAGvB,CACIlkB,SAAU6pB,GAAeb,OACzB5pB,MAAO,CACH4oB,GAAe7D,uBACf6D,GAAe5D,6BACf4D,GAAe3D,kBACf2D,GAAe1D,iCACf0D,GAAezD,qBAGvB,CACIvkB,SAAU6pB,GAAeZ,eACzB7pB,MAAO,CACH4oB,GAAexD,6BACfwD,GAAevD,gCACfuD,GAAetD,sCACfsD,GAAerD,0BACfqD,GAAepD,sCACfoD,GAAenD,kCACfmD,GAAelD,gCACfkD,GAAejD,uCACfiD,GAAehD,gCACfgD,GAAe/C,2BACf+C,GAAe9C,gCAGvB,CACIllB,SAAU6pB,GAAeX,QACzB9pB,MAAO,CACH4oB,GAAe7C,wBACf6C,GAAe5C,wBACf4C,GAAe3C,8BACf2C,GAAe1C,mBACf0C,GAAezC,wBAGvB,CACIvlB,SAAU6pB,GAAeV,SACzB/pB,MAAO,CACH4oB,GAAexC,+BACfwC,GAAevC,8BACfuC,GAAetC,6BACfsC,GAAerC,4BACfqC,GAAepC,qBACfoC,GAAenC,qBACfmC,GAAelC,4BACfkC,GAAejC,+BACfiC,GAAehC,+BACfgC,GAAe/B,6BACf+B,GAAe9B,wBACf8B,GAAe7B,6BACf6B,GAAe5B,0BACf4B,GAAe3B,8BAGvB,CACIrmB,SAAU6pB,GAAeT,eACzBhqB,MAAO,CACH4oB,GAAe1B,2BACf0B,GAAezB,oCAGvB,CACIvmB,SAAU6pB,GAAeP,cACzBlqB,MAAO,CACH4oB,GAAexB,oCACfwB,GAAevB,oCACfuB,GAAetB,0BACfsB,GAAerB,gDACfqB,GAAepB,6BACfoB,GAAenB,yBACfmB,GAAelB,wBACfkB,GAAejB,0BAGvB,CACI/mB,SAAU6pB,GAAeL,QACzBpqB,MAAO,CACH4oB,GAAehB,uBACfgB,GAAef,4BACfe,GAAed,6BACfc,GAAeb,8BACfa,GAAeZ,yBACfY,GAAeX,kBACfW,GAAeV,8BACfU,GAAeT,0BAGvB,CACIvnB,SAAU6pB,GAAeJ,SACzBrqB,MAAO,CACH4oB,GAAeR,6BACfQ,GAAeP,qBACfO,GAAeN,+BACfM,GAAeL,yBACfK,GAAeJ,mBACfI,GAAeH,gCACfG,GAAeF,qBACfE,GAAeD,6BCrNlBgC,GAAmB7rC,OAAOC,OAAPD,OAAA,IAAAA,CAAA,GAjBV,CAClB8rC,mBAAoB,qBACpBC,cAAe,gBAEfC,eAAgB,iBAChBC,eAAgB,iBAEhBC,mBAAoB,qBACpBC,mBAAoB,qBAEpBC,iBAAkB,mBAClBC,iBAAkB,mBAElBC,YAAa,cACbC,YAAa,iBCTJC,GAAyB,CAClC9uC,IAAK6kB,GAAW7E,WAChB9f,MAAO,6BACPiR,kBAAmB,CACfg9B,GAAiBC,oBAErBW,eAAgB,GAChBz7B,MAAO,CACH,CACI8Q,SAAU6pB,GAAe3B,WACzB9oB,MAAO,CACH4oB,GAAe9e,kCACf8e,GAAe7e,6BACf6e,GAAe5e,wBACf4e,GAAe3e,qCACf2e,GAAe5V,sCACf4V,GAAe3V,wBACf2V,GAAe1e,6BACf0e,GAAeze,qCAEfye,GAAe1V,6CACf0V,GAAezV,2CAEfyV,GAAexV,yCACfwV,GAAevV,0CACfuV,GAAetV,0CACfsV,GAAerV,yCACfqV,GAAepV,0CACfoV,GAAenV,0CACfmV,GAAete,6BACfse,GAAere,8BACfqe,GAAelV,0CACfkV,GAAejV,sCACfiV,GAAehV,kCACfgV,GAAeve,6BACfue,GAAexe,iDAEnB3K,cAAe,CACXgrB,GAAevB,sBAGvB,CACItoB,SAAU6pB,GAAevB,oBACzBlpB,MAAO,CACH4oB,GAAepe,uCACfoe,GAAene,8BACfme,GAAe/U,8BACf+U,GAAe9U,wCACf8U,GAAele,uCACfke,GAAeje,oCACfie,GAAehe,gCACfge,GAAe/d,sCAEnBpL,cAAe,CACXgrB,GAAetB,eAGvB,CACIvoB,SAAU6pB,GAAetB,aACzBnpB,MAAO,CACH4oB,GAAe9d,2BACf8d,GAAe7d,4BACf6d,GAAe7U,yCACf6U,GAAe5U,wCACf4U,GAAe3U,gDACf2U,GAAe1U,mCACf0U,GAAezU,mCACfyU,GAAexU,mCACfwU,GAAevU,gDACfuU,GAAe5d,iCACf4d,GAAetU,qCACfsU,GAAe3d,+BACf2d,GAAe1d,4BACf0d,GAAezd,gCACfyd,GAAexd,4BACfwd,GAAevd,8BACfud,GAAetd,2BACfsd,GAAerd,6BAEnB9L,cAAe,CACXgrB,GAAerB,qBAGvB,CACIxoB,SAAU6pB,GAAerB,mBACzBppB,MAAO,CACH4oB,GAAepd,0BACfod,GAAend,8BACfmd,GAAerU,2BACfqU,GAAepU,4CACfoU,GAAejd,mCACfid,GAAeld,wBAEnBjM,cAAe,CACXgrB,GAAenB,OAGvB,CACI1oB,SAAU6pB,GAAenB,KACzBtpB,MAAO,CACH4oB,GAAehd,qBACfgd,GAAe/c,wBACf+c,GAAe9c,uBACf8c,GAAe7c,oBACf6c,GAAe5c,wBACf4c,GAAe3c,iBACf2c,GAAe1c,kBAEnBzM,cAAe,CACXgrB,GAAelB,SAGvB,CACI3oB,SAAU6pB,GAAelB,OACzBvpB,MAAO,CACH4oB,GAAezc,yBACfyc,GAAexc,uBACfwc,GAAevc,uBACfuc,GAAenU,sBACfmU,GAAetc,6BACfsc,GAAelU,mCACfkU,GAAejU,0BACfiU,GAAehU,kCACfgU,GAAe/T,gCACf+T,GAAe9T,2CACf8T,GAAerc,yBACfqc,GAAepc,mBACfoc,GAAenc,yBACfmc,GAAelc,qBACfkc,GAAejc,6BACfic,GAAe7T,6BACf6T,GAAe5T,gCACf4T,GAAe3T,8BACf2T,GAAehc,sBACfgc,GAAe/b,sBACf+b,GAAe9b,sBACf8b,GAAe7b,sBACf6b,GAAe5b,wBACf4b,GAAe1T,kCACf0T,GAAezT,oCACfyT,GAAexT,6BACfwT,GAAe3b,uBACf2b,GAAe1b,uBAEnBzN,cAAe,CACXgrB,GAAejB,iBAGvB,CACI5oB,SAAU6pB,GAAejB,eACzBxpB,MAAO,CACH4oB,GAAevT,mCACfuT,GAAetT,mCACfsT,GAAerT,iCACfqT,GAAepT,qCACfoT,GAAenT,wCACfmT,GAAelT,mCACfkT,GAAezb,0BACfyb,GAAexb,kCACfwb,GAAevb,mCAEnB5N,cAAe,CACXgrB,GAAehB,UAGvB,CACI7oB,SAAU6pB,GAAehB,QACzBzpB,MAAO,CACH4oB,GAAetb,qBACfsb,GAAerb,sBACfqb,GAAepb,qBACfob,GAAejT,+BACfiT,GAAenb,gCACfmb,GAAelb,4BACfkb,GAAejb,2BACfib,GAAehb,sBAEnBnO,cAAe,CACXgrB,GAAed,QAGvB,CACI/oB,SAAU6pB,GAAed,MACzB3pB,MAAO,CACH4oB,GAAe/a,oBACf+a,GAAe9a,oBACf8a,GAAe7a,qBACf6a,GAAe5a,yBACf4a,GAAe3a,+BACf2a,GAAe1a,sBAEnBzO,cAAe,CACXgrB,GAAeb,SAGvB,CACIhpB,SAAU6pB,GAAeb,OACzB5pB,MAAO,CACH4oB,GAAeza,kBACfya,GAAexa,0BACfwa,GAAeva,oBACfua,GAAeta,0BACfsa,GAAehT,0BAEnBnW,cAAe,CACXgrB,GAAeX,UAGvB,CACIlpB,SAAU6pB,GAAeX,QACzB9pB,MAAO,CACH4oB,GAAera,mBACfqa,GAAepa,qBACfoa,GAAe/S,4BACf+S,GAAe9S,oCACf8S,GAAe7S,kCACf6S,GAAe5S,0BACf4S,GAAe3S,0BACf2S,GAAena,2BACfma,GAAela,oBAEnBjP,cAAe,CACXgrB,GAAeT,iBAGvB,CACIppB,SAAU6pB,GAAeT,eACzBhqB,MAAO,CACH4oB,GAAeja,gCACfia,GAAeha,gCACfga,GAAe/Z,kCACf+Z,GAAe9Z,4BACf8Z,GAAe7Z,wCACf6Z,GAAe5Z,8BACf4Z,GAAe1S,oCAEnBzW,cAAe,CACXgrB,GAAeR,UAGvB,CACIrpB,SAAU6pB,GAAeR,QACzBjqB,MAAO,CACH4oB,GAAe3Z,mBACf2Z,GAAe1Z,sBACf0Z,GAAezZ,uBACfyZ,GAAexZ,0BACfwZ,GAAevZ,sBAEnB5P,cAAe,CACXgrB,GAAeP,gBAGvB,CACItpB,SAAU6pB,GAAeP,cACzBlqB,MAAO,CACH4oB,GAAetZ,yBACfsZ,GAAerZ,iCACfqZ,GAAepZ,8BACfoZ,GAAenZ,gCACfmZ,GAAelZ,iCACfkZ,GAAejZ,gCAEnBlQ,cAAe,CACXgrB,GAAeL,UAGvB,CACIxpB,SAAU6pB,GAAeL,QACzBpqB,MAAO,CACH4oB,GAAehZ,2BACfgZ,GAAe/Y,+BACf+Y,GAAe9Y,yBACf8Y,GAAe7Y,sBACf6Y,GAAe5Y,sBAEnBvQ,cAAe,CACXgrB,GAAeJ,WAGvB,CACIzpB,SAAU6pB,GAAeJ,SACzBrqB,MAAO,CACH4oB,GAAe3Y,uBACf2Y,GAAe1Y,4BACf0Y,GAAezY,yBACfyY,GAAexY,wBACfwY,GAAezS,mCACfyS,GAAexS,gCACfwS,GAAevY,gCCjSlBmb,GAAyB,CAClChvC,IAAK6kB,GAAW9E,WAChB7f,MAAO,oCACPiR,kBAAmB,CACfg9B,GAAiBC,oBAErBW,eAAgB,GAChBz7B,MAAO,CACH,CACI8Q,SAAU6pB,GAAe3B,WACzB9oB,MAAO,CACH4oB,GAAe9e,kCACf8e,GAAe7e,6BACf6e,GAAe5e,wBACf4e,GAAe3e,qCACf2e,GAAerY,qCACfqY,GAAe1e,6BACf0e,GAAeze,qCACfye,GAAenY,wCACfmY,GAAejY,yCACfiY,GAAelY,wCACfkY,GAAexe,gDACfwe,GAAehY,sCACfgY,GAAeve,6BACfue,GAAe/X,uCACf+X,GAAe9X,+BACf8X,GAAete,6BACfse,GAAere,8BACfqe,GAAepY,qCACfoY,GAAe7X,mCAEnBtR,cAAe,CACXgrB,GAAevB,sBAGvB,CACItoB,SAAU6pB,GAAevB,oBACzBlpB,MAAO,CACH4oB,GAAepe,uCACfoe,GAAene,8BACfme,GAAele,uCACfke,GAAeje,oCACfie,GAAehe,gCACfge,GAAe/d,sCAEnBpL,cAAe,CACXgrB,GAAetB,eAGvB,CACIvoB,SAAU6pB,GAAetB,aACzBnpB,MAAO,CACH4oB,GAAe9d,2BACf8d,GAAe7d,4BACf6d,GAAe5d,iCACf4d,GAAe5X,sCACf4X,GAAe3d,+BACf2d,GAAe1d,4BACf0d,GAAezd,gCACfyd,GAAexd,4BACfwd,GAAevd,8BACfud,GAAetd,2BACfsd,GAAerd,6BAEnB9L,cAAe,CACXgrB,GAAerB,qBAGvB,CACIxoB,SAAU6pB,GAAerB,mBACzBppB,MAAO,CACH4oB,GAAepd,0BACfod,GAAend,8BACfmd,GAAe3X,iCACf2X,GAAe1X,2CACf0X,GAAezX,8BACfyX,GAAejd,mCACfid,GAAexX,6BACfwX,GAAevX,kCACfuX,GAAeld,uBACfkd,GAAetX,wCACfsX,GAAerX,gCACfqX,GAAepX,0CAEnB/R,cAAe,CACXgrB,GAAenB,OAGvB,CACI1oB,SAAU6pB,GAAenB,KACzBtpB,MAAO,CACH4oB,GAAehd,qBACfgd,GAAe/c,wBACf+c,GAAe9c,uBACf8c,GAAe7c,oBACf6c,GAAe5c,wBACf4c,GAAe3c,iBACf2c,GAAe1c,iBACf0c,GAAenX,gCACfmX,GAAelX,iCACfkX,GAAejX,wBAEnBlS,cAAe,CACXgrB,GAAelB,SAGvB,CACI3oB,SAAU6pB,GAAelB,OACzBvpB,MAAO,CACH4oB,GAAezc,yBACfyc,GAAexc,uBACfwc,GAAevc,uBACfuc,GAAetc,6BACfsc,GAAehX,mCACfgX,GAAerc,yBACfqc,GAAepc,mBACfoc,GAAenc,yBACfmc,GAAelc,qBACfkc,GAAejc,6BACfic,GAAe/W,0BACf+W,GAAehc,sBACfgc,GAAe/b,sBACf+b,GAAe9b,sBACf8b,GAAe7b,sBACf6b,GAAe5b,wBACf4b,GAAe9W,6BACf8W,GAAe7W,gCACf6W,GAAe5W,wBACf4W,GAAe3W,kCACf2W,GAAe3b,uBACf2b,GAAe1b,uBAEnBzN,cAAe,CACXgrB,GAAejB,iBAGvB,CACI5oB,SAAU6pB,GAAejB,eACzBxpB,MAAO,CACH4oB,GAAe1W,gCACf0W,GAAezW,kCACfyW,GAAexW,wCACfwW,GAAevW,qCACfuW,GAAetW,mCACfsW,GAAerW,uCACfqW,GAAezb,0BACfyb,GAAexb,kCACfwb,GAAevb,mCAEnB5N,cAAe,CACXgrB,GAAehB,UAGvB,CACI7oB,SAAU6pB,GAAehB,QACzBzpB,MAAO,CACH4oB,GAAetb,qBACfsb,GAAerb,sBACfqb,GAAepb,qBACfob,GAAepW,+BACfoW,GAAenb,gCACfmb,GAAelb,4BACfkb,GAAejb,2BACfib,GAAehb,sBAEnBnO,cAAe,CACXgrB,GAAed,QAGvB,CACI/oB,SAAU6pB,GAAed,MACzB3pB,MAAO,CACH4oB,GAAe/a,oBACf+a,GAAe9a,oBACf8a,GAAe7a,qBACf6a,GAAe5a,yBACf4a,GAAe3a,+BACf2a,GAAe1a,sBAEnBzO,cAAe,CACXgrB,GAAeb,SAGvB,CACIhpB,SAAU6pB,GAAeb,OACzB5pB,MAAO,CACH4oB,GAAeza,kBACfya,GAAexa,0BACfwa,GAAeva,oBACfua,GAAeta,0BACfsa,GAAenW,qCAEnBhT,cAAe,CACXgrB,GAAeX,UAGvB,CACIlpB,SAAU6pB,GAAeX,QACzB9pB,MAAO,CACH4oB,GAAera,mBACfqa,GAAepa,qBACfoa,GAAelW,4BACfkW,GAAejW,0BACfiW,GAAena,2BACfma,GAAela,oBAEnBjP,cAAe,CACXgrB,GAAeT,iBAGvB,CACIppB,SAAU6pB,GAAeT,eACzBhqB,MAAO,CACH4oB,GAAeja,gCACfia,GAAeha,gCACfga,GAAe/Z,kCACf+Z,GAAe9Z,4BACf8Z,GAAe7Z,wCACf6Z,GAAe5Z,+BAEnBvP,cAAe,CACXgrB,GAAeR,UAGvB,CACIrpB,SAAU6pB,GAAeR,QACzBjqB,MAAO,CACH4oB,GAAe3Z,mBACf2Z,GAAe1Z,sBACf0Z,GAAezZ,uBACfyZ,GAAexZ,0BACfwZ,GAAevZ,sBAEnB5P,cAAe,CACXgrB,GAAeP,gBAGvB,CACItpB,SAAU6pB,GAAeP,cACzBlqB,MAAO,CACH4oB,GAAetZ,yBACfsZ,GAAerZ,iCACfqZ,GAAepZ,8BACfoZ,GAAenZ,gCACfmZ,GAAelZ,iCACfkZ,GAAejZ,gCAEnBlQ,cAAe,CACXgrB,GAAeL,UAGvB,CACIxpB,SAAU6pB,GAAeL,QACzBpqB,MAAO,CACH4oB,GAAehZ,2BACfgZ,GAAehW,8BACfgW,GAAe/Y,+BACf+Y,GAAe9Y,yBACf8Y,GAAe7Y,sBACf6Y,GAAe5Y,sBAEnBvQ,cAAe,CACXgrB,GAAeJ,WAGvB,CACIzpB,SAAU6pB,GAAeJ,SACzBrqB,MAAO,CACH4oB,GAAe3Y,uBACf2Y,GAAe1Y,4BACf0Y,GAAezY,yBACfyY,GAAexY,wBACfwY,GAAe/V,8BACf+V,GAAe9V,2BACf8V,GAAevY,gCC/QlBob,GAAmB,CAC5BjvC,IAAK6kB,GAAWjd,iBAChB1H,MAAO,mBACPf,YACI,yEAEK,IACD,cAAC,GAAD,CAAcslB,KAAK,8CAAnB,8BACC,IAJL,6EAMK,IAED,cAAC,GAAD,CAAcA,KAAK,uFAAnB,8BACC,IATL,8GAcJtT,kBAAmB,CACfg9B,GAAiBC,mBACjBD,GAAiBM,mBACjBN,GAAiBU,YACjBV,GAAiBQ,iBACjBR,GAAiBI,gBAErBQ,eAAgB,GAChBz7B,MAAO,CACH,CACI8Q,SAAU6pB,GAAe3B,WACzB9oB,MAAO,CACH4oB,GAAepJ,oBACfoJ,GAAelK,wBACfkK,GAAe7I,+BACf6I,GAAe3I,iCAEnBxgB,cAAe,CACXgrB,GAAevB,sBAGvB,CACItoB,SAAU6pB,GAAevB,oBACzBlpB,MAAO,CACH4oB,GAAennB,gCACfmnB,GAAelnB,yCACfknB,GAAejnB,+CACfinB,GAAehnB,iCACfgnB,GAAelf,mCACfkf,GAAejK,iCACfiK,GAAe/mB,gCACf+mB,GAAe9mB,8BACf8mB,GAAe7mB,4BACf6mB,GAAe5mB,oCACf4mB,GAAe3mB,uCACf2mB,GAAe1mB,iCACf0mB,GAAezmB,uBACfymB,GAAexmB,qBACfwmB,GAAevmB,2CAEnB5C,cAAe,CACXgrB,GAAetB,eAGvB,CACIvoB,SAAU6pB,GAAetB,aACzBxtC,YACI,4FAEK,IAED,cAAC,GAAD,CAAcslB,KAAK,8GAAnB,oCACC,IALL,6CASJjB,MAAO,CACH4oB,GAAetmB,2BACfsmB,GAAermB,qCACfqmB,GAAepmB,uCACfomB,GAAenmB,0BACfmmB,GAAelmB,6BACfkmB,GAAejmB,uCACfimB,GAAehmB,2CACfgmB,GAAe/lB,0CAEnBpD,cAAe,CACXgrB,GAAepB,cAGvB,CACIzoB,SAAU6pB,GAAepB,YACzBrpB,MAAO,CACH4oB,GAAe9lB,gCACf8lB,GAAe7lB,uCACf6lB,GAAe5lB,wCACf4lB,GAAe3lB,sBACf2lB,GAAe1lB,qCACf0lB,GAAezlB,iCACfylB,GAAexlB,sBACfwlB,GAAevlB,yCACfulB,GAAetlB,qCACfslB,GAAerlB,6BACfqlB,GAAenJ,+BACfmJ,GAAeplB,+BACfolB,GAAenlB,6CACfmlB,GAAellB,8BACfklB,GAAe/J,0BACf+J,GAAejlB,qCACfilB,GAAehlB,4BACfglB,GAAe/kB,wCAEnBpE,cAAe,CACXgrB,GAAenB,OAGvB,CACI1oB,SAAU6pB,GAAenB,KACzBtpB,MAAO,CACH4oB,GAAe9kB,yBACf8kB,GAAe9J,sBACf8J,GAAe7J,yBACf6J,GAAe7kB,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CACpB52B,MAAO,0BACPkF,MAAO,OAEX,CACIpF,IAAKosC,GAAerV,yCACpB72B,MAAO,0BACPkF,MAAO,MAEX,CACIpF,IAAKosC,GAAepV,0CACpB92B,MAAO,mBACPkF,MAAO,sBAEX,CACIpF,IAAKosC,GAAenV,0CACpB/2B,MAAO,0BACPkF,MAAO,OAEX,CACIpF,IAAKosC,GAAelV,0CACpBh3B,MAAO,wBACPkF,MAAO,YAEX,CACIpF,IAAKosC,GAAejV,sCACpBj3B,MAAO,gCACPkF,MAAO,OAEX,CACIpF,IAAKosC,GAAehV,kCACpBl3B,MAAO,gBACPkF,MAAO,qBAEX,CACIpF,IAAKosC,GAAe/U,8BACpBn3B,MAAO,SACPkF,MAAO,gBAEX,CACIpF,IAAKosC,GAAe9U,wCACpBp3B,MAAO,mBACPkF,MAAO,cAEX,CACIpF,IAAKosC,GAAe7U,yCACpBr3B,MAAO,qCACPkF,MAAO,yBAEX,CACIpF,IAAKosC,GAAe5U,wCACpBt3B,MAAO,qCACPkF,MAAO,0BAEX,CACIpF,IAAKosC,GAAe3U,gDACpBv3B,MAAO,2BACPkF,MAAO,oBAEX,CACIpF,IAAKosC,GAAe1U,mCACpBx3B,MAAO,cACPkF,MAAO,yBAEX,CACIpF,IAAKosC,GAAezU,mCACpBz3B,MAAO,cACPkF,MAAO,2BAEX,CACIpF,IAAKosC,GAAexU,mCACpB13B,MAAO,iBACPkF,MAAO,2BAEX,CACIpF,IAAKosC,GAAevU,gDACpB33B,MAAO,8BACPkF,MAAO,YAEX,CACIpF,IAAKosC,GAAetU,qCACpB53B,MAAO,gCACPkF,MAAO,MAEX,CACIpF,IAAKosC,GAAerU,2BACpB73B,MAAO,2BACPkF,MAAO,8BAEX,CACIpF,IAAKosC,GAAepU,4CACpB93B,MAAO,wBACPkF,MAAO,aAEX,CACIpF,IAAKosC,GAAenU,sBACpB/3B,MAAO,QACPkF,MAAO,oBACPnC,KAAM,CAACuc,GAAcjb,kBAEzB,CACIvE,IAAKosC,GAAelU,mCACpBh4B,MAAO,+BACPkF,MAAO,oBAEX,CACIpF,IAAKosC,GAAejU,0BACpBj4B,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,cACPkF,MAAO,WAEX,CACIpF,IAAKosC,GAAetX,wCACpB50B,MAAO,oBACPkF,MAAO,OAEX,CACIpF,IAAKosC,GAAerX,gCACpB70B,MAAO,YACPkF,MAAO,OAEX,CACIpF,IAAKosC,GAAepX,yCACpB90B,MAAO,qBACPkF,MAAO,OAEX,CACIpF,IAAKosC,GAAenX,gCACpB/0B,MAAO,mBACPkF,MAAO,iBAEX,CACIpF,IAAKosC,GAAelX,iCACpBh1B,MAAO,oBACPkF,MAAO,iBAEX,CACIpF,IAAKosC,GAAejX,uBACpBj1B,MAAO,UACPkF,MAAO,iBAEX,CACIpF,IAAKosC,GAAehX,mCACpBl1B,MAAO,qBACPkF,MAAO,OAEX,CACIpF,IAAKosC,GAAe/W,0BACpBn1B,MAAO,YACPkF,MAAO,OAEX,CACIpF,IAAKosC,GAAe9W,6BACpBp1B,MAAO,eACPkF,MAAO,SAEX,CACIpF,IAAKosC,GAAe7W,gCACpBr1B,MAAO,kBACPkF,MAAO,SAEX,CACIpF,IAAKosC,GAAe5W,wBACpBt1B,MAAO,UACPkF,MAAO,SAEX,CACIpF,IAAKosC,GAAe3W,kCACpBv1B,MAAO,oBACPkF,MAAO,SAEX,CACIpF,IAAKosC,GAAe1W,gCACpBx1B,MAAO,SACPkF,MAAO,OAEX,CACIpF,IAAKosC,GAAezW,kCACpBz1B,MAAO,WACPkF,MAAO,OAEX,CACIpF,IAAKosC,GAAexW,wCACpB11B,MAAO,iBACPkF,MAAO,OAEX,CACIpF,IAAKosC,GAAevW,qCACpB31B,MAAO,cACPkF,MAAO,UAEX,CACIpF,IAAKosC,GAAetW,mCACpB51B,MAAO,YACPkF,MAAO,OAEX,CACIpF,IAAKosC,GAAerW,uCACpB71B,MAAO,gBACPkF,MAAO,mBAEX,CACIpF,IAAKosC,GAAepW,+BACpB91B,MAAO,oBACPkF,MAAO,SAEX,CACIpF,IAAKosC,GAAenW,oCACpB/1B,MAAO,qBACPkF,MAAO,SAEX,CACIpF,IAAKosC,GAAelW,4BACpBh2B,MAAO,oBACPkF,MAAO,SAEX,CACIpF,IAAKosC,GAAejW,0BACpBj2B,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","file":"static/js/main.41b61a50.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Empty } from 'antd';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport const AntiIceAircraftNotFound = ({ aircraftName }) => {\n    const description = (\n        <>\n            Unknown aircraft &quot;\n            {aircraftName}\n            &quot;.\n            {' '}\n            <Link to=\"/\">Go Back</Link>\n            .\n        </>\n    );\n\n    return <Empty description={description} />;\n};\n\nAntiIceAircraftNotFound.propTypes = {\n    aircraftName: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport { Select } from 'antd';\nimport PropTypes from 'prop-types';\n\nconst { Option } = Select;\n\nexport const AntiIceConfigurationSelector = ({\n    currentConfiguration,\n    setCurrentConfiguration,\n    optionalModesOrder,\n    optionalModesMapping,\n}) => {\n    const hasMoreConfigs = optionalModesOrder.length !== 0;\n\n    const optionalModesOptions = optionalModesOrder.map((uid) => (\n        <Option key={uid} value={uid}>\n            {optionalModesMapping[uid].title}\n        </Option>\n    ));\n\n    return (\n        <Select\n            value={currentConfiguration}\n            onChange={setCurrentConfiguration}\n            disabled={!hasMoreConfigs}\n            style={{ width: 150 }}\n        >\n            <Option value=\"default\">default</Option>\n            {optionalModesOptions}\n        </Select>\n    );\n};\n\nAntiIceConfigurationSelector.propTypes = {\n    currentConfiguration: PropTypes.string.isRequired,\n    setCurrentConfiguration: PropTypes.func.isRequired,\n    optionalModesOrder: PropTypes.arrayOf(PropTypes.string).isRequired,\n    optionalModesMapping: PropTypes.objectOf(PropTypes.shape({\n        title: PropTypes.string.isRequired,\n    })).isRequired,\n};\n","import { styled } from 'styletron-react';\n\nexport const CenteringContainer = styled('div', {\n    display: 'flex',\n    justifyContent: 'center',\n});\n\nexport const RightJustifyingContainer = styled('div', {\n    display: 'flex',\n    justifyContent: 'flex-end',\n});\n","import React, { useMemo } from 'react';\n\nimport { Radio } from 'antd';\nimport PropTypes from 'prop-types';\n\nimport { CenteringContainer } from 'components/lib/CenteringContainer';\n\nexport const AntiIceMoistureSelector = ({ moisture, setMoisture }) => {\n    const [value, onChange] = useMemo(\n        () => [\n            moisture ? 'yes' : 'no',\n            (event) => setMoisture(event.target.value === 'yes'),\n        ],\n        [moisture, setMoisture],\n    );\n\n    return (\n        <CenteringContainer>\n            <Radio.Group\n                value={value}\n                buttonStyle=\"solid\"\n                onChange={onChange}\n            >\n                <Radio.Button value=\"yes\">Yes</Radio.Button>\n                <Radio.Button value=\"no\">No</Radio.Button>\n            </Radio.Group>\n        </CenteringContainer>\n    );\n};\n\nAntiIceMoistureSelector.propTypes = {\n    moisture: PropTypes.bool.isRequired,\n    setMoisture: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nimport { Col, Row } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useStyletron } from 'styletron-react';\n\nexport const AntiIceTableFootnote = ({ footnoteID, footnote }) => {\n    const [css] = useStyletron();\n\n    return (\n        <Row>\n            <Col span={1} className={css({ textAlign: 'right', paddingRight: '5px' })}>\n                <sup>{footnoteID}</sup>\n            </Col>\n            <Col span={23}>\n                {footnote}\n            </Col>\n        </Row>\n    );\n};\n\nAntiIceTableFootnote.propTypes = {\n    footnoteID: PropTypes.node.isRequired,\n    footnote: PropTypes.node.isRequired,\n};\n","import React from 'react';\n\nimport { styled } from 'styletron-react';\n\nimport { AntiIceTableFootnote } from 'components/anti-ice/AntiIceTableFootnote';\n\nconst FootnotesContainer = styled('div', {\n    marginTop: '10px',\n    marginBottom: '20px',\n    fontSize: '0.75em',\n});\n\nexport const AntiIceTableFootnotes = () => (\n    <FootnotesContainer>\n        <AntiIceTableFootnote\n            footnoteID={1}\n            footnote={(\n                <>\n                    This may be turned or or off depending on configuration. The state shown is the default\n                    mode this ice protection system should be in. See optional modes for more information on\n                    variations allowed for this setting.\n                </>\n            )}\n        />\n\n        <AntiIceTableFootnote\n            footnoteID={2}\n            footnote={(\n                <>\n                    This is the state for this specific configuration, and does not correspond to the default\n                    configuration.\n                </>\n            )}\n        />\n\n        <AntiIceTableFootnote\n            footnoteID={3}\n            footnote={(\n                <>\n                    This system is not implemented. State shown is the intended mode, but it may not be\n                    achieved in MSFS. See picture below for actual state possible in MSFS.\n                </>\n            )}\n        />\n    </FootnotesContainer>\n);\n","import { styled } from 'styletron-react';\n\nexport const NotImplementedContainer = styled('div', {\n    opacity: 0.5,\n});\n","const commonModeStates = Object.freeze({\n    ON: 'on',\n    OPTIONALLY_ON: 'optionally_on',\n    OPTIONALLY_OFF: 'optionally_off',\n    OFF: 'off',\n});\n\nexport const AntiIceModeStates = Object.freeze({\n    ...commonModeStates,\n});\n","export const isNullOrUndefined = (value) => value === null || value === undefined;\n\nexport const isNotNullOrUndefined = (value) => !isNullOrUndefined(value);\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\n\nconst transformTagsInit = (value) => {\n    const tags = isNotNullOrUndefined(value.tags) ? value.tags : [];\n\n    return {\n        ...value,\n        tags,\n    };\n};\n\nconst transformTagsMakeSet = (value) => ({\n    ...value,\n    tagsSet: new Set(value.tags),\n});\n\nconst transformValueBuilder = (transforms) => {\n    const allTransforms = [\n        transformTagsInit,\n        ...transforms,\n        transformTagsMakeSet,\n    ];\n\n    return (value) => {\n        let transformedValue = value;\n        allTransforms.forEach((transform) => {\n            transformedValue = transform(transformedValue);\n        });\n        return transformedValue;\n    };\n};\n\nexport const createTransformedMapping = (...transforms) => (values) => {\n    const result = {};\n    const transformValueFN = transformValueBuilder(transforms);\n\n    values.forEach((value) => {\n        if (value.uid in result) {\n            throw new Error(`Found data for \"${value.uid}\" twice.`);\n        }\n        result[value.uid] = transformValueFN(value);\n    });\n\n    return Object.freeze(result);\n};\n\nexport const createTransformedList = (...transforms) => {\n    const transformValueFN = transformValueBuilder(transforms);\n    return (values) => values.map(transformValueFN);\n};\n","import { AntiIceModeStates } from 'lib/anti-ice/data/modeStates';\nimport { createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst commonModeStatesData = createTransformedMapping()([\n    {\n        uid: AntiIceModeStates.ON,\n        label: 'ON',\n        color: '#1e8600',\n    },\n    {\n        uid: AntiIceModeStates.OPTIONALLY_ON,\n        label: 'OFF',\n        color: '#730505',\n        isOptional: true,\n    },\n    {\n        uid: AntiIceModeStates.OPTIONALLY_OFF,\n        label: 'ON',\n        color: '#135700',\n        isOptional: true,\n    },\n    {\n        uid: AntiIceModeStates.OFF,\n        label: 'OFF',\n        color: '#9d0f0f',\n    },\n]);\n\nexport const AntiIceModeStatesData = Object.freeze({\n    ...commonModeStatesData,\n});\n","const commonTags = Object.freeze({\n    NOT_IMPLEMENTED: 'not-implemented',\n});\n\nexport const AntiIceTags = Object.freeze({\n    ...commonTags,\n});\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\n\nexport const pick = (...args) => {\n    for (let idx = 0; idx < args.length; idx += 1) {\n        const arg = args[idx];\n\n        if (isNotNullOrUndefined(arg)) {\n            return arg;\n        }\n    }\n    return null;\n};\n","import React, { useMemo } from 'react';\n\nimport { Table, Tag, Typography } from 'antd';\nimport PropTypes from 'prop-types';\nimport { styled, useStyletron } from 'styletron-react';\n\nimport { AntiIceTableFootnotes } from 'components/anti-ice/AntiIceTableFootnotes';\nimport { CenteringContainer } from 'components/lib/CenteringContainer';\nimport { NotImplementedContainer } from 'components/lib/NotImplementedContainer';\nimport { AntiIceModeStates } from 'lib/anti-ice/data/modeStates';\nimport { AntiIceModeStatesData } from 'lib/anti-ice/data/modeStatesData';\nimport { AntiIceTags } from 'lib/anti-ice/data/tags';\nimport { pick } from 'lib/pick';\n\nconst { Title } = Typography;\n\nconst ImageContainer = styled('div', {\n    width: '800px',\n    height: '320px',\n    backgroundSize: '100%',\n});\n\nconst IPSColumn = ({ title, isNotImplemented }) => {\n    let result = title;\n    if (isNotImplemented) {\n        result = (\n            <NotImplementedContainer>\n                {result}\n                {' '}\n                <sup>3</sup>\n            </NotImplementedContainer>\n        );\n    }\n    return result;\n};\n\nIPSColumn.propTypes = {\n    title: PropTypes.string.isRequired,\n    isNotImplemented: PropTypes.bool.isRequired,\n};\n\nconst StateColumn = ({ state, isNotImplemented, isNonDefault }) => {\n    let result = (\n        <Tag color={state.color}>\n            {state.label}\n            {state.isOptional !== true ? null : (\n                <>\n                    {' '}\n                    <sup>1</sup>\n                </>\n            )}\n            {isNonDefault !== true ? null : (\n                <>\n                    {' '}\n                    <sup>2</sup>\n                </>\n            )}\n        </Tag>\n    );\n    if (isNotImplemented) {\n        result = (\n            <NotImplementedContainer>\n                {result}\n            </NotImplementedContainer>\n        );\n    }\n    return <CenteringContainer>{result}</CenteringContainer>;\n};\n\nStateColumn.propTypes = {\n    state: PropTypes.shape({\n        color: PropTypes.string.isRequired,\n        label: PropTypes.string.isRequired,\n        isOptional: PropTypes.bool,\n    }).isRequired,\n    isNotImplemented: PropTypes.bool.isRequired,\n    isNonDefault: PropTypes.bool.isRequired,\n};\n\nconst columns = [\n    {\n        title: 'Ice Protection System',\n        width: '90%',\n        render: IPSColumn,\n    },\n    {\n        title: 'State',\n        width: '10%',\n        render: StateColumn,\n    },\n];\n\nexport const AntiIceRecommendationDisplay = ({\n    currentConfiguration,\n    antiIceAircraftData,\n    recommendations,\n}) => {\n    const [css] = useStyletron();\n\n    const { states: defaultStates, optionalModesMapping } = recommendations;\n\n    const { states, image } = useMemo(\n        () => {\n            if (currentConfiguration === 'default') {\n                return {\n                    states: recommendations.states,\n                    image: recommendations.image,\n                };\n            }\n\n            const recs = pick(optionalModesMapping[currentConfiguration], {\n                states: {},\n                image: { path: '' },\n            });\n            return { states: recs.states, image: recs.image };\n        },\n        [currentConfiguration, recommendations],\n    );\n\n    const data = antiIceAircraftData.modesOrderData.map(\n        (value) => {\n            const state = pick(states[value.uid], AntiIceModeStates.OFF);\n            const defaultState = pick(defaultStates[value.uid], AntiIceModeStates.OFF);\n\n            return {\n                key: value.title,\n                title: value.title,\n                isNotImplemented: value.tagsSet.has(AntiIceTags.NOT_IMPLEMENTED),\n                isNonDefault: state !== defaultState,\n                state: AntiIceModeStatesData[state],\n            };\n        },\n    );\n\n    return (\n        <>\n            <Table\n                columns={columns}\n                dataSource={data}\n                size=\"small\"\n                pagination={{ position: ['none', 'none'] }}\n            />\n\n            <AntiIceTableFootnotes />\n\n            <Title level={5}>\n                Actual configuration as shown on tilt panel in MSFS:\n            </Title>\n\n            <CenteringContainer>\n                <ImageContainer\n                    className={css({\n                        backgroundImage: `url(${process.env.PUBLIC_URL}/${image.path})`,\n                    })}\n                />\n            </CenteringContainer>\n        </>\n    );\n};\n\nAntiIceRecommendationDisplay.propTypes = {\n    currentConfiguration: PropTypes.string.isRequired,\n    // eslint-disable-next-line react/forbid-prop-types\n    antiIceAircraftData: PropTypes.any.isRequired,\n    // eslint-disable-next-line react/forbid-prop-types\n    recommendations: PropTypes.any.isRequired,\n};\n","import React from 'react';\n\nimport { Slider } from 'antd';\nimport PropTypes from 'prop-types';\n\nexport const AntiIceTemperatureSelector = ({\n    temperature,\n    moisture,\n    sliderData: {\n        marks,\n        min,\n        max,\n        onChange,\n    },\n}) => (\n    <Slider\n        marks={marks}\n        included={false}\n        value={temperature}\n        min={min}\n        max={max}\n        onChange={onChange}\n        disabled={!moisture}\n        handleStyle={moisture ? undefined : { display: 'none' }}\n        tipFormatter={(value) => (\n            <>\n                {value}\n                &deg;C\n            </>\n        )}\n    />\n);\n\nAntiIceTemperatureSelector.propTypes = {\n    temperature: PropTypes.number.isRequired,\n    moisture: PropTypes.bool.isRequired,\n    sliderData: PropTypes.shape({\n        // eslint-disable-next-line react/forbid-prop-types\n        marks: PropTypes.any.isRequired,\n        min: PropTypes.number.isRequired,\n        max: PropTypes.number.isRequired,\n        onChange: PropTypes.func.isRequired,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\nimport PropTypes from 'prop-types';\n\nimport { isNotNullOrUndefined, isNullOrUndefined } from 'lib/isNullOrUndefined';\n\nexport const AntiIceTemperatureTitle = ({ temperature: { name, fullName, description } }) => {\n    let temperatureHelp = null;\n    if (isNotNullOrUndefined(fullName) || isNotNullOrUndefined(description)) {\n        temperatureHelp = (\n            <>\n                {isNullOrUndefined(fullName) ? null : (<strong>{fullName}</strong>)}\n                {isNullOrUndefined(description) ? null : (\n                    <>\n                        :\n                        {' '}\n                        {description}\n                    </>\n                )}\n            </>\n        );\n    }\n\n    return (\n        <strong>\n            Temperature (\n            {name}\n            {isNullOrUndefined(temperatureHelp) ? null : (\n                <>\n                    {' '}\n                    <Tooltip\n                        title={temperatureHelp}\n                        color=\"#3f3f3f\"\n                        placement=\"right\"\n                        overlayStyle={{ maxWidth: '50vw' }}\n                    >\n                        <QuestionCircleOutlined />\n                    </Tooltip>\n                </>\n            )}\n            )\n        </strong>\n    );\n};\n\nAntiIceTemperatureTitle.propTypes = {\n    temperature: PropTypes.shape({\n        name: PropTypes.node.isRequired,\n        fullName: PropTypes.node,\n        description: PropTypes.node,\n    }).isRequired,\n};\n","export const AntiIceAircrafts = Object.freeze({\n    WORKINGTITLE_CJ4: 'workingtitle-cj4',\n});\n","const cj4Images = Object.freeze({\n    CJ4_ALL_OFF: 'cj4-all-off',\n    CJ4_ENG_ONLY_ON: 'cj4-eng-only-on',\n    CJ4_PITOT_HEAT_ENG_ONLY_ON: 'cj4-pitot-heat-eng-only-on',\n    CJ4_PITOT_ON: 'cj4-pitot-on',\n    CJ4_PITOT_WING_ENG_ON: 'cj4-pitot-wing-eng-on',\n});\n\nexport const AntiIceImages = Object.freeze({\n    ...cj4Images,\n});\n","export const AntiIceOperationModes = Object.freeze({\n    GROUND_OPERATION: 'ground-operation',\n    IN_FLIGHT_OPERATION: 'in-flight-operation',\n});\n","const cj4IceProtectionSystemsModes = Object.freeze({\n    CJ4_WING_ENG_ANTI_ICE_MODE: 'cj4-wing-eng-anti-ice-mode',\n    CJ4_ENG_ONLY_ANTI_ICE_MODE: 'cj4-eng-only-anti-ice-mode',\n    CJ4_TAIL_DEICE_ANTI_ICE_MODE: 'cj4-tail-deice-anti-ice-mode',\n    CJ4_PITOT_STATIC_HEAT_ANTI_ICE_MODE: 'cj4-pitot-static-heat-anti-ice-mode',\n});\n\nexport const AntiIceSystemModes = Object.freeze({\n    ...cj4IceProtectionSystemsModes,\n});\n","import React from 'react';\n\nimport { styled } from 'styletron-react';\n\nimport { AntiIceAircrafts } from 'lib/anti-ice/data/aircrafts';\nimport { AntiIceImages } from 'lib/anti-ice/data/images';\nimport { AntiIceModeStates } from 'lib/anti-ice/data/modeStates';\nimport { AntiIceOperationModes } from 'lib/anti-ice/data/operationModes';\nimport { AntiIceSystemModes } from 'lib/anti-ice/data/systemModes';\nimport { createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst Strongish = styled('strong', { color: '#606060' });\n\nexport const AntiIceAircraftsData = createTransformedMapping()([\n    {\n        uid: AntiIceAircrafts.WORKINGTITLE_CJ4,\n        title: 'WorkingTitle CJ4',\n        modesOrder: [\n            AntiIceSystemModes.CJ4_PITOT_STATIC_HEAT_ANTI_ICE_MODE,\n            AntiIceSystemModes.CJ4_WING_ENG_ANTI_ICE_MODE,\n            AntiIceSystemModes.CJ4_ENG_ONLY_ANTI_ICE_MODE,\n            AntiIceSystemModes.CJ4_TAIL_DEICE_ANTI_ICE_MODE,\n        ],\n        operationModes: [\n            {\n                modeName: AntiIceOperationModes.GROUND_OPERATION,\n                defaultMode: {\n                    states: {},\n                    image: AntiIceImages.CJ4_ALL_OFF,\n                },\n                moistureHelp: (\n                    <>\n                        <Strongish>On the ground:</Strongish>\n                        {' '}\n                        Is there surface snow, slush, ice or standing water which may be ingested by engines or\n                        freeze sensors?\n                    </>\n                ),\n                temperature: {\n                    name: 'OAT',\n                    fullName: 'Outside Air Temperature',\n                    description: (\n                        <>\n                            The temperature of air around the aircraft. Can be found in METAR, ATIS, or should equal\n                            SAT as displayed on MFD on the ground.\n                        </>\n                    ),\n                },\n                limits: [\n                    {\n                        limit: 5,\n                        defaultMode: {\n                            states: {\n                                [AntiIceSystemModes.CJ4_ENG_ONLY_ANTI_ICE_MODE]: AntiIceModeStates.ON,\n                            },\n                            image: AntiIceImages.CJ4_ENG_ONLY_ON,\n                        },\n                    },\n                ],\n            },\n            {\n                modeName: AntiIceOperationModes.IN_FLIGHT_OPERATION,\n                moistureHelp: (\n                    <>\n                        <Strongish>In flight:</Strongish>\n                        {' '}\n                        Is there visible air moisture? Examples include clouds, fog with visibility of one mile or\n                        less, rain, snow, sleet, or ice crystals.\n                    </>\n                ),\n                temperature: {\n                    name: 'SAT',\n                    fullName: 'Static Air Temperature',\n                    description: (\n                        <>\n                            The temperature of undisturbed air around the aircraft, in other words, the temperature\n                            of air not affected by the aircraft moving through it. (friction, ...)\n                        </>\n                    ),\n                },\n                defaultMode: {\n                    states: {\n                        [AntiIceSystemModes.CJ4_PITOT_STATIC_HEAT_ANTI_ICE_MODE]: AntiIceModeStates.ON,\n                    },\n                    image: AntiIceImages.CJ4_PITOT_ON,\n                },\n                limits: [\n                    {\n                        limit: -40,\n                        description: (\n                            <>\n                                Below -40&deg;C, by default wing and engine anti-ice should be used. If it can be\n                                confirmed that there is no ice forming on the wings, wing anti-ice may be turned off\n                                and engine only anti-ice may be used instead.\n                            </>\n                        ),\n                        defaultMode: {\n                            states: {\n                                [AntiIceSystemModes.CJ4_WING_ENG_ANTI_ICE_MODE]: AntiIceModeStates.OPTIONALLY_OFF,\n                                [AntiIceSystemModes.CJ4_ENG_ONLY_ANTI_ICE_MODE]: AntiIceModeStates.OPTIONALLY_ON,\n                                [AntiIceSystemModes.CJ4_PITOT_STATIC_HEAT_ANTI_ICE_MODE]: AntiIceModeStates.ON,\n                            },\n                            image: AntiIceImages.CJ4_PITOT_WING_ENG_ON,\n                        },\n                        optionalModes: [\n                            {\n                                uid: 'no-ice-on-wings',\n                                title: 'no ice on wings',\n                                description: (\n                                    <>\n                                        <strong>Requirement:</strong>\n                                        {' '}\n                                        confirm that no ice is forming on wings. (visual check)\n                                    </>\n                                ),\n                                states: {\n                                    [AntiIceSystemModes.CJ4_ENG_ONLY_ANTI_ICE_MODE]: AntiIceModeStates.ON,\n                                    [AntiIceSystemModes.CJ4_PITOT_STATIC_HEAT_ANTI_ICE_MODE]: AntiIceModeStates.ON,\n                                },\n                                image: AntiIceImages.CJ4_PITOT_HEAT_ENG_ONLY_ON,\n                            },\n                        ],\n                    },\n                    {\n                        limit: -30,\n                        defaultMode: {\n                            states: {\n                                [AntiIceSystemModes.CJ4_WING_ENG_ANTI_ICE_MODE]: AntiIceModeStates.ON,\n                                [AntiIceSystemModes.CJ4_PITOT_STATIC_HEAT_ANTI_ICE_MODE]: AntiIceModeStates.ON,\n                            },\n                            image: AntiIceImages.CJ4_PITOT_WING_ENG_ON,\n                        },\n                    },\n                    {\n                        limit: 10,\n                        defaultMode: {\n                            states: {\n                                [AntiIceSystemModes.CJ4_WING_ENG_ANTI_ICE_MODE]: AntiIceModeStates.ON,\n                                [AntiIceSystemModes.CJ4_TAIL_DEICE_ANTI_ICE_MODE]: AntiIceModeStates.ON,\n                                [AntiIceSystemModes.CJ4_PITOT_STATIC_HEAT_ANTI_ICE_MODE]: AntiIceModeStates.ON,\n                            },\n                            image: AntiIceImages.CJ4_PITOT_WING_ENG_ON,\n                        },\n                    },\n                ],\n            },\n        ],\n    },\n]);\n","import { AntiIceSystemModes } from 'lib/anti-ice/data/systemModes';\nimport { AntiIceTags } from 'lib/anti-ice/data/tags';\nimport { createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst cj4SystemModesData = createTransformedMapping()([\n    {\n        uid: AntiIceSystemModes.CJ4_WING_ENG_ANTI_ICE_MODE,\n        title: 'Wing/Engine Anti-Ice',\n    },\n    {\n        uid: AntiIceSystemModes.CJ4_ENG_ONLY_ANTI_ICE_MODE,\n        title: 'Engine Only Anti-Ice',\n    },\n    {\n        uid: AntiIceSystemModes.CJ4_TAIL_DEICE_ANTI_ICE_MODE,\n        title: 'Tail Deice',\n        tags: [AntiIceTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: AntiIceSystemModes.CJ4_PITOT_STATIC_HEAT_ANTI_ICE_MODE,\n        title: 'Pitot / Static Heat',\n    },\n]);\n\nexport const AntiIceSystemModesData = Object.freeze({\n    ...cj4SystemModesData,\n});\n","import React from 'react';\n\nimport { AntiIceOperationModes } from 'lib/anti-ice/data/operationModes';\nimport { createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst baseOperationModes = createTransformedMapping()([\n    {\n        uid: AntiIceOperationModes.GROUND_OPERATION,\n        title: 'Ground Operation',\n        description: (\n            <>\n                The following rules should be followed while taxiing after a landing, or before going into takeoff\n                mode. Switch to in-flight rules once preparing for take-off.\n            </>\n        ),\n    },\n    {\n        uid: AntiIceOperationModes.IN_FLIGHT_OPERATION,\n        title: 'In-Flight Operation',\n        description: (\n            <>\n                The following rules should be followed while taking-off, in flight and landing. Switch to ground\n                operation once clear of runway and taxiing back to parking.\n            </>\n        ),\n    },\n]);\n\nexport const AntiIceOperationModesData = Object.freeze({\n    ...baseOperationModes,\n});\n","import React, { useMemo } from 'react';\n\nimport { styled } from 'styletron-react';\n\nimport { AntiIceOperationModesData } from 'lib/anti-ice/data/operationModesData';\nimport { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { pick } from 'lib/pick';\n\nconst SliderTempLabel = styled('span', {\n    color: '#4d4d4d',\n});\n\nconst temperatureMargin = 30;\n\nexport const useAntiIceOperationModeData = ({\n    antiIceAircraftData,\n    selectedOperationModeName,\n    antiIceURLManager,\n}) => useMemo(\n    () => {\n        const baseData = AntiIceOperationModesData[selectedOperationModeName];\n\n        const aircraftOperationData = antiIceAircraftData.operationModes\n            .filter((v) => v.modeName === selectedOperationModeName)[0];\n\n        const temperatures = [];\n\n        antiIceAircraftData.operationModes.forEach((operationalMode) => {\n            pick(pick(operationalMode, {}).limits, [])\n                .filter((value) => isNotNullOrUndefined(value.limit))\n                .forEach((value) => { temperatures.push(value.limit); });\n        });\n\n        temperatures.sort();\n\n        const marks = {};\n\n        pick(pick(aircraftOperationData, {}).limits, [])\n            .filter((value) => isNotNullOrUndefined(value.limit))\n            .forEach((value) => {\n                marks[value.limit] = {\n                    label: (\n                        <SliderTempLabel>\n                            {value.limit}\n                            &deg;C\n                        </SliderTempLabel>\n                    ),\n                };\n            });\n\n        const hasTemperatures = temperatures.length !== 0;\n\n        const sliderData = {\n            marks,\n            min: hasTemperatures ? temperatures[0] - temperatureMargin : 0,\n            max: hasTemperatures ? temperatures[temperatures.length - 1] + temperatureMargin : 0,\n            onChange: (value) => antiIceURLManager.changeTemperature(value),\n        };\n\n        return {\n            ...baseData,\n            ...aircraftOperationData,\n            sliderData,\n        };\n    },\n    [selectedOperationModeName, antiIceAircraftData, antiIceURLManager],\n);\n","import { AntiIceImages } from 'lib/anti-ice/data/images';\nimport { createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst cj4ImagesData = createTransformedMapping()([\n    {\n        uid: AntiIceImages.CJ4_ALL_OFF,\n        path: 'images/workingtitle-cj4-anti-ice/ALL_OFF.jpg',\n    },\n    {\n        uid: AntiIceImages.CJ4_ENG_ONLY_ON,\n        path: 'images/workingtitle-cj4-anti-ice/ENG_ONLY_ON.jpg',\n    },\n    {\n        uid: AntiIceImages.CJ4_PITOT_HEAT_ENG_ONLY_ON,\n        path: 'images/workingtitle-cj4-anti-ice/PITOT_ENG_ONLY_ON.jpg',\n    },\n    {\n        uid: AntiIceImages.CJ4_PITOT_ON,\n        path: 'images/workingtitle-cj4-anti-ice/PITOT_ON.jpg',\n    },\n    {\n        uid: AntiIceImages.CJ4_PITOT_WING_ENG_ON,\n        path: 'images/workingtitle-cj4-anti-ice/PITOT_WING_ENG_ON.jpg',\n    },\n]);\n\nexport const AntiIceImagesData = Object.freeze({\n    ...cj4ImagesData,\n});\n","import { useMemo } from 'react';\n\nimport { AntiIceAircraftsData } from 'lib/anti-ice/data/aircraftsData';\nimport { AntiIceSystemModesData } from 'lib/anti-ice/data/systemModesData';\nimport { useAntiIceMenuItems } from 'lib/anti-ice/hooks/useAntiIceMenuItems';\nimport { useAntiIceOperationModeData } from 'lib/anti-ice/hooks/useAntiIceOperationModeData';\nimport { useAntiIceRecommendation } from 'lib/anti-ice/hooks/useAntiIceRecommendation';\n\nexport const useAntiIce = ({\n    aircraftName,\n    selectedOperationModeName,\n    moisture,\n    temperature,\n    antiIceURLManager,\n}) => {\n    const antiIceAircraftData = useMemo(\n        () => {\n            const baseData = AntiIceAircraftsData[aircraftName];\n\n            return {\n                ...baseData,\n                modesOrderData: baseData.modesOrder.map((uid) => AntiIceSystemModesData[uid]),\n            };\n        },\n        [aircraftName],\n    );\n\n    const menuItems = useAntiIceMenuItems({\n        antiIceAircraftData,\n        antiIceURLManager,\n    });\n\n    const operationModeData = useAntiIceOperationModeData({\n        antiIceAircraftData,\n        selectedOperationModeName,\n        antiIceURLManager,\n    });\n\n    const [setMoisture] = useMemo(\n        () => [\n            (value) => antiIceURLManager.changeMoisture(value),\n        ],\n        [antiIceURLManager],\n    );\n\n    const recommendations = useAntiIceRecommendation({\n        operationModeData,\n        moisture,\n        temperature,\n    });\n\n    return {\n        antiIceAircraftData,\n        operationModeData,\n        menuItems,\n        setMoisture,\n        recommendations,\n    };\n};\n","import { useMemo } from 'react';\n\nimport { AntiIceOperationModesData } from 'lib/anti-ice/data/operationModesData';\n\nexport const useAntiIceMenuItems = ({\n    antiIceURLManager,\n    antiIceAircraftData,\n}) => useMemo(\n    () => antiIceAircraftData.operationModes.map((v) => v.modeName).map((operationModeName) => {\n        const baseData = AntiIceOperationModesData[operationModeName];\n\n        return {\n            ...baseData,\n            key: baseData.uid,\n            selectMenu: () => {\n                antiIceURLManager.changeOperationMode(operationModeName);\n            },\n        };\n    }),\n    [antiIceAircraftData.operationModes, antiIceURLManager],\n);\n","import { useMemo } from 'react';\n\nimport { AntiIceImagesData } from 'lib/anti-ice/data/imagesData';\nimport { isNotNullOrUndefined, isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { pick } from 'lib/pick';\n\nexport const useAntiIceRecommendation = ({\n    operationModeData,\n    moisture,\n    temperature,\n}) => {\n    const { states, image, optionalModes } = useMemo(\n        () => {\n            const { defaultMode, limits } = operationModeData;\n\n            if (isNotNullOrUndefined(limits)) {\n                for (let idx = 0; moisture && idx < limits.length; idx += 1) {\n                    const omd = limits[idx];\n\n                    if (temperature < omd.limit) {\n                        return {\n                            states: omd.defaultMode.states,\n                            image: omd.defaultMode.image,\n                            optionalModes: pick(omd.optionalModes, []),\n                        };\n                    }\n                }\n            }\n\n            if (isNullOrUndefined(defaultMode)) {\n                return {\n                    states: {},\n                    image: null,\n                    optionalModes: [],\n                };\n            }\n\n            return {\n                states: defaultMode.states,\n                image: defaultMode.image,\n                optionalModes: [],\n            };\n        },\n        [operationModeData, moisture, temperature],\n    );\n\n    return useMemo(\n        () => {\n            const optionalModesOrder = [];\n            const optionalModesMapping = {};\n\n            optionalModes.forEach((value) => {\n                optionalModesOrder.push(value.uid);\n                optionalModesMapping[value.uid] = {\n                    ...value,\n                    image: AntiIceImagesData[value.image],\n                };\n            });\n\n            return ({\n                states,\n                image: pick(AntiIceImagesData[image], null),\n                optionalModesOrder,\n                optionalModesMapping,\n            });\n        },\n        [states, image, optionalModes],\n    );\n};\n","import React, { useEffect, useState } from 'react';\n\nimport {\n    Col, Empty, Menu, Row, Typography,\n} from 'antd';\nimport PropTypes from 'prop-types';\nimport { useStyletron } from 'styletron-react';\n\nimport { AntiIceConfigurationSelector } from 'components/anti-ice/AntiIceConfigurationSelector';\nimport { AntiIceMoistureSelector } from 'components/anti-ice/AntiIceMoistureSelector';\nimport { AntiIceRecommendationDisplay } from 'components/anti-ice/AntiIceRecommendationDisplay';\nimport { AntiIceTemperatureSelector } from 'components/anti-ice/AntiIceTemperatureSelector';\nimport { AntiIceTemperatureTitle } from 'components/anti-ice/AntiIceTemperatureTitle';\nimport { useAntiIce } from 'lib/anti-ice/hooks/useAntiIce';\n\nconst { Title } = Typography;\n\nexport const AntiIceDisplay = ({\n    aircraftName,\n    selectedOperationModeName,\n    moisture,\n    temperature,\n    antiIceURLManager,\n    operationModeFound,\n}) => {\n    const [css] = useStyletron();\n\n    const {\n        antiIceAircraftData,\n        menuItems,\n        operationModeData,\n        setMoisture,\n        recommendations,\n    } = useAntiIce({\n        aircraftName,\n        selectedOperationModeName,\n        moisture,\n        temperature,\n        antiIceURLManager,\n    });\n\n    const [currentConfiguration, setCurrentConfiguration] = useState('default');\n    const { optionalModesOrder, optionalModesMapping } = recommendations;\n\n    useEffect(\n        () => { setCurrentConfiguration('default'); },\n        [selectedOperationModeName, optionalModesOrder],\n    );\n\n    const menu = (\n        <Menu\n            selectedKeys={[selectedOperationModeName]}\n            className={css({ marginBottom: '20px' })}\n            mode=\"horizontal\"\n        >\n            {menuItems.map((v) => (\n                <Menu.Item key={v.key} onClick={v.selectMenu}>\n                    {v.title}\n                </Menu.Item>\n            ))}\n        </Menu>\n    );\n\n    if (!operationModeFound) {\n        return (\n            <>\n                <Title>{antiIceAircraftData.title}</Title>\n                {menu}\n                <Empty />\n            </>\n        );\n    }\n\n    return (\n        <>\n            <Title>{antiIceAircraftData.title}</Title>\n\n            {menu}\n\n            <Row className={css({ marginBottom: '20px' })}>\n                <Col span={21}>\n                    <strong>Is there water on the ground or in the air?</strong>\n                    <br />\n                    {operationModeData.moistureHelp}\n                </Col>\n                <Col span={3}>\n                    <AntiIceMoistureSelector moisture={moisture} setMoisture={setMoisture} />\n                </Col>\n            </Row>\n\n            <Row className={css({ marginBottom: '20px' })}>\n                <Col span={5}>\n                    <AntiIceTemperatureTitle temperature={operationModeData.temperature} />\n                </Col>\n                <Col span={19}>\n                    <AntiIceTemperatureSelector\n                        temperature={temperature}\n                        moisture={moisture}\n                        sliderData={operationModeData.sliderData}\n                    />\n                </Col>\n            </Row>\n\n            <Title level={5}>\n                Recommendation at\n                {' '}\n                {moisture ? (\n                    <>\n                        {temperature}\n                        &deg;C with moisture\n                    </>\n                ) : (\n                    <>\n                        any temperature without moisture\n                    </>\n                )}\n                {' '}\n                and\n                {' '}\n                <AntiIceConfigurationSelector\n                    currentConfiguration={currentConfiguration}\n                    setCurrentConfiguration={setCurrentConfiguration}\n                    optionalModesOrder={optionalModesOrder}\n                    optionalModesMapping={optionalModesMapping}\n                />\n                {' '}\n                configuration:\n            </Title>\n\n            <AntiIceRecommendationDisplay\n                currentConfiguration={currentConfiguration}\n                antiIceAircraftData={antiIceAircraftData}\n                recommendations={recommendations}\n            />\n        </>\n    );\n};\n\nAntiIceDisplay.propTypes = {\n    aircraftName: PropTypes.string.isRequired,\n    selectedOperationModeName: PropTypes.string.isRequired,\n    moisture: PropTypes.bool.isRequired,\n    temperature: PropTypes.number.isRequired,\n    // eslint-disable-next-line react/forbid-prop-types\n    antiIceURLManager: PropTypes.any.isRequired,\n    operationModeFound: PropTypes.bool.isRequired,\n};\n","import { styled, withStyle } from 'styletron-react';\n\nexport const ContentContainer = styled('div', {\n    padding: '0px 20px',\n    width: '100%',\n});\n\nexport const CenteredContentContainer = withStyle(ContentContainer, {\n    maxWidth: '1200px',\n    margin: 'auto',\n});\n","import { useMemo } from 'react';\n\nimport { useLocation } from 'react-router';\n\nexport const useQueryParams = () => {\n    const { search } = useLocation();\n    return useMemo(() => new URLSearchParams(search), [search]);\n};\n","export const ChecklistsWithNameAndListNameRoute = '/checklists/:checklistName/:checklistListName';\nexport const ChecklistsWithNameRoute = '/checklists/:checklistName';\nexport const AntiIceWithNameRoute = '/anti-ice/:aircraftName';\nexport const AntiIceWithNameAndOperationModeNameRoute = '/anti-ice/:aircraftName/:operationModeName';\nexport const MetarExplainerRoute = '/metar-explain';\n","import { useMemo } from 'react';\n\nimport { generatePath, useHistory, useParams } from 'react-router';\n\nimport { useQueryParams } from 'lib/hooks/useQueryParams';\nimport { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { pick } from 'lib/pick';\nimport { AntiIceWithNameAndOperationModeNameRoute, AntiIceWithNameRoute } from 'lib/routes';\n\nexport class AntiIceURLManager {\n    constructor({\n        history, aircraftName, operationModeName, moisture, temperature,\n    }) {\n        this.history = history;\n        this.aircraftName = aircraftName;\n        this.operationModeName = operationModeName;\n        this.moisture = moisture;\n        this.temperature = temperature;\n    }\n\n    changeOperationMode(operationModeName) {\n        this.pushURL(operationModeName, this.moisture, this.temperature);\n    }\n\n    changeTemperature(temperature) {\n        this.pushURL(this.operationModeName, this.moisture, temperature);\n    }\n\n    changeMoisture(moisture) {\n        this.pushURL(this.operationModeName, moisture, this.temperature);\n    }\n\n    pushURL(operationModeName, moisture, temperature) {\n        const baseURL = this.buildURL(operationModeName);\n        const urlParams = this.buildURLParams(moisture, temperature);\n\n        const fn = this.operationModeName === operationModeName\n            ? this.history.replace\n            : this.history.push;\n\n        if (urlParams !== '') {\n            fn(`${baseURL}?${urlParams}`);\n        } else {\n            fn(baseURL);\n        }\n    }\n\n    buildURL(operationModeName) {\n        if (isNotNullOrUndefined(operationModeName)) {\n            return generatePath(\n                AntiIceWithNameAndOperationModeNameRoute,\n                {\n                    aircraftName: this.aircraftName,\n                    operationModeName,\n                },\n            );\n        }\n\n        return generatePath(\n            AntiIceWithNameRoute,\n            {\n                aircraftName: this.aircraftName,\n            },\n        );\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    buildURLParams(moisture, temperature) {\n        const queryParams = new URLSearchParams();\n\n        if (isNotNullOrUndefined(moisture) && moisture) {\n            queryParams.set('moisture', '1');\n        }\n        if (isNotNullOrUndefined(temperature) && temperature !== 0) {\n            queryParams.set('temperature', temperature);\n        }\n        return queryParams.toString();\n    }\n}\n\nexport const useAntiIceURLConfig = () => {\n    const history = useHistory();\n    const queryParams = useQueryParams();\n    const { aircraftName, operationModeName } = useParams();\n\n    const [moisture, temperature] = useMemo(() => [\n        queryParams.get('moisture') === '1',\n        pick(queryParams.get('temperature'), 0),\n    ], [queryParams]);\n\n    const result = {\n        aircraftName: pick(aircraftName),\n        operationModeName: pick(operationModeName),\n        moisture,\n        temperature,\n    };\n\n    const antiIceURLManager = useMemo(\n        () => new AntiIceURLManager({ history, ...result }),\n        [history, result],\n    );\n\n    return { antiIceURLManager, ...result };\n};\n","import React from 'react';\n\nimport { AntiIceAircraftNotFound } from 'components/anti-ice/AntiIceAircraftNotFound';\nimport { AntiIceDisplay } from 'components/anti-ice/AntiIceDisplay';\nimport { CenteredContentContainer } from 'components/lib/CenteredContentContainer';\nimport { useAntiIceCheck } from 'lib/anti-ice/hooks/useAntiIceCheck';\nimport { useAntiIceURLConfig } from 'lib/anti-ice/hooks/useAntiIceURLConfig';\n\nexport const AntiIce = () => {\n    const {\n        aircraftName,\n        operationModeName,\n        moisture,\n        temperature,\n        antiIceURLManager,\n    } = useAntiIceURLConfig();\n\n    const {\n        aircraftFound,\n        operationModeFound,\n        selectedOperationModeName,\n    } = useAntiIceCheck({\n        aircraftName,\n        operationModeName,\n    });\n\n    return (\n        <CenteredContentContainer>\n            {!aircraftFound\n                ? <AntiIceAircraftNotFound aircraftName={aircraftName} />\n                : (\n                    <AntiIceDisplay\n                        aircraftName={aircraftName}\n                        selectedOperationModeName={selectedOperationModeName}\n                        moisture={moisture}\n                        temperature={temperature}\n                        antiIceURLManager={antiIceURLManager}\n                        operationModeFound={operationModeFound}\n                    />\n                )}\n        </CenteredContentContainer>\n    );\n};\n","import { useMemo } from 'react';\n\nimport { AntiIceAircrafts } from 'lib/anti-ice/data/aircrafts';\nimport { AntiIceAircraftsData } from 'lib/anti-ice/data/aircraftsData';\nimport { isNotNullOrUndefined, isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { pick } from 'lib/pick';\n\nexport const useAntiIceCheck = ({\n    aircraftName,\n    operationModeName,\n}) => {\n    const knownLists = useMemo(\n        () => {\n            const operationModes = (\n                pick(pick(AntiIceAircraftsData[aircraftName], {}).operationModes, [])\n                    .map((v) => v.modeName)\n            );\n\n            return {\n                aircraftNames: new Set(Object.values(AntiIceAircrafts)),\n                operationModesSet: new Set(operationModes),\n                operationModes,\n            };\n        },\n        [aircraftName],\n    );\n\n    const [aircraftFound, operationModeFound] = useMemo(\n        () => {\n            // eslint-disable-next-line no-shadow\n            const aircraftFound = knownLists.aircraftNames.has(aircraftName);\n\n            // eslint-disable-next-line no-shadow\n            const operationModeFound = (\n                isNullOrUndefined(operationModeName)\n                || knownLists.operationModesSet.has(operationModeName)\n            );\n\n            return [\n                aircraftFound,\n                aircraftFound && operationModeFound,\n            ];\n        },\n        [knownLists, aircraftName, operationModeName],\n    );\n\n    const selectedOperationModeName = useMemo(\n        () => {\n            if (!operationModeFound) {\n                return null;\n            }\n            if (isNotNullOrUndefined(operationModeName)) {\n                return operationModeName;\n            }\n            return pick(knownLists.operationModes[0]);\n        },\n        [operationModeFound, operationModeName],\n    );\n\n    return {\n        aircraftFound,\n        operationModeFound,\n        selectedOperationModeName,\n    };\n};\n","import { styled } from 'styletron-react';\n\nexport const Clearfix = styled('div', {\n    clear: 'both',\n});\n","import React from 'react';\n\nimport { List, Switch } from 'antd';\nimport PropTypes from 'prop-types';\nimport { styled } from 'styletron-react';\n\nimport { Clearfix } from 'components/lib/Clearfix';\n\nconst ChecklistConfigurationSwitchContainer = styled('div', (props) => ({\n    width: '100%',\n    opacity: props.$disabled ? '.2' : undefined,\n}));\n\nconst ChecklistConfigurationSwitchSwitchContainer = styled('div', {\n    float: 'right',\n    marginLeft: '20px',\n});\n\nexport const ChecklistConfigurationSwitch = ({\n    title, description, checked, onChange, onClick, disabled,\n}) => (\n    <List.Item>\n        <ChecklistConfigurationSwitchContainer $disabled={disabled}>\n            <ChecklistConfigurationSwitchSwitchContainer>\n                <Switch checked={checked} onChange={onChange} onClick={onClick} disabled={disabled} />\n            </ChecklistConfigurationSwitchSwitchContainer>\n\n            <div>\n                <strong>\n                    {title}\n                    :\n                </strong>\n                {' '}\n                {description}\n            </div>\n            <Clearfix />\n        </ChecklistConfigurationSwitchContainer>\n    </List.Item>\n);\n\nChecklistConfigurationSwitch.propTypes = {\n    title: PropTypes.string.isRequired,\n    description: PropTypes.node.isRequired,\n    checked: PropTypes.bool.isRequired,\n    onChange: PropTypes.func,\n    onClick: PropTypes.func,\n    disabled: PropTypes.bool,\n};\n\nChecklistConfigurationSwitch.defaultProps = {\n    onChange: null,\n    onClick: null,\n    disabled: false,\n};\n","import { useEffect, useMemo, useRef } from 'react';\n\nimport { isEqual } from 'lodash';\nimport { useSelector } from 'react-redux';\n\nconst useDeepDeps = (deps) => {\n    const isFirst = useRef(true);\n    const prevDeps = useRef(deps);\n    const counter = useRef(0);\n\n    return useMemo(() => {\n        const isFirstEffect = isFirst.current;\n        const isSame = prevDeps.current.every((obj, index) => isEqual(obj, deps[index]));\n\n        isFirst.current = false;\n        prevDeps.current = deps;\n\n        if (isFirstEffect || !isSame) {\n            counter.current += 1;\n        }\n\n        return counter.current;\n    }, deps);\n};\n\nexport const useDeepEffect = (fn, deps) => {\n    const counter = useDeepDeps(deps);\n    useEffect(fn, [counter]);\n};\n\nexport const useDeepMemo = (fn, deps) => {\n    const counter = useDeepDeps(deps);\n    return useMemo(fn, [counter]);\n};\n\nexport const useDeepSelector = (fn) => useSelector(fn, isEqual);\n","import { useMemo } from 'react';\n\nimport { generatePath, useHistory, useParams } from 'react-router';\n\nimport { useDeepMemo } from 'lib/hooks/deep';\nimport { useQueryParams } from 'lib/hooks/useQueryParams';\nimport { isNotNullOrUndefined, isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { pick } from 'lib/pick';\nimport { ChecklistsWithNameAndListNameRoute, ChecklistsWithNameRoute } from 'lib/routes';\n\nexport class ChecklistURLManager {\n    constructor({\n        history, checklistName, checklistListName, selectedFilters,\n    }) {\n        this.history = history;\n        this.checklistName = checklistName;\n        this.checklistListName = checklistListName;\n        this.selectedFilters = selectedFilters;\n    }\n\n    changeChecklistList(checklistListName) {\n        this.pushURL(checklistListName, this.selectedFilters);\n    }\n\n    addFilter(filterName) {\n        this.pushURL(this.checklistListName, [...this.selectedFilters, filterName]);\n    }\n\n    removeFilter(filterName) {\n        this.pushURL(this.checklistListName, this.selectedFilters.filter((v) => v !== filterName));\n    }\n\n    pushURL(checklistListName, filters) {\n        const baseURL = this.buildURL(checklistListName);\n        const urlParams = this.buildURLParams(filters);\n\n        if (urlParams !== '') {\n            this.history.push(`${baseURL}?${urlParams}`);\n        } else {\n            this.history.push(baseURL);\n        }\n    }\n\n    buildURL(checklistListName) {\n        if (isNotNullOrUndefined(checklistListName)) {\n            return generatePath(\n                ChecklistsWithNameAndListNameRoute,\n                {\n                    checklistName: this.checklistName,\n                    checklistListName,\n                },\n            );\n        }\n\n        return generatePath(\n            ChecklistsWithNameRoute,\n            {\n                checklistName: this.checklistName,\n            },\n        );\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    buildURLParams(filters) {\n        const queryParams = new URLSearchParams();\n        if (isNotNullOrUndefined(filters) && filters.length !== 0) {\n            filters.forEach((filterName) => queryParams.append('filter', filterName));\n        }\n        return queryParams.toString();\n    }\n}\n\nconst useSelectedFilters = () => {\n    const queryParams = useQueryParams();\n\n    return useMemo(() => {\n        const selectedFilters = queryParams.getAll('filter');\n        if (isNullOrUndefined(selectedFilters) || selectedFilters.length === 0) {\n            return [];\n        }\n        return selectedFilters;\n    }, [queryParams]);\n};\n\nexport const useChecklistURLConfig = () => {\n    const history = useHistory();\n    const { checklistName, checklistListName } = useParams();\n\n    const selectedFilters = useSelectedFilters();\n\n    const result = {\n        checklistName: pick(checklistName),\n        checklistListName: pick(checklistListName),\n        selectedFilters,\n    };\n\n    const checklistURLManager = useDeepMemo(\n        () => new ChecklistURLManager({ history, ...result }),\n        [history, result],\n    );\n\n    return { checklistURLManager, ...result };\n};\n","import PropTypes from 'prop-types';\n\nimport { ChecklistURLManager } from 'lib/checklist/hooks/useChecklistURLConfig';\n\n// FIXME: complete these types.\n\nexport const ChecklistURLManagerPropTypes = PropTypes.oneOfType([\n    PropTypes.instanceOf(ChecklistURLManager),\n    PropTypes.shape({\n        changeChecklistList: PropTypes.func.isRequired,\n        addFilter: PropTypes.func.isRequired,\n        removeFilter: PropTypes.func.isRequired,\n    }),\n]);\n\nexport const ChecklistDataItemTagsPropTypes = PropTypes.shape({});\n\nexport const ChecklistDataPropTypes = PropTypes.shape({\n    selectableFilters: PropTypes.arrayOf(PropTypes.string).isRequired,\n    selectableFiltersData: PropTypes.shape.isRequired,\n});\n","import { useState, useEffect, useMemo } from 'react';\n\nimport { isNotNullOrUndefined, isNullOrUndefined } from 'lib/isNullOrUndefined';\n\nfunction getWindowDimensions() {\n    const { clientWidth: width, clientHeight: height } = document.getElementById('root');\n    return { width, height };\n}\n\nexport const useWindowDimensions = () => {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, [setWindowDimensions]);\n\n    return windowDimensions;\n};\n\nexport const windowWidthCondition = (limit, result) => ({ limit, result });\nexport const windowWidthFinalCondition = (result) => ({ result });\n\nexport const useWindowWidthConditions = (conditions = []) => {\n    const { width } = useWindowDimensions();\n\n    const preparedConditions = useMemo(() => {\n        if (conditions.length === 0) {\n            throw new Error('Conditions provided are empty.');\n        }\n\n        const finalCondition = conditions[conditions.length - 1];\n        if (isNotNullOrUndefined(finalCondition.limit)) {\n            throw new Error('Final condition provided has a limit.');\n        }\n\n        const resultSizes = new Set();\n\n        conditions.forEach((value, idx) => {\n            if (idx < conditions.length - 1 && isNullOrUndefined(value.limit)) {\n                throw new Error(`Condition #${idx} provided does not have a limit.`);\n            }\n\n            if (isNullOrUndefined(value.result)) {\n                throw new Error(`Condition #${idx} provided does not have results.`);\n            }\n\n            resultSizes.add(value.result.length);\n        });\n\n        if (Array.from(resultSizes).length !== 1) {\n            throw new Error('Conditions have different sizes of results.');\n        }\n\n        const result = [...conditions].sort((a, b) => {\n            if (isNullOrUndefined(a.limit)) {\n                return 1;\n            }\n            if (isNullOrUndefined(b.limit)) {\n                return -1;\n            }\n            return a.limit - b.limit;\n        });\n\n        return result;\n    }, [conditions]);\n\n    return useMemo(() => {\n        let idx = 0;\n        for (; idx < preparedConditions.length - 1; idx += 1) {\n            if (width < preparedConditions[idx].limit) {\n                return preparedConditions[idx].result;\n            }\n        }\n        return preparedConditions[idx].result;\n    }, [width, preparedConditions]);\n};\n","export const TOGGLE_LEFT_HANDED_MODE = 'TOGGLE_LEFT_HANDED_MODE';\nexport const TOGGLE_HIDE_TAGS_MODE = 'TOGGLE_HIDE_TAGS_MODE';\nexport const TOGGLE_HIDE_HELP_MODE = 'TOGGLE_HIDE_HELP_MODE';\nexport const TOGGLE_HIDE_SWITCHES_MODE = 'TOGGLE_HIDE_SWITCHES_MODE';\n\nexport const INITIALIZE_CHECKLIST = 'INITIALIZE_CHECKLIST';\nexport const TOGGLE_ITEM = 'TOGGLE_ITEM';\nexport const RESET_CHECKED_ITEMS = 'RESET_CHECKED_ITEMS';\nexport const RESET_LIST_CHECKED_ITEMS = 'RESET_LIST_CHECKED_ITEMS';\n\nexport const defaultChecklistListState = {\n    counters: {\n        listItemsChecked: {},\n        listItemsTotals: {},\n    },\n    checkedItems: [],\n};\n\nexport const defaultChecklistState = {\n    config: {\n        leftHandedMode: false,\n        hideTagsMode: false,\n        hideHelpMode: false,\n        hideSwitchesMode: false,\n    },\n    lists: {},\n};\n","import { pick } from 'lib/pick';\nimport { defaultChecklistListState, defaultChecklistState } from 'state/constants/checklist';\n\nexport const getChecklistGlobalConfig = (state) => pick(\n    state.checklist,\n    defaultChecklistState,\n).config;\n\nexport const getChecklistData = (state, checklistName) => pick(\n    state.checklist.lists[checklistName],\n    defaultChecklistListState,\n);\n\nexport const getChecklistListItemData = (state, checklistName, itemKey) => {\n    const { checkedItems } = getChecklistData(state, checklistName);\n\n    return {\n        isChecked: checkedItems.includes(itemKey),\n    };\n};\n\nexport const getChecklistListCountersData = (state, checklistName, checklistListName) => {\n    const { counters } = getChecklistData(state, checklistName);\n\n    return {\n        checkedCount: counters.listItemsChecked[checklistListName],\n        totalsCount: counters.listItemsTotals[checklistListName],\n    };\n};\n","import { useMemo } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { useDeepSelector } from 'lib/hooks/deep';\nimport { useWindowDimensions } from 'lib/hooks/useWindowDimensions';\nimport {\n    toggleHideHelpMode,\n    toggleHideSwitchesMode,\n    toggleHideTagsMode,\n    toggleLeftHandedMode,\n} from 'state/actions/checklist';\nimport { getChecklistGlobalConfig } from 'state/readers/checklist';\n\nexport const useChecklistLayoutConfig = () => {\n    const { width } = useWindowDimensions();\n\n    const {\n        leftHandedMode,\n        hideTagsMode,\n        hideHelpMode,\n        hideSwitchesMode,\n    } = useDeepSelector(getChecklistGlobalConfig);\n\n    const twoRowsMode = width < 450;\n\n    const widthBlocked = {\n        hideTagsMode: !twoRowsMode && width < 768,\n        hideHelpMode: false, // FIXME\n        hideSwitchesMode: width < 675,\n    };\n\n    const hideChecklistProgress = width < 600;\n\n    return {\n        leftHandedMode,\n        twoRowsMode,\n        hideChecklistProgress,\n\n        hideTagsMode: hideTagsMode || widthBlocked.hideTagsMode,\n        hideTagsModeToggleable: !widthBlocked.hideTagsMode,\n\n        hideHelpMode: hideHelpMode || widthBlocked.hideHelpMode,\n        hideHelpModeToggleable: !widthBlocked.hideHelpMode,\n\n        hideSwitchesMode: hideSwitchesMode || widthBlocked.hideSwitchesMode,\n        hideSwitchesModeToggleable: !widthBlocked.hideSwitchesMode,\n    };\n};\n\nexport const useChecklistLayoutConfigWithTogglers = () => {\n    const dispatch = useDispatch();\n\n    const layoutConfig = useChecklistLayoutConfig();\n\n    const togglers = useMemo(\n        () => ({\n            leftHandedModeToggle: () => dispatch(toggleLeftHandedMode()),\n            hideTagsModeToggle: () => dispatch(toggleHideTagsMode()),\n            hideHelpModeToggle: () => dispatch(toggleHideHelpMode()),\n            hideSwitchesModeToggle: () => dispatch(toggleHideSwitchesMode()),\n        }),\n        [dispatch],\n    );\n\n    return { ...layoutConfig, ...togglers };\n};\n","import {\n    INITIALIZE_CHECKLIST,\n    RESET_CHECKED_ITEMS,\n    RESET_LIST_CHECKED_ITEMS, TOGGLE_HIDE_HELP_MODE, TOGGLE_HIDE_SWITCHES_MODE, TOGGLE_HIDE_TAGS_MODE,\n    TOGGLE_ITEM,\n    TOGGLE_LEFT_HANDED_MODE,\n} from 'state/constants/checklist';\n\nexport const initializeChecklist = (checklistName, checklistLists) => ({\n    type: INITIALIZE_CHECKLIST,\n    checklistName,\n    checklistLists,\n});\n\nexport const toggleItem = (checklistName, checklistListName, itemKey) => ({\n    type: TOGGLE_ITEM,\n    checklistName,\n    checklistListName,\n    itemKey,\n});\n\nexport const resetChecklistCheckedItems = (checklistName) => ({\n    type: RESET_CHECKED_ITEMS,\n    checklistName,\n});\n\nexport const resetChecklistListCheckedItems = (checklistName, checklistListName) => ({\n    type: RESET_LIST_CHECKED_ITEMS,\n    checklistName,\n    checklistListName,\n});\n\nexport const toggleLeftHandedMode = () => ({\n    type: TOGGLE_LEFT_HANDED_MODE,\n});\n\nexport const toggleHideTagsMode = () => ({\n    type: TOGGLE_HIDE_TAGS_MODE,\n});\n\nexport const toggleHideHelpMode = () => ({\n    type: TOGGLE_HIDE_HELP_MODE,\n});\n\nexport const toggleHideSwitchesMode = () => ({\n    type: TOGGLE_HIDE_SWITCHES_MODE,\n});\n","import { useMemo, useState } from 'react';\n\nexport const useBooleanToggle = (defaultValue) => {\n    const [value, setValue] = useState(defaultValue);\n\n    const [toggleOn, toggleOff] = useMemo(() => ([\n        () => { setValue(true); },\n        () => { setValue(false); },\n    ]), [setValue]);\n\n    const toggleValue = useMemo(\n        () => () => setValue(!value),\n        [value, setValue],\n    );\n\n    return {\n        value, toggleValue, toggleOn, toggleOff,\n    };\n};\n","import React, { useMemo } from 'react';\n\nimport { Button, List, Modal } from 'antd';\nimport PropTypes from 'prop-types';\n\nimport { ChecklistConfigurationSwitch } from 'components/checklists/ChecklistConfigurationSwitch';\nimport { ChecklistDataPropTypes, ChecklistURLManagerPropTypes } from 'components/checklists/propTypes';\nimport { useChecklistLayoutConfigWithTogglers } from 'lib/checklist/hooks/useChecklistLayoutConfig';\nimport { useBooleanToggle } from 'lib/hooks/useBooleanToggle';\n\nconst modalStyle = { maxWidth: '1000px' };\n\nexport const ChecklistConfigureButton = ({ checklistData, checklistURLManager, selectedFilters }) => {\n    const { selectableFilters: filters, selectableFiltersData: filtersData } = checklistData;\n\n    const selectedFiltersSet = useMemo(() => new Set(selectedFilters), [selectedFilters]);\n\n    const modalVisible = useBooleanToggle(false);\n\n    const layoutConfig = useChecklistLayoutConfigWithTogglers();\n\n    const filtersDataEnhanced = useMemo(\n        () => {\n            const fn = (reduceData, filterName) => {\n                const filterData = filtersData[filterName];\n                const filterUID = filterData.uid;\n\n                const revExcl = (checked) => (filterData.isExclusion ? !checked : checked);\n\n                const onChange = (checked) => {\n                    if (revExcl(checked)) {\n                        checklistURLManager.addFilter(filterUID);\n                    } else {\n                        checklistURLManager.removeFilter(filterUID);\n                    }\n                };\n\n                const filterActive = selectedFiltersSet.has(filterUID);\n\n                const filterDataEnhanced = {\n                    ...filterData,\n\n                    onChange,\n                    checked: revExcl(filterActive),\n                    disabled: reduceData.isTerminated,\n                };\n\n                return {\n                    data: [...reduceData.data, filterDataEnhanced],\n                    isTerminated: reduceData.isTerminated || (filterData.isTerminal && filterActive),\n                };\n            };\n\n            return filters.reduce(fn, { data: [], isTerminated: false }).data;\n        },\n        [checklistURLManager, filters],\n    );\n\n    return (\n        <>\n            <Button type=\"primary\" onClick={modalVisible.toggleOn}>Configure</Button>\n\n            <Modal\n                title=\"Configure\"\n                visible={modalVisible.value}\n                onOk={modalVisible.toggleOff}\n                onCancel={modalVisible.toggleOff}\n                cancelButtonProps={{ style: { display: 'none' } }}\n                maskClosable\n                width=\"90vw\"\n                style={modalStyle}\n            >\n                <List header={<strong>Interface</strong>}>\n                    <ChecklistConfigurationSwitch\n                        title=\"Left Handed Mode\"\n                        description={\n                            'Move relevant UI items to the left side of the screen for easier '\n                            + 'interaction left handed.'\n                        }\n                        checked={layoutConfig.leftHandedMode}\n                        onClick={layoutConfig.leftHandedModeToggle}\n                    />\n\n                    <ChecklistConfigurationSwitch\n                        title=\"Hide Tags\"\n                        description=\"Hide all of the tags from the list.\"\n                        checked={layoutConfig.hideTagsMode}\n                        onClick={layoutConfig.hideTagsModeToggle}\n                        disabled={!layoutConfig.hideTagsModeToggleable}\n                    />\n\n                    <ChecklistConfigurationSwitch\n                        title=\"Hide Help\"\n                        description=\"Hide all of the help info from the list.\"\n                        checked={layoutConfig.hideHelpMode}\n                        onClick={layoutConfig.hideHelpModeToggle}\n                        disabled={!layoutConfig.hideHelpModeToggleable}\n                    />\n\n                    <ChecklistConfigurationSwitch\n                        title=\"Hide Switches\"\n                        description=\"Hide the toggleable switch from the list.\"\n                        checked={layoutConfig.hideSwitchesMode}\n                        onClick={layoutConfig.hideSwitchesModeToggle}\n                        disabled={!layoutConfig.hideSwitchesModeToggleable}\n                    />\n                </List>\n\n                {filtersDataEnhanced.length === 0 ? null : (\n                    <List header={<><strong>Filters</strong></>}>\n                        {filtersDataEnhanced.map((filterData) => {\n                            const {\n                                checked, description, onChange, title, uid, disabled,\n                            } = filterData;\n\n                            return (\n                                <ChecklistConfigurationSwitch\n                                    key={uid}\n                                    title={title}\n                                    description={description}\n                                    checked={checked}\n                                    onChange={onChange}\n                                    disabled={disabled}\n                                />\n                            );\n                        })}\n                    </List>\n                )}\n            </Modal>\n        </>\n    );\n};\n\nChecklistConfigureButton.propTypes = {\n    checklistData: ChecklistDataPropTypes.isRequired,\n    checklistURLManager: ChecklistURLManagerPropTypes.isRequired,\n    selectedFilters: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React, { useEffect, useMemo, useState } from 'react';\n\nimport { CheckOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { styled, withStyle } from 'styletron-react';\n\nconst ButtonTextContainer = styled('div', {\n    position: 'relative',\n});\n\nconst ButtonTextToggle = styled('div', (props) => ({\n    opacity: props.$isDisplayed ? undefined : 0,\n    minWidth: props.$minWidth ? '55px' : undefined,\n}));\n\nconst ButtonSecondaryTextToggle = withStyle(ButtonTextToggle, {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n});\n\nconst buttonStates = Object.freeze({\n    PRIMARY: 'primary',\n    CONFIRMATION: 'confirmation',\n    SUCCESS: 'success',\n});\n\nexport const ButtonWithConfirm = (props) => {\n    const { children, onClick, ...otherProps } = props;\n\n    const [buttonState, setButtonState] = useState(buttonStates.PRIMARY);\n\n    const onClickReal = useMemo(\n        () => () => {\n            if (buttonState === buttonStates.CONFIRMATION) {\n                onClick();\n                setButtonState(buttonStates.SUCCESS);\n            } else {\n                setButtonState(buttonStates.CONFIRMATION);\n            }\n        },\n        [buttonState, setButtonState],\n    );\n\n    useEffect(\n        // eslint-disable-next-line consistent-return\n        () => {\n            if (buttonState === buttonStates.CONFIRMATION) {\n                const tid = setTimeout(() => setButtonState(buttonStates.PRIMARY), 1250);\n                return () => clearTimeout(tid);\n            } if (buttonState === buttonStates.SUCCESS) {\n                const tid = setTimeout(() => setButtonState(buttonStates.PRIMARY), 750);\n                return () => clearTimeout(tid);\n            }\n        },\n        [buttonState, setButtonState],\n    );\n\n    return (\n        <Button onClick={onClickReal} {...otherProps}>\n            <ButtonTextContainer>\n                <ButtonTextToggle $isDisplayed={buttonState === buttonStates.PRIMARY} $minWidth>\n                    {children}\n                </ButtonTextToggle>\n                <ButtonSecondaryTextToggle $isDisplayed={buttonState === buttonStates.CONFIRMATION}>\n                    Confirm\n                </ButtonSecondaryTextToggle>\n                <ButtonSecondaryTextToggle $isDisplayed={buttonState === buttonStates.SUCCESS}>\n                    <CheckOutlined />\n                </ButtonSecondaryTextToggle>\n            </ButtonTextContainer>\n        </Button>\n    );\n};\n\nButtonWithConfirm.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    children: PropTypes.node.isRequired,\n};\n","export const DarkerGrey = 'rgb(45, 45, 45, .25)';\nexport const DarkGrey = 'rgb(54, 54, 54)';\nexport const Grey = 'rgb(159,159,159)';\nexport const LightGrey = 'rgb(227,227,227)';\nexport const DarkRed = 'rgb(180, 51, 51)';\n\nexport const LightBlueBGHover1 = 'rgba(108, 233, 255, 0.2)';\nexport const LightBlueBGHover2 = 'rgba(108, 233, 255, 0.1)';\n\nexport const LightGreenBG1 = 'rgba(108, 255, 108, 0.3)';\nexport const LightGreenBG2 = 'rgba(108, 255, 108, 0.1)';\n\nexport const LightGreenBGHover1 = 'rgba(108, 255, 108, 0.45)';\nexport const LightGreenBGHover2 = 'rgba(108, 255, 108, 0.35)';\n\nexport const DarkeningMask = 'rgba(0, 0, 0, 0.075)';\n","import React from 'react';\n\nimport { styled } from 'styletron-react';\n\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\n\nexport const VWSpace = styled('span', (props) => ({\n    width: isNullOrUndefined(props.$width) ? '1em' : props.$width,\n    display: 'inline-block',\n}));\n\nexport const ThickSpace = () => <VWSpace $width=\"1.15em\" />;\nexport const ThinSpace = () => <VWSpace $width=\".15em\" />;\n\nexport const VerticalSpace = styled('div', {\n    height: '20px',\n});\n","import React, { useMemo } from 'react';\n\nimport { Affix, Divider, Typography } from 'antd';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { styled } from 'styletron-react';\n\nimport { ChecklistConfigureButton } from 'components/checklists/ChecklistConfigureButton';\nimport { ChecklistDataPropTypes, ChecklistURLManagerPropTypes } from 'components/checklists/propTypes';\nimport { ButtonWithConfirm } from 'components/lib/ButtonWithConfirm';\nimport { Clearfix } from 'components/lib/Clearfix';\nimport { Grey } from 'components/lib/colors';\nimport { VWSpace } from 'components/lib/spaces';\nimport { useDocumentTitle } from 'lib/hooks/useDocumentTitle';\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\n\nconst { Title, Text } = Typography;\n\nconst ChecklistTitleContainer = styled('div', {\n    backgroundColor: 'white',\n    paddingTop: '10px',\n    borderBottom: `1px solid ${Grey}`,\n    marginBottom: '15px',\n    whiteSpace: 'nowrap',\n});\n\nconst ChecklistTitleButtonsContainer = styled('div', {\n    float: 'right',\n    padding: '10px',\n});\n\nconst titleStyle = {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    marginBottom: '0',\n};\n\nexport const ChecklistInfo = ({\n    checklistData,\n    checklistURLManager,\n    selectedFilters,\n    resetFullCallback,\n}) => {\n    const { title, description } = checklistData;\n\n    const resetChecklistSelectCallback = useMemo(\n        () => () => checklistURLManager.changeChecklistList(null),\n        [checklistURLManager],\n    );\n\n    useDocumentTitle({ title: `${title} Checklist - FlightSim Tools` });\n\n    return (\n        <>\n            <Affix offsetTop={0}>\n                <ChecklistTitleContainer>\n                    <ChecklistTitleButtonsContainer>\n                        <ChecklistConfigureButton\n                            checklistData={checklistData}\n                            checklistURLManager={checklistURLManager}\n                            selectedFilters={selectedFilters}\n                        />\n                        {' '}\n                        <ButtonWithConfirm type=\"danger\" onClick={resetFullCallback}>\n                            Reset All\n                        </ButtonWithConfirm>\n                    </ChecklistTitleButtonsContainer>\n                    <Title style={titleStyle}>\n                        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                        <Link onClick={resetChecklistSelectCallback}>&para;</Link>\n                        <VWSpace $width=\"16px\" />\n                        {title}\n                    </Title>\n                    <Clearfix />\n                </ChecklistTitleContainer>\n            </Affix>\n\n            {isNullOrUndefined(description) ? null : (\n                <>\n                    <Text>{description}</Text>\n                    <Divider />\n                </>\n            )}\n        </>\n    );\n};\n\nChecklistInfo.propTypes = {\n    checklistData: ChecklistDataPropTypes.isRequired,\n    checklistURLManager: ChecklistURLManagerPropTypes.isRequired,\n    selectedFilters: PropTypes.arrayOf(PropTypes.string).isRequired,\n    resetFullCallback: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\n\nexport const useDocumentTitle = ({ title }) => {\n    useEffect(\n        () => { document.title = title; },\n        [title],\n    );\n};\n","import { useDispatch } from 'react-redux';\n\nimport { useDeepMemo, useDeepSelector } from 'lib/hooks/deep';\nimport { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { resetChecklistListCheckedItems } from 'state/actions/checklist';\nimport { getChecklistListCountersData } from 'state/readers/checklist';\n\nexport const useChecklistListInfoData = ({\n    checklistData,\n    checklistName,\n    checklistListName,\n    checklistURLManager,\n}) => {\n    const dispatch = useDispatch();\n\n    const counters = useDeepSelector((state) => getChecklistListCountersData(state, checklistName, checklistListName));\n\n    return useDeepMemo(\n        () => {\n            const setActiveCallback = () => {\n                checklistURLManager.changeChecklistList(checklistListName);\n            };\n\n            const resetCallback = () => dispatch(resetChecklistListCheckedItems(\n                checklistName,\n                checklistListName,\n            ));\n\n            const { checkedCount, totalsCount } = counters;\n\n            let progressPercent = 0;\n            if (isNotNullOrUndefined(totalsCount)) {\n                if (totalsCount !== 0) {\n                    progressPercent = (checkedCount * 100) / totalsCount;\n                } else {\n                    progressPercent = 100;\n                }\n            }\n            progressPercent = progressPercent.toFixed(0);\n\n            return {\n                ...checklistData.listsData[checklistListName],\n                progressPercent,\n                setActiveCallback,\n                resetCallback,\n            };\n        },\n        [checklistData, dispatch, checklistURLManager, counters],\n    );\n};\n","import React from 'react';\n\nimport { Progress, Typography } from 'antd';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { styled, useStyletron } from 'styletron-react';\n\nimport { ChecklistDataPropTypes, ChecklistURLManagerPropTypes } from 'components/checklists/propTypes';\nimport { ButtonWithConfirm } from 'components/lib/ButtonWithConfirm';\nimport { Clearfix } from 'components/lib/Clearfix';\nimport { DarkerGrey } from 'components/lib/colors';\nimport { VWSpace } from 'components/lib/spaces';\nimport { useChecklistLayoutConfig } from 'lib/checklist/hooks/useChecklistLayoutConfig';\nimport { useChecklistListInfoData } from 'lib/checklist/hooks/useChecklistListInfoData';\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\n\nconst { Title } = Typography;\n\nconst ChecklistListTitleContainer = styled('div', {\n    height: '30px',\n    borderBottom: `2px solid ${DarkerGrey}`,\n});\n\nconst ChecklistListInfoDescription = styled('div', {\n    padding: '0px 20px 10px 20px',\n});\n\nconst ChecklistListProgressContainer = styled('div', {\n    width: '200px',\n    float: 'right',\n    marginRight: '20px',\n});\n\nconst titleStyle = {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n};\n\nexport const ChecklistListInfo = ({\n    checklistData,\n    checklistName,\n    checklistListName,\n    checklistURLManager,\n}) => {\n    const [css] = useStyletron();\n\n    const {\n        hideChecklistProgress,\n    } = useChecklistLayoutConfig();\n\n    const {\n        title,\n        description,\n        progressPercent,\n        setActiveCallback,\n        resetCallback,\n    } = useChecklistListInfoData({\n        checklistData, checklistName, checklistListName, checklistURLManager,\n    });\n\n    return (\n        <>\n            <ChecklistListTitleContainer>\n                <ButtonWithConfirm\n                    type=\"danger\"\n                    onClick={resetCallback}\n                    className={css({ float: 'right' })}\n                    size=\"small\"\n                >\n                    Reset\n                </ButtonWithConfirm>\n                {hideChecklistProgress ? null : (\n                    <ChecklistListProgressContainer>\n                        <Progress percent={progressPercent} size=\"small\" />\n                    </ChecklistListProgressContainer>\n                )}\n                <Title level={4} style={titleStyle}>\n                    {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                    <Link onClick={setActiveCallback}>&para;</Link>\n                    <VWSpace $width=\"1em\" />\n                    {title}\n                </Title>\n                <Clearfix />\n            </ChecklistListTitleContainer>\n\n            {isNullOrUndefined(description) ? null : (\n                <ChecklistListInfoDescription>\n                    {description}\n                </ChecklistListInfoDescription>\n            )}\n        </>\n\n    );\n};\n\nChecklistListInfo.propTypes = {\n    checklistData: ChecklistDataPropTypes.isRequired,\n    checklistURLManager: ChecklistURLManagerPropTypes.isRequired,\n    checklistName: PropTypes.string.isRequired,\n    checklistListName: PropTypes.string.isRequired,\n};\n","import { styled } from 'styletron-react';\n\nimport {\n    DarkeningMask,\n    DarkerGrey,\n    DarkGrey,\n    LightBlueBGHover1,\n    LightBlueBGHover2,\n    LightGreenBG1,\n    LightGreenBG2,\n    LightGreenBGHover1,\n    LightGreenBGHover2,\n} from 'components/lib/colors';\n\nconst checklistListItemBackground = (props) => {\n    if (props.$isNotImplemented || props.$isChecked) {\n        return props.$isOddItem ? LightGreenBG1 : LightGreenBG2;\n    }\n    return props.$isOddItem ? DarkeningMask : undefined;\n};\n\nconst checklistListItemHoverBackground = (props) => {\n    if (props.$isNotImplemented || props.$isChecked) {\n        return props.$isOddItem ? LightGreenBGHover1 : LightGreenBGHover2;\n    }\n    return props.$isOddItem ? LightBlueBGHover1 : LightBlueBGHover2;\n};\n\nexport const ChecklistListItemWrapper = styled('tbody', (props) => ({\n    padding: '0.3em',\n    backgroundColor: checklistListItemBackground(props),\n    opacity: props.$isNotImplemented ? '30%' : undefined,\n    borderBottom: `1px dashed ${DarkerGrey}`,\n    ':hover': { backgroundColor: checklistListItemHoverBackground(props) },\n}));\n\nexport const ChecklistListItemRow = styled('tr', {});\n\nexport const ChecklistListSubItemRow = styled('tr', (props) => ({\n    backgroundColor: !props.$isOddSubItem ? DarkeningMask : undefined,\n}));\n\nexport const ChecklistListItemTitle = styled('div', (props) => ({\n    fontSize: props.$isSubItemsList ? '.85em' : '1em',\n    fontWeight: 'bolder',\n    color: DarkGrey,\n}));\n\nexport const ChecklistListItemSubTitle = styled('div', {\n    fontWeight: 'bold',\n    fontSize: '.75em',\n    color: '#727272',\n});\n\nexport const ChecklistListItemState = styled('div', (props) => ({\n    textAlign: 'right',\n    fontSize: props.$isSubItemsList ? '.85em' : '1em',\n    fontWeight: 'bolder',\n    color: '#545454',\n    textTransform: 'uppercase',\n}));\n\nexport const ChecklistItemColumn = styled('td', (props) => ({\n    userSelect: 'none',\n    cursor: 'pointer',\n\n    maxWidth: props.$fitToContent ? undefined : '100%',\n    width: props.$fitToContent ? '.0005%' : undefined,\n    whiteSpace: props.$fitToContent ? 'nowrap' : undefined,\n\n    paddingBottom: props.$isSubItemsList ? '2px' : '6px',\n    paddingTop: props.$isSubItemsList ? '2px' : '6px',\n    paddingLeft: props.$isFirst ? '6px' : undefined,\n    paddingRight: props.$isLast ? '6px' : '1em',\n}));\n\nexport const ChecklistSubItemsTable = styled('table', {\n    width: '100%',\n    opacity: '90%',\n});\n","import { styled } from 'styletron-react';\n\nexport const MonospacedFonts = 'Monaco, \"DejaVu Sans Mono\", \"Courier New\", monospace';\n\nexport const Monospaced = styled('span', {\n    fontFamily: MonospacedFonts,\n});\n","export const isEven = (value) => (value % 2) === 0;\nexport const isOdd = (value) => !isEven(value);\n\nexport const getOrdinalNumber = (value) => {\n    const valueI = 1 * value;\n\n    const unit = valueI % 10;\n    const decimal = valueI % 100;\n\n    if (unit === 1 && decimal !== 11) {\n        return `${valueI}st`;\n    }\n    if (unit === 2 && decimal !== 12) {\n        return `${valueI}nd`;\n    }\n    if (unit === 3 && decimal !== 13) {\n        return `${valueI}rd`;\n    }\n    return `${valueI}th`;\n};\n","import React from 'react';\n\nimport { QuestionCircleOutlined, UnorderedListOutlined } from '@ant-design/icons';\nimport { Modal, Typography } from 'antd';\nimport PropTypes from 'prop-types';\nimport { styled } from 'styletron-react';\n\nimport {\n    ChecklistItemColumn,\n    ChecklistListItemState,\n    ChecklistListItemTitle,\n    ChecklistListSubItemRow,\n    ChecklistSubItemsTable,\n} from 'components/checklists/formatting';\nimport { Monospaced } from 'components/lib/Monospaced';\nimport { VWSpace } from 'components/lib/spaces';\nimport { useBooleanToggle } from 'lib/hooks/useBooleanToggle';\nimport { isNotNullOrUndefined, isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { isOdd } from 'lib/numbers';\n\nconst ChecklistItemHelpWrapper = styled('span', {\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    cursor: 'pointer',\n});\n\nconst { Title } = Typography;\n\nconst modalStyle = {\n    maxWidth: '1000px',\n    maxHeight: '40vh',\n};\n\nconst modalBodyStyle = {\n    paddingTop: '10px',\n    paddingBottom: '10px',\n    maxHeight: '60vh',\n    overflowX: 'scroll',\n};\n\nconst cancelButtonProps = { style: { display: 'none' } };\n\nconst iconInvisibleStyle = { opacity: '0.2' };\n\nconst treeCharLastLeaf = <>&#x2517;&#x2501;</>; // ┗━\nconst treeCharLeaf = <>&#x2523;&#x2501;</>; // ┣━\nconst treeCharForward = <>&#x2503;&#x2003;</>; // ┃\nconst treeCharWhitespace = <>&#x2003;&#x2003;</>; // 2 em whitespace\n\nconst renderItemLevelTree = (levels) => levels.map(({ levelIdx, total }, idx) => {\n    const isFirst = idx === 0;\n    const isLeafLevel = idx === levels.length - 1;\n\n    const isLastLevel = levelIdx === total;\n    const levelHasOtherItem = !isLastLevel;\n\n    let treeChar = treeCharWhitespace;\n    if (!isLeafLevel && levelHasOtherItem) {\n        treeChar = treeCharForward;\n    } else if (isLeafLevel && levelHasOtherItem) {\n        treeChar = treeCharLeaf;\n    } else if (isLeafLevel) {\n        treeChar = treeCharLastLeaf;\n    }\n\n    return (\n    // eslint-disable-next-line react/no-array-index-key\n        <React.Fragment key={`level-${idx}-${levelIdx}-${total}`}>\n            {isFirst ? null : <VWSpace $width=\"4px\" />}\n            {treeChar}\n            <VWSpace $width=\"6px\" />\n        </React.Fragment>\n    );\n});\n\nconst buildSubItemKey = (levels) => levels.map(({ levelIdx }) => levelIdx).join('.');\n\nconst renderSubItems = (subItems, levels = []) => {\n    if (isNullOrUndefined(subItems) || subItems.length === 0) {\n        return [];\n    }\n\n    const result = [];\n    const subItemsLength = subItems.length - 1;\n\n    subItems.forEach((subItem, idx) => {\n        const subItemLevels = [...levels, { levelIdx: idx, total: subItemsLength }];\n\n        result.push({\n            key: buildSubItemKey(subItemLevels),\n            title: (\n                <>\n                    <Monospaced style={{ fontSize: '1em' }}>{renderItemLevelTree(subItemLevels)}</Monospaced>\n                    {subItem.title}\n                </>\n            ),\n            state: subItem.state,\n        });\n\n        result.push(...renderSubItems(subItem.subItems, subItemLevels));\n    });\n\n    return result;\n};\n\nexport const ChecklistListItemHelp = ({\n    title,\n    state,\n    moreInfoShort,\n    moreInfoLong,\n    subItems,\n}) => {\n    const modalVisible = useBooleanToggle(false);\n\n    const hasHelp = isNotNullOrUndefined(moreInfoShort) || isNotNullOrUndefined(moreInfoLong);\n    const hasSubItems = isNotNullOrUndefined(subItems) && subItems.length !== 0;\n\n    const itemHelpIcons = (\n        <ChecklistItemHelpWrapper onClick={modalVisible.toggleOn}>\n            <UnorderedListOutlined style={hasSubItems ? undefined : iconInvisibleStyle} />\n            <VWSpace $width=\".5em\" />\n            <QuestionCircleOutlined style={hasHelp ? undefined : iconInvisibleStyle} />\n        </ChecklistItemHelpWrapper>\n    );\n\n    if (!hasHelp && !hasSubItems) {\n        return itemHelpIcons;\n    }\n\n    const modalTitle = (\n        <>\n            <strong>Help:</strong>\n            {' '}\n            {title}\n            :\n            {' '}\n            {state}\n        </>\n    );\n\n    return (\n        <>\n            {itemHelpIcons}\n\n            <Modal\n                title={modalTitle}\n                visible={modalVisible.value}\n                onOk={modalVisible.toggleOff}\n                onCancel={modalVisible.toggleOff}\n                cancelButtonProps={cancelButtonProps}\n                width=\"80vw\"\n                style={modalStyle}\n                bodyStyle={modalBodyStyle}\n                maskClosable\n            >\n                {isNullOrUndefined(moreInfoShort) ? null : (\n                    <p>\n                        <strong>Help:</strong>\n                        {' '}\n                        {moreInfoShort}\n                    </p>\n                )}\n\n                {!hasSubItems ? null : (\n                    <p>\n                        <Title level={5}>Items</Title>\n                        <ChecklistSubItemsTable>\n                            <tbody>\n                                {renderSubItems(subItems).map((value, idx) => (\n                                    <ChecklistListSubItemRow\n                                        key={value.key}\n                                        $isSubItemsList\n                                        $isFirst={idx === 0}\n                                        $isOddSubItem={isOdd(idx)}\n                                    >\n                                        <ChecklistItemColumn $isFirst $isSubItemsList>\n                                            <ChecklistListItemTitle $isSubItemsList>\n                                                {value.title}\n                                            </ChecklistListItemTitle>\n                                        </ChecklistItemColumn>\n                                        <ChecklistItemColumn $isLast $fitToContent $isSubItemsList>\n                                            <ChecklistListItemState $isSubItemsList>\n                                                {value.state}\n                                            </ChecklistListItemState>\n                                        </ChecklistItemColumn>\n                                    </ChecklistListSubItemRow>\n                                ))}\n                            </tbody>\n                        </ChecklistSubItemsTable>\n                    </p>\n                )}\n\n                {isNullOrUndefined(moreInfoLong) ? null : (\n                    <p>\n                        <Title level={5}>Description</Title>\n                        {moreInfoLong}\n                    </p>\n                )}\n            </Modal>\n        </>\n    );\n};\n\nChecklistListItemHelp.propTypes = {\n    title: PropTypes.string.isRequired,\n    state: PropTypes.string.isRequired,\n    moreInfoShort: PropTypes.node,\n    moreInfoLong: PropTypes.node,\n    subItems: PropTypes.arrayOf(PropTypes.shape({})),\n};\n\nChecklistListItemHelp.defaultProps = {\n    moreInfoShort: null,\n    moreInfoLong: null,\n    subItems: null,\n};\n","import React from 'react';\n\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\nimport { Switch } from 'antd';\nimport PropTypes from 'prop-types';\n\nconst iconStyle = {\n    fontSize: '.85em',\n};\n\nexport const ChecklistListItemSwitch = ({\n    isChecked,\n    isNotImplemented,\n}) => (\n    <Switch\n        checkedChildren={<CheckOutlined style={iconStyle} />}\n        unCheckedChildren={<CloseOutlined style={iconStyle} />}\n        checked={isChecked || isNotImplemented}\n        disabled={isNotImplemented}\n        size=\"small\"\n    />\n);\n\nChecklistListItemSwitch.propTypes = {\n    isChecked: PropTypes.bool.isRequired,\n    isNotImplemented: PropTypes.bool.isRequired,\n};\n","import React from 'react';\n\nimport { Tag } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useStyletron } from 'styletron-react';\n\nimport { ChecklistDataItemTagsPropTypes } from 'components/checklists/propTypes';\nimport { MonospacedFonts } from 'components/lib/Monospaced';\nimport { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\n\nconst tagStyle = {\n    fontFamily: MonospacedFonts,\n    fontSize: '.8em',\n};\n\nconst tagStyleLast = {\n    ...tagStyle,\n    marginRight: '0',\n};\n\nexport const ChecklistListItemTags = ({\n    tagsData,\n}) => {\n    const [css] = useStyletron();\n\n    const filteredTags = Array.from(tagsData).filter((tag) => !tag.hidden);\n\n    return filteredTags.map((tag, idx) => {\n        const isLast = idx === filteredTags.length - 1;\n\n        return (\n            <Tag key={tag.uid} color={tag.color} className={css(isLast ? tagStyleLast : tagStyle)}>\n                {isNotNullOrUndefined(tag.title) ? tag.title : tag.uid}\n            </Tag>\n        );\n    });\n};\n\nChecklistListItemTags.propTypes = {\n    tagsData: PropTypes.arrayOf(ChecklistDataItemTagsPropTypes).isRequired,\n};\n","export const ChecklistTags = Object.freeze({\n    OFFICIAL: 'official',\n    NOT_IMPLEMENTED: 'not-implemented',\n    EXTENSION: 'extension',\n\n    FFOTD: 'ffotd', // First Flight of the Day\n    IN_MEMORY_ITEM: 'in-memory-item',\n\n    CJ4: 'CJ4',\n    C172: 'C172',\n    C172_STEAM: 'C172_STEAM',\n    C172_G1000: 'C172_G1000',\n    CRJ: 'CRJ',\n    A32NX: 'A32NX',\n\n    NAV: 'NAV',\n    VATSIM: 'VATSIM',\n    SIMSETUP: 'SIMSETUP',\n});\n","// eslint-disable-next-line max-len\nexport const listItemKey = (checklistName, checklistListName, itemName) => `${checklistName}:${checklistListName}:${itemName}`;\n","import { useDispatch } from 'react-redux';\n\nimport { listItemKey } from 'lib/checklist/listItemKey';\nimport { useDeepMemo, useDeepSelector } from 'lib/hooks/deep';\nimport { toggleItem } from 'state/actions/checklist';\nimport { getChecklistListItemData } from 'state/readers/checklist';\n\nconst defaultData = {\n    isNotImplemented: false,\n};\n\nexport const useChecklistListItemData = ({\n    checklistData,\n    checklistName,\n    checklistListName,\n    itemName,\n}) => {\n    const dispatch = useDispatch();\n\n    const baseData = useDeepMemo(\n        () => ({\n            itemKey: listItemKey(checklistName, checklistListName, itemName),\n            ...checklistData.listItemsData[itemName],\n        }),\n        [checklistData, itemName],\n    );\n\n    const dynamicData = useDeepSelector((state) => getChecklistListItemData(state, checklistName, baseData.itemKey));\n\n    return useDeepMemo(\n        () => {\n            const toggleChecked = () => {\n                dispatch(toggleItem(checklistName, checklistListName, baseData.itemKey));\n            };\n\n            return ({\n                ...defaultData,\n                ...baseData,\n                ...dynamicData,\n\n                toggleChecked,\n            });\n        },\n        [baseData, dynamicData, dispatch],\n    );\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { ChecklistListItemHelp } from 'components/checklists/ChecklistListItemHelp';\nimport { ChecklistListItemSwitch } from 'components/checklists/ChecklistListItemSwitch';\nimport { ChecklistListItemTags } from 'components/checklists/ChecklistListItemTags';\nimport {\n    ChecklistItemColumn,\n    ChecklistListItemRow,\n    ChecklistListItemState,\n    ChecklistListItemSubTitle,\n    ChecklistListItemTitle,\n    ChecklistListItemWrapper,\n} from 'components/checklists/formatting';\nimport { ChecklistDataPropTypes } from 'components/checklists/propTypes';\nimport { ChecklistTags } from 'lib/checklist/data/tags';\nimport { useChecklistDoubleClickCallback } from 'lib/checklist/hooks/useChecklistDoubleClickCallback';\nimport { useChecklistLayoutConfig } from 'lib/checklist/hooks/useChecklistLayoutConfig';\nimport { useChecklistListItemData } from 'lib/checklist/hooks/useChecklistListItemData';\n\nexport const ChecklistListItemDisplay = ({\n    checklistData,\n    checklistName,\n    checklistListName,\n    itemName,\n    isOddItem,\n}) => {\n    const {\n        title,\n        state,\n        tagsSet,\n        isChecked,\n        tagsData,\n        toggleChecked,\n        isNotImplemented,\n        moreInfoShort,\n        moreInfoLong,\n        subItems,\n    } = useChecklistListItemData({\n        checklistData,\n        checklistName,\n        checklistListName,\n        itemName,\n    });\n\n    const {\n        leftHandedMode,\n        hideTagsMode,\n        hideHelpMode,\n        hideSwitchesMode,\n        twoRowsMode,\n    } = useChecklistLayoutConfig();\n\n    const doubleClickToggler = useChecklistDoubleClickCallback({ toggleChecked, isNotImplemented });\n\n    const subTitleItems = [];\n    if (tagsSet.has(ChecklistTags.FFOTD)) {\n        subTitleItems.push('Only First Flight of the Day');\n    }\n\n    const switchColumn = hideSwitchesMode ? null : (\n        <ChecklistItemColumn $fitToContent $isFirst={leftHandedMode} $isLast={!leftHandedMode} onClick={toggleChecked}>\n            <ChecklistListItemSwitch isChecked={isChecked} isNotImplemented={isNotImplemented} />\n        </ChecklistItemColumn>\n    );\n\n    const rightColumn = leftHandedMode ? null : switchColumn;\n    const leftColumn = leftHandedMode ? switchColumn : null;\n\n    const isSwitchColumnFirst = leftHandedMode && !hideSwitchesMode;\n    const isTagsColumnFirst = !isSwitchColumnFirst;\n    const isTitleColumnFirst = !isSwitchColumnFirst && hideTagsMode;\n\n    const isSwitchColumnLast = !leftHandedMode && !hideSwitchesMode;\n    const isHelpColumnLast = !isSwitchColumnLast;\n    const isStateColumnLast = !isSwitchColumnLast && hideHelpMode;\n\n    const titleColumnContent = (\n        <>\n            <ChecklistListItemTitle>\n                {title}\n            </ChecklistListItemTitle>\n            {subTitleItems.length === 0 ? null : (\n                <ChecklistListItemSubTitle>\n                    {subTitleItems.map((item, idx) => (\n                        // eslint-disable-next-line react/no-array-index-key\n                        <React.Fragment key={idx}>\n                            {idx === 0 ? null : '; '}\n                            {item}\n                        </React.Fragment>\n                    ))}\n                </ChecklistListItemSubTitle>\n            )}\n        </>\n    );\n\n    const stateColumnContent = (\n        <ChecklistListItemState>\n            {state}\n        </ChecklistListItemState>\n    );\n\n    const helpColumnContent = (\n        <ChecklistListItemHelp\n            title={title}\n            state={state}\n            moreInfoShort={moreInfoShort}\n            moreInfoLong={moreInfoLong}\n            subItems={subItems}\n        />\n    );\n\n    if (twoRowsMode) {\n        return (\n            <ChecklistListItemWrapper\n                $isChecked={isChecked}\n                $isNotImplemented={isNotImplemented}\n                $isOddItem={isOddItem}\n            >\n                <ChecklistListItemRow>\n                    {hideTagsMode ? null : (\n                        <ChecklistItemColumn\n                            onClick={doubleClickToggler}\n                            $isFirst\n                            $fitToContent\n                        >\n                            <ChecklistListItemTags tagsData={tagsData} />\n                        </ChecklistItemColumn>\n                    )}\n                    <ChecklistItemColumn\n                        onClick={doubleClickToggler}\n                        $isFirst={hideTagsMode}\n                        $isLast\n                        colspan={hideTagsMode ? 2 : undefined}\n                    >\n                        {titleColumnContent}\n                    </ChecklistItemColumn>\n                </ChecklistListItemRow>\n\n                <ChecklistListItemRow>\n                    <ChecklistItemColumn $fitToContent $isFirst>\n                        {hideHelpMode ? null : (\n                            helpColumnContent\n                        )}\n                    </ChecklistItemColumn>\n                    <ChecklistItemColumn\n                        onClick={doubleClickToggler}\n                        $isLast\n                    >\n                        {stateColumnContent}\n                    </ChecklistItemColumn>\n                </ChecklistListItemRow>\n            </ChecklistListItemWrapper>\n        );\n    }\n\n    return (\n        <ChecklistListItemWrapper\n            $isChecked={isChecked}\n            $isNotImplemented={isNotImplemented}\n            $isOddItem={isOddItem}\n        >\n            <ChecklistListItemRow>\n                {leftColumn}\n                {hideTagsMode ? null : (\n                    <ChecklistItemColumn\n                        onClick={doubleClickToggler}\n                        $isFirst={isTagsColumnFirst}\n                        $fitToContent\n                    >\n                        <ChecklistListItemTags tagsData={tagsData} />\n                    </ChecklistItemColumn>\n                )}\n                <ChecklistItemColumn\n                    onClick={doubleClickToggler}\n                    $isFirst={isTitleColumnFirst}\n                >\n                    {titleColumnContent}\n                </ChecklistItemColumn>\n                <ChecklistItemColumn\n                    onClick={doubleClickToggler}\n                    $fitToContent\n                    $isLast={isStateColumnLast}\n                >\n                    {stateColumnContent}\n                </ChecklistItemColumn>\n                {hideHelpMode ? null : (\n                    <ChecklistItemColumn $fitToContent $isLast={isHelpColumnLast}>\n                        {helpColumnContent}\n                    </ChecklistItemColumn>\n                )}\n                {rightColumn}\n            </ChecklistListItemRow>\n        </ChecklistListItemWrapper>\n    );\n};\n\nChecklistListItemDisplay.propTypes = {\n    checklistData: ChecklistDataPropTypes.isRequired,\n    checklistName: PropTypes.string.isRequired,\n    checklistListName: PropTypes.string.isRequired,\n    itemName: PropTypes.string.isRequired,\n    isOddItem: PropTypes.bool.isRequired,\n};\n","import { useEffect, useMemo, useState } from 'react';\n\nexport const useChecklistDoubleClickCallback = ({ toggleChecked, isNotImplemented }) => {\n    const [clickCounter, setClickCounter] = useState(0);\n\n    const onClickHandler = useMemo(\n        () => () => {\n            if (clickCounter === 1) {\n                if (!isNotImplemented) toggleChecked();\n                setClickCounter(0);\n            } else {\n                setClickCounter(1);\n            }\n        },\n        [clickCounter, setClickCounter, isNotImplemented],\n    );\n\n    useEffect(\n        // eslint-disable-next-line consistent-return\n        () => {\n            if (clickCounter === 1) {\n                const tid = setTimeout(() => setClickCounter(0), 550);\n                return () => clearTimeout(tid);\n            }\n        },\n        [clickCounter, setClickCounter],\n    );\n\n    return onClickHandler;\n};\n","import React from 'react';\n\nimport { Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useStyletron } from 'styletron-react';\n\nexport const ChecklistNextListButton = ({ title, isEmergency, onClick }) => {\n    const [css] = useStyletron();\n\n    const classNames = css({\n        fontWeight: 'bold',\n        paddingLeft: '15px',\n        paddingRight: '15px',\n    });\n\n    const buttonType = isEmergency ? 'danger' : 'primary';\n\n    return (\n        <Button\n            className={classNames}\n            size=\"small\"\n            type={buttonType}\n            onClick={onClick}\n        >\n            Next:\n            {' '}\n            {title}\n        </Button>\n    );\n};\n\nChecklistNextListButton.propTypes = {\n    title: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n    isEmergency: PropTypes.bool,\n};\n\nChecklistNextListButton.defaultProps = {\n    isEmergency: false,\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { ChecklistNextListButton } from 'components/checklists/ChecklistNextListButton';\nimport { ChecklistDataPropTypes, ChecklistURLManagerPropTypes } from 'components/checklists/propTypes';\nimport { useChecklistListInfoData } from 'lib/checklist/hooks/useChecklistListInfoData';\n\nexport const ChecklistNextListButtonDisplay = ({\n    checklistData,\n    checklistName,\n    checklistListName,\n    checklistURLManager,\n}) => {\n    const {\n        title,\n        isEmergency,\n        setActiveCallback,\n    } = useChecklistListInfoData({\n        checklistData, checklistName, checklistListName, checklistURLManager,\n    });\n\n    return (\n        <ChecklistNextListButton\n            title={title}\n            isEmergency={isEmergency}\n            onClick={setActiveCallback}\n        />\n    );\n};\n\nChecklistNextListButtonDisplay.propTypes = {\n    checklistData: ChecklistDataPropTypes.isRequired,\n    checklistURLManager: ChecklistURLManagerPropTypes.isRequired,\n    checklistName: PropTypes.string.isRequired,\n    checklistListName: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport { Alert } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useStyletron } from 'styletron-react';\n\nexport const ChecklistProgressAlert = ({ progressPercent }) => {\n    const [css] = useStyletron();\n\n    const classNames = css({\n        paddingLeft: '10px',\n        paddingRight: '10px',\n        paddingTop: '1px',\n        paddingBottom: '1px',\n    });\n\n    const data = progressPercent === '100'\n        ? { alertType: 'success', title: 'Checklist finished.' }\n        : { alertType: 'warning', title: 'Checklist not finished.' };\n\n    return <Alert type={data.alertType} message={data.title} showIcon className={classNames} />;\n};\n\nChecklistProgressAlert.propTypes = {\n    progressPercent: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { ChecklistNextListButtonDisplay } from 'components/checklists/ChecklistNextListButtonDisplay';\nimport { ChecklistProgressAlert } from 'components/checklists/ChecklistProgressAlert';\nimport { ChecklistDataPropTypes, ChecklistURLManagerPropTypes } from 'components/checklists/propTypes';\nimport { RightJustifyingContainer } from 'components/lib/CenteringContainer';\nimport { useChecklistListInfoData } from 'lib/checklist/hooks/useChecklistListInfoData';\n\nexport const ChecklistNextListButtonsDisplay = ({\n    checklistData,\n    checklistName,\n    checklistListName,\n    checklistURLManager,\n}) => {\n    const { progressPercent, nextListNames } = useChecklistListInfoData({\n        checklistData, checklistName, checklistListName, checklistURLManager,\n    });\n\n    return (\n        <RightJustifyingContainer $style={{ marginTop: '15px', gap: '16px 16px' }}>\n            <ChecklistProgressAlert progressPercent={progressPercent} />\n\n            {nextListNames.map((nextListName) => (\n                <ChecklistNextListButtonDisplay\n                    key={nextListName}\n                    checklistData={checklistData}\n                    checklistName={checklistName}\n                    checklistListName={nextListName}\n                    checklistURLManager={checklistURLManager}\n                />\n            ))}\n        </RightJustifyingContainer>\n    );\n};\n\nChecklistNextListButtonsDisplay.propTypes = {\n    checklistData: ChecklistDataPropTypes.isRequired,\n    checklistURLManager: ChecklistURLManagerPropTypes.isRequired,\n    checklistName: PropTypes.string.isRequired,\n    checklistListName: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport Scroll from 'react-scroll';\nimport { styled } from 'styletron-react';\n\nimport { ChecklistListInfo } from 'components/checklists/ChecklistListInfo';\nimport { ChecklistListItemDisplay } from 'components/checklists/ChecklistListItemDisplay';\nimport { ChecklistNextListButtonsDisplay } from 'components/checklists/ChecklistNextListButtonsDisplay';\nimport { ChecklistDataPropTypes, ChecklistURLManagerPropTypes } from 'components/checklists/propTypes';\nimport { isOdd } from 'lib/numbers';\n\nconst ChecklistItemsTable = styled('table', { width: '100%' });\nconst ChecklistListContainer = styled('div', { marginBottom: '2em' });\n\nexport const ChecklistListDisplay = ({\n    checklistData,\n    checklistName,\n    checklistListName,\n    checklistURLManager,\n    items,\n}) => (\n    <Scroll.Element name={checklistListName}>\n        <ChecklistListContainer>\n            <ChecklistListInfo\n                checklistData={checklistData}\n                checklistName={checklistName}\n                checklistListName={checklistListName}\n                checklistURLManager={checklistURLManager}\n            />\n\n            <ChecklistItemsTable>\n                {items.map((itemName, idx) => (\n                    <ChecklistListItemDisplay\n                        key={`${checklistName}:${checklistListName}:${itemName}`}\n                        itemName={itemName}\n                        checklistName={checklistName}\n                        checklistListName={checklistListName}\n                        checklistData={checklistData}\n                        isOddItem={isOdd(idx)}\n                    />\n                ))}\n            </ChecklistItemsTable>\n\n            <ChecklistNextListButtonsDisplay\n                checklistData={checklistData}\n                checklistName={checklistName}\n                checklistListName={checklistListName}\n                checklistURLManager={checklistURLManager}\n            />\n        </ChecklistListContainer>\n    </Scroll.Element>\n);\n\nChecklistListDisplay.propTypes = {\n    checklistData: ChecklistDataPropTypes.isRequired,\n    checklistURLManager: ChecklistURLManagerPropTypes.isRequired,\n    checklistName: PropTypes.string.isRequired,\n    checklistListName: PropTypes.string.isRequired,\n    items: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import { pick } from 'lib/pick';\n\nexport const objectMap = (obj, callback) => {\n    const result = {};\n\n    Object.entries(obj).forEach((keyValue) => {\n        const [key, value] = keyValue;\n        result[key] = callback(value, key);\n    });\n    return result;\n};\n\nexport const objectFromList = (lst, callback) => {\n    const result = {};\n\n    pick(lst, []).forEach((lstValue) => {\n        const { key, value } = callback(lstValue);\n        result[key] = value;\n    });\n\n    return result;\n};\n","import { useDispatch } from 'react-redux';\n\nimport { listItemKey } from 'lib/checklist/listItemKey';\nimport { useDeepEffect, useDeepMemo } from 'lib/hooks/deep';\nimport { objectFromList } from 'lib/objects';\nimport { initializeChecklist } from 'state/actions/checklist';\n\nexport const useChecklistCountersInit = ({ checklistName, checklistData, filteredChecklistLists }) => {\n    const dispatch = useDispatch();\n\n    const initializeChecklistData = useDeepMemo(() => {\n        const { listItemsData } = checklistData;\n\n        return objectFromList(\n            filteredChecklistLists,\n            ({ items, listName }) => ({\n                key: listName,\n                value: items\n                    .filter((itemName) => !listItemsData[itemName].isNotImplemented)\n                    .map((itemName) => listItemKey(checklistName, listName, itemName)),\n            }),\n        );\n    }, [checklistData, filteredChecklistLists]);\n\n    useDeepEffect(() => {\n        dispatch(initializeChecklist(checklistName, initializeChecklistData));\n    }, [dispatch, checklistName, initializeChecklistData]);\n};\n","import React from 'react';\n\nimport { LinkOutlined } from '@ant-design/icons';\nimport PropTypes from 'prop-types';\n\nexport const ExternalLink = ({ href, children, noIcon }) => (\n    <a href={href} target=\"_blank\" rel=\"noreferrer\">\n        {children}\n        {noIcon ? null : (\n            <>\n                {' '}\n                <LinkOutlined />\n            </>\n        )}\n    </a>\n);\n\nExternalLink.propTypes = {\n    href: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n    noIcon: PropTypes.bool,\n};\n\nExternalLink.defaultProps = {\n    noIcon: false,\n};\n","export const Checklists = Object.freeze({\n    WORKINGTITLE_CJ4: 'workingtitle-cj4',\n    C172_STEAM: 'c172-steam',\n    C172_G1000: 'c172-g1000',\n    AEROSOFT_CRJ: 'aerosoft-crj',\n    FLYBYWIRE_A32NX: 'flybywire-a32nx',\n});\n","const cj4Items = Object.freeze({\n    // Before Engine Start\n    CJ4_BEFORE_START_BATTERY_SWITCH: 'cj4-before-start-battery-switch',\n    CJ4_BEFORE_START_EMERGENCY_LIGHTS_SWITCH: 'cj4-before-start-emergency-lights-switch',\n    CJ4_BEFORE_START_STANDBY_FLIGHT_DISPLAY_SWITCH: 'cj4-before-start-standby-flight-display-switch',\n    CJ4_BEFORE_START_AVIONICS_SWITCH: 'cj4-before-start-avionics-switch',\n    CJ4_BEFORE_START_PARKING_BRAKES: 'cj4-before-start-parking-brakes',\n    CJ4_BEFORE_START_WHEEL_CHOCKS: 'cj4-before-start-wheel-chocks',\n    CJ4_BEFORE_START_CABIN_DOOR: 'cj4-before-start-cabin-door',\n    CJ4_BEFORE_START_PASSENGER_BRIEFING: 'cj4-before-start-passenger-briefing',\n    CJ4_BEFORE_START_PILOTS_SEATS_ADJUSTED: 'cj4-before-start-pilots-seats-adjusted',\n    CJ4_BEFORE_START_EXTERIOR_LIGHTS: 'cj4-before-start-exterior-lights',\n    CJ4_BEFORE_START_EICAS: 'cj4-before-start-eicas',\n    CJ4_BEFORE_START_FMS: 'cj4-before-start-fms',\n    CJ4_BEFORE_START_CLIMATE_CONTROL_SELECTOR: 'cj4-before-start-climate-control-selector',\n\n    // Engine Start\n    CJ4_ENGINE_START_THROTTLES: 'cj4-engine-start-throttles',\n    CJ4_ENGINE_START_STARTER_BUTTON_PUSH: 'cj4-engine-start-starter-button-push',\n    CJ4_ENGINE_START_RUNSTOP_BUTTON_TO_RUN: 'cj4-engine-start-runstop-button-to-run',\n    CJ4_ENGINE_START_ITT_RISE: 'cj4-engine-start-itt-rise',\n    CJ4_ENGINE_START_EICAS_CHECK: 'cj4-engine-start-eicas-check',\n    CJ4_ENGINE_START_OPPOSITE_ENGINE_START: 'cj4-engine-start-opposite-engine-start',\n    CJ4_ENGINE_START_EXTERNAL_POWER_DISCONNECT: 'cj4-engine-start-external-power-disconnect',\n    CJ4_ENGINE_START_ELECTRICAL_SYSTEM_CHECK: 'cj4-engine-start-electrical-system-check',\n\n    // Before Taxi\n    CJ4_BEFORE_TAXI_AVIONICS_SWITCH: 'cj4-before-taxi-avionics-switch',\n    CJ4_BEFORE_TAXI_CLIMATE_CONTROL_SWITCH: 'cj4-before-taxi-climate-control-switch',\n    CJ4_BEFORE_TAXI_PASSENGER_LIGHTS_SAFETY: 'cj4-before-taxi-passenger-lights-safety',\n    CJ4_BEFORE_TAXI_TRIMS: 'cj4-before-taxi-trims',\n    CJ4_BEFORE_TAXI_FLIGHT_CONTROLS_FREE: 'cj4-before-taxi-flight-controls-free',\n    CJ4_BEFORE_TAXI_SPEEDBRAKE_CHECK: 'cj4-before-taxi-speedbrake-check',\n    CJ4_BEFORE_TAXI_FLAPS: 'cj4-before-taxi-flaps',\n    CJ4_BEFORE_TAXI_HYDRAULIC_PRESSURE_CHECK: 'cj4-before-taxi-hydraulic-pressure-check',\n    CJ4_BEFORE_TAXI_ENGINE_ONLY_ANTI_ICE: 'cj4-before-taxi-engine-only-anti-ice',\n    CJ4_BEFORE_TAXI_TAKEOFF_DATA: 'cj4-before-taxi-takeoff-data',\n    CJ4_BEFORE_TAXI_AVIONICS_CHECK: 'cj4-before-taxi-avionics-check',\n    CJ4_BEFORE_TAXI_AUTOPILOT_CONNECT_DISCONNECT: 'cj4-before-taxi-autopilot-connect-disconnect',\n    CJ4_BEFORE_TAXI_ALTIMETER_SET: 'cj4-before-taxi-altimeter-set',\n    CJ4_BEFORE_TAXI_PRESSURIZATION_CHECK: 'cj4-before-taxi-pressurization-check',\n    CJ4_BEFORE_TAXI_EICAS_CHECK: 'cj4-before-taxi-eicas-check',\n    CJ4_BEFORE_TAXI_AFT_DIVIDER_DOORS_OPEN: 'cj4-before-taxi-aft-divider-doors-open',\n\n    // Taxi\n    CJ4_TAXI_EXTERIOR_LIGHTS: 'cj4-taxi-exterior-lights',\n    CJ4_TAXI_BRAKES_APPLIED: 'cj4-taxi-brakes-applied',\n    CJ4_TAXI_PARKING_BRAKE_RELEASED: 'cj4-taxi-parking-brake-released',\n    CJ4_TAXI_BRAKES_CHECK: 'cj4-taxi-brakes-check',\n    CJ4_TAXI_NOSE_WHEEL_STEERING_CHECK: 'cj4-taxi-nose-wheel-steering-check',\n    CJ4_TAXI_FLIGHT_INSTRUMENTS_CHECK: 'cj4-taxi-flight-instruments-check',\n\n    // Before Take-Off\n    CJ4_BEFORE_TAKEOFF_ICE_PROTECTION_SYSTEM_CHECK: 'cj4-before-takeoff-ice-protection-system-check',\n    CJ4_BEFORE_TAKEOFF_RUDDER_BIAS_SYSTEM_CHECK: 'cj4-before-takeoff-rudder-bias-system-check',\n    CJ4_BEFORE_TAKEOFF_SEATS_UPRIGHT: 'cj4-before-takeoff-seats-upright',\n    CJ4_BEFORE_TAKEOFF_FLAPS_SET: 'cj4-before-takeoff-flaps-set',\n    CJ4_BEFORE_TAKEOFF_SPEEDBRAKES_OFF: 'cj4-before-takeoff-speedbrakes-off',\n    CJ4_BEFORE_TAKEOFF_TRIMS_CHECK: 'cj4-before-takeoff-trims-check',\n    CJ4_BEFORE_TAKEOFF_CREW_BRIEFING: 'cj4-before-takeoff-crew-briefing',\n    CJ4_BEFORE_TAKEOFF_TCAS_TARA: 'cj4-before-takeoff-tcas-tara',\n    CJ4_BEFORE_TAKEOFF_RADAR_AS_REQUIRED: 'cj4-before-takeoff-radar-as-required',\n    CJ4_BEFORE_TAKEOFF_GA_BUTTON_PUSH: 'cj4-before-takeoff-ga-button-push',\n    CJ4_BEFORE_TAKEOFF_BATTERY_AMPS_CHECK: 'cj4-before-takeoff-battery-amps-check',\n    CJ4_BEFORE_TAKEOFF_ICE_PROTECTION_SYSTEM_AS_REQUIRED: 'cj4-before-takeoff-ice-protection-system-as-required',\n    CJ4_BEFORE_TAKEOFF_PITOT_STATIC_HEAT_BUTTONS: 'cj4-before-takeoff-pitot-static-heat-buttons',\n    CJ4_BEFORE_TAKEOFF_EICAS_CHECK: 'cj4-before-takeoff-eicas-check',\n    CJ4_BEFORE_TAKEOFF_EXTERIOR_LIGHTS: 'cj4-before-takeoff-exterior-lights',\n\n    // Takeoff\n    CJ4_TAKEOFF_THROTTLES: 'cj4-takeoff-throttles',\n    CJ4_TAKEOFF_N1_COMMAND_BUGS_GREEN: 'cj4-takeoff-n1-command-bugs-green',\n    CJ4_TAKEOFF_BRAKES_RELEASED: 'cj4-takeoff-brakes-released',\n    CJ4_TAKEOFF_CONTROL_WHEEL_ROTATE_AT_VR: 'cj4-takeoff-control-wheel-rotate-at-vr',\n\n    // After Takeoff\n    CJ4_AFTER_TAKEOFF_LANDING_GEAR_UP: 'cj4-after-takeoff-landing-gear-up',\n    CJ4_AFTER_TAKEOFF_FLAPS_0: 'cj4-after-takeoff-flaps-0',\n    CJ4_AFTER_TAKEOFF_THROTTLES_CLIMB: 'cj4-after-takeoff-throttles-climb',\n    CJ4_AFTER_TAKEOFF_YAW_DAMPER_ON: 'cj4-after-takeoff-yaw-damper-on',\n    CJ4_AFTER_TAKEOFF_AUTOPILOT_AS_REQUIRED: 'cj4-after-takeoff-autopilot-as-required',\n    CJ4_AFTER_TAKEOFF_ICE_PROTECTION_SYSTEM_CHECK: 'cj4-after-takeoff-ice-protection-system-check',\n    CJ4_AFTER_TAKEOFF_PASSENGER_LIGHTS_AS_REQUIRED: 'cj4-after-takeoff-passenger-lights-as-required',\n    CJ4_AFTER_TAKEOFF_EXTERIOR_LIGHTS: 'cj4-after-takeoff-exterior-lights',\n    CJ4_AFTER_TAKEOFF_PRESSURIZATION_CHECK: 'cj4-after-takeoff-pressurization-check',\n    CJ4_AFTER_TAKEOFF_ALTIMETERS_SET: 'cj4-after-takeoff-altimeters-set',\n\n    // Cruise\n    CJ4_CRUISE_THROTTLES: 'cj4-cruise-throttles',\n    CJ4_CRUISE_PRESSURIZATION: 'cj4-cruise-pressurization',\n    CJ4_CRUISE_ICE_PROTECTION_SYSTEMS: 'cj4-cruise-ice-protection-systems',\n\n    // Descent\n    CJ4_DESCENT_PRESSURIZATION: 'cj4-descent-pressurization',\n    CJ4_DESCENT_ICE_PROTECTION_SYSTEMS: 'cj4-descent-ice-protection-systems',\n    CJ4_DESCENT_ALTIMETERS: 'cj4-descent-altimeters',\n    CJ4_DESCENT_EXTERIOR_LIGHTS: 'cj4-descent-exterior-lights',\n\n    // Approach\n    CJ4_APPROACH_LANDING_DATA: 'cj4-approach-landing-data',\n    CJ4_APPROACH_CREW_BRIEFING: 'cj4-approach-crew-briefing',\n    CJ4_APPROACH_AVIONICS_FLIGHT_INSTRUMENTS: 'cj4-approach-avionics-flight-instruments',\n    CJ4_APPROACH_MINIMUMS: 'cj4-approach-minimums',\n    CJ4_APPROACH_FUEL_TRANSFER_SELECTOR: 'cj4-approach-fuel-transfer-selector',\n    CJ4_APPROACH_EXTERIOR_LIGHTS: 'cj4-approach-exterior-lights',\n    CJ4_APPROACH_ICE_PROTECTION_SYSTEMS: 'cj4-approach-ice-protection-systems',\n    CJ4_APPROACH_FLAPS: 'cj4-approach-flaps',\n    CJ4_APPROACH_PASSENGER_BRIEFING: 'cj4-approach-passenger-briefing',\n    CJ4_APPROACH_SEATS_UPRIGHT: 'cj4-approach-seats-upright',\n    CJ4_APPROACH_SEAT_BELTS: 'cj4-approach-seat-belts',\n    CJ4_APPROACH_PASSENGER_LIGHTS: 'cj4-approach-passenger-lights',\n    CJ4_APPROACH_PRESSURIZATION: 'cj4-approach-pressurization',\n\n    // Before Landing\n    CJ4_BEFORE_LANDING_LANDING_GEAR: 'cj4-before-landing-landing-gear',\n    CJ4_BEFORE_LANDING_FLAPS: 'cj4-before-landing-flaps',\n    CJ4_BEFORE_LANDING_SPEEDBRAKES_OFF: 'cj4-before-landing-speedbrakes-off',\n    CJ4_BEFORE_LANDING_AIRSPEED_VREF: 'cj4-before-landing-airspeed-vref',\n    CJ4_BEFORE_LANDING_AUTOPILOT_AND_YAW_DAMPER: 'cj4-before-landing-autopilot-and-yaw-damper',\n\n    // Landing\n    CJ4_LANDING_THROTTLES: 'cj4-landing-throttles',\n    CJ4_LANDING_BRAKES: 'cj4-landing-brakes',\n    CJ4_LANDING_GROUND_SPOILERS: 'cj4-landing-ground-spoilers',\n\n    // All Engine Go-Around\n    CJ4_GOAROUND_GA_BUTTON: 'cj4-goaround-ga-button',\n    CJ4_GOAROUND_THROTTLES_1: 'cj4-goaround-throttles-1',\n    CJ4_GOAROUND_PITCH_ATTITUDE: 'cj4-goaround-pitch-attitude',\n    CJ4_GOAROUND_FLAPS_1: 'cj4-goaround-flaps-1',\n    CJ4_GOAROUND_LANDING_GEAR: 'cj4-goaround-landing-gear',\n    CJ4_GOAROUND_FLAPS_2: 'cj4-goaround-flaps-2',\n    CJ4_GOAROUND_AIRSPEED: 'cj4-goaround-airspeed',\n    CJ4_GOAROUND_THROTTLES_2: 'cj4-goaround-throttles-2',\n    CJ4_GOAROUND_YAW_DAMPER: 'cj4-goaround-yaw-damper',\n    CJ4_GOAROUND_AUTOPILOT: 'cj4-goaround-autopilot',\n\n    // After Landing\n    CJ4_AFTER_LANDING_SPEEDBRAKES: 'cj4-after-landing-speedbrakes',\n    CJ4_AFTER_LANDING_FLAPS: 'cj4-after-landing-flaps',\n    CJ4_AFTER_LANDING_PITOT_STATIC_HEAT: 'cj4-after-landing-pitot-static-heat',\n    CJ4_AFTER_LANDING_ICE_PROTECTION_SYSTEMS: 'cj4-after-landing-ice-protection-systems',\n    CJ4_AFTER_LANDING_RADAR: 'cj4-after-landing-radar',\n    CJ4_AFTER_LANDING_EXTERIOR_LIGHTS: 'cj4-after-landing-exterior-lights',\n\n    // Shutdown\n    CJ4_SHUTDOWN_PARKING_BRAKE: 'cj4-shutdown-parking-brake',\n    CJ4_SHUTDOWN_EMERGENCY_LIGHTS: 'cj4-shutdown-emergency-lights',\n    CJ4_SHUTDOWN_STANDBY_FLIGHT_DISPLAY: 'cj4-shutdown-standby-flight-display',\n    CJ4_SHUTDOWN_AVIONICS_SWITCH: 'cj4-shutdown-avionics-switch',\n    CJ4_SHUTDOWN_CLIMATE_CONTROL_SELECTOR: 'cj4-shutdown-climate-control-selector',\n    CJ4_SHUTDOWN_ICE_PROTECTION_SYSTEMS: 'cj4-shutdown-ice-protection-systems',\n    CJ4_SHUTDOWN_THROTTLES: 'cj4-shutdown-throttles',\n    CJ4_SHUTDOWN_ENGINE_RUNSTOP_BUTTONS: 'cj4-shutdown-engine-runstop-buttons',\n    CJ4_SHUTDOWN_EXTERIOR_LIGHTS: 'cj4-shutdown-exterior-lights',\n    CJ4_SHUTDOWN_BATTERY_SWITCH: 'cj4-shutdown-battery-switch',\n    CJ4_SHUTDOWN_CONTROL_LOCK: 'cj4-shutdown-control-lock',\n    CJ4_SHUTDOWN_ENGINE_COVERS: 'cj4-shutdown-engine-covers',\n});\n\nconst cj4ExtItems = Object.freeze({\n    CJ4EXT_BEFORE_START_EXTERNAL_POWER: 'cj4ext-before-start-external-power',\n    CJ4EXT_BEFORE_TAKEOFF_RUNWAY_HEADING: 'cj4ext-before-takeoff-runway-heading',\n    CJ4EXT_DESCENT_INTERIOR_LIGHTS: 'cj4ext-descent-interior-lights',\n});\n\nconst c172Items = Object.freeze({\n    C172_PREFLIGHT_AIRCRAFT_DOCUMENTS: 'c172-preflight-aircraft-documents',\n    C172_PREFLIGHT_PARKING_BRAKE: 'c172-preflight-parking-brake',\n    C172_PREFLIGHT_IGNITION: 'c172-preflight-ignition',\n    C172_PREFLIGHT_AVIONICS_SWITCHES_OFF: 'c172-preflight-avionics-switches-off',\n    C172_PREFLIGHT_FUEL_QUANTITY: 'c172-preflight-fuel-quantity',\n    C172_PREFLIGHT_LOW_FUEL_ANNUNCIATORS: 'c172-preflight-low-fuel-annunciators',\n    C172_PREFLIGHT_STATIC_PRESSURE_ALT_SOURCE_VALVE: 'c172-preflight-static-pressure-alt-source-valve',\n    C172_PREFLIGHT_FUEL_SELECTOR: 'c172-preflight-fuel-selector',\n    C172_PREFLIGHT_PITOT_HEAT_ON: 'c172-preflight-pitot-heat-on',\n    C172_PREFLIGHT_PITOT_HEAT_OFF: 'c172-preflight-pitot-heat-off',\n\n    C172_BEFORE_START_PREFLIGHT_INSPECTION: 'c172-before-start-preflight-inspection',\n    C172_BEFORE_START_SEATS_BELTS: 'c172-before-start-seats-belts',\n    C172_BEFORE_START_ELECTRICAL_EQUIPMENT: 'c172-before-start-electrical-equipment',\n    C172_BEFORE_START_AVIONICS_SWITCHES: 'c172-before-start-avionics-switches',\n    C172_BEFORE_START_FUEL_SELECTOR: 'c172-before-start-fuel-selector',\n    C172_BEFORE_START_FUEL_SHUTOFF_VALVE: 'c172-before-start-fuel-shutoff-valve',\n\n    C172_ENGINE_START_THROTTLE: 'c172-engine-start-throttle',\n    C172_ENGINE_START_MIXTURE_1: 'c172-engine-start-mixture-1',\n    C172_ENGINE_START_PROPELLER_AREA: 'c172-engine-start-propeller-area',\n    C172_ENGINE_START_BEACON_LIGHT: 'c172-engine-start-beacon-light',\n    C172_ENGINE_START_MIXTURE_2: 'c172-engine-start-mixture-2',\n    C172_ENGINE_START_AUX_FUEL_PUMP: 'c172-engine-start-aux-fuel-pump',\n    C172_ENGINE_START_MIXTURE_3: 'c172-engine-start-mixture-3',\n    C172_ENGINE_START_FEET_BRAKES: 'c172-engine-start-feet-brakes',\n    C172_ENGINE_START_IGNITION: 'c172-engine-start-ignition',\n    C172_ENGINE_START_MIXTURE_4: 'c172-engine-start-mixture-4',\n\n    C172_AFTER_START_THROTTLE: 'c172-after-start-throttle',\n    C172_AFTER_START_OIL_PRESSURE: 'c172-after-start-oil-pressure',\n    C172_AFTER_START_FLAPS: 'c172-after-start-flaps',\n    C172_AFTER_START_AVIONICS_SWITCHES: 'c172-after-start-avionics-switches',\n\n    C172_TAXI_TAXI_LIGHT: 'c172-taxi-taxi-light',\n    C172_TAXI_LANDING_LIGHT: 'c172-taxi-landing-light',\n    C172_TAXI_STROBE_LIGHT: 'c172-taxi-strobe-light',\n    C172_TAXI_NAV_LIGHT: 'c172-taxi-nav-light',\n    C172_TAXI_PARKING_BRAKE: 'c172-taxi-parking-brake',\n    C172_TAXI_BRAKES: 'c172-taxi-brakes',\n    C172_TAXI_RUDDER: 'c172-taxi-rudder',\n\n    C172_RUNUP_PARKING_BRAKE: 'c172-runup-parking-brake',\n    C172_RUNUP_SEATS_BACKS: 'c172-runup-seats-backs',\n    C172_RUNUP_SEATS_BELTS: 'c172-runup-seats-belts',\n    C172_RUNUP_FLIGHT_CONTROLS_1: 'c172-runup-flight-controls-1',\n    C172_RUNUP_FUEL_QUANTITY: 'c172-runup-fuel-quantity',\n    C172_RUNUP_MIXTURE: 'c172-runup-mixture',\n    C172_RUNUP_FUEL_SELECTOR: 'c172-runup-fuel-selector',\n    C172_RUNUP_AUTOPILOT: 'c172-runup-autopilot',\n    C172_RUNUP_FLIGHT_CONTROLS_2: 'c172-runup-flight-controls-2',\n    C172_RUNUP_THROTTLE_1: 'c172-runup-throttle-1',\n    C172_RUNUP_MAGNETOS_1: 'c172-runup-magnetos-1',\n    C172_RUNUP_MAGNETOS_2: 'c172-runup-magnetos-2',\n    C172_RUNUP_MAGNETOS_3: 'c172-runup-magnetos-3',\n    C172_RUNUP_VACCUM_GAUGE: 'c172-runup-vaccum-gauge',\n    C172_RUNUP_ENGINE_IDLE: 'c172-runup-engine-idle',\n    C172_RUNUP_THROTTLE_2: 'c172-runup-throttle-2',\n\n    C172_BEFORE_TAKEOFF_FLAPS: 'c172-before-takeoff-flaps',\n    C172_BEFORE_TAKEOFF_CABIN_WINDOWS: 'c172-before-takeoff-cabin-windows',\n    C172_BEFORE_TAKEOFF_PARKING_BRAKE: 'c172-before-takeoff-parking-brake',\n\n    C172_TAKEOFF_FLAPS_1: 'c172-takeoff-flaps-1',\n    C172_TAKEOFF_THROTTLE: 'c172-takeoff-throttle',\n    C172_TAKEOFF_MIXTURE: 'c172-takeoff-mixture',\n    C172_TAKEOFF_AIRSPEED_INDICATOR: 'c172-takeoff-airspeed-indicator',\n    C172_TAKEOFF_LIFT_NOSEWHEEL: 'c172-takeoff-lift-nosewheel',\n    C172_TAKEOFF_INITIAL_CLIMB: 'c172-takeoff-initial-climb',\n    C172_TAKEOFF_FLAPS_2: 'c172-takeoff-flaps-2',\n\n    C172_CLIMB_AIRSPEED: 'c172-climb-airspeed',\n    C172_CLIMB_THROTTLE: 'c172-climb-throttle',\n    C172_CLIMB_MIXTURE_1: 'c172-climb-mixture-1',\n    C172_CLIMB_ENGINE_GAUGES: 'c172-climb-engine-gauges',\n    C172_CLIMB_TAXI_LANDING_LIGHTS: 'c172-climb-taxi-landing-lights',\n    C172_CLIMB_MIXTURE_2: 'c172-climb-mixture-2',\n\n    C172_CRUISE_POWER: 'c172-cruise-power',\n    C172_CRUISE_ELEVATOR_TRIM: 'c172-cruise-elevator-trim',\n    C172_CRUISE_MIXTURE: 'c172-cruise-mixture',\n    C172_CRUISE_ENGINE_GAUGES: 'c172-cruise-engine-gauges',\n\n    C172_DESCENT_POWER: 'c172-descent-power',\n    C172_DESCENT_MIXTURE: 'c172-descent-mixture',\n    C172_DESCENT_FUEL_SELECTOR: 'c172-descent-fuel-selector',\n    C172_DESCENT_FLAPS: 'c172-descent-flaps',\n\n    C172_BEFORE_LANDING_SEATS_BACKS: 'c172-before-landing-seats-backs',\n    C172_BEFORE_LANDING_SEATS_BELTS: 'c172-before-landing-seats-belts',\n    C172_BEFORE_LANDING_FUEL_SELECTOR: 'c172-before-landing-fuel-selector',\n    C172_BEFORE_LANDING_MIXTURE: 'c172-before-landing-mixture',\n    C172_BEFORE_LANDING_TAXI_LANDING_LIGHTS: 'c172-before-landing-taxi-landing-lights',\n    C172_BEFORE_LANDING_AUTOPILOT: 'c172-before-landing-autopilot',\n\n    C172_LANDING_FLAPS: 'c172-landing-flaps',\n    C172_LANDING_AIRSPEED: 'c172-landing-airspeed',\n    C172_LANDING_TOUCHDOWN: 'c172-landing-touchdown',\n    C172_LANDING_LANDING_ROLL: 'c172-landing-landing-roll',\n    C172_LANDING_BRAKING: 'c172-landing-braking',\n\n    C172_AFTER_LANDING_FLAPS: 'c172-after-landing-flaps',\n    C172_AFTER_LANDING_LANDING_LIGHT: 'c172-after-landing-landing-light',\n    C172_AFTER_LANDING_TAXI_LIGHT: 'c172-after-landing-taxi-light',\n    C172_AFTER_LANDING_STROBE_LIGHT: 'c172-after-landing-strobe-light',\n    C172_AFTER_LANDING_ELEVATOR_TRIM: 'c172-after-landing-elevator-trim',\n    C172_AFTER_LANDING_TRANSPONDER: 'c172-after-landing-transponder',\n\n    C172_PARKING_PARKING_BRAKE: 'c172-parking-parking-brake',\n    C172_PARKING_AVIONICS_SWITCHES: 'c172-parking-avionics-switches',\n    C172_PARKING_ENGINE_IDLE: 'c172-parking-engine-idle',\n    C172_PARKING_MAGNETOS: 'c172-parking-magnetos',\n    C172_PARKING_MIXTURE: 'c172-parking-mixture',\n\n    C172_SECURING_IGNITION: 'c172-securing-ignition',\n    C172_SECURING_LANDING_LIGHT: 'c172-securing-landing-light',\n    C172_SECURING_TAXI_LIGHT: 'c172-securing-taxi-light',\n    C172_SECURING_NAV_LIGHT: 'c172-securing-nav-light',\n    C172_SECURING_FUEL_SELECTOR: 'c172-securing-fuel-selector',\n});\n\nconst c172SteamItems = Object.freeze({\n    C172STEAM_PREFLIGHT_BATTERY_SWITCH_1: 'c172steam-preflight-battery-switch-1',\n    C172STEAM_PREFLIGHT_BATTERY_SWITCH_2: 'c172steam-preflight-battery-switch-2',\n    C172STEAM_PREFLIGHT_AVIONICS_SWITCHES_1: 'c172steam-preflight-avionics-switches-1',\n    C172STEAM_PREFLIGHT_AVIONICS_SWITCHES_2: 'c172steam-preflight-avionics-switches-2',\n    C172STEAM_PREFLIGHT_AVIONICS_COOLING_FAN: 'c172steam-preflight-avionics-cooling-fan',\n    C172STEAM_PREFLIGHT_ANNUNCIATOR_PANEL: 'c172steam-preflight-annunciator-panel',\n    C172STEAM_PREFLIGHT_FUEL_SHUTOFF_VALVE: 'c172steam-preflight-fuel-shutoff-valve',\n    C172STEAM_PREFLIGHT_FLAPS_DOWN: 'c172steam-preflight-flaps-down',\n    C172STEAM_PREFLIGHT_ELEVATOR_TRIM: 'c172steam-preflight-elevator-trim',\n\n    C172STEAM_ENGINE_START_BATTERY_SWITCH: 'c172steam-engine-start-battery-switch',\n\n    C172STEAM_AFTER_START_ALTERNATOR: 'c172steam-after-start-alternator',\n    C172STEAM_AFTER_START_ALTERNATOR_INDICATOR: 'c172steam-after-start-alternator-indicator',\n    C172STEAM_AFTER_START_ANMETER: 'c172steam-after-start-anmeter',\n    C172STEAM_AFTER_START_RADIOS: 'c172steam-after-start-radios',\n    C172STEAM_AFTER_START_TRANSPONDER: 'c172steam-after-start-transponder',\n    C172STEAM_AFTER_START_HEADING_INDICATOR: 'c172steam-after-start-heading-indicator',\n    C172STEAM_AFTER_START_ALTIMETER: 'c172steam-after-start-altimeter',\n    C172STEAM_AFTER_START_ALTITUDE_INDICATOR: 'c172steam-after-start-altitude-indicator',\n\n    C172STEAM_TAXI_TURN_COORDINATOR: 'c172steam-taxi-turn-coordinator',\n    C172STEAM_TAXI_HEADING_INDICATOR: 'c172steam-taxi-heading-indicator',\n    C172STEAM_TAXI_COMPASS: 'c172steam-taxi-compass',\n\n    C172STEAM_RUNUP_FLIGHT_INSTRUMENTS: 'c172steam-runup-flight-instruments',\n    C172STEAM_RUNUP_AUTOPILOT: 'c172steam-runup-autopilot',\n    C172STEAM_RUNUP_OIL_PRESSURE: 'c172steam-runup-oil-pressure',\n    C172STEAM_RUNUP_OIL_TEMPERATURE: 'c172steam-runup-oil-temperature',\n    C172STEAM_RUNUP_ANMETER: 'c172steam-runup-anmeter',\n    C172STEAM_RUNUP_ANNUNCIATOR_PANEL: 'c172steam-runup-annunciator-panel',\n\n    C172STEAM_BEFORE_TAKEOFF_RADIOS: 'c172steam-before-takeoff-radios',\n    C172STEAM_BEFORE_TAKEOFF_AVIONICS: 'c172steam-before-takeoff-avionics',\n    C172STEAM_BEFORE_TAKEOFF_NAV_GPS_SWITCH: 'c172steam-before-takeoff-nav-gps-switch',\n    C172STEAM_BEFORE_TAKEOFF_TRANSPONDER: 'c172steam-before-takeoff-transponder',\n    C172STEAM_BEFORE_TAKEOFF_AUTOPILOT: 'c172steam-before-takeoff-autopilot',\n    C172STEAM_BEFORE_TAKEOFF_ELEVATOR_TRIM: 'c172steam-before-takeoff-elevator-trim',\n\n    C172STEAM_TAKEOFF_ANNUNCIATORS: 'c172steam-takeoff-annunciators',\n\n    C172STEAM_CRUISE_FLIGHT_INSTRUMENTS: 'c172steam-cruise-flight-instruments',\n\n    C172STEAM_DESCENT_ALTIMETER: 'c172steam-descent-altimeter',\n    C172STEAM_DESCENT_NAV_GPS: 'c172steam-descent-nav-gps',\n\n    C172STEAM_PARKING_TRANSPONDER: 'c172steam-parking-transponder',\n\n    C172STEAM_SECURING_ALTERNATOR: 'c172steam-securing-alternator',\n    C172STEAM_SECURING_BATTERY: 'c172steam-securing-battery',\n});\n\nconst c172G1000Items = Object.freeze({\n    C172G1000_PREFLIGHT_MASTER_SWITCHES_1: 'c172g1000-preflight-master-switches-1',\n    C172G1000_PREFLIGHT_PFD: 'c172g1000-preflight-pfd',\n    C172G1000_PREFLIGHT_OIL_PRESSURE_ANNUNCIATOR: 'c172g1000-preflight-oil-pressure-annunciator',\n    C172G1000_PREFLIGHT_LOW_VACUUM_ANNUNCIATOR: 'c172g1000-preflight-low-vacuum-annunciator',\n    C172G1000_PREFLIGHT_AVIONICS_SWITCH_1_ON: 'c172g1000-preflight-avionics-switch-1-on',\n    C172G1000_PREFLIGHT_AVIONICS_SWITCH_1_FAN: 'c172g1000-preflight-avionics-switch-1-fan',\n    C172G1000_PREFLIGHT_AVIONICS_SWITCH_1_OFF: 'c172g1000-preflight-avionics-switch-1-off',\n    C172G1000_PREFLIGHT_AVIONICS_SWITCH_2_ON: 'c172g1000-preflight-avionics-switch-2-on',\n    C172G1000_PREFLIGHT_AVIONICS_SWITCH_2_FAN: 'c172g1000-preflight-avionics-switch-2-fan',\n    C172G1000_PREFLIGHT_AVIONICS_SWITCH_2_OFF: 'c172g1000-preflight-avionics-switch-2-off',\n    C172G1000_PREFLIGHT_LOW_VOLTS_ANNUNCIATOR: 'c172g1000-preflight-low-volts-annunciator',\n    C172G1000_PREFLIGHT_MASTER_SWITCHES_2: 'c172g1000-preflight-master-switches-2',\n    C172G1000_PREFLIGHT_ELEVATOR_TRIM: 'c172g1000-preflight-elevator-trim',\n\n    C172G1000_BEFORE_START_BRAKES: 'c172g1000-before-start-brakes',\n    C172G1000_BEFORE_START_CIRCUIT_BREAKERS: 'c172g1000-before-start-circuit-breakers',\n\n    C172G1000_ENGINE_START_STANDBY_BATT_TEST: 'c172g1000-engine-start-standby-batt-test',\n    C172G1000_ENGINE_START_STANDBY_BATT_ARM: 'c172g1000-engine-start-standby-batt-arm',\n    C172G1000_ENGINE_START_ENGINE_INDICATING_SYSTEM: 'c172g1000-engine-start-engine-indicating-system',\n    C172G1000_ENGINE_START_BUS_E_VOLTS: 'c172g1000-engine-start-bus-e-volts',\n    C172G1000_ENGINE_START_BUS_M_VOLTS: 'c172g1000-engine-start-bus-m-volts',\n    C172G1000_ENGINE_START_BATT_S_AMPS: 'c172g1000-engine-start-batt-s-amps',\n    C172G1000_ENGINE_START_STANDBY_BATT_ANNUNCIATOR: 'c172g1000-engine-start-standby-batt-annunciator',\n    C172G1000_ENGINE_START_MASTER_SWITCH: 'c172g1000-engine-start-master-switch',\n\n    C172G1000_AFTER_START_AMPS: 'c172g1000-after-start-amps',\n    C172G1000_AFTER_START_LOW_VOLTS_ANNUNCIATOR: 'c172g1000-after-start-low-volts-annunciator',\n\n    C172G1000_RUNUP_DOORS: 'c172g1000-runup-doors',\n    C172G1000_RUNUP_FLIGHT_INSTRUMENTS: 'c172g1000-runup-flight-instruments',\n    C172G1000_RUNUP_ALTIMETER: 'c172g1000-runup-altimeter',\n    C172G1000_RUNUP_STANDBY_ALTIMETER: 'c172g1000-runup-standby-altimeter',\n    C172G1000_RUNUP_ALTITUDE_SELECT: 'c172g1000-runup-altitude-select',\n    C172G1000_RUNUP_STANDBY_FLIGHT_INSTRUMENTS: 'c172g1000-runup-standby-flight-instruments',\n    C172G1000_RUNUP_AP_TRIM_DISC: 'c172g1000-runup-ap-trim-disc',\n    C172G1000_RUNUP_FLIGHT_DIRECTOR: 'c172g1000-runup-flight-director',\n    C172G1000_RUNUP_ELEVATOR_TRIM: 'c172g1000-runup-elevator-trim',\n    C172G1000_RUNUP_ENGINE_INDICATORS: 'c172g1000-runup-engine-indicators',\n    C172G1000_RUNUP_ANMETERS_VOLTMETERS: 'c172g1000-runup-anmeters-voltmeters',\n    C172G1000_RUNUP_ANNUNCIATORS: 'c172g1000-runup-annunciators',\n\n    C172G1000_BEFORE_TAKEOFF_COM_FREQS: 'c172g1000-before-takeoff-com-freqs',\n    C172G1000_BEFORE_TAKEOFF_NAV_FREQS: 'c172g1000-before-takeoff-nav-freqs',\n    C172G1000_BEFORE_TAKEOFF_FMS_GPS: 'c172g1000-before-takeoff-fms-gps',\n    C172G1000_BEFORE_TAKEOFF_TRANSPONDER: 'c172g1000-before-takeoff-transponder',\n    C172G1000_BEFORE_TAKEOFF_CDI_NAV_SOURCE: 'c172g1000-before-takeoff-cdi-nav-source',\n    C172G1000_BEFORE_TAKEOFF_CABIN_PWR: 'c172g1000-before-takeoff-cabin-pwr',\n\n    C172G1000_TAKEOFF_ANNUNCIATORS: 'c172g1000-takeoff-annunciators',\n\n    C172G1000_CRUISE_FMS_GPS: 'c172g1000-cruise-fms-gps',\n\n    C172G1000_DESCENT_ALTIMETER: 'c172g1000-descent-altimeter',\n    C172G1000_DESCENT_STANDBY_ALTIMETER: 'c172g1000-descent-standby-altimeter',\n    C172G1000_DESCENT_ALTITUDE_SELECT: 'c172g1000-descent-altitude-select',\n    C172G1000_DESCENT_CDI_NAV: 'c172g1000-descent-cdi-nav',\n    C172G1000_DESCENT_FMS_GPS: 'c172g1000-descent-fms-gps',\n\n    C172G1000_BEFORE_LANDING_CABIN_PWR: 'c172g1000-before-landing-cabin-pwr',\n\n    C172G1000_SECURING_MASTER_SWITCHES: 'c172g1000-securing-master-switches',\n    C172G1000_SECURING_STANDBY_BATT: 'c172g1000-securing-standby-batt',\n});\n\nconst crjItems = Object.freeze({\n    CRJ_SAFETY_CHECK_CIRCUIT_BREAKERS: 'crj_safety_check_circuit_breakers',\n    CRJ_SAFETY_CHECK_NOSEWHEEL: 'crj_safety_check_nosewheel',\n    CRJ_SAFETY_CHECK_HYDRAULIC_PUMPS_1: 'crj_safety_check_hydraulic_pumps_1',\n    CRJ_SAFETY_CHECK_LANDING_GEAR: 'crj_safety_check_landing_gear',\n    CRJ_SAFETY_CHECK_FLIGHT_SPOILER_LEVER: 'crj_safety_check_flight_spoiler_lever',\n    CRJ_SAFETY_CHECK_SLATS_FLAPS_LEVER: 'crj_safety_check_slats_flaps_lever',\n    CRJ_SAFETY_CHECK_RADAR: 'crj_safety_check_radar',\n    CRJ_SAFETY_CHECK_ADG_MANUAL_RELEASE: 'crj_safety_check_adg_manual_release',\n    CRJ_SAFETY_CHECK_EMERGENCY_FLAP_SWITCH: 'crj_safety_check_emergency_flap_switch',\n    CRJ_SAFETY_CHECK_BATTERY_MASTER_SWITCH: 'crj_safety_check_battery_master_switch',\n    CRJ_SAFETY_CHECK_APU: 'crj_safety_check_apu',\n    CRJ_SAFETY_CHECK_AC_ELECTRICS: 'crj_safety_check_ac_electrics',\n    CRJ_SAFETY_CHECK_IRS: 'crj_safety_check_irs',\n    CRJ_SAFETY_CHECK_EMERGENCY_EQUIPMENT: 'crj_safety_check_emergency_equipment',\n    CRJ_SAFETY_CHECK_GEAR_SAFETY_PINS: 'crj_safety_check_gear_safety_pins',\n    CRJ_SAFETY_CHECK_AIRPLANE_DOCUMENTS: 'crj_safety_check_airplane_documents',\n    CRJ_SAFETY_CHECK_HYDRAULIC_PUMPS_2: 'crj_safety_check_hydraulic_pumps_2',\n    CRJ_SAFETY_CHECK_FMS_INITIALIZATION: 'crj_safety_check_fms_initialization',\n\n    CRJ_CABIN_INSPECTION_CABIN_INSPECTION: 'crj_cabin_inspection_cabin_inspection',\n    CRJ_CABIN_INSPECTION_WALKAROUND_INSPECTION: 'crj_cabin_inspection_walkaround_inspection',\n\n    CRJ_ORIGINATING_CHECK_CREW_OXYGEN: 'crj_originating_check_crew_oxygen',\n    CRJ_ORIGINATING_CHECK_AUDIO_WARNING_PANEL: 'crj_originating_check_audio_warning_panel',\n    CRJ_ORIGINATING_CHECK_ELECTRICAL_POWER_PANEL: 'crj_originating_check_electrical_power_panel',\n    CRJ_ORIGINATING_CHECK_FIRE_DETECTION: 'crj_originating_check_fire_detection',\n    CRJ_ORIGINATING_CHECK_EXTERNAL_LIGHTS_PANEL: 'crj_originating_check_external_lights_panel',\n    CRJ_ORIGINATING_CHECK_FUEL_PANEL: 'crj_originating_check_fuel_panel',\n    CRJ_ORIGINATING_CHECK_BLEED_AIR_PANEL: 'crj_originating_check_bleed_air_panel',\n    CRJ_ORIGINATING_CHECK_APU_PANEL: 'crj_originating_check_apu_panel',\n    CRJ_ORIGINATING_CHECK_START_PANEL: 'crj_originating_check_start_panel',\n    CRJ_ORIGINATING_CHECK_HYDRAULIC_PANEL: 'crj_originating_check_hydraulic_panel',\n    CRJ_ORIGINATING_CHECK_ELT_SWITCH: 'crj_originating_check_elt_switch',\n    CRJ_ORIGINATING_CHECK_CABIN_PRESSURE_PANEL: 'crj_originating_check_cabin_pressure_panel',\n    CRJ_ORIGINATING_CHECK_AIR_CONDITIONING_PANEL: 'crj_originating_check_air_conditioning_panel',\n    CRJ_ORIGINATING_CHECK_ANTIICE_PANEL: 'crj_originating_check_antiice_panel',\n    CRJ_ORIGINATING_CHECK_WINDSHIELD_HEAT: 'crj_originating_check_windshield_heat',\n    CRJ_ORIGINATING_CHECK_EMERGENCY_LIGHTS: 'crj_originating_check_emergency_lights',\n    CRJ_ORIGINATING_CHECK_STANDBY_COMPASS: 'crj_originating_check_standby_compass',\n    CRJ_ORIGINATING_CHECK_STALL_TEST: 'crj_originating_check_stall_test',\n    CRJ_ORIGINATING_CHECK_NOSEWHEEL: 'crj_originating_check_nosewheel',\n    CRJ_ORIGINATING_CHECK_CLOCKS: 'crj_originating_check_clocks',\n    CRJ_ORIGINATING_CHECK_EFIS_CONTROL_PANELS: 'crj_originating_check_efis_control_panels',\n    CRJ_ORIGINATING_CHECK_INSTRUMENT_PANELS: 'crj_originating_check_instrument_panels',\n    CRJ_ORIGINATING_CHECK_EICAS_AND_STDBY: 'crj_originating_check_eicas_and_stdby',\n    CRJ_ORIGINATING_CHECK_UPPER_PEDESTAL: 'crj_originating_check_upper_pedestal',\n    CRJ_ORIGINATING_CHECK_THRUST_LEVER_QUADRANT: 'crj_originating_check_thrust_lever_quadrant',\n    CRJ_ORIGINATING_CHECK_AVIONICS: 'crj_originating_check_avionics',\n    CRJ_ORIGINATING_CHECK_TRIMS: 'crj_originating_check_trims',\n    CRJ_ORIGINATING_CHECK_YAW_DAMPER: 'crj_originating_check_yaw_damper',\n    CRJ_ORIGINATING_CHECK_SOURCE_SELECT_PANEL: 'crj_originating_check_source_select_panel',\n    CRJ_ORIGINATING_CHECK_LOWER_PEDESTAL: 'crj_originating_check_lower_pedestal',\n\n    CRJ_BEFORE_START_CHECK_PASS_SIGNS: 'crj_before_start_check_pass_signs',\n    CRJ_BEFORE_START_CHECK_LANDING_ELEVATION: 'crj_before_start_check_landing_elevation',\n    CRJ_BEFORE_START_CHECK_BOOST_PUMPS: 'crj_before_start_check_boost_pumps',\n    CRJ_BEFORE_START_CHECK_ALTIMETERS: 'crj_before_start_check_altimeters',\n    CRJ_BEFORE_START_CHECK_FMS: 'crj_before_start_check_fms',\n    CRJ_BEFORE_START_CHECK_IRS: 'crj_before_start_check_irs',\n    CRJ_BEFORE_START_CHECK_RADIOS: 'crj_before_start_check_radios',\n    CRJ_BEFORE_START_CHECK_TAKEOFF_DATA: 'crj_before_start_check_takeoff_data',\n    CRJ_BEFORE_START_CHECK_TAKEOFF_BRIEFING: 'crj_before_start_check_takeoff_briefing',\n\n    CRJ_CLEARED_TO_START_CHECK_PERSONAL_ELECTRONIC_DEVICES: 'crj_cleared_to_start_check_personal_electronic_devices',\n    CRJ_CLEARED_TO_START_CHECK_APU: 'crj_cleared_to_start_check_apu',\n    CRJ_CLEARED_TO_START_CHECK_ELECTRICS: 'crj_cleared_to_start_check_electrics',\n    CRJ_CLEARED_TO_START_CHECK_DOORS: 'crj_cleared_to_start_check_doors',\n    CRJ_CLEARED_TO_START_CHECK_BEACON: 'crj_cleared_to_start_check_beacon',\n    CRJ_CLEARED_TO_START_CHECK_FUEL_PUMPS: 'crj_cleared_to_start_check_fuel_pumps',\n    CRJ_CLEARED_TO_START_CHECK_HYDRAULIC_PUMPS: 'crj_cleared_to_start_check_hydraulic_pumps',\n    CRJ_CLEARED_TO_START_CHECK_PARKING_BRAKE: 'crj_cleared_to_start_check_parking_brake',\n    CRJ_CLEARED_TO_START_ENGINE_START: 'crj_cleared_to_start_engine_start',\n\n    CRJ_AFTER_START_CHECK_GENERATORS: 'crj_after_start_check_generators',\n    CRJ_AFTER_START_CHECK_BLEED_VALVES: 'crj_after_start_check_bleed_valves',\n    CRJ_AFTER_START_CHECK_PACKS: 'crj_after_start_check_packs',\n    CRJ_AFTER_START_CHECK_SYNOPTIC_PAGES: 'crj_after_start_check_synoptic_pages',\n    CRJ_AFTER_START_CHECK_APU: 'crj_after_start_check_apu',\n    CRJ_AFTER_START_CHECK_ANTIICE_PROBES: 'crj_after_start_check_antiice_probes',\n    CRJ_AFTER_START_CHECK_ANTIICE: 'crj_after_start_check_antiice',\n    CRJ_AFTER_START_CHECK_NOSEWHEEL: 'crj_after_start_check_nosewheel',\n\n    CRJ_TAXI_CHECK_SLATS_FLAPS: 'crj_taxi_check_slats_flaps',\n    CRJ_TAXI_CHECK_FLIGHT_CONTROLS: 'crj_taxi_check_flight_controls',\n    CRJ_TAXI_CHECK_TRIMS: 'crj_taxi_check_trims',\n    CRJ_TAXI_CHECK_THRUST_REVERSERS: 'crj_taxi_check_thrust_reversers',\n    CRJ_TAXI_CHECK_FLIGHT_INSTRUMENTS: 'crj_taxi_check_flight_instruments',\n    CRJ_TAXI_CHECK_BRAKE_TEMPS: 'crj_taxi_check_brake_temps',\n    CRJ_TAXI_CHECK_EXTERNAL_LIGHTS: 'crj_taxi_check_external_lights',\n\n    CRJ_BEFORE_TAKEOFF_CHECK_EXTERNAL_LIGHTS: 'crj_before_takeoff_check_external_lights',\n    CRJ_BEFORE_TAKEOFF_CHECK_FUEL_XFLOW: 'crj_before_takeoff_check_fuel_xflow',\n    CRJ_BEFORE_TAKEOFF_CHECK_FLIGHT_ATTENDANT: 'crj_before_takeoff_check_flight_attendant',\n    CRJ_BEFORE_TAKEOFF_CHECK_TRANSPONDER: 'crj_before_takeoff_check_transponder',\n    CRJ_BEFORE_TAKEOFF_CHECK_RADAR: 'crj_before_takeoff_check_radar',\n    CRJ_BEFORE_TAKEOFF_CHECK_CAS: 'crj_before_takeoff_check_cas',\n\n    CRJ_CLIMB_CHECK_FUEL_XFLOW: 'crj_climb_check_fuel_xflow',\n    CRJ_CLIMB_CHECK_BLEEDS_AND_APU: 'crj_climb_check_bleeds_and_apu',\n    CRJ_CLIMB_CHECK_THRUST_REVERSERS: 'crj_climb_check_thrust_reversers',\n    CRJ_CLIMB_CHECK_CAS: 'crj_climb_check_cas',\n\n    CRJ_DESCENT_CHECK_LANDING_ELEVATION: 'crj_descent_check_landing_elevation',\n    CRJ_DESCENT_CHECK_FUEL: 'crj_descent_check_fuel',\n    CRJ_DESCENT_CHECK_TCAS: 'crj_descent_check_tcas',\n    CRJ_DESCENT_CHECK_RADAR: 'crj_descent_check_radar',\n    CRJ_DESCENT_CHECK_CAS: 'crj_descent_check_cas',\n    CRJ_DESCENT_CHECK_LANDING_DATA: 'crj_descent_check_landing_data',\n    CRJ_DESCENT_CHECK_APPROACH_BRIEFING: 'crj_descent_check_approach_briefing',\n\n    CRJ_BEFORE_LANDING_CHECK_FLIGHT_ATTENDANT: 'crj_before_landing_check_flight_attendant',\n    CRJ_BEFORE_LANDING_CHECK_PASSENGER_SIGNS: 'crj_before_landing_check_passenger_signs',\n    CRJ_BEFORE_LANDING_CHECK_THRUST_REVERSERS: 'crj_before_landing_check_thrust_reversers',\n    CRJ_BEFORE_LANDING_CHECK_LANDING_GEAR: 'crj_before_landing_check_landing_gear',\n    CRJ_BEFORE_LANDING_CHECK_FLAPS: 'crj_before_landing_check_flaps',\n\n    CRJ_AFTER_LANDING_CHECK_APU: 'crj_after_landing_check_apu',\n    CRJ_AFTER_LANDING_CHECK_TRANSPONDER_RADAR: 'crj_after_landing_check_transponder_radar',\n    CRJ_AFTER_LANDING_CHECK_FLAPS: 'crj_after_landing_check_flaps',\n    CRJ_AFTER_LANDING_CHECK_EXTERNAL_LIGHTS: 'crj_after_landing_check_external_lights',\n    CRJ_AFTER_LANDING_CHECK_PROBES: 'crj_after_landing_check_probes',\n\n    CRJ_SHUTDOWN_CHECK_PARKING_BRAKE: 'crj_shutdown_check_parking_brake',\n    CRJ_SHUTDOWN_CHECK_SEAT_BELTS: 'crj_shutdown_check_seat_belts',\n    CRJ_SHUTDOWN_CHECK_THRUST_LEVERS: 'crj_shutdown_check_thrust_levers',\n    CRJ_SHUTDOWN_CHECK_ANTIICE: 'crj_shutdown_check_antiice',\n    CRJ_SHUTDOWN_CHECK_FUEL_PUMPS: 'crj_shutdown_check_fuel_pumps',\n    CRJ_SHUTDOWN_CHECK_BEACON: 'crj_shutdown_check_beacon',\n    CRJ_SHUTDOWN_CHECK_NOSEWHEEL: 'crj_shutdown_check_nosewheel',\n\n    CRJ_TERMINATING_CHECK_CHOCKS_AND_BRAKES: 'crj_terminating_check_chocks_and_brakes',\n    CRJ_TERMINATING_CHECK_IRS: 'crj_terminating_check_irs',\n    CRJ_TERMINATING_CHECK_EMERGENCY_LIGHTS: 'crj_terminating_check_emergency_lights',\n    CRJ_TERMINATING_CHECK_ANTIICE: 'crj_terminating_check_antiice',\n    CRJ_TERMINATING_CHECK_HYDRAULIC_PUMPS: 'crj_terminating_check_hydraulic_pumps',\n    CRJ_TERMINATING_CHECK_EXTERNAL_LIGHTS: 'crj_terminating_check_external_lights',\n    CRJ_TERMINATING_CHECK_APU: 'crj_terminating_check_apu',\n    CRJ_TERMINATING_CHECK_BATTERY_MASTER: 'crj_terminating_check_battery_master',\n    CRJ_TERMINATING_CHECK_COCKPIT_LIGHTS: 'crj_terminating_check_cockpit_lights',\n});\n\nconst crjExtItems = Object.freeze({\n    CRJEXT_PRE_FLIGHT_AIRCRAFT_EFB_SETUP: 'crjext_pre_flight_aircraft_efb_setup',\n    CRJEXT_ORIGINATING_CHECK_FMS_INIT_REMINDER: 'crjext_originating_check_fms_init_reminder',\n    CRJEXT_CRUISE_ANTIICE: 'crjext_cruise_antiice',\n    CRJEXT_BEFORE_START_CHECK_DOORS_CHOCKS: 'crjext_before_start_check_doors_chocks',\n});\n\nconst vatsimItems = Object.freeze({\n    VATSIM_FILE_FLIGHT_PLAN: 'vatsim-file-flight-plan',\n    VATSIM_REQUEST_INITIAL_CLEARANCE: 'vatsim-request-initial-clearance',\n    VATSIM_PUSHBACK_AND_START_CLEARANCE: 'vatsim-pushback-and-start-clearance',\n    VATSIM_DEPARTURE_SETTINGS: 'vatsim-departure-settings',\n    VATSIM_TAXI_CLEARANCE: 'vatsim-taxi-clearance',\n    VATSIM_TAXI_MODE_CHARLIE: 'vatsim-taxi-mode-charlie',\n    VATSIM_TAKEOFF_CLEARANCE: 'vatsim-takeoff-clearance',\n    VATSIM_DESCENT_CLEARANCE: 'vatsim-descent-clearance',\n    VATSIM_APPROACH_CLEARANCE: 'vatsim-approach-clearance',\n    VATSIM_LANDING_CLEARANCE: 'vatsim-landing-clearance',\n    VATSIM_GOAROUND_ANNOUNCE: 'vatsim-goaround-announce',\n    VATSIM_LANDING_CLEAR_OF_RUNWAY: 'vatsim-landing-clear-of-runway',\n    VATSIM_DISCONNECT_GOODBYE: 'vatsim-disconnect-goodbye',\n});\n\nconst navItems = Object.freeze({\n    NAV_FLIGHT_PLANNING: 'nav-flight-planning',\n    NAV_TAKEOFF_DEPARTURE_BRIEFING: 'nav-takeoff-departure-briefing',\n    NAV_TAKEOFF_DEPARTURE_BRIEFING_SHORT: 'nav-takeoff-departure-briefing-short',\n    NAV_DESCENT_PLANNING: 'nav-descent-planning',\n    NAV_APPROACH_BRIEFING: 'nav-approach-briefing',\n    NAV_POST_FLIGHT_NOTES: 'nav-post-flight-notes',\n});\n\nconst simulatorSetupItems = Object.freeze({\n    SIMSETUP_FLIGHT_TRACKING_START: 'simsetup-flight-tracking-start',\n    SIMSETUP_FLIGHT_TRACKING_END: 'simsetup-flight-tracking-end',\n    SIMSETUP_FLIGHT_RECORDING_START: 'simsetup-flight-recording-start',\n    SIMSETUP_FLIGHT_RECORDING_END: 'simsetup-flight-recording-end',\n});\n\nconst a32nxItems = Object.freeze({\n    A32NX_ORIGINATING_COCKPIT_PREP: 'a32nx_originating_cockpit_prep',\n    A32NX_ORIGINATING_LOWER_PEDESTAL: 'a32nx_originating_lower_pedestal',\n    A32NX_ORIGINATING_THRUST_LEVER_QUADRANT: 'a32nx_originating_thrust_lever_quadrant',\n    A32NX_ORIGINATING_LANDING_GEAR: 'a32nx_originating_landing_gear',\n    A32NX_ORIGINATING_AIR_CONDITION_PANEL: 'a32nx_originating_air_condition_panel',\n    A32NX_ORIGINATING_HYDRAULIC_PANEL: 'a32nx_originating_hydraulic_panel',\n    A32NX_ORIGINATING_FUEL_PANEL: 'a32nx_originating_fuel_panel',\n    A32NX_ORIGINATING_FIRE_PANEL_TEST: 'a32nx_originating_fire_panel_test',\n    A32NX_ORIGINATING_ANTI_ICE_PANEL: 'a32nx_originating_anti_ice_panel',\n    A32NX_ORIGINATING_EXTERIOR_LIGHTS: 'a32nx_originating_exterior_lights',\n    A32NX_ORIGINATING_SIGNS_PANEL: 'a32nx_originating_signs_panel',\n    A32NX_ORIGINATING_PARKING_BRAKE: 'a32nx_originating_parking_brake',\n    A32NX_ORIGINATING_ADIRS: 'a32nx_originating_adirs',\n    A32NX_ORIGINATING_WIPER_SELECTORS: 'a32nx_originating_wiper_selectors',\n    A32NX_ORIGINATING_OXYGEN_PANEL: 'a32nx_originating_oxygen_panel',\n    A32NX_ORIGINATING_EXT_POWER: 'a32nx_originating_ext_power',\n    A32NX_ORIGINATING_BATTERY: 'a32nx_originating_battery',\n    A32NX_ORIGINATING_APU: 'a32nx_originating_apu',\n    A32NX_ORIGINATING_CABIN_PRESSURE_PANEL: 'a32nx_originating_cabin_pressure_panel',\n    A32NX_ORIGINATING_VENTILATION_PANEL: 'a32nx_originating_ventilation_panel',\n    A32NX_ORIGINATING_MAINTENANCE_PANEL: 'a32nx_originating_maintenance_panel',\n    A32NX_ORIGINATING_EFIS_CONTROL_UNITS: 'a32nx_originating_efis_control_units',\n    A32NX_ORIGINATING_CENTER_INSTRUMENT_PANEL: 'a32nx_originating_center_instrument_panel',\n    A32NX_ORIGINATING_SWITCHING_PANEL: 'a32nx_originating_switching_panel',\n    A32NX_ORIGINATING_EICAS: 'a32nx_originating_eicas',\n    A32NX_ORIGINATING_RADIO_PANEL: 'a32nx_originating_radio_panel',\n    A32NX_ORIGINATING_FUEL: 'a32nx_originating_fuel',\n    A32NX_ORIGINATING_MCDU: 'a32nx_originating_mcdu',\n    A32NX_ORIGINATING_MCDU_SIMBRIEF: 'a32nx_originating_mcdu_simbrief',\n\n    A32NX_BEFORE_ENGINE_START_APU: 'a32nx_before_engine_start_apu',\n    A32NX_BEFORE_ENGINE_START_EXT_POWER: 'a32nx_before_engine_start_ext_power',\n    A32NX_BEFORE_ENGINE_START_TCAS: 'a32nx_before_engine_start_tcas',\n    A32NX_BEFORE_ENGINE_START_DOORS: 'a32nx_before_engine_start_doors',\n    A32NX_BEFORE_ENGINE_START_BEACON: 'a32nx_before_engine_start_beacon',\n    A32NX_BEFORE_ENGINE_START_THRUST_LEVERS: 'a32nx_before_engine_start_thrust_levers',\n    A32NX_BEFORE_ENGINE_START_PARKING_BRAKE: 'a32nx_before_engine_start_parking_brake',\n    A32NX_BEFORE_ENGINE_START_BRAKE_PRESSURE: 'a32nx_before_engine_start_brake_pressure',\n\n    A32NX_ENGINE_START_CHRONO_START: 'a32nx_engine_start_chrono_start',\n    A32NX_ENGINE_START_ENGINE_MODE: 'a32nx_engine_start_engine_mode',\n    A32NX_ENGINE_START_ENG2_START: 'a32nx_engine_start_eng2_start',\n    A32NX_ENGINE_START_ENG1_START: 'a32nx_engine_start_eng1_start',\n\n    A32NX_AFTER_ENGINE_START_ENGINE_MODE: 'a32nx_after_engine_start_engine_mode',\n    A32NX_AFTER_ENGINE_START_FLAPS: 'a32nx_after_engine_start_flaps',\n    A32NX_AFTER_ENGINE_START_GROUND_SPOILERS: 'a32nx_after_engine_start_ground_spoilers',\n    A32NX_AFTER_ENGINE_START_APU_BLEED: 'a32nx_after_engine_start_apu_bleed',\n    A32NX_AFTER_ENGINE_START_APU: 'a32nx_after_engine_start_apu',\n    A32NX_AFTER_ENGINE_START_ANTI_ICE: 'a32nx_after_engine_start_anti_ice',\n    A32NX_AFTER_ENGINE_START_PITCH_TRIM: 'a32nx_after_engine_start_pitch_trim',\n    A32NX_AFTER_ENGINE_START_RUDDER_TRIM: 'a32nx_after_engine_start_rudder_trim',\n    A32NX_AFTER_ENGINE_START_FLIGHT_CONTROLS: 'a32nx_after_engine_start_flight_controls',\n\n    A32NX_BEFORE_TAXI_EXTERIOR_LIGHTS: 'a32nx_before_taxi_exterior_lights',\n    A32NX_BEFORE_TAXI_RADAR: 'a32nx_before_taxi_radar',\n    A32NX_BEFORE_TAXI_PREDICTIVE_WINDSHEAR_SYS: 'a32nx_before_taxi_predictive_windshear_sys',\n    A32NX_BEFORE_TAXI_TCAS: 'a32nx_before_taxi_tcas',\n    A32NX_BEFORE_TAXI_PARKING_BRAKE: 'a32nx_before_taxi_parking_brake',\n    A32NX_BEFORE_TAXI_BRAKE_PRESSURE: 'a32nx_before_taxi_brake_pressure',\n    A32NX_BEFORE_TAXI_TERRAIN_ON_ND: 'a32nx_before_taxi_terrain_on_nd',\n\n    A32NX_BEFORE_TAKEOFF_AUTOBRAKE: 'a32nx_before_takeoff_autobrake',\n    A32NX_BEFORE_TAKEOFF_CABIN_CREW: 'a32nx_before_takeoff_cabin_crew',\n    A32NX_BEFORE_TAKEOFF_TAKEOFF_CONFIG_TEST: 'a32nx_before_takeoff_takeoff_config_test',\n    A32NX_BEFORE_TAKEOFF_BRAKE_TEMP: 'a32nx_before_takeoff_brake_temp',\n    A32NX_BEFORE_TAKEOFF_EXTERIOR_LIGHTS: 'a32nx_before_takeoff_exterior_lights',\n\n    A32NX_CLIMB_LANDING_GEAR: 'a32nx_climb_landing_gear',\n    A32NX_CLIMB_AUTOPILOT: 'a32nx_climb_autopilot',\n    A32NX_CLIMB_THRUST_LEVERS: 'a32nx_climb_thrust_levers',\n    A32NX_CLIMB_FLAPS: 'a32nx_climb_flaps',\n    A32NX_CLIMB_GROUND_SPOILERS: 'a32nx_climb_ground_spoilers',\n    A32NX_CLIMB_EXTERIOR_LIGHTS: 'a32nx_climb_exterior_lights',\n    A32NX_CLIMB_SEATBELT_SIGNS: 'a32nx_climb_seatbelt_signs',\n    A32NX_CLIMB_ALTIMETER: 'a32nx_climb_altimeter',\n    A32NX_CLIMB_RADAR: 'a32nx_climb_radar',\n    A32NX_CLIMB_ANTI_ICE: 'a32nx_climb_anti_ice',\n    A32NX_CLIMB_EFIS: 'a32nx_climb_efis',\n    A32NX_CLIMB_ECAM_MEMO: 'a32nx_climb_ecam_memo',\n    A32NX_CLIMB_NAVAIDS: 'a32nx_climb_navaids',\n\n    A32NX_CRUISE_ECAM_MEMO: 'a32nx_cruise_ecam_memo',\n    A32NX_CRUISE_FLIGHT_PROGRESS: 'a32nx_cruise_flight_progress',\n    A32NX_CRUISE_FUEL: 'a32nx_cruise_fuel',\n    A32NX_CRUISE_NAVIGATION_ACCURACY: 'a32nx_cruise_navigation_accuracy',\n    A32NX_CRUISE_RADAR: 'a32nx_cruise_radar',\n\n    A32NX_BEFORE_DESCENT_WEATHER: 'a32nx_before_descent_weather',\n    A32NX_BEFORE_DESCENT_NAV_CHARTS: 'a32nx_before_descent_nav_charts',\n    A32NX_BEFORE_DESCENT_EFB_LANDING_PERF: 'a32nx_before_descent_efb_landing_perf',\n    A32NX_BEFORE_DESCENT_MCDU: 'a32nx_before_descent_mcdu',\n    A32NX_BEFORE_DESCENT_GPWS_LDG_FLAPS_3: 'a32nx_before_descent_gpws_ldg_flaps_3',\n    A32NX_BEFORE_DESCENT_LANDING_ELEV: 'a32nx_before_descent_landing_elev',\n    A32NX_BEFORE_DESCENT_AUTO_BRAKE: 'a32nx_before_descent_auto_brake',\n    A32NX_BEFORE_DESCENT_APPROACH_BRIEFING: 'a32nx_before_descent_approach_briefing',\n    A32NX_BEFORE_DESCENT_TERR_ON_ND: 'a32nx_before_descent_terr_on_nd',\n    A32NX_BEFORE_DESCENT_RADAR: 'a32nx_before_descent_radar',\n    A32NX_BEFORE_DESCENT_ANTI_ICE: 'a32nx_before_descent_anti_ice',\n\n    A32NX_DESCENT_MCDU_PERF: 'a32nx_descent_mcdu_perf',\n    A32NX_DESCENT_ALTIMETER: 'a32nx_descent_altimeter',\n    A32NX_DESCENT_EXTERIOR_LIGHTS: 'a32nx_descent_exterior_lights',\n    A32NX_DESCENT_EFIS: 'a32nx_descent_efis',\n    A32NX_DESCENT_NAVAIDS: 'a32nx_descent_navaids',\n\n    A32NX_APPROACH_FPLN_SEQUENCING: 'a32nx_approach_fpln_sequencing',\n    A32NX_APPROACH_APPROACH_PHASE: 'a32nx_approach_approach_phase',\n    A32NX_APPROACH_MANAGED_SPEED: 'a32nx_approach_managed_speed',\n    A32NX_APPROACH_SPEED_BRAKES: 'a32nx_approach_speed_brakes',\n    A32NX_APPROACH_RADAR: 'a32nx_approach_radar',\n    A32NX_APPROACH_FLAPS: 'a32nx_approach_flaps',\n    A32NX_APPROACH_LANDING_GEAR: 'a32nx_approach_landing_gear',\n    A32NX_APPROACH_GROUND_SPOILERS: 'a32nx_approach_ground_spoilers',\n    A32NX_APPROACH_EXTERIOR_LIGHTS: 'a32nx_approach_exterior_lights',\n    A32NX_APPROACH_AUTO_THROTTLE: 'a32nx_approach_auto_throttle',\n    A32NX_APPROACH_ANTI_ICE: 'a32nx_approach_anti_ice',\n    A32NX_APPROACH_SLIDING_TABLE: 'a32nx_approach_sliding_table',\n    A32NX_APPROACH_CABIN_CREW: 'a32nx_approach_cabin_crew',\n    A32NX_APPROACH_LANDING_MEMO: 'a32nx_approach_landing_memo',\n\n    A32NX_BEFORE_LANDING_FLAPS: 'a32nx_before_landing_flaps',\n    A32NX_BEFORE_LANDING_LANDING_GEAR: 'a32nx_before_landing_landing_gear',\n\n    A32NX_AFTER_LANDING_GROUND_SPOILERS: 'a32nx_after_landing_ground_spoilers',\n    A32NX_AFTER_LANDING_EXTERIOR_LIGHTS: 'a32nx_after_landing_exterior_lights',\n    A32NX_AFTER_LANDING_RADAR: 'a32nx_after_landing_radar',\n    A32NX_AFTER_LANDING_PREDICTIVE_WINDSHEAR_SYSTEM: 'a32nx_after_landing_predictive_windshear_system',\n    A32NX_AFTER_LANDING_ENG_MODE: 'a32nx_after_landing_eng_mode',\n    A32NX_AFTER_LANDING_TCAS: 'a32nx_after_landing_tcas',\n    A32NX_AFTER_LANDING_ATC: 'a32nx_after_landing_atc',\n    A32NX_AFTER_LANDING_APU: 'a32nx_after_landing_apu',\n\n    A32NX_PARKING_ANTI_ICE: 'a32nx_parking_anti_ice',\n    A32NX_PARKING_PARKING_BRAKE: 'a32nx_parking_parking_brake',\n    A32NX_PARKING_ENGINE_MASTERS: 'a32nx_parking_engine_masters',\n    A32NX_PARKING_SEAT_BELT_SIGNS: 'a32nx_parking_seat_belt_signs',\n    A32NX_PARKING_FUEL_PUMPS: 'a32nx_parking_fuel_pumps',\n    A32NX_PARKING_ATC: 'a32nx_parking_atc',\n    A32NX_PARKING_EXTERIOR_LIGHTS: 'a32nx_parking_exterior_lights',\n    A32NX_PARKING_EXT_POWER: 'a32nx_parking_ext_power',\n\n    A32NX_SECURING_PARKING_BRAKE: 'a32nx_securing_parking_brake',\n    A32NX_SECURING_ADIRS: 'a32nx_securing_adirs',\n    A32NX_SECURING_EXTERIOR_LIGHTS: 'a32nx_securing_exterior_lights',\n    A32NX_SECURING_APU_BLEED: 'a32nx_securing_apu_bleed',\n    A32NX_SECURING_APU: 'a32nx_securing_apu',\n    A32NX_SECURING_EMERGENCY_LIGHTS: 'a32nx_securing_emergency_lights',\n    A32NX_SECURING_SIGNS: 'a32nx_securing_signs',\n    A32NX_SECURING_BATTERIES: 'a32nx_securing_batteries',\n});\n\nexport const ChecklistItems = Object.freeze({\n    ...cj4Items,\n    ...cj4ExtItems,\n    ...c172Items,\n    ...c172SteamItems,\n    ...c172G1000Items,\n    ...crjItems,\n    ...crjExtItems,\n    ...a32nxItems,\n    ...vatsimItems,\n    ...navItems,\n    ...simulatorSetupItems,\n});\n","const commonLists = Object.freeze({\n    PRE_FLIGHT: 'pre-flight',\n    SAFETY: 'safety',\n    CABIN_INSPECTION: 'cabin-inspection',\n    ORIGINATING: 'originating',\n    BEFORE_ENGINE_START: 'before-engine-start',\n    ENGINE_START: 'engine-start',\n    AFTER_ENGINE_START: 'after-engine-start',\n    BEFORE_TAXI: 'before-taxi',\n    TAXI: 'taxi',\n    RUN_UP: 'run-up',\n    BEFORE_TAKEOFF: 'before-takeoff',\n    TAKEOFF: 'takeoff',\n    AFTER_TAKEOFF_CLIMB: 'after-takeoff-climb',\n    CLIMB: 'climb',\n    CRUISE: 'cruise',\n    BEFORE_DESCENT: 'before-descent',\n    DESCENT: 'descent',\n    APPROACH: 'approach',\n    BEFORE_LANDING: 'before-landing',\n    LANDING: 'landing',\n    AFTER_LANDING: 'after-landing',\n    ALL_ENGINES_GO_AROUND: 'all-engines-go-around',\n    PARKING: 'parking',\n    SECURING: 'securing',\n    SHUTDOWN: 'shutdown',\n    TERMINATING: 'terminating',\n    POST_FLIGHT: 'post-flight',\n});\n\nexport const ChecklistLists = Object.freeze({\n    ...commonLists,\n});\n","import React from 'react';\n\nimport { ExternalLink } from 'components/lib/ExternalLink';\nimport { Checklists } from 'lib/checklist/data/checklists';\nimport { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistLists } from 'lib/checklist/data/lists';\n\nexport const A32NXChecklistData = {\n    uid: Checklists.FLYBYWIRE_A32NX,\n    title: 'FlyByWire A32NX',\n    description: (\n        <>\n            The FlyByWire A32NX is a free and open source aircraft provided by\n            {' '}\n            <ExternalLink href=\"https://flybywiresim.com/\">FlyByWire Simulations</ExternalLink>\n            . The aircraft has an awesome, extensive and easy to use\n            {' '}\n            <ExternalLink href=\"https://docs.flybywiresim.com/pilots-corner/\">documentation</ExternalLink>\n            , with literally every button explained. This checklist is adapted from the information available there.\n        </>\n    ),\n    lists: [\n        {\n            listName: ChecklistLists.ORIGINATING,\n            items: [\n                ChecklistItems.A32NX_ORIGINATING_COCKPIT_PREP,\n                ChecklistItems.A32NX_ORIGINATING_PARKING_BRAKE,\n                ChecklistItems.A32NX_ORIGINATING_LOWER_PEDESTAL,\n                ChecklistItems.A32NX_ORIGINATING_THRUST_LEVER_QUADRANT,\n                ChecklistItems.A32NX_ORIGINATING_LANDING_GEAR,\n                ChecklistItems.A32NX_ORIGINATING_WIPER_SELECTORS,\n                ChecklistItems.A32NX_ORIGINATING_EXT_POWER,\n                ChecklistItems.A32NX_ORIGINATING_BATTERY,\n                ChecklistItems.A32NX_ORIGINATING_APU,\n                ChecklistItems.A32NX_ORIGINATING_ADIRS,\n                ChecklistItems.A32NX_ORIGINATING_OXYGEN_PANEL,\n                ChecklistItems.A32NX_ORIGINATING_EXTERIOR_LIGHTS,\n                ChecklistItems.A32NX_ORIGINATING_SIGNS_PANEL,\n                ChecklistItems.A32NX_ORIGINATING_ANTI_ICE_PANEL,\n                ChecklistItems.A32NX_ORIGINATING_CABIN_PRESSURE_PANEL,\n                ChecklistItems.A32NX_ORIGINATING_AIR_CONDITION_PANEL,\n                ChecklistItems.A32NX_ORIGINATING_FUEL_PANEL,\n                ChecklistItems.A32NX_ORIGINATING_HYDRAULIC_PANEL,\n                ChecklistItems.A32NX_ORIGINATING_FIRE_PANEL_TEST,\n                ChecklistItems.A32NX_ORIGINATING_VENTILATION_PANEL,\n                ChecklistItems.A32NX_ORIGINATING_MAINTENANCE_PANEL,\n                ChecklistItems.A32NX_ORIGINATING_EFIS_CONTROL_UNITS,\n                ChecklistItems.A32NX_ORIGINATING_CENTER_INSTRUMENT_PANEL,\n                ChecklistItems.A32NX_ORIGINATING_SWITCHING_PANEL,\n                ChecklistItems.A32NX_ORIGINATING_EICAS,\n                ChecklistItems.A32NX_ORIGINATING_RADIO_PANEL,\n                ChecklistItems.A32NX_ORIGINATING_FUEL,\n                // FIXME: ChecklistItems.A32NX_ORIGINATING_MCDU,\n                ChecklistItems.A32NX_ORIGINATING_MCDU_SIMBRIEF,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_ENGINE_START,\n            items: [\n                ChecklistItems.A32NX_BEFORE_ENGINE_START_APU,\n                ChecklistItems.A32NX_BEFORE_ENGINE_START_EXT_POWER,\n                ChecklistItems.A32NX_BEFORE_ENGINE_START_TCAS,\n                ChecklistItems.A32NX_BEFORE_ENGINE_START_DOORS,\n                ChecklistItems.A32NX_BEFORE_ENGINE_START_BEACON,\n                ChecklistItems.A32NX_BEFORE_ENGINE_START_THRUST_LEVERS,\n                ChecklistItems.A32NX_BEFORE_ENGINE_START_PARKING_BRAKE,\n                ChecklistItems.A32NX_BEFORE_ENGINE_START_BRAKE_PRESSURE,\n            ],\n        },\n        {\n            listName: ChecklistLists.ENGINE_START,\n            items: [\n                ChecklistItems.A32NX_ENGINE_START_CHRONO_START,\n                ChecklistItems.A32NX_ENGINE_START_ENGINE_MODE,\n                ChecklistItems.A32NX_ENGINE_START_ENG2_START,\n                ChecklistItems.A32NX_ENGINE_START_ENG1_START,\n            ],\n        },\n        {\n            listName: ChecklistLists.AFTER_ENGINE_START,\n            items: [\n                ChecklistItems.A32NX_AFTER_ENGINE_START_ENGINE_MODE,\n                ChecklistItems.A32NX_AFTER_ENGINE_START_FLAPS,\n                ChecklistItems.A32NX_AFTER_ENGINE_START_GROUND_SPOILERS,\n                ChecklistItems.A32NX_AFTER_ENGINE_START_APU_BLEED,\n                ChecklistItems.A32NX_AFTER_ENGINE_START_APU,\n                ChecklistItems.A32NX_AFTER_ENGINE_START_ANTI_ICE,\n                ChecklistItems.A32NX_AFTER_ENGINE_START_PITCH_TRIM,\n                ChecklistItems.A32NX_AFTER_ENGINE_START_RUDDER_TRIM,\n                ChecklistItems.A32NX_AFTER_ENGINE_START_FLIGHT_CONTROLS,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_TAXI,\n            items: [\n                ChecklistItems.A32NX_BEFORE_TAXI_EXTERIOR_LIGHTS,\n                ChecklistItems.A32NX_BEFORE_TAXI_RADAR,\n                ChecklistItems.A32NX_BEFORE_TAXI_PREDICTIVE_WINDSHEAR_SYS,\n                ChecklistItems.A32NX_BEFORE_TAXI_TCAS,\n                ChecklistItems.A32NX_BEFORE_TAXI_PARKING_BRAKE,\n                ChecklistItems.A32NX_BEFORE_TAXI_BRAKE_PRESSURE,\n                ChecklistItems.A32NX_BEFORE_TAXI_TERRAIN_ON_ND,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_TAKEOFF,\n            items: [\n                ChecklistItems.A32NX_BEFORE_TAKEOFF_AUTOBRAKE,\n                ChecklistItems.A32NX_BEFORE_TAKEOFF_CABIN_CREW,\n                ChecklistItems.A32NX_BEFORE_TAKEOFF_TAKEOFF_CONFIG_TEST,\n                ChecklistItems.A32NX_BEFORE_TAKEOFF_BRAKE_TEMP,\n                ChecklistItems.A32NX_BEFORE_TAKEOFF_EXTERIOR_LIGHTS,\n            ],\n        },\n        {\n            listName: ChecklistLists.CLIMB,\n            items: [\n                ChecklistItems.A32NX_CLIMB_LANDING_GEAR,\n                ChecklistItems.A32NX_CLIMB_AUTOPILOT,\n                ChecklistItems.A32NX_CLIMB_THRUST_LEVERS,\n                ChecklistItems.A32NX_CLIMB_FLAPS,\n                ChecklistItems.A32NX_CLIMB_GROUND_SPOILERS,\n                ChecklistItems.A32NX_CLIMB_EXTERIOR_LIGHTS,\n                ChecklistItems.A32NX_CLIMB_SEATBELT_SIGNS,\n                ChecklistItems.A32NX_CLIMB_ALTIMETER,\n                ChecklistItems.A32NX_CLIMB_RADAR,\n                ChecklistItems.A32NX_CLIMB_ANTI_ICE,\n                ChecklistItems.A32NX_CLIMB_EFIS,\n                ChecklistItems.A32NX_CLIMB_ECAM_MEMO,\n                ChecklistItems.A32NX_CLIMB_NAVAIDS,\n            ],\n        },\n        {\n            listName: ChecklistLists.CRUISE,\n            items: [\n                ChecklistItems.A32NX_CRUISE_ECAM_MEMO,\n                ChecklistItems.A32NX_CRUISE_FLIGHT_PROGRESS,\n                ChecklistItems.A32NX_CRUISE_FUEL,\n                ChecklistItems.A32NX_CRUISE_NAVIGATION_ACCURACY,\n                ChecklistItems.A32NX_CRUISE_RADAR,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_DESCENT,\n            items: [\n                ChecklistItems.A32NX_BEFORE_DESCENT_WEATHER,\n                ChecklistItems.A32NX_BEFORE_DESCENT_NAV_CHARTS,\n                ChecklistItems.A32NX_BEFORE_DESCENT_EFB_LANDING_PERF,\n                ChecklistItems.A32NX_BEFORE_DESCENT_MCDU,\n                ChecklistItems.A32NX_BEFORE_DESCENT_GPWS_LDG_FLAPS_3,\n                ChecklistItems.A32NX_BEFORE_DESCENT_LANDING_ELEV,\n                ChecklistItems.A32NX_BEFORE_DESCENT_AUTO_BRAKE,\n                ChecklistItems.A32NX_BEFORE_DESCENT_APPROACH_BRIEFING,\n                ChecklistItems.A32NX_BEFORE_DESCENT_TERR_ON_ND,\n                ChecklistItems.A32NX_BEFORE_DESCENT_RADAR,\n                ChecklistItems.A32NX_BEFORE_DESCENT_ANTI_ICE,\n            ],\n        },\n        {\n            listName: ChecklistLists.DESCENT,\n            items: [\n                ChecklistItems.A32NX_DESCENT_MCDU_PERF,\n                ChecklistItems.A32NX_DESCENT_ALTIMETER,\n                ChecklistItems.A32NX_DESCENT_EXTERIOR_LIGHTS,\n                ChecklistItems.A32NX_DESCENT_EFIS,\n                ChecklistItems.A32NX_DESCENT_NAVAIDS,\n            ],\n        },\n        {\n            listName: ChecklistLists.APPROACH,\n            items: [\n                ChecklistItems.A32NX_APPROACH_FPLN_SEQUENCING,\n                ChecklistItems.A32NX_APPROACH_APPROACH_PHASE,\n                ChecklistItems.A32NX_APPROACH_MANAGED_SPEED,\n                ChecklistItems.A32NX_APPROACH_SPEED_BRAKES,\n                ChecklistItems.A32NX_APPROACH_RADAR,\n                ChecklistItems.A32NX_APPROACH_FLAPS,\n                ChecklistItems.A32NX_APPROACH_LANDING_GEAR,\n                ChecklistItems.A32NX_APPROACH_GROUND_SPOILERS,\n                ChecklistItems.A32NX_APPROACH_EXTERIOR_LIGHTS,\n                ChecklistItems.A32NX_APPROACH_AUTO_THROTTLE,\n                ChecklistItems.A32NX_APPROACH_ANTI_ICE,\n                ChecklistItems.A32NX_APPROACH_SLIDING_TABLE,\n                ChecklistItems.A32NX_APPROACH_CABIN_CREW,\n                ChecklistItems.A32NX_APPROACH_LANDING_MEMO,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_LANDING,\n            items: [\n                ChecklistItems.A32NX_BEFORE_LANDING_FLAPS,\n                ChecklistItems.A32NX_BEFORE_LANDING_LANDING_GEAR,\n            ],\n        },\n        {\n            listName: ChecklistLists.AFTER_LANDING,\n            items: [\n                ChecklistItems.A32NX_AFTER_LANDING_GROUND_SPOILERS,\n                ChecklistItems.A32NX_AFTER_LANDING_EXTERIOR_LIGHTS,\n                ChecklistItems.A32NX_AFTER_LANDING_RADAR,\n                ChecklistItems.A32NX_AFTER_LANDING_PREDICTIVE_WINDSHEAR_SYSTEM,\n                ChecklistItems.A32NX_AFTER_LANDING_ENG_MODE,\n                ChecklistItems.A32NX_AFTER_LANDING_TCAS,\n                ChecklistItems.A32NX_AFTER_LANDING_ATC,\n                ChecklistItems.A32NX_AFTER_LANDING_APU,\n            ],\n        },\n        {\n            listName: ChecklistLists.PARKING,\n            items: [\n                ChecklistItems.A32NX_PARKING_ANTI_ICE,\n                ChecklistItems.A32NX_PARKING_PARKING_BRAKE,\n                ChecklistItems.A32NX_PARKING_ENGINE_MASTERS,\n                ChecklistItems.A32NX_PARKING_SEAT_BELT_SIGNS,\n                ChecklistItems.A32NX_PARKING_FUEL_PUMPS,\n                ChecklistItems.A32NX_PARKING_ATC,\n                ChecklistItems.A32NX_PARKING_EXTERIOR_LIGHTS,\n                ChecklistItems.A32NX_PARKING_EXT_POWER,\n            ],\n        },\n        {\n            listName: ChecklistLists.SECURING,\n            items: [\n                ChecklistItems.A32NX_SECURING_PARKING_BRAKE,\n                ChecklistItems.A32NX_SECURING_ADIRS,\n                ChecklistItems.A32NX_SECURING_EXTERIOR_LIGHTS,\n                ChecklistItems.A32NX_SECURING_APU_BLEED,\n                ChecklistItems.A32NX_SECURING_APU,\n                ChecklistItems.A32NX_SECURING_EMERGENCY_LIGHTS,\n                ChecklistItems.A32NX_SECURING_SIGNS,\n                ChecklistItems.A32NX_SECURING_BATTERIES,\n            ],\n        },\n    ],\n};\n","const commonFilters = {\n    EXCLUDE_UNOFFICIAL: 'exclude-unofficial',\n    EXCLUDE_FFOTD: 'exclude-ffotd',\n\n    INCLUDE_VATSIM: 'include-vatsim',\n    EXCLUDE_VATSIM: 'exclude-vatsim',\n\n    INCLUDE_EXTENSIONS: 'include-extensions',\n    EXCLUDE_EXTENSIONS: 'exclude-extensions',\n\n    INCLUDE_SIMSETUP: 'include-simsetup',\n    EXCLUDE_SIMSETUP: 'exclude-simsetup',\n\n    INCLUDE_NAV: 'include-nav',\n    EXCLUDE_NAV: 'exclude-nav',\n};\n\nexport const ChecklistFilters = Object.freeze({\n    ...commonFilters,\n});\n","import { Checklists } from 'lib/checklist/data/checklists';\nimport { ChecklistFilters } from 'lib/checklist/data/filters';\nimport { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistLists } from 'lib/checklist/data/lists';\n\nexport const C172G1000ChecklistData = {\n    uid: Checklists.C172_G1000,\n    title: 'Cessna 172 Skyhawk (G1000)',\n    selectableFilters: [\n        ChecklistFilters.EXCLUDE_UNOFFICIAL,\n    ],\n    defaultFilters: [],\n    lists: [\n        {\n            listName: ChecklistLists.PRE_FLIGHT,\n            items: [\n                ChecklistItems.C172_PREFLIGHT_AIRCRAFT_DOCUMENTS,\n                ChecklistItems.C172_PREFLIGHT_PARKING_BRAKE,\n                ChecklistItems.C172_PREFLIGHT_IGNITION,\n                ChecklistItems.C172_PREFLIGHT_AVIONICS_SWITCHES_OFF,\n                ChecklistItems.C172G1000_PREFLIGHT_MASTER_SWITCHES_1,\n                ChecklistItems.C172G1000_PREFLIGHT_PFD,\n                ChecklistItems.C172_PREFLIGHT_FUEL_QUANTITY,\n                ChecklistItems.C172_PREFLIGHT_LOW_FUEL_ANNUNCIATORS,\n                // FIXME: These two annunciator checks only in G1000 official version?\n                ChecklistItems.C172G1000_PREFLIGHT_OIL_PRESSURE_ANNUNCIATOR,\n                ChecklistItems.C172G1000_PREFLIGHT_LOW_VACUUM_ANNUNCIATOR,\n                // FIXME: Translate to sublists.\n                ChecklistItems.C172G1000_PREFLIGHT_AVIONICS_SWITCH_1_ON,\n                ChecklistItems.C172G1000_PREFLIGHT_AVIONICS_SWITCH_1_FAN,\n                ChecklistItems.C172G1000_PREFLIGHT_AVIONICS_SWITCH_1_OFF,\n                ChecklistItems.C172G1000_PREFLIGHT_AVIONICS_SWITCH_2_ON,\n                ChecklistItems.C172G1000_PREFLIGHT_AVIONICS_SWITCH_2_FAN,\n                ChecklistItems.C172G1000_PREFLIGHT_AVIONICS_SWITCH_2_OFF,\n                ChecklistItems.C172_PREFLIGHT_PITOT_HEAT_ON,\n                ChecklistItems.C172_PREFLIGHT_PITOT_HEAT_OFF,\n                ChecklistItems.C172G1000_PREFLIGHT_LOW_VOLTS_ANNUNCIATOR,\n                ChecklistItems.C172G1000_PREFLIGHT_MASTER_SWITCHES_2,\n                ChecklistItems.C172G1000_PREFLIGHT_ELEVATOR_TRIM,\n                ChecklistItems.C172_PREFLIGHT_FUEL_SELECTOR,\n                ChecklistItems.C172_PREFLIGHT_STATIC_PRESSURE_ALT_SOURCE_VALVE,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_ENGINE_START,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_ENGINE_START,\n            items: [\n                ChecklistItems.C172_BEFORE_START_PREFLIGHT_INSPECTION,\n                ChecklistItems.C172_BEFORE_START_SEATS_BELTS,\n                ChecklistItems.C172G1000_BEFORE_START_BRAKES,\n                ChecklistItems.C172G1000_BEFORE_START_CIRCUIT_BREAKERS,\n                ChecklistItems.C172_BEFORE_START_ELECTRICAL_EQUIPMENT,\n                ChecklistItems.C172_BEFORE_START_AVIONICS_SWITCHES,\n                ChecklistItems.C172_BEFORE_START_FUEL_SELECTOR,\n                ChecklistItems.C172_BEFORE_START_FUEL_SHUTOFF_VALVE,\n            ],\n            nextListNames: [\n                ChecklistLists.ENGINE_START,\n            ],\n        },\n        {\n            listName: ChecklistLists.ENGINE_START,\n            items: [\n                ChecklistItems.C172_ENGINE_START_THROTTLE,\n                ChecklistItems.C172_ENGINE_START_MIXTURE_1,\n                ChecklistItems.C172G1000_ENGINE_START_STANDBY_BATT_TEST,\n                ChecklistItems.C172G1000_ENGINE_START_STANDBY_BATT_ARM,\n                ChecklistItems.C172G1000_ENGINE_START_ENGINE_INDICATING_SYSTEM,\n                ChecklistItems.C172G1000_ENGINE_START_BUS_E_VOLTS,\n                ChecklistItems.C172G1000_ENGINE_START_BUS_M_VOLTS,\n                ChecklistItems.C172G1000_ENGINE_START_BATT_S_AMPS,\n                ChecklistItems.C172G1000_ENGINE_START_STANDBY_BATT_ANNUNCIATOR,\n                ChecklistItems.C172_ENGINE_START_PROPELLER_AREA,\n                ChecklistItems.C172G1000_ENGINE_START_MASTER_SWITCH,\n                ChecklistItems.C172_ENGINE_START_BEACON_LIGHT,\n                ChecklistItems.C172_ENGINE_START_MIXTURE_2,\n                ChecklistItems.C172_ENGINE_START_AUX_FUEL_PUMP,\n                ChecklistItems.C172_ENGINE_START_MIXTURE_3,\n                ChecklistItems.C172_ENGINE_START_FEET_BRAKES,\n                ChecklistItems.C172_ENGINE_START_IGNITION,\n                ChecklistItems.C172_ENGINE_START_MIXTURE_4,\n            ],\n            nextListNames: [\n                ChecklistLists.AFTER_ENGINE_START,\n            ],\n        },\n        {\n            listName: ChecklistLists.AFTER_ENGINE_START,\n            items: [\n                ChecklistItems.C172_AFTER_START_THROTTLE,\n                ChecklistItems.C172_AFTER_START_OIL_PRESSURE,\n                ChecklistItems.C172G1000_AFTER_START_AMPS,\n                ChecklistItems.C172G1000_AFTER_START_LOW_VOLTS_ANNUNCIATOR,\n                ChecklistItems.C172_AFTER_START_AVIONICS_SWITCHES,\n                ChecklistItems.C172_AFTER_START_FLAPS,\n            ],\n            nextListNames: [\n                ChecklistLists.TAXI,\n            ],\n        },\n        {\n            listName: ChecklistLists.TAXI,\n            items: [\n                ChecklistItems.C172_TAXI_TAXI_LIGHT,\n                ChecklistItems.C172_TAXI_LANDING_LIGHT,\n                ChecklistItems.C172_TAXI_STROBE_LIGHT,\n                ChecklistItems.C172_TAXI_NAV_LIGHT,\n                ChecklistItems.C172_TAXI_PARKING_BRAKE,\n                ChecklistItems.C172_TAXI_BRAKES,\n                ChecklistItems.C172_TAXI_RUDDER,\n            ],\n            nextListNames: [\n                ChecklistLists.RUN_UP,\n            ],\n        },\n        {\n            listName: ChecklistLists.RUN_UP,\n            items: [\n                ChecklistItems.C172_RUNUP_PARKING_BRAKE,\n                ChecklistItems.C172_RUNUP_SEATS_BACKS,\n                ChecklistItems.C172_RUNUP_SEATS_BELTS,\n                ChecklistItems.C172G1000_RUNUP_DOORS,\n                ChecklistItems.C172_RUNUP_FLIGHT_CONTROLS_1,\n                ChecklistItems.C172G1000_RUNUP_FLIGHT_INSTRUMENTS,\n                ChecklistItems.C172G1000_RUNUP_ALTIMETER,\n                ChecklistItems.C172G1000_RUNUP_STANDBY_ALTIMETER,\n                ChecklistItems.C172G1000_RUNUP_ALTITUDE_SELECT,\n                ChecklistItems.C172G1000_RUNUP_STANDBY_FLIGHT_INSTRUMENTS,\n                ChecklistItems.C172_RUNUP_FUEL_QUANTITY,\n                ChecklistItems.C172_RUNUP_MIXTURE,\n                ChecklistItems.C172_RUNUP_FUEL_SELECTOR,\n                ChecklistItems.C172_RUNUP_AUTOPILOT,\n                ChecklistItems.C172_RUNUP_FLIGHT_CONTROLS_2,\n                ChecklistItems.C172G1000_RUNUP_AP_TRIM_DISC,\n                ChecklistItems.C172G1000_RUNUP_FLIGHT_DIRECTOR,\n                ChecklistItems.C172G1000_RUNUP_ELEVATOR_TRIM,\n                ChecklistItems.C172_RUNUP_THROTTLE_1,\n                ChecklistItems.C172_RUNUP_MAGNETOS_1,\n                ChecklistItems.C172_RUNUP_MAGNETOS_2,\n                ChecklistItems.C172_RUNUP_MAGNETOS_3,\n                ChecklistItems.C172_RUNUP_VACCUM_GAUGE,\n                ChecklistItems.C172G1000_RUNUP_ENGINE_INDICATORS,\n                ChecklistItems.C172G1000_RUNUP_ANMETERS_VOLTMETERS,\n                ChecklistItems.C172G1000_RUNUP_ANNUNCIATORS,\n                ChecklistItems.C172_RUNUP_ENGINE_IDLE,\n                ChecklistItems.C172_RUNUP_THROTTLE_2,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_TAKEOFF,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_TAKEOFF,\n            items: [\n                ChecklistItems.C172G1000_BEFORE_TAKEOFF_COM_FREQS,\n                ChecklistItems.C172G1000_BEFORE_TAKEOFF_NAV_FREQS,\n                ChecklistItems.C172G1000_BEFORE_TAKEOFF_FMS_GPS,\n                ChecklistItems.C172G1000_BEFORE_TAKEOFF_TRANSPONDER,\n                ChecklistItems.C172G1000_BEFORE_TAKEOFF_CDI_NAV_SOURCE,\n                ChecklistItems.C172G1000_BEFORE_TAKEOFF_CABIN_PWR,\n                ChecklistItems.C172_BEFORE_TAKEOFF_FLAPS,\n                ChecklistItems.C172_BEFORE_TAKEOFF_CABIN_WINDOWS,\n                ChecklistItems.C172_BEFORE_TAKEOFF_PARKING_BRAKE,\n            ],\n            nextListNames: [\n                ChecklistLists.TAKEOFF,\n            ],\n        },\n        {\n            listName: ChecklistLists.TAKEOFF,\n            items: [\n                ChecklistItems.C172_TAKEOFF_FLAPS_1,\n                ChecklistItems.C172_TAKEOFF_THROTTLE,\n                ChecklistItems.C172_TAKEOFF_MIXTURE,\n                ChecklistItems.C172G1000_TAKEOFF_ANNUNCIATORS,\n                ChecklistItems.C172_TAKEOFF_AIRSPEED_INDICATOR,\n                ChecklistItems.C172_TAKEOFF_LIFT_NOSEWHEEL,\n                ChecklistItems.C172_TAKEOFF_INITIAL_CLIMB,\n                ChecklistItems.C172_TAKEOFF_FLAPS_2,\n            ],\n            nextListNames: [\n                ChecklistLists.CLIMB,\n            ],\n        },\n        {\n            listName: ChecklistLists.CLIMB,\n            items: [\n                ChecklistItems.C172_CLIMB_AIRSPEED,\n                ChecklistItems.C172_CLIMB_THROTTLE,\n                ChecklistItems.C172_CLIMB_MIXTURE_1,\n                ChecklistItems.C172_CLIMB_ENGINE_GAUGES,\n                ChecklistItems.C172_CLIMB_TAXI_LANDING_LIGHTS,\n                ChecklistItems.C172_CLIMB_MIXTURE_2,\n            ],\n            nextListNames: [\n                ChecklistLists.CRUISE,\n            ],\n        },\n        {\n            listName: ChecklistLists.CRUISE,\n            items: [\n                ChecklistItems.C172_CRUISE_POWER,\n                ChecklistItems.C172_CRUISE_ELEVATOR_TRIM,\n                ChecklistItems.C172_CRUISE_MIXTURE,\n                ChecklistItems.C172_CRUISE_ENGINE_GAUGES,\n                ChecklistItems.C172G1000_CRUISE_FMS_GPS,\n            ],\n            nextListNames: [\n                ChecklistLists.DESCENT,\n            ],\n        },\n        {\n            listName: ChecklistLists.DESCENT,\n            items: [\n                ChecklistItems.C172_DESCENT_POWER,\n                ChecklistItems.C172_DESCENT_MIXTURE,\n                ChecklistItems.C172G1000_DESCENT_ALTIMETER,\n                ChecklistItems.C172G1000_DESCENT_STANDBY_ALTIMETER,\n                ChecklistItems.C172G1000_DESCENT_ALTITUDE_SELECT,\n                ChecklistItems.C172G1000_DESCENT_CDI_NAV,\n                ChecklistItems.C172G1000_DESCENT_FMS_GPS,\n                ChecklistItems.C172_DESCENT_FUEL_SELECTOR,\n                ChecklistItems.C172_DESCENT_FLAPS,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_LANDING,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_LANDING,\n            items: [\n                ChecklistItems.C172_BEFORE_LANDING_SEATS_BACKS,\n                ChecklistItems.C172_BEFORE_LANDING_SEATS_BELTS,\n                ChecklistItems.C172_BEFORE_LANDING_FUEL_SELECTOR,\n                ChecklistItems.C172_BEFORE_LANDING_MIXTURE,\n                ChecklistItems.C172_BEFORE_LANDING_TAXI_LANDING_LIGHTS,\n                ChecklistItems.C172_BEFORE_LANDING_AUTOPILOT,\n                ChecklistItems.C172G1000_BEFORE_LANDING_CABIN_PWR,\n            ],\n            nextListNames: [\n                ChecklistLists.LANDING,\n            ],\n        },\n        {\n            listName: ChecklistLists.LANDING,\n            items: [\n                ChecklistItems.C172_LANDING_FLAPS,\n                ChecklistItems.C172_LANDING_AIRSPEED,\n                ChecklistItems.C172_LANDING_TOUCHDOWN,\n                ChecklistItems.C172_LANDING_LANDING_ROLL,\n                ChecklistItems.C172_LANDING_BRAKING,\n            ],\n            nextListNames: [\n                ChecklistLists.AFTER_LANDING,\n            ],\n        },\n        {\n            listName: ChecklistLists.AFTER_LANDING,\n            items: [\n                ChecklistItems.C172_AFTER_LANDING_FLAPS,\n                ChecklistItems.C172_AFTER_LANDING_LANDING_LIGHT,\n                ChecklistItems.C172_AFTER_LANDING_TAXI_LIGHT,\n                ChecklistItems.C172_AFTER_LANDING_STROBE_LIGHT,\n                ChecklistItems.C172_AFTER_LANDING_ELEVATOR_TRIM,\n                ChecklistItems.C172_AFTER_LANDING_TRANSPONDER,\n            ],\n            nextListNames: [\n                ChecklistLists.PARKING,\n            ],\n        },\n        {\n            listName: ChecklistLists.PARKING,\n            items: [\n                ChecklistItems.C172_PARKING_PARKING_BRAKE,\n                ChecklistItems.C172_PARKING_AVIONICS_SWITCHES,\n                ChecklistItems.C172_PARKING_ENGINE_IDLE,\n                ChecklistItems.C172_PARKING_MAGNETOS,\n                ChecklistItems.C172_PARKING_MIXTURE,\n            ],\n            nextListNames: [\n                ChecklistLists.SECURING,\n            ],\n        },\n        {\n            listName: ChecklistLists.SECURING,\n            items: [\n                ChecklistItems.C172_SECURING_IGNITION,\n                ChecklistItems.C172_SECURING_LANDING_LIGHT,\n                ChecklistItems.C172_SECURING_TAXI_LIGHT,\n                ChecklistItems.C172_SECURING_NAV_LIGHT,\n                ChecklistItems.C172G1000_SECURING_MASTER_SWITCHES,\n                ChecklistItems.C172G1000_SECURING_STANDBY_BATT,\n                ChecklistItems.C172_SECURING_FUEL_SELECTOR,\n            ],\n        },\n    ],\n};\n","import { Checklists } from 'lib/checklist/data/checklists';\nimport { ChecklistFilters } from 'lib/checklist/data/filters';\nimport { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistLists } from 'lib/checklist/data/lists';\n\nexport const C172SteamChecklistData = {\n    uid: Checklists.C172_STEAM,\n    title: 'Cessna 172 Skyhawk (Steam Gauges)',\n    selectableFilters: [\n        ChecklistFilters.EXCLUDE_UNOFFICIAL,\n    ],\n    defaultFilters: [],\n    lists: [\n        {\n            listName: ChecklistLists.PRE_FLIGHT,\n            items: [\n                ChecklistItems.C172_PREFLIGHT_AIRCRAFT_DOCUMENTS,\n                ChecklistItems.C172_PREFLIGHT_PARKING_BRAKE,\n                ChecklistItems.C172_PREFLIGHT_IGNITION,\n                ChecklistItems.C172_PREFLIGHT_AVIONICS_SWITCHES_OFF,\n                ChecklistItems.C172STEAM_PREFLIGHT_BATTERY_SWITCH_1,\n                ChecklistItems.C172_PREFLIGHT_FUEL_QUANTITY,\n                ChecklistItems.C172_PREFLIGHT_LOW_FUEL_ANNUNCIATORS,\n                ChecklistItems.C172STEAM_PREFLIGHT_AVIONICS_SWITCHES_1,\n                ChecklistItems.C172STEAM_PREFLIGHT_AVIONICS_COOLING_FAN,\n                ChecklistItems.C172STEAM_PREFLIGHT_AVIONICS_SWITCHES_2,\n                ChecklistItems.C172_PREFLIGHT_STATIC_PRESSURE_ALT_SOURCE_VALVE,\n                ChecklistItems.C172STEAM_PREFLIGHT_ANNUNCIATOR_PANEL,\n                ChecklistItems.C172_PREFLIGHT_FUEL_SELECTOR,\n                ChecklistItems.C172STEAM_PREFLIGHT_FUEL_SHUTOFF_VALVE,\n                ChecklistItems.C172STEAM_PREFLIGHT_FLAPS_DOWN,\n                ChecklistItems.C172_PREFLIGHT_PITOT_HEAT_ON,\n                ChecklistItems.C172_PREFLIGHT_PITOT_HEAT_OFF,\n                ChecklistItems.C172STEAM_PREFLIGHT_BATTERY_SWITCH_2,\n                ChecklistItems.C172STEAM_PREFLIGHT_ELEVATOR_TRIM,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_ENGINE_START,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_ENGINE_START,\n            items: [\n                ChecklistItems.C172_BEFORE_START_PREFLIGHT_INSPECTION,\n                ChecklistItems.C172_BEFORE_START_SEATS_BELTS,\n                ChecklistItems.C172_BEFORE_START_ELECTRICAL_EQUIPMENT,\n                ChecklistItems.C172_BEFORE_START_AVIONICS_SWITCHES,\n                ChecklistItems.C172_BEFORE_START_FUEL_SELECTOR,\n                ChecklistItems.C172_BEFORE_START_FUEL_SHUTOFF_VALVE,\n            ],\n            nextListNames: [\n                ChecklistLists.ENGINE_START,\n            ],\n        },\n        {\n            listName: ChecklistLists.ENGINE_START,\n            items: [\n                ChecklistItems.C172_ENGINE_START_THROTTLE,\n                ChecklistItems.C172_ENGINE_START_MIXTURE_1,\n                ChecklistItems.C172_ENGINE_START_PROPELLER_AREA,\n                ChecklistItems.C172STEAM_ENGINE_START_BATTERY_SWITCH,\n                ChecklistItems.C172_ENGINE_START_BEACON_LIGHT,\n                ChecklistItems.C172_ENGINE_START_MIXTURE_2,\n                ChecklistItems.C172_ENGINE_START_AUX_FUEL_PUMP,\n                ChecklistItems.C172_ENGINE_START_MIXTURE_3,\n                ChecklistItems.C172_ENGINE_START_FEET_BRAKES,\n                ChecklistItems.C172_ENGINE_START_IGNITION,\n                ChecklistItems.C172_ENGINE_START_MIXTURE_4,\n            ],\n            nextListNames: [\n                ChecklistLists.AFTER_ENGINE_START,\n            ],\n        },\n        {\n            listName: ChecklistLists.AFTER_ENGINE_START,\n            items: [\n                ChecklistItems.C172_AFTER_START_THROTTLE,\n                ChecklistItems.C172_AFTER_START_OIL_PRESSURE,\n                ChecklistItems.C172STEAM_AFTER_START_ALTERNATOR,\n                ChecklistItems.C172STEAM_AFTER_START_ALTERNATOR_INDICATOR,\n                ChecklistItems.C172STEAM_AFTER_START_ANMETER,\n                ChecklistItems.C172_AFTER_START_AVIONICS_SWITCHES,\n                ChecklistItems.C172STEAM_AFTER_START_RADIOS,\n                ChecklistItems.C172STEAM_AFTER_START_TRANSPONDER,\n                ChecklistItems.C172_AFTER_START_FLAPS,\n                ChecklistItems.C172STEAM_AFTER_START_HEADING_INDICATOR,\n                ChecklistItems.C172STEAM_AFTER_START_ALTIMETER,\n                ChecklistItems.C172STEAM_AFTER_START_ALTITUDE_INDICATOR,\n            ],\n            nextListNames: [\n                ChecklistLists.TAXI,\n            ],\n        },\n        {\n            listName: ChecklistLists.TAXI,\n            items: [\n                ChecklistItems.C172_TAXI_TAXI_LIGHT,\n                ChecklistItems.C172_TAXI_LANDING_LIGHT,\n                ChecklistItems.C172_TAXI_STROBE_LIGHT,\n                ChecklistItems.C172_TAXI_NAV_LIGHT,\n                ChecklistItems.C172_TAXI_PARKING_BRAKE,\n                ChecklistItems.C172_TAXI_BRAKES,\n                ChecklistItems.C172_TAXI_RUDDER,\n                ChecklistItems.C172STEAM_TAXI_TURN_COORDINATOR,\n                ChecklistItems.C172STEAM_TAXI_HEADING_INDICATOR,\n                ChecklistItems.C172STEAM_TAXI_COMPASS,\n            ],\n            nextListNames: [\n                ChecklistLists.RUN_UP,\n            ],\n        },\n        {\n            listName: ChecklistLists.RUN_UP,\n            items: [\n                ChecklistItems.C172_RUNUP_PARKING_BRAKE,\n                ChecklistItems.C172_RUNUP_SEATS_BACKS,\n                ChecklistItems.C172_RUNUP_SEATS_BELTS,\n                ChecklistItems.C172_RUNUP_FLIGHT_CONTROLS_1,\n                ChecklistItems.C172STEAM_RUNUP_FLIGHT_INSTRUMENTS,\n                ChecklistItems.C172_RUNUP_FUEL_QUANTITY,\n                ChecklistItems.C172_RUNUP_MIXTURE,\n                ChecklistItems.C172_RUNUP_FUEL_SELECTOR,\n                ChecklistItems.C172_RUNUP_AUTOPILOT,\n                ChecklistItems.C172_RUNUP_FLIGHT_CONTROLS_2,\n                ChecklistItems.C172STEAM_RUNUP_AUTOPILOT,\n                ChecklistItems.C172_RUNUP_THROTTLE_1,\n                ChecklistItems.C172_RUNUP_MAGNETOS_1,\n                ChecklistItems.C172_RUNUP_MAGNETOS_2,\n                ChecklistItems.C172_RUNUP_MAGNETOS_3,\n                ChecklistItems.C172_RUNUP_VACCUM_GAUGE,\n                ChecklistItems.C172STEAM_RUNUP_OIL_PRESSURE,\n                ChecklistItems.C172STEAM_RUNUP_OIL_TEMPERATURE,\n                ChecklistItems.C172STEAM_RUNUP_ANMETER,\n                ChecklistItems.C172STEAM_RUNUP_ANNUNCIATOR_PANEL,\n                ChecklistItems.C172_RUNUP_ENGINE_IDLE,\n                ChecklistItems.C172_RUNUP_THROTTLE_2,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_TAKEOFF,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_TAKEOFF,\n            items: [\n                ChecklistItems.C172STEAM_BEFORE_TAKEOFF_RADIOS,\n                ChecklistItems.C172STEAM_BEFORE_TAKEOFF_AVIONICS,\n                ChecklistItems.C172STEAM_BEFORE_TAKEOFF_NAV_GPS_SWITCH,\n                ChecklistItems.C172STEAM_BEFORE_TAKEOFF_TRANSPONDER,\n                ChecklistItems.C172STEAM_BEFORE_TAKEOFF_AUTOPILOT,\n                ChecklistItems.C172STEAM_BEFORE_TAKEOFF_ELEVATOR_TRIM,\n                ChecklistItems.C172_BEFORE_TAKEOFF_FLAPS,\n                ChecklistItems.C172_BEFORE_TAKEOFF_CABIN_WINDOWS,\n                ChecklistItems.C172_BEFORE_TAKEOFF_PARKING_BRAKE,\n            ],\n            nextListNames: [\n                ChecklistLists.TAKEOFF,\n            ],\n        },\n        {\n            listName: ChecklistLists.TAKEOFF,\n            items: [\n                ChecklistItems.C172_TAKEOFF_FLAPS_1,\n                ChecklistItems.C172_TAKEOFF_THROTTLE,\n                ChecklistItems.C172_TAKEOFF_MIXTURE,\n                ChecklistItems.C172STEAM_TAKEOFF_ANNUNCIATORS,\n                ChecklistItems.C172_TAKEOFF_AIRSPEED_INDICATOR,\n                ChecklistItems.C172_TAKEOFF_LIFT_NOSEWHEEL,\n                ChecklistItems.C172_TAKEOFF_INITIAL_CLIMB,\n                ChecklistItems.C172_TAKEOFF_FLAPS_2,\n            ],\n            nextListNames: [\n                ChecklistLists.CLIMB,\n            ],\n        },\n        {\n            listName: ChecklistLists.CLIMB,\n            items: [\n                ChecklistItems.C172_CLIMB_AIRSPEED,\n                ChecklistItems.C172_CLIMB_THROTTLE,\n                ChecklistItems.C172_CLIMB_MIXTURE_1,\n                ChecklistItems.C172_CLIMB_ENGINE_GAUGES,\n                ChecklistItems.C172_CLIMB_TAXI_LANDING_LIGHTS,\n                ChecklistItems.C172_CLIMB_MIXTURE_2,\n            ],\n            nextListNames: [\n                ChecklistLists.CRUISE,\n            ],\n        },\n        {\n            listName: ChecklistLists.CRUISE,\n            items: [\n                ChecklistItems.C172_CRUISE_POWER,\n                ChecklistItems.C172_CRUISE_ELEVATOR_TRIM,\n                ChecklistItems.C172_CRUISE_MIXTURE,\n                ChecklistItems.C172_CRUISE_ENGINE_GAUGES,\n                ChecklistItems.C172STEAM_CRUISE_FLIGHT_INSTRUMENTS,\n            ],\n            nextListNames: [\n                ChecklistLists.DESCENT,\n            ],\n        },\n        {\n            listName: ChecklistLists.DESCENT,\n            items: [\n                ChecklistItems.C172_DESCENT_POWER,\n                ChecklistItems.C172_DESCENT_MIXTURE,\n                ChecklistItems.C172STEAM_DESCENT_ALTIMETER,\n                ChecklistItems.C172STEAM_DESCENT_NAV_GPS,\n                ChecklistItems.C172_DESCENT_FUEL_SELECTOR,\n                ChecklistItems.C172_DESCENT_FLAPS,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_LANDING,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_LANDING,\n            items: [\n                ChecklistItems.C172_BEFORE_LANDING_SEATS_BACKS,\n                ChecklistItems.C172_BEFORE_LANDING_SEATS_BELTS,\n                ChecklistItems.C172_BEFORE_LANDING_FUEL_SELECTOR,\n                ChecklistItems.C172_BEFORE_LANDING_MIXTURE,\n                ChecklistItems.C172_BEFORE_LANDING_TAXI_LANDING_LIGHTS,\n                ChecklistItems.C172_BEFORE_LANDING_AUTOPILOT,\n            ],\n            nextListNames: [\n                ChecklistLists.LANDING,\n            ],\n        },\n        {\n            listName: ChecklistLists.LANDING,\n            items: [\n                ChecklistItems.C172_LANDING_FLAPS,\n                ChecklistItems.C172_LANDING_AIRSPEED,\n                ChecklistItems.C172_LANDING_TOUCHDOWN,\n                ChecklistItems.C172_LANDING_LANDING_ROLL,\n                ChecklistItems.C172_LANDING_BRAKING,\n            ],\n            nextListNames: [\n                ChecklistLists.AFTER_LANDING,\n            ],\n        },\n        {\n            listName: ChecklistLists.AFTER_LANDING,\n            items: [\n                ChecklistItems.C172_AFTER_LANDING_FLAPS,\n                ChecklistItems.C172_AFTER_LANDING_LANDING_LIGHT,\n                ChecklistItems.C172_AFTER_LANDING_TAXI_LIGHT,\n                ChecklistItems.C172_AFTER_LANDING_STROBE_LIGHT,\n                ChecklistItems.C172_AFTER_LANDING_ELEVATOR_TRIM,\n                ChecklistItems.C172_AFTER_LANDING_TRANSPONDER,\n            ],\n            nextListNames: [\n                ChecklistLists.PARKING,\n            ],\n        },\n        {\n            listName: ChecklistLists.PARKING,\n            items: [\n                ChecklistItems.C172_PARKING_PARKING_BRAKE,\n                ChecklistItems.C172STEAM_PARKING_TRANSPONDER,\n                ChecklistItems.C172_PARKING_AVIONICS_SWITCHES,\n                ChecklistItems.C172_PARKING_ENGINE_IDLE,\n                ChecklistItems.C172_PARKING_MAGNETOS,\n                ChecklistItems.C172_PARKING_MIXTURE,\n            ],\n            nextListNames: [\n                ChecklistLists.SECURING,\n            ],\n        },\n        {\n            listName: ChecklistLists.SECURING,\n            items: [\n                ChecklistItems.C172_SECURING_IGNITION,\n                ChecklistItems.C172_SECURING_LANDING_LIGHT,\n                ChecklistItems.C172_SECURING_TAXI_LIGHT,\n                ChecklistItems.C172_SECURING_NAV_LIGHT,\n                ChecklistItems.C172STEAM_SECURING_ALTERNATOR,\n                ChecklistItems.C172STEAM_SECURING_BATTERY,\n                ChecklistItems.C172_SECURING_FUEL_SELECTOR,\n            ],\n        },\n    ],\n};\n","import React from 'react';\n\nimport { ExternalLink } from 'components/lib/ExternalLink';\nimport { Checklists } from 'lib/checklist/data/checklists';\nimport { ChecklistFilters } from 'lib/checklist/data/filters';\nimport { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistLists } from 'lib/checklist/data/lists';\n\nexport const CJ4ChecklistData = {\n    uid: Checklists.WORKINGTITLE_CJ4,\n    title: 'WorkingTitle CJ4',\n    description: (\n        <p>\n            This is an interactive checklist for the\n            {' '}\n            <ExternalLink href=\"https://www.workingtitle.aero/packages/cj4/\">WorkingTitle CJ4</ExternalLink>\n            {' '}\n            airplane in Microsoft Flight Simulator 2020. It is recommended to read the\n            {' '}\n            {/* eslint-disable-next-line max-len */}\n            <ExternalLink href=\"https://docs.google.com/document/d/1qzxPMTSQRkvau8QOi7xUqNvjx9rbww_qHlso5AT5OnI/edit\">Operator&apos;s Guide</ExternalLink>\n            {' '}\n            and at least understand the name of various cockpit elements in order to follow steps\n            of this checklist.\n        </p>\n    ),\n    selectableFilters: [\n        ChecklistFilters.EXCLUDE_UNOFFICIAL,\n        ChecklistFilters.EXCLUDE_EXTENSIONS,\n        ChecklistFilters.EXCLUDE_NAV,\n        ChecklistFilters.EXCLUDE_SIMSETUP,\n        ChecklistFilters.EXCLUDE_VATSIM,\n    ],\n    defaultFilters: [],\n    lists: [\n        {\n            listName: ChecklistLists.PRE_FLIGHT,\n            items: [\n                ChecklistItems.NAV_FLIGHT_PLANNING,\n                ChecklistItems.VATSIM_FILE_FLIGHT_PLAN,\n                ChecklistItems.SIMSETUP_FLIGHT_TRACKING_START,\n                ChecklistItems.SIMSETUP_FLIGHT_RECORDING_START,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_ENGINE_START,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_ENGINE_START,\n            items: [\n                ChecklistItems.CJ4_BEFORE_START_BATTERY_SWITCH,\n                ChecklistItems.CJ4_BEFORE_START_EMERGENCY_LIGHTS_SWITCH,\n                ChecklistItems.CJ4_BEFORE_START_STANDBY_FLIGHT_DISPLAY_SWITCH,\n                ChecklistItems.CJ4_BEFORE_START_AVIONICS_SWITCH,\n                ChecklistItems.CJ4EXT_BEFORE_START_EXTERNAL_POWER,\n                ChecklistItems.VATSIM_REQUEST_INITIAL_CLEARANCE,\n                ChecklistItems.CJ4_BEFORE_START_PARKING_BRAKES,\n                ChecklistItems.CJ4_BEFORE_START_WHEEL_CHOCKS,\n                ChecklistItems.CJ4_BEFORE_START_CABIN_DOOR,\n                ChecklistItems.CJ4_BEFORE_START_PASSENGER_BRIEFING,\n                ChecklistItems.CJ4_BEFORE_START_PILOTS_SEATS_ADJUSTED,\n                ChecklistItems.CJ4_BEFORE_START_EXTERIOR_LIGHTS,\n                ChecklistItems.CJ4_BEFORE_START_EICAS,\n                ChecklistItems.CJ4_BEFORE_START_FMS,\n                ChecklistItems.CJ4_BEFORE_START_CLIMATE_CONTROL_SELECTOR,\n            ],\n            nextListNames: [\n                ChecklistLists.ENGINE_START,\n            ],\n        },\n        {\n            listName: ChecklistLists.ENGINE_START,\n            description: (\n                <>\n                    Engine Start procedure is described in detail in the\n                    {' '}\n                    {/* eslint-disable-next-line max-len */}\n                    <ExternalLink href=\"https://docs.google.com/document/d/1qzxPMTSQRkvau8QOi7xUqNvjx9rbww_qHlso5AT5OnI/edit#heading=h.180d15le0pjm\">WorkingTitle CJ4 Guide</ExternalLink>\n                    {' '}\n                    under NORMAL PROCEDURES &gt; ENGINE START.\n                </>\n            ),\n            items: [\n                ChecklistItems.CJ4_ENGINE_START_THROTTLES,\n                ChecklistItems.CJ4_ENGINE_START_STARTER_BUTTON_PUSH,\n                ChecklistItems.CJ4_ENGINE_START_RUNSTOP_BUTTON_TO_RUN,\n                ChecklistItems.CJ4_ENGINE_START_ITT_RISE,\n                ChecklistItems.CJ4_ENGINE_START_EICAS_CHECK,\n                ChecklistItems.CJ4_ENGINE_START_OPPOSITE_ENGINE_START,\n                ChecklistItems.CJ4_ENGINE_START_EXTERNAL_POWER_DISCONNECT,\n                ChecklistItems.CJ4_ENGINE_START_ELECTRICAL_SYSTEM_CHECK,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_TAXI,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_TAXI,\n            items: [\n                ChecklistItems.CJ4_BEFORE_TAXI_AVIONICS_SWITCH,\n                ChecklistItems.CJ4_BEFORE_TAXI_CLIMATE_CONTROL_SWITCH,\n                ChecklistItems.CJ4_BEFORE_TAXI_PASSENGER_LIGHTS_SAFETY,\n                ChecklistItems.CJ4_BEFORE_TAXI_TRIMS,\n                ChecklistItems.CJ4_BEFORE_TAXI_FLIGHT_CONTROLS_FREE,\n                ChecklistItems.CJ4_BEFORE_TAXI_SPEEDBRAKE_CHECK,\n                ChecklistItems.CJ4_BEFORE_TAXI_FLAPS,\n                ChecklistItems.CJ4_BEFORE_TAXI_HYDRAULIC_PRESSURE_CHECK,\n                ChecklistItems.CJ4_BEFORE_TAXI_ENGINE_ONLY_ANTI_ICE,\n                ChecklistItems.CJ4_BEFORE_TAXI_TAKEOFF_DATA,\n                ChecklistItems.NAV_TAKEOFF_DEPARTURE_BRIEFING,\n                ChecklistItems.CJ4_BEFORE_TAXI_AVIONICS_CHECK,\n                ChecklistItems.CJ4_BEFORE_TAXI_AUTOPILOT_CONNECT_DISCONNECT,\n                ChecklistItems.CJ4_BEFORE_TAXI_ALTIMETER_SET,\n                ChecklistItems.VATSIM_DEPARTURE_SETTINGS,\n                ChecklistItems.CJ4_BEFORE_TAXI_PRESSURIZATION_CHECK,\n                ChecklistItems.CJ4_BEFORE_TAXI_EICAS_CHECK,\n                ChecklistItems.CJ4_BEFORE_TAXI_AFT_DIVIDER_DOORS_OPEN,\n            ],\n            nextListNames: [\n                ChecklistLists.TAXI,\n            ],\n        },\n        {\n            listName: ChecklistLists.TAXI,\n            items: [\n                ChecklistItems.CJ4_TAXI_EXTERIOR_LIGHTS,\n                ChecklistItems.VATSIM_TAXI_CLEARANCE,\n                ChecklistItems.VATSIM_TAXI_MODE_CHARLIE,\n                ChecklistItems.CJ4_TAXI_BRAKES_APPLIED,\n                ChecklistItems.CJ4_TAXI_PARKING_BRAKE_RELEASED,\n                ChecklistItems.CJ4_TAXI_BRAKES_CHECK,\n                ChecklistItems.CJ4_TAXI_NOSE_WHEEL_STEERING_CHECK,\n                ChecklistItems.CJ4_TAXI_FLIGHT_INSTRUMENTS_CHECK,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_TAKEOFF,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_TAKEOFF,\n            items: [\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_ICE_PROTECTION_SYSTEM_CHECK,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_RUDDER_BIAS_SYSTEM_CHECK,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_SEATS_UPRIGHT,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_FLAPS_SET,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_SPEEDBRAKES_OFF,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_TRIMS_CHECK,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_CREW_BRIEFING,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_TCAS_TARA,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_RADAR_AS_REQUIRED,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_GA_BUTTON_PUSH,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_BATTERY_AMPS_CHECK,\n                ChecklistItems.NAV_TAKEOFF_DEPARTURE_BRIEFING_SHORT,\n                ChecklistItems.VATSIM_TAKEOFF_CLEARANCE,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_ICE_PROTECTION_SYSTEM_AS_REQUIRED,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_PITOT_STATIC_HEAT_BUTTONS,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_EICAS_CHECK,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_EXTERIOR_LIGHTS,\n                ChecklistItems.CJ4EXT_BEFORE_TAKEOFF_RUNWAY_HEADING,\n            ],\n            nextListNames: [\n                ChecklistLists.TAKEOFF,\n            ],\n        },\n        {\n            listName: ChecklistLists.TAKEOFF,\n            items: [\n                ChecklistItems.CJ4_TAKEOFF_THROTTLES,\n                ChecklistItems.CJ4_TAKEOFF_N1_COMMAND_BUGS_GREEN,\n                ChecklistItems.CJ4_TAKEOFF_BRAKES_RELEASED,\n                ChecklistItems.CJ4_TAKEOFF_CONTROL_WHEEL_ROTATE_AT_VR,\n            ],\n            nextListNames: [\n                ChecklistLists.AFTER_TAKEOFF_CLIMB,\n            ],\n        },\n        {\n            listName: ChecklistLists.AFTER_TAKEOFF_CLIMB,\n            items: [\n                ChecklistItems.CJ4_AFTER_TAKEOFF_LANDING_GEAR_UP,\n                ChecklistItems.CJ4_AFTER_TAKEOFF_FLAPS_0,\n                ChecklistItems.CJ4_AFTER_TAKEOFF_THROTTLES_CLIMB,\n                ChecklistItems.CJ4_AFTER_TAKEOFF_YAW_DAMPER_ON,\n                ChecklistItems.CJ4_AFTER_TAKEOFF_AUTOPILOT_AS_REQUIRED,\n                ChecklistItems.CJ4_AFTER_TAKEOFF_ICE_PROTECTION_SYSTEM_CHECK,\n                ChecklistItems.CJ4_AFTER_TAKEOFF_PASSENGER_LIGHTS_AS_REQUIRED,\n                ChecklistItems.CJ4_AFTER_TAKEOFF_EXTERIOR_LIGHTS,\n                ChecklistItems.CJ4_AFTER_TAKEOFF_PRESSURIZATION_CHECK,\n                ChecklistItems.CJ4_AFTER_TAKEOFF_ALTIMETERS_SET,\n            ],\n            nextListNames: [\n                ChecklistLists.CRUISE,\n            ],\n        },\n        {\n            listName: ChecklistLists.CRUISE,\n            items: [\n                ChecklistItems.CJ4_CRUISE_THROTTLES,\n                ChecklistItems.CJ4_CRUISE_PRESSURIZATION,\n                ChecklistItems.CJ4_CRUISE_ICE_PROTECTION_SYSTEMS,\n                ChecklistItems.NAV_DESCENT_PLANNING,\n                ChecklistItems.VATSIM_DESCENT_CLEARANCE,\n            ],\n            nextListNames: [\n                ChecklistLists.DESCENT,\n            ],\n        },\n        {\n            listName: ChecklistLists.DESCENT,\n            items: [\n                ChecklistItems.CJ4_DESCENT_PRESSURIZATION,\n                ChecklistItems.CJ4_DESCENT_ICE_PROTECTION_SYSTEMS,\n                ChecklistItems.CJ4_DESCENT_ALTIMETERS,\n                ChecklistItems.CJ4_DESCENT_EXTERIOR_LIGHTS,\n                ChecklistItems.CJ4EXT_DESCENT_INTERIOR_LIGHTS,\n                ChecklistItems.VATSIM_APPROACH_CLEARANCE,\n            ],\n            nextListNames: [\n                ChecklistLists.APPROACH,\n            ],\n        },\n        {\n            listName: ChecklistLists.APPROACH,\n            items: [\n                ChecklistItems.NAV_APPROACH_BRIEFING,\n                ChecklistItems.CJ4_APPROACH_LANDING_DATA,\n                ChecklistItems.CJ4_APPROACH_CREW_BRIEFING,\n                ChecklistItems.CJ4_APPROACH_AVIONICS_FLIGHT_INSTRUMENTS,\n                ChecklistItems.CJ4_APPROACH_MINIMUMS,\n                ChecklistItems.CJ4_APPROACH_FUEL_TRANSFER_SELECTOR,\n                ChecklistItems.CJ4_APPROACH_EXTERIOR_LIGHTS,\n                ChecklistItems.CJ4_APPROACH_ICE_PROTECTION_SYSTEMS,\n                ChecklistItems.CJ4_APPROACH_FLAPS,\n                ChecklistItems.CJ4_APPROACH_PASSENGER_BRIEFING,\n                ChecklistItems.CJ4_APPROACH_SEATS_UPRIGHT,\n                ChecklistItems.CJ4_APPROACH_SEAT_BELTS,\n                ChecklistItems.CJ4_APPROACH_PASSENGER_LIGHTS,\n                ChecklistItems.CJ4_APPROACH_PRESSURIZATION,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_LANDING,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_LANDING,\n            items: [\n                ChecklistItems.CJ4_BEFORE_LANDING_LANDING_GEAR,\n                ChecklistItems.CJ4_BEFORE_LANDING_FLAPS,\n                ChecklistItems.CJ4_BEFORE_LANDING_SPEEDBRAKES_OFF,\n                ChecklistItems.CJ4_BEFORE_LANDING_AIRSPEED_VREF,\n                ChecklistItems.VATSIM_LANDING_CLEARANCE,\n                ChecklistItems.CJ4_BEFORE_LANDING_AUTOPILOT_AND_YAW_DAMPER,\n            ],\n            nextListNames: [\n                ChecklistLists.LANDING,\n            ],\n        },\n        {\n            listName: ChecklistLists.LANDING,\n            items: [\n                ChecklistItems.CJ4_LANDING_THROTTLES,\n                ChecklistItems.CJ4_LANDING_BRAKES,\n                ChecklistItems.CJ4_LANDING_GROUND_SPOILERS,\n            ],\n            nextListNames: [\n                ChecklistLists.ALL_ENGINES_GO_AROUND,\n                ChecklistLists.AFTER_LANDING,\n            ],\n        },\n        {\n            listName: ChecklistLists.ALL_ENGINES_GO_AROUND,\n            items: [\n                ChecklistItems.CJ4_GOAROUND_GA_BUTTON,\n                ChecklistItems.CJ4_GOAROUND_THROTTLES_1,\n                ChecklistItems.CJ4_GOAROUND_PITCH_ATTITUDE,\n                ChecklistItems.CJ4_GOAROUND_FLAPS_1,\n                ChecklistItems.CJ4_GOAROUND_LANDING_GEAR,\n                ChecklistItems.VATSIM_GOAROUND_ANNOUNCE,\n                ChecklistItems.CJ4_GOAROUND_FLAPS_2,\n                ChecklistItems.CJ4_GOAROUND_AIRSPEED,\n                ChecklistItems.CJ4_GOAROUND_THROTTLES_2,\n                ChecklistItems.CJ4_GOAROUND_YAW_DAMPER,\n                ChecklistItems.CJ4_GOAROUND_AUTOPILOT,\n            ],\n            nextListNames: [\n                ChecklistLists.APPROACH,\n            ],\n        },\n        {\n            listName: ChecklistLists.AFTER_LANDING,\n            items: [\n                ChecklistItems.CJ4_AFTER_LANDING_SPEEDBRAKES,\n                ChecklistItems.CJ4_AFTER_LANDING_FLAPS,\n                ChecklistItems.VATSIM_LANDING_CLEAR_OF_RUNWAY,\n                ChecklistItems.CJ4_AFTER_LANDING_PITOT_STATIC_HEAT,\n                ChecklistItems.CJ4_AFTER_LANDING_ICE_PROTECTION_SYSTEMS,\n                ChecklistItems.CJ4_AFTER_LANDING_RADAR,\n                ChecklistItems.CJ4_AFTER_LANDING_EXTERIOR_LIGHTS,\n            ],\n            nextListNames: [\n                ChecklistLists.SHUTDOWN,\n            ],\n        },\n        {\n            listName: ChecklistLists.SHUTDOWN,\n            items: [\n                ChecklistItems.CJ4_SHUTDOWN_PARKING_BRAKE,\n                ChecklistItems.VATSIM_DISCONNECT_GOODBYE,\n                ChecklistItems.CJ4_SHUTDOWN_EMERGENCY_LIGHTS,\n                ChecklistItems.CJ4_SHUTDOWN_STANDBY_FLIGHT_DISPLAY,\n                ChecklistItems.CJ4_SHUTDOWN_AVIONICS_SWITCH,\n                ChecklistItems.CJ4_SHUTDOWN_CLIMATE_CONTROL_SELECTOR,\n                ChecklistItems.CJ4_SHUTDOWN_ICE_PROTECTION_SYSTEMS,\n                ChecklistItems.CJ4_SHUTDOWN_THROTTLES,\n                ChecklistItems.CJ4_SHUTDOWN_ENGINE_RUNSTOP_BUTTONS,\n                ChecklistItems.CJ4_SHUTDOWN_EXTERIOR_LIGHTS,\n                ChecklistItems.CJ4_SHUTDOWN_BATTERY_SWITCH,\n                ChecklistItems.CJ4_SHUTDOWN_CONTROL_LOCK,\n                ChecklistItems.CJ4_SHUTDOWN_ENGINE_COVERS,\n            ],\n            nextListNames: [\n                ChecklistLists.POST_FLIGHT,\n            ],\n        },\n        {\n            listName: ChecklistLists.POST_FLIGHT,\n            items: [\n                ChecklistItems.SIMSETUP_FLIGHT_RECORDING_END,\n                ChecklistItems.SIMSETUP_FLIGHT_TRACKING_END,\n                ChecklistItems.NAV_POST_FLIGHT_NOTES,\n            ],\n        },\n    ],\n};\n","import React from 'react';\n\nimport { ExternalLink } from 'components/lib/ExternalLink';\nimport { Checklists } from 'lib/checklist/data/checklists';\nimport { ChecklistFilters } from 'lib/checklist/data/filters';\nimport { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistLists } from 'lib/checklist/data/lists';\n\nexport const CRJChecklistData = {\n    uid: Checklists.AEROSOFT_CRJ,\n    title: 'Aerosoft CRJ 550/700/900/1000',\n    description: (\n        <p>\n            The Aerosoft CRJ 550/700/900/1000 is a payware aircraft for Microsoft Flight Simulator which can be bought\n            {' '}\n            <ExternalLink href=\"https://www.aerosoft.com/en/microsoft-flight-simulator/msfs-aircraft/\">\n                on Aerosoft&apos;s official website\n            </ExternalLink>\n            {' '}\n            (available in various bundles). This checklist is a summary inspired by the official checklist and the\n            {' '}\n            <strong>must do</strong>\n            {' '}\n            tutorial released with the aircraft.\n        </p>\n    ),\n    selectableFilters: [\n        ChecklistFilters.EXCLUDE_UNOFFICIAL,\n        ChecklistFilters.EXCLUDE_FFOTD,\n        ChecklistFilters.EXCLUDE_EXTENSIONS,\n        ChecklistFilters.EXCLUDE_NAV,\n        ChecklistFilters.EXCLUDE_SIMSETUP,\n        ChecklistFilters.EXCLUDE_VATSIM,\n    ],\n    defaultFilters: [],\n    lists: [\n        {\n            listName: ChecklistLists.PRE_FLIGHT,\n            items: [\n                ChecklistItems.NAV_FLIGHT_PLANNING,\n                ChecklistItems.VATSIM_FILE_FLIGHT_PLAN,\n                ChecklistItems.SIMSETUP_FLIGHT_TRACKING_START,\n                ChecklistItems.SIMSETUP_FLIGHT_RECORDING_START,\n                ChecklistItems.CRJEXT_PRE_FLIGHT_AIRCRAFT_EFB_SETUP,\n            ],\n            nextListNames: [\n                ChecklistLists.SAFETY,\n            ],\n        },\n        {\n            listName: ChecklistLists.SAFETY,\n            items: [\n                ChecklistItems.CRJ_SAFETY_CHECK_CIRCUIT_BREAKERS,\n                ChecklistItems.CRJ_SAFETY_CHECK_NOSEWHEEL,\n                ChecklistItems.CRJ_SAFETY_CHECK_HYDRAULIC_PUMPS_1,\n                ChecklistItems.CRJ_SAFETY_CHECK_LANDING_GEAR,\n                ChecklistItems.CRJ_SAFETY_CHECK_FLIGHT_SPOILER_LEVER,\n                ChecklistItems.CRJ_SAFETY_CHECK_SLATS_FLAPS_LEVER,\n                ChecklistItems.CRJ_SAFETY_CHECK_RADAR,\n                ChecklistItems.CRJ_SAFETY_CHECK_ADG_MANUAL_RELEASE,\n                ChecklistItems.CRJ_SAFETY_CHECK_EMERGENCY_FLAP_SWITCH,\n                ChecklistItems.CRJ_SAFETY_CHECK_BATTERY_MASTER_SWITCH,\n                ChecklistItems.CRJ_SAFETY_CHECK_APU,\n                ChecklistItems.CRJ_SAFETY_CHECK_AC_ELECTRICS,\n                ChecklistItems.CRJ_SAFETY_CHECK_IRS,\n                ChecklistItems.CRJ_SAFETY_CHECK_EMERGENCY_EQUIPMENT,\n                ChecklistItems.CRJ_SAFETY_CHECK_GEAR_SAFETY_PINS,\n                ChecklistItems.CRJ_SAFETY_CHECK_AIRPLANE_DOCUMENTS,\n                ChecklistItems.CRJ_SAFETY_CHECK_HYDRAULIC_PUMPS_2,\n                ChecklistItems.CRJ_SAFETY_CHECK_FMS_INITIALIZATION,\n            ],\n            nextListNames: [\n                ChecklistLists.CABIN_INSPECTION,\n            ],\n        },\n        {\n            listName: ChecklistLists.CABIN_INSPECTION,\n            items: [\n                ChecklistItems.CRJ_CABIN_INSPECTION_CABIN_INSPECTION,\n                ChecklistItems.CRJ_CABIN_INSPECTION_WALKAROUND_INSPECTION,\n            ],\n            nextListNames: [\n                ChecklistLists.ORIGINATING,\n            ],\n        },\n        {\n            listName: ChecklistLists.ORIGINATING,\n            items: [\n                ChecklistItems.CRJ_ORIGINATING_CHECK_CREW_OXYGEN,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_AUDIO_WARNING_PANEL,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_ELECTRICAL_POWER_PANEL,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_FIRE_DETECTION,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_EXTERNAL_LIGHTS_PANEL,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_FUEL_PANEL,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_BLEED_AIR_PANEL,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_APU_PANEL,\n                ChecklistItems.CRJEXT_ORIGINATING_CHECK_FMS_INIT_REMINDER,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_START_PANEL,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_HYDRAULIC_PANEL,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_ELT_SWITCH,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_CABIN_PRESSURE_PANEL,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_AIR_CONDITIONING_PANEL,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_ANTIICE_PANEL,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_WINDSHIELD_HEAT,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_EMERGENCY_LIGHTS,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_STANDBY_COMPASS,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_STALL_TEST,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_NOSEWHEEL,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_CLOCKS,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_EFIS_CONTROL_PANELS,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_INSTRUMENT_PANELS,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_EICAS_AND_STDBY,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_UPPER_PEDESTAL,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_THRUST_LEVER_QUADRANT,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_AVIONICS,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_TRIMS,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_YAW_DAMPER,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_SOURCE_SELECT_PANEL,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_LOWER_PEDESTAL,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_ENGINE_START,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_ENGINE_START,\n            items: [\n                ChecklistItems.CRJ_BEFORE_START_CHECK_PASS_SIGNS,\n                ChecklistItems.CRJ_BEFORE_START_CHECK_LANDING_ELEVATION,\n                ChecklistItems.CRJ_BEFORE_START_CHECK_BOOST_PUMPS,\n                ChecklistItems.CRJ_BEFORE_START_CHECK_ALTIMETERS,\n                ChecklistItems.VATSIM_REQUEST_INITIAL_CLEARANCE,\n                ChecklistItems.CRJ_BEFORE_START_CHECK_FMS,\n                ChecklistItems.CRJ_BEFORE_START_CHECK_IRS,\n                ChecklistItems.CRJ_BEFORE_START_CHECK_RADIOS,\n                ChecklistItems.CRJ_BEFORE_START_CHECK_TAKEOFF_DATA,\n                ChecklistItems.CRJ_BEFORE_START_CHECK_TAKEOFF_BRIEFING,\n                ChecklistItems.NAV_TAKEOFF_DEPARTURE_BRIEFING,\n                ChecklistItems.CRJEXT_BEFORE_START_CHECK_DOORS_CHOCKS,\n            ],\n            nextListNames: [\n                ChecklistLists.ENGINE_START,\n            ],\n        },\n        {\n            listName: ChecklistLists.ENGINE_START,\n            items: [\n                ChecklistItems.CRJ_CLEARED_TO_START_CHECK_PERSONAL_ELECTRONIC_DEVICES,\n                ChecklistItems.CRJ_CLEARED_TO_START_CHECK_APU,\n                ChecklistItems.CRJ_CLEARED_TO_START_CHECK_ELECTRICS,\n                ChecklistItems.CRJ_CLEARED_TO_START_CHECK_DOORS,\n                ChecklistItems.VATSIM_PUSHBACK_AND_START_CLEARANCE,\n                ChecklistItems.CRJ_CLEARED_TO_START_CHECK_BEACON,\n                ChecklistItems.CRJ_CLEARED_TO_START_CHECK_FUEL_PUMPS,\n                ChecklistItems.CRJ_CLEARED_TO_START_CHECK_HYDRAULIC_PUMPS,\n                ChecklistItems.CRJ_CLEARED_TO_START_CHECK_PARKING_BRAKE,\n                ChecklistItems.CRJ_CLEARED_TO_START_ENGINE_START,\n            ],\n            nextListNames: [\n                ChecklistLists.AFTER_ENGINE_START,\n            ],\n        },\n        {\n            listName: ChecklistLists.AFTER_ENGINE_START,\n            items: [\n                ChecklistItems.CRJ_AFTER_START_CHECK_GENERATORS,\n                ChecklistItems.CRJ_AFTER_START_CHECK_BLEED_VALVES,\n                ChecklistItems.CRJ_AFTER_START_CHECK_PACKS,\n                ChecklistItems.CRJ_AFTER_START_CHECK_SYNOPTIC_PAGES,\n                ChecklistItems.CRJ_AFTER_START_CHECK_APU,\n                ChecklistItems.CRJ_AFTER_START_CHECK_ANTIICE_PROBES,\n                ChecklistItems.CRJ_AFTER_START_CHECK_ANTIICE,\n                ChecklistItems.CRJ_AFTER_START_CHECK_NOSEWHEEL,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_TAXI,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_TAXI,\n            items: [\n                ChecklistItems.CRJ_TAXI_CHECK_SLATS_FLAPS,\n                ChecklistItems.CRJ_TAXI_CHECK_FLIGHT_CONTROLS,\n                ChecklistItems.CRJ_TAXI_CHECK_TRIMS,\n                ChecklistItems.VATSIM_TAXI_CLEARANCE,\n                ChecklistItems.VATSIM_TAXI_MODE_CHARLIE,\n                ChecklistItems.CRJ_TAXI_CHECK_THRUST_REVERSERS,\n                ChecklistItems.CRJ_TAXI_CHECK_EXTERNAL_LIGHTS,\n                ChecklistItems.CRJ_TAXI_CHECK_FLIGHT_INSTRUMENTS,\n                ChecklistItems.CRJ_TAXI_CHECK_BRAKE_TEMPS,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_TAKEOFF,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_TAKEOFF,\n            items: [\n                ChecklistItems.NAV_TAKEOFF_DEPARTURE_BRIEFING_SHORT,\n                ChecklistItems.CRJ_BEFORE_TAKEOFF_CHECK_EXTERNAL_LIGHTS,\n                ChecklistItems.CRJ_BEFORE_TAKEOFF_CHECK_FUEL_XFLOW,\n                ChecklistItems.CRJ_BEFORE_TAKEOFF_CHECK_FLIGHT_ATTENDANT,\n                ChecklistItems.CRJ_BEFORE_TAKEOFF_CHECK_TRANSPONDER,\n                ChecklistItems.CRJ_BEFORE_TAKEOFF_CHECK_RADAR,\n                ChecklistItems.VATSIM_TAKEOFF_CLEARANCE,\n                ChecklistItems.CRJ_BEFORE_TAKEOFF_CHECK_CAS,\n            ],\n            nextListNames: [\n                ChecklistLists.CLIMB,\n            ],\n        },\n        {\n            listName: ChecklistLists.CLIMB,\n            items: [\n                ChecklistItems.CRJ_CLIMB_CHECK_FUEL_XFLOW,\n                ChecklistItems.CRJ_CLIMB_CHECK_BLEEDS_AND_APU,\n                ChecklistItems.CRJ_CLIMB_CHECK_THRUST_REVERSERS,\n                ChecklistItems.CRJ_CLIMB_CHECK_CAS,\n            ],\n            nextListNames: [\n                ChecklistLists.CRUISE,\n            ],\n        },\n        {\n            listName: ChecklistLists.CRUISE,\n            items: [\n                ChecklistItems.CRJEXT_CRUISE_ANTIICE,\n                ChecklistItems.NAV_DESCENT_PLANNING,\n                ChecklistItems.VATSIM_DESCENT_CLEARANCE,\n            ],\n            nextListNames: [\n                ChecklistLists.DESCENT,\n            ],\n        },\n        {\n            listName: ChecklistLists.DESCENT,\n            items: [\n                ChecklistItems.CRJ_DESCENT_CHECK_LANDING_ELEVATION,\n                ChecklistItems.CRJ_DESCENT_CHECK_FUEL,\n                ChecklistItems.CRJ_DESCENT_CHECK_TCAS,\n                ChecklistItems.CRJ_DESCENT_CHECK_RADAR,\n                ChecklistItems.CRJ_DESCENT_CHECK_CAS,\n                ChecklistItems.VATSIM_APPROACH_CLEARANCE,\n                ChecklistItems.CRJ_DESCENT_CHECK_LANDING_DATA,\n                ChecklistItems.CRJ_DESCENT_CHECK_APPROACH_BRIEFING,\n                ChecklistItems.NAV_APPROACH_BRIEFING,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_LANDING,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_LANDING,\n            items: [\n                ChecklistItems.CRJ_BEFORE_LANDING_CHECK_FLIGHT_ATTENDANT,\n                ChecklistItems.CRJ_BEFORE_LANDING_CHECK_PASSENGER_SIGNS,\n                ChecklistItems.CRJ_BEFORE_LANDING_CHECK_THRUST_REVERSERS,\n                ChecklistItems.CRJ_BEFORE_LANDING_CHECK_LANDING_GEAR,\n                ChecklistItems.CRJ_BEFORE_LANDING_CHECK_FLAPS,\n                ChecklistItems.VATSIM_LANDING_CLEARANCE,\n            ],\n            nextListNames: [\n                ChecklistLists.AFTER_LANDING,\n            ],\n        },\n        {\n            listName: ChecklistLists.AFTER_LANDING,\n            items: [\n                ChecklistItems.VATSIM_LANDING_CLEAR_OF_RUNWAY,\n                ChecklistItems.CRJ_AFTER_LANDING_CHECK_APU,\n                ChecklistItems.CRJ_AFTER_LANDING_CHECK_TRANSPONDER_RADAR,\n                ChecklistItems.CRJ_AFTER_LANDING_CHECK_FLAPS,\n                ChecklistItems.CRJ_AFTER_LANDING_CHECK_EXTERNAL_LIGHTS,\n                ChecklistItems.CRJ_AFTER_LANDING_CHECK_PROBES,\n            ],\n            nextListNames: [\n                ChecklistLists.SHUTDOWN,\n            ],\n        },\n        {\n            listName: ChecklistLists.SHUTDOWN,\n            items: [\n                ChecklistItems.CRJ_SHUTDOWN_CHECK_PARKING_BRAKE,\n                ChecklistItems.CRJ_SHUTDOWN_CHECK_SEAT_BELTS,\n                ChecklistItems.CRJ_SHUTDOWN_CHECK_THRUST_LEVERS,\n                ChecklistItems.CRJ_SHUTDOWN_CHECK_ANTIICE,\n                ChecklistItems.CRJ_SHUTDOWN_CHECK_FUEL_PUMPS,\n                ChecklistItems.CRJ_SHUTDOWN_CHECK_BEACON,\n                ChecklistItems.CRJ_SHUTDOWN_CHECK_NOSEWHEEL,\n                ChecklistItems.VATSIM_DISCONNECT_GOODBYE,\n            ],\n            nextListNames: [\n                ChecklistLists.TERMINATING,\n            ],\n        },\n        {\n            listName: ChecklistLists.TERMINATING,\n            items: [\n                ChecklistItems.CRJ_TERMINATING_CHECK_CHOCKS_AND_BRAKES,\n                ChecklistItems.CRJ_TERMINATING_CHECK_IRS,\n                ChecklistItems.CRJ_TERMINATING_CHECK_EMERGENCY_LIGHTS,\n                ChecklistItems.CRJ_TERMINATING_CHECK_ANTIICE,\n                ChecklistItems.CRJ_TERMINATING_CHECK_HYDRAULIC_PUMPS,\n                ChecklistItems.CRJ_TERMINATING_CHECK_EXTERNAL_LIGHTS,\n                ChecklistItems.CRJ_TERMINATING_CHECK_APU,\n                ChecklistItems.CRJ_TERMINATING_CHECK_BATTERY_MASTER,\n                ChecklistItems.CRJ_TERMINATING_CHECK_COCKPIT_LIGHTS,\n            ],\n            nextListNames: [\n                ChecklistLists.POST_FLIGHT,\n            ],\n        },\n        {\n            listName: ChecklistLists.POST_FLIGHT,\n            items: [\n                ChecklistItems.SIMSETUP_FLIGHT_RECORDING_END,\n                ChecklistItems.SIMSETUP_FLIGHT_TRACKING_END,\n                ChecklistItems.NAV_POST_FLIGHT_NOTES,\n            ],\n        },\n    ],\n};\n","import { A32NXChecklistData } from 'lib/checklist/data/checklistsData/a32nx';\nimport { C172G1000ChecklistData } from 'lib/checklist/data/checklistsData/c172g1000';\nimport { C172SteamChecklistData } from 'lib/checklist/data/checklistsData/c172steam';\nimport { CJ4ChecklistData } from 'lib/checklist/data/checklistsData/cj4';\nimport { CRJChecklistData } from 'lib/checklist/data/checklistsData/crj';\nimport { createTransformedMapping } from 'lib/checklist/data/transforms';\n\nexport const ChecklistsData = createTransformedMapping()([\n    CJ4ChecklistData,\n    C172SteamChecklistData,\n    C172G1000ChecklistData,\n    CRJChecklistData,\n    A32NXChecklistData,\n]);\n","export const ChecklistFiltersResults = Object.freeze({\n    INCLUDE: 'include',\n    EXCLUDE: 'exclude',\n    PASS: 'pass',\n});\n","import { ChecklistFiltersResults } from 'lib/checklist/data/filtersResults';\n\nexport const buildTagFilterFNInclusion = (tag) => (item) => {\n    if (item.tagsSet.has(tag)) {\n        return ChecklistFiltersResults.INCLUDE;\n    }\n    return ChecklistFiltersResults.PASS;\n};\n\nexport const buildTagFilterFNExclusion = (tag) => (item) => {\n    if (item.tagsSet.has(tag)) {\n        return ChecklistFiltersResults.EXCLUDE;\n    }\n    return ChecklistFiltersResults.PASS;\n};\n","import React from 'react';\n\nimport { ChecklistFilters } from 'lib/checklist/data/filters';\nimport { ChecklistFiltersResults } from 'lib/checklist/data/filtersResults';\nimport { buildTagFilterFNExclusion, buildTagFilterFNInclusion } from 'lib/checklist/data/lib/filtersData';\nimport { ChecklistTags } from 'lib/checklist/data/tags';\nimport { createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst vatsimFilterData = {\n    title: 'VATSIM',\n    description: (\n        <>\n            Include checklist items for VATSIM in relevant places. Note that this\n            only currently includes items that should happen on all flights, and\n            you should follow correct procedure depending on controller instructions.\n        </>\n    ),\n};\n\nconst extensionsFilterData = {\n    title: 'Extensions',\n    description: (\n        <>\n            Include checklist items extending the official checklist for\n            things not addressed by the official checklist.\n        </>\n    ),\n};\n\nconst simsetupFilterData = {\n    title: 'Simulator Setup',\n    description: (\n        <>\n            Include checklist items related to setting up the simulator before\n            and after flight.\n        </>\n    ),\n};\n\nconst navFilterData = {\n    title: 'Navigation',\n    description: (\n        <>\n            Include checklist items related to navigation.\n        </>\n    ),\n};\n\nconst commonFiltersData = createTransformedMapping()([\n    {\n        uid: ChecklistFilters.EXCLUDE_UNOFFICIAL,\n        title: 'Official Only',\n        description: (\n            <>\n                Exclude all items but official checklist items for this aircraft.\n            </>\n        ),\n        isTerminal: true,\n        fn: (item) => {\n            if (item.tagsSet.has(ChecklistTags.OFFICIAL)) {\n                return ChecklistFiltersResults.INCLUDE;\n            }\n            return ChecklistFiltersResults.EXCLUDE;\n        },\n    },\n    {\n        uid: ChecklistFilters.INCLUDE_VATSIM,\n        fn: buildTagFilterFNInclusion(ChecklistTags.VATSIM),\n        ...vatsimFilterData,\n    },\n    {\n        uid: ChecklistFilters.EXCLUDE_VATSIM,\n        fn: buildTagFilterFNExclusion(ChecklistTags.VATSIM),\n        isExclusion: true,\n        ...vatsimFilterData,\n    },\n    {\n        uid: ChecklistFilters.INCLUDE_EXTENSIONS,\n        fn: buildTagFilterFNInclusion(ChecklistTags.EXTENSION),\n        ...extensionsFilterData,\n    },\n    {\n        uid: ChecklistFilters.EXCLUDE_EXTENSIONS,\n        fn: buildTagFilterFNExclusion(ChecklistTags.EXTENSION),\n        isExclusion: true,\n        ...extensionsFilterData,\n    },\n    {\n        uid: ChecklistFilters.INCLUDE_SIMSETUP,\n        fn: buildTagFilterFNInclusion(ChecklistTags.SIMSETUP),\n        ...simsetupFilterData,\n    },\n    {\n        uid: ChecklistFilters.EXCLUDE_SIMSETUP,\n        fn: buildTagFilterFNExclusion(ChecklistTags.SIMSETUP),\n        isExclusion: true,\n        ...simsetupFilterData,\n    },\n    {\n        uid: ChecklistFilters.INCLUDE_NAV,\n        fn: buildTagFilterFNInclusion(ChecklistTags.NAV),\n        ...navFilterData,\n    },\n    {\n        uid: ChecklistFilters.EXCLUDE_NAV,\n        fn: buildTagFilterFNExclusion(ChecklistTags.NAV),\n        isExclusion: true,\n        ...navFilterData,\n    },\n    {\n        uid: ChecklistFilters.EXCLUDE_FFOTD,\n        title: 'First Flight of Day',\n        description: (\n            <>\n                Include checklist item relevant only for the first flight of the day.\n            </>\n        ),\n        fn: buildTagFilterFNExclusion(ChecklistTags.FFOTD),\n        isExclusion: true,\n    },\n]);\n\nexport const ChecklistFiltersData = Object.freeze({\n    ...commonFiltersData,\n});\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { styled } from 'styletron-react';\n\nimport { LightGrey } from 'components/lib/colors';\nimport { MonospacedFonts } from 'components/lib/Monospaced';\n\nconst KeyboardInputSep = styled('span', {\n    fontSize: '.8em',\n    fontWeight: 'bold',\n});\n\nconst KeyboardInput = styled('span', {\n    backgroundColor: LightGrey,\n    fontFamily: MonospacedFonts,\n    color: '#000',\n    padding: '2px 5px',\n    fontSize: '.9em',\n    whiteSpace: 'nowrap',\n    borderRadius: '2px',\n});\n\nexport const KeyboardInputs = ({ inputs }) => inputs.map((inp, idx) => (\n    <React.Fragment key={inp}>\n        {idx === 0 ? null : (\n            <KeyboardInputSep>\n                {' '}\n                &gt;\n                {' '}\n            </KeyboardInputSep>\n        )}\n        <KeyboardInput>{inp}</KeyboardInput>\n    </React.Fragment>\n));\n\nKeyboardInputs.propTypes = {\n    inputs: PropTypes.arrayOf(PropTypes.node).isRequired,\n};\n","import { withStyle } from 'styletron-react';\n\nimport { DarkRed } from 'components/lib/colors';\nimport { Monospaced } from 'components/lib/Monospaced';\n\nexport const Vernacular = withStyle(Monospaced, {\n    color: DarkRed,\n    cursor: 'help',\n    borderBottom: `1px dotted ${DarkRed}`,\n});\n","import React from 'react';\n\nimport { Vernacular } from 'components/lib/vernacular/Vernacular';\n\nexport const FMS = <Vernacular title=\"FMS - Flight Management System\">FMS</Vernacular>;\n\nexport const SAT = <Vernacular title=\"SAT - Static Air Temperature\">SAT</Vernacular>;\nexport const OAT = <Vernacular title=\"OAT - Outside Air Temperature\">OAT</Vernacular>;\n\nexport const QNH = <Vernacular title=\"QNH - Barometric Pressure Setting (Sea-level)\">QNH</Vernacular>;\n\nexport const APU = <Vernacular title=\"Auxiliary Power Unit\">APU</Vernacular>;\n\nexport const N1 = (\n    <Vernacular title=\"N1 - Low Pressure Turbine/Compressor Spool Speed\">\n        N1\n    </Vernacular>\n);\n\nexport const N2 = (\n    <Vernacular title=\"N2 - High Pressure Turbine/Compressor Spool Speed\">\n        N2\n    </Vernacular>\n);\n\nexport const ITT = (\n    <Vernacular title=\"ITT - Inter-Turbine Temperature\">\n        ITT\n    </Vernacular>\n);\n\nexport const EGT = (\n    <Vernacular title=\"EGT - Exhaust Gas Temperature\">\n        EGT\n    </Vernacular>\n);\n\nexport const FADEC = (\n    <Vernacular title=\"FADEC - Full Authority Digital Engine Control\">\n        FADEC\n    </Vernacular>\n);\n\nexport const VR = (\n    <Vernacular title=\"VR - Rotation Speed\">VR</Vernacular>\n);\n\nexport const KIAS = (\n    <Vernacular title=\"KIAS - Knots of Indicated Air Speed\">\n        KIAS\n    </Vernacular>\n);\n\nexport const AGL = (\n    <Vernacular title=\"AGL - Above Ground Level\">\n        AGL\n    </Vernacular>\n);\n","import React from 'react';\n\nimport { ExternalLink } from 'components/lib/ExternalLink';\nimport { KeyboardInputs } from 'components/lib/KeyboardInputs';\nimport {\n    EGT, N1, N2,\n} from 'components/lib/vernacular/common';\nimport { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistTags } from 'lib/checklist/data/tags';\nimport { createTransformedList, createTransformedMapping } from 'lib/checklist/data/transforms';\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { pick } from 'lib/pick';\n\nconst filterNestedSubItemsList = (result) => {\n    if (isNullOrUndefined(result)) {\n        return result;\n    }\n\n    return result.reduce(\n        (aggregatedValue, currentValue) => {\n            if (isNullOrUndefined(currentValue)) {\n                return aggregatedValue;\n            }\n\n            return [\n                ...aggregatedValue,\n                {\n                    ...currentValue,\n                    subItems: filterNestedSubItemsList(currentValue.subItems),\n                },\n            ];\n        },\n        [],\n    );\n};\n\nconst mcduInitializationSubItems = ({ withSimbrief } = {}) => {\n    const withSimbriefP = pick(withSimbrief, false);\n\n    const withConditionalRet = ({ simbrief, manual }) => (withSimbriefP ? simbrief : manual);\n    const conditionalInputItem = (key) => (withSimbriefP ? [key] : ['INPUT', key]);\n\n    return filterNestedSubItemsList([\n        withSimbriefP ? {\n            title: 'EFB: Import from Simbrief on Dashboard.',\n            state: 'COMPLETED',\n        } : null,\n        {\n            title: (\n                <>\n                    Weights / Balance Init\n                    {' '}\n                    <KeyboardInputs inputs={['MCDU MENU', 'ATSU (LSK?L)', 'AOC (LSK?R)', 'W/B (LSK?L)']} />\n                </>\n            ),\n            state: 'COMPLETED',\n            subItems: [\n                {\n                    title: 'Page 1: Fuel Initialization',\n                    state: 'COMPLETED',\n                    subItems: [\n                        ...withConditionalRet({\n                            simbrief: [\n                                {\n                                    title: (\n                                        <>\n                                            OFP Request\n                                            {' '}\n                                            <KeyboardInputs inputs={['LSK?R']} />\n                                        </>\n                                    ),\n                                    state: 'COMPLETE',\n                                },\n                            ],\n                            manual: [\n                                {\n                                    title: (\n                                        <>\n                                            Block Fuel\n                                            {' '}\n                                            <KeyboardInputs inputs={['LSK?L']} />\n                                        </>\n                                    ),\n                                    state: 'SET',\n                                },\n                                {\n                                    title: (\n                                        <>\n                                            Block Fuel\n                                            {' '}\n                                            <KeyboardInputs inputs={['LSK?L']} />\n                                        </>\n                                    ),\n                                    state: 'SET',\n                                },\n                                {\n                                    title: (\n                                        <>\n                                            Block Fuel\n                                            {' '}\n                                            <KeyboardInputs inputs={['LSK?L']} />\n                                        </>\n                                    ),\n                                    state: 'SET',\n                                },\n                            ],\n                        }),\n                        {\n                            title: (\n                                <>\n                                    Refuel (Immediate\n                                    {' '}\n                                    <KeyboardInputs inputs={['LSK?R']} />\n                                    , timed\n                                    {' '}\n                                    <KeyboardInputs inputs={['EFB']} />\n                                    )\n                                </>\n                            ),\n                            state: 'COMPLETE',\n                        },\n                    ],\n                },\n                {\n                    title: 'Page 2: Boarding Initialization',\n                    state: 'COMPLETED',\n                    subItems: [\n                        ...withConditionalRet({\n                            simbrief: [\n                                {\n                                    title: (\n                                        <>\n                                            Request\n                                            {' '}\n                                            <KeyboardInputs inputs={['LSK5R']} />\n                                        </>\n                                    ),\n                                    state: 'COMPLETE',\n                                },\n                            ],\n                            manual: [\n                                {\n                                    title: (\n                                        <>\n                                            Passengers Total\n                                            {' '}\n                                            <KeyboardInputs inputs={['LSK1L']} />\n                                        </>\n                                    ),\n                                    state: 'SET',\n                                },\n                                {\n                                    title: (\n                                        <>\n                                            ZFW\n                                            {' '}\n                                            <KeyboardInputs inputs={['LSK1R']} />\n                                        </>\n                                    ),\n                                    state: 'SET',\n                                },\n                            ],\n                        }),\n                        {\n                            title: (\n                                <>\n                                    Boarding\n                                    {' '}\n                                    <KeyboardInputs inputs={['LSK6R']} />\n                                </>\n                            ),\n                            state: 'STARTED',\n                        },\n                    ],\n                },\n\n            ],\n        },\n        {\n            title: 'Data Page',\n            state: 'CHECKED',\n        },\n        {\n            title: 'Init 1',\n            state: 'COMPLETED',\n            subItems: (\n                [\n                    withConditionalRet({\n                        simbrief: {\n                            title: (\n                                <>\n                                    Init Request\n                                    {' '}\n                                    <KeyboardInputs inputs={['LSK6R']} />\n                                </>\n                            ),\n                            state: 'COMPLETED',\n                        },\n                    }),\n                    {\n                        title: (\n                            <>\n                                From/To\n                                {' '}\n                                <KeyboardInputs inputs={conditionalInputItem('LSK1R')} />\n                            </>\n                        ),\n                        state: withSimbriefP ? 'CHECKED' : 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Alternate\n                                {' '}\n                                <KeyboardInputs inputs={conditionalInputItem('LSK2L')} />\n                            </>\n                        ),\n                        state: withSimbriefP ? 'CHECKED' : 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Flight Number\n                                {' '}\n                                <KeyboardInputs inputs={conditionalInputItem('LSK3L')} />\n                            </>\n                        ),\n                        state: withSimbriefP ? 'CHECKED' : 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Cost Index\n                                {withSimbriefP ? ' (CRZ SYS CI)' : null}\n                                {' '}\n                                <KeyboardInputs inputs={conditionalInputItem('LSK5L')} />\n                            </>\n                        ),\n                        state: withSimbriefP ? 'CHECKED' : 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Cruise Altitude\n                                {' '}\n                                <KeyboardInputs inputs={conditionalInputItem('LSK6L')} />\n                            </>\n                        ),\n                        state: withSimbriefP ? 'CHECKED' : 'SET',\n                    },\n                ]\n            ),\n        },\n        {\n            title: 'Flight Plan',\n            state: 'SET / CHECKED',\n            subItems: createTransformedList()([\n                {\n                    title: (\n                        <>\n                            Standard Instrument Departure (\n                            <KeyboardInputs inputs={['LSK?L', 'LSK1L (Departure)']} />\n                            )\n                        </>\n                    ),\n                    state: 'COMPLETED',\n                    subItems: [\n                        {\n                            title: (\n                                <>\n                                    Runway (\n                                    <KeyboardInputs inputs={['LSK?L (Runway)']} />\n                                    )\n                                </>\n                            ),\n                            state: 'SET',\n                        },\n                        {\n                            title: (\n                                <>\n                                    SID (\n                                    <KeyboardInputs inputs={['LSK?L (SID)']} />\n                                    )\n                                </>\n                            ),\n                            state: 'SET',\n                        },\n                        {\n                            title: (\n                                <>\n                                    Flight Plan Insert (\n                                    <KeyboardInputs inputs={['LSK6R (INSERT)']} />\n                                    )\n                                </>\n                            ),\n                            state: 'COMPLETED',\n                        },\n                    ],\n                },\n                {\n                    title: 'Waypoints',\n                    state: withSimbriefP ? 'CHECKED' : 'INSERTED',\n                    subItems: withConditionalRet({\n                        manual: [\n                            {\n                                title: (\n                                    <>\n                                        by Direct Leg (\n                                        <KeyboardInputs\n                                            inputs={[\n                                                'LSK?L (Starting Waypoint)',\n                                                'LSK3R (Next WPT)',\n                                            ]}\n                                        />\n                                        )\n                                    </>\n                                ),\n                                state: '',\n                            },\n                            {\n                                title: (\n                                    <>\n                                        by Airways (\n                                        <KeyboardInputs\n                                            inputs={[\n                                                'LSK?L (Starting Waypoint)',\n                                                'LSK5R (Airways)',\n                                            ]}\n                                        />\n                                        )\n                                    </>\n                                ),\n                                state: '',\n                            },\n                        ],\n                    }),\n                },\n                {\n                    title: (\n                        <>\n                            Standard Terminal Arrival Route (\n                            <KeyboardInputs inputs={['LSK6L (Destination)', 'LSK1R (Arrival)']} />\n                            )\n                        </>\n                    ),\n                    state: 'AS REQUIRED',\n                    subItems: [\n                        {\n                            title: (\n                                <>\n                                    STAR (\n                                    <KeyboardInputs inputs={['LSK?L (STAR)']} />\n                                    )\n                                </>\n                            ),\n                            state: 'SET',\n                        },\n                        {\n                            title: (\n                                <>\n                                    STAR (\n                                    <KeyboardInputs inputs={['LSK?L (Approach)']} />\n                                    )\n                                </>\n                            ),\n                            state: 'SET',\n                        },\n                        {\n                            title: (\n                                <>\n                                    Flight Plan Insert (\n                                    <KeyboardInputs inputs={['LSK6R (INSERT)']} />\n                                    )\n                                </>\n                            ),\n                            state: 'COMPLETED',\n                        },\n                    ],\n                },\n            ]),\n        },\n        {\n            title: 'Secondary Flight Plan (INOP)',\n            state: '-',\n        },\n        {\n            title: 'RAD NAV',\n            state: 'AS DESIRED',\n        },\n        {\n            title: 'Init 2',\n            state: 'COMPLETED',\n            subItems: createTransformedList()([\n                {\n                    title: (\n                        <>\n                            ZFW/ZFWCG (\n                            <KeyboardInputs\n                                inputs={[\n                                    'LSK1R (Compute)',\n                                    'LSK1R (Insert)',\n                                ]}\n                            />\n                            )\n                        </>\n                    ),\n                    state: 'SET / CHECKED',\n                },\n                {\n                    title: 'ZFWCG',\n                    state: 'NOTED',\n                },\n                {\n                    title: (\n                        <>\n                            Block Fuel (\n                            <KeyboardInputs inputs={['LSK1L']} />\n                            )\n                        </>\n                    ),\n                    state: 'SET / CHECKED',\n                },\n            ]),\n        },\n        {\n            title: 'Performance Init',\n            state: 'COMPLETED',\n            subItems: [\n                {\n                    title: (\n                        <>\n                            Flaps (\n                            <KeyboardInputs inputs={['INPUT \"1/\"', 'LSK3R']} />\n                            )\n                        </>\n                    ),\n                    state: 'SET',\n                },\n                {\n                    title: (\n                        <>\n                            Flaps THS (\n                            <KeyboardInputs inputs={['INPUT eg. \"/UP0.8\"', 'LSK3R']} />\n                            )\n                        </>\n                    ),\n                    state: 'SET',\n                },\n                {\n                    title: (\n                        <>\n                            Flex Temp (INOP,\n                            {' '}\n                            <KeyboardInputs inputs={['\"60\"', 'LSK4R']} />\n                            )\n                        </>\n                    ),\n                    state: 'SET',\n                },\n                {\n                    title: (\n                        <>\n                            Transition Altitude (\n                            <KeyboardInputs inputs={['LSK4L']} />\n                            )\n                        </>\n                    ),\n                    state: 'SET',\n                },\n                {\n                    title: (\n                        <>\n                            V1 Speed (\n                            <KeyboardInputs\n                                inputs={[\n                                    'LSK1L (Compute)',\n                                    'LSK1L (Insert)',\n                                ]}\n                            />\n                            )\n                        </>\n                    ),\n                    state: 'SET / CHECKED',\n                },\n                {\n                    title: (\n                        <>\n                            VR Speed (\n                            <KeyboardInputs\n                                inputs={[\n                                    'LSK2L (Compute)',\n                                    'LSK2L (Insert)',\n                                ]}\n                            />\n                            )\n                        </>\n                    ),\n                    state: 'SET / CHECKED',\n                },\n                {\n                    title: (\n                        <>\n                            V2 Speed (\n                            <KeyboardInputs\n                                inputs={[\n                                    'LSK3L (Compute)',\n                                    'LSK3L (Insert)',\n                                ]}\n                            />\n                            )\n                        </>\n                    ),\n                    state: 'SET / CHECKED',\n                },\n            ],\n        },\n    ]);\n};\n\nconst engineStartVitals = {\n    title: 'Engine Values',\n    state: 'CHECKED, W/IN 1 MINUTE',\n    subItems: createTransformedList()([\n        {\n            title: N1,\n            state: '19%, AVAIL',\n        },\n        {\n            title: N2,\n            state: '68%',\n        },\n        {\n            title: EGT, // FIXME: would have expected ITT?\n            state: <>520&deg;C</>,\n        },\n        {\n            title: 'Fuel Flow',\n            state: '290 kg/h',\n        },\n    ]),\n};\n\nconst apuStartProcedure = [\n    {\n        title: 'Air Conditioning Packs',\n        state: 'OFF',\n    },\n    {\n        title: 'APU Master Switch',\n        state: 'ON',\n    },\n    {\n        title: 'APU Starter Switch',\n        state: 'ON, WAIT AVAIL',\n    },\n    {\n        title: 'Wait 1 Minute',\n        state: 'COMPLETED',\n    },\n    {\n        title: 'APU Bleed',\n        state: 'ON',\n    },\n    {\n        title: 'Wait 1 Minute',\n        state: 'COMPLETED',\n    },\n    {\n        title: 'Air Conditioning Packs',\n        state: 'ON',\n    },\n];\n\nconst addA320NEOTags = (value) => ({\n    ...value,\n    tags: [...value.tags, ChecklistTags.A32NX, ChecklistTags.OFFICIAL],\n});\n\nexport const A32NXChecklistItemsData = createTransformedMapping(addA320NEOTags)([\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_COCKPIT_PREP,\n        title: 'Cockpit Preparation',\n        state: 'COMPLETE',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n        subItems: createTransformedList()([\n            {\n                title: 'Emergency Equipment',\n                state: 'CHECKED',\n            },\n            {\n                title: 'Rain Repellent',\n                state: 'CHECKED',\n            },\n            {\n                title: 'Circuit Breakers Panel',\n                state: 'CHECKED',\n            },\n            {\n                title: 'Gear Pins and Covers',\n                state: 'ONBOARD, STOWED',\n            },\n            {\n                title: 'Gravity Gear Extension',\n                state: 'CHECKED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_PARKING_BRAKE,\n        title: 'Parking Brake',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_LOWER_PEDESTAL,\n        title: 'Lower Pedestal',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'Speed Brake',\n                state: 'RETRACTED, DISARMED',\n            },\n            {\n                title: 'Flaps',\n                state: 'RETRACTED',\n            },\n            {\n                title: 'Weather Radar',\n                state: 'OFF',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_THRUST_LEVER_QUADRANT,\n        title: 'Thrust Lever Quadrant',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'Engine Master 1 & 2',\n                state: 'OFF',\n            },\n            {\n                title: 'Engine Mode',\n                state: 'NORM',\n            },\n            {\n                title: 'Thrust Levers',\n                state: 'IDLE',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_LANDING_GEAR,\n        title: 'Landing Gear',\n        state: 'DOWN',\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_ADIRS,\n        title: 'Air Data Inertial Reference System (ADIRS)',\n        state: 'NAV',\n        moreInfoShort: (\n            <>\n                Inertial Reference Systems should be turned to NAV in their numerical order (so, left, right then\n                middle by their position).\n            </>\n        ),\n        subItems: createTransformedList()([\n            {\n                title: 'No White Lights',\n                state: 'CHECKED',\n            },\n            {\n                title: 'ADIRS 1',\n                state: 'NAV',\n            },\n            {\n                title: 'ADIRS 2',\n                state: 'NAV',\n            },\n            {\n                title: 'ADIRS 3',\n                state: 'NAV',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_WIPER_SELECTORS,\n        title: 'Wiper Selectors',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_AIR_CONDITION_PANEL,\n        title: 'Air Condition Panel',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'APU Bleed',\n                state: 'AS REQUIRED',\n            },\n            {\n                title: 'PACK Flow',\n                state: 'NORM',\n                moreInfo: ( // FIXME: not working yet, need to implement sub item help.\n                    <>\n                        More information on various modes can be found\n                        {' '}\n                        {/* eslint-disable-next-line max-len */}\n                        <ExternalLink href=\"https://docs.flybywiresim.com/pilots-corner/a32nx-briefing/flight-deck/ovhd/ac/#pack-flow-selector\">\n                            here\n                        </ExternalLink>\n                        .\n                    </>\n                ),\n            },\n            {\n                title: 'Air Conditioning Temperature',\n                state: 'AS REQUIRED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_FUEL_PANEL,\n        title: 'Fuel Panel',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'Fuel Pumps',\n                state: 'ON',\n            },\n            {\n                title: 'No White Lights',\n                state: 'CHECKED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_FIRE_PANEL_TEST,\n        title: 'Fire Panels Tests',\n        state: 'COMPLETED',\n        subItems: createTransformedList()([\n            {\n                title: 'Fire Control Panel',\n                state: 'CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: 'APU Fire Test',\n                        state: 'COMPLETED',\n                    },\n                    {\n                        title: 'Engine 1 Fire Test',\n                        state: 'COMPLETED',\n                    },\n                    {\n                        title: 'Engine 2 Fire Test',\n                        state: 'COMPLETED',\n                    },\n                ]),\n            },\n            {\n                title: 'Cargo Smoke Panel',\n                state: 'CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Cargo Smoke Test',\n                        state: 'COMPLETED',\n                    },\n                ]),\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_HYDRAULIC_PANEL,\n        title: 'Hydraulic Panel',\n        state: 'CHECKED',\n        moreInfoShort: (\n            <>\n                Verify that there are no white lights on.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_ANTI_ICE_PANEL,\n        title: 'Anti-Ice Control Panel',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'Engine Anti-Ice',\n                state: 'OFF',\n            },\n            {\n                title: 'Wing Anti-Ice',\n                state: 'OFF',\n            },\n            {\n                title: 'Probe/Window Heat',\n                state: 'AUTO',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_EXTERIOR_LIGHTS,\n        title: 'Exterior Lights Panel',\n        state: 'AS REQUIRED',\n        subItems: createTransformedList()([\n            {\n                title: 'NAV Light',\n                state: 'ON',\n            },\n            {\n                title: 'Strobe Lights',\n                state: 'AUTO',\n            },\n            {\n                title: 'Other Lights',\n                state: 'OFF',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_SIGNS_PANEL,\n        title: 'Signs Panel',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'Seat Belt Signs',\n                state: 'ON',\n            },\n            {\n                title: 'No Smoking Signs',\n                state: 'ON',\n            },\n            {\n                title: 'Emergency Exit Signs',\n                state: 'ARMED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_OXYGEN_PANEL,\n        title: 'Oxygen Panel',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'Crew Supply',\n                state: 'ON',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_EXT_POWER,\n        title: 'External Power',\n        state: 'AS DESIRED',\n        moreInfoShort: (\n            <>\n                If external power is not available, it will be generated using the APU. If it is available, power may\n                be turned ON now.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_BATTERY,\n        title: 'Battery 1 & 2',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_APU,\n        title: 'APU',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                In order to get early air conditioning, APU must be started to provide for bleed air. If external\n                power is unavailable, then APU will also be required to power the aircraft systems.\n            </>\n        ),\n        subItems: createTransformedList()(apuStartProcedure),\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_CABIN_PRESSURE_PANEL,\n        title: 'Cabin Pressure Panel',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'Landing Elevation',\n                state: 'AUTO',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_VENTILATION_PANEL,\n        title: 'Ventilation Panel',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'No White Lights',\n                state: 'CHECKED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_MAINTENANCE_PANEL,\n        title: 'Maintenance Panel',\n        state: 'CHECKED',\n        moreInfoShort: (\n            <>\n                Check there are no white lights on. Panel information can be found\n                {' '}\n                {/* eslint-disable-next-line max-len */}\n                <ExternalLink href=\"https://docs.flybywiresim.com/pilots-corner/a32nx-briefing/flight-deck/ovhd-aft/maintenance/\">\n                    here\n                </ExternalLink>\n                .\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_EFIS_CONTROL_UNITS,\n        title: 'EFIS Control Units',\n        state: 'SET, CHECKED',\n        moreInfoShort: (\n            <>\n                {/* eslint-disable-next-line max-len */}\n                <ExternalLink href=\"https://docs.flybywiresim.com/pilots-corner/a32nx-briefing/flight-deck/glareshield/efis_control/\">\n                    EFIS Control Units\n                </ExternalLink>\n                {' '}\n                are available on both side of the autopilot bar on the glare shield.\n            </>\n        ),\n        subItems: createTransformedList()([\n            {\n                title: 'QNH Unit',\n                state: 'SET',\n            },\n            {\n                title: 'FD',\n                state: 'ON',\n            },\n            {\n                title: 'LS',\n                state: 'OFF',\n            },\n            {\n                title: 'CSTR / WPT / VOR D / NDB / ARPT',\n                state: 'AS DESIRED',\n            },\n            {\n                title: 'MFD Format / Range',\n                state: 'ARC / 10',\n            },\n            {\n                title: 'VOR/ADF Switches',\n                state: 'AS DESIRED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_CENTER_INSTRUMENT_PANEL,\n        title: 'Center Instrument Panel',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'Anti-Skid and Nose-Wheel Steering',\n                state: 'ON',\n            },\n            {\n                title: 'Clocks',\n                state: 'CHECKED, SET',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_SWITCHING_PANEL,\n        title: 'Switching Panel',\n        state: 'ALL NORM',\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_EICAS,\n        title: 'EICAS',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'Oxygen Pressure',\n                state: 'CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Doors Page',\n                        state: 'OPEN',\n                    },\n                    {\n                        title: 'Levels',\n                        state: 'CHECKED',\n                    },\n                ]),\n            },\n            { // FIXME: what can be checked at this point? INOP?\n                title: 'Hydraulic Fluid Quantity',\n                state: 'CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Hydraulic Page (HYD)',\n                        state: 'OPEN',\n                    },\n                    {\n                        title: 'Levels',\n                        state: 'CHECKED',\n                    },\n                ]),\n            },\n            {\n                title: 'Oil Quantity',\n                state: 'CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Engine Page (ENG)',\n                        state: 'OPEN',\n                    },\n                    {\n                        title: 'Levels',\n                        state: 'CHECKED',\n                    },\n                ]),\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_RADIO_PANEL,\n        title: 'Radio Panel',\n        state: 'SET, CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'Radio Frequencies',\n                state: 'SET, BOTH SIDES',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Active: ATIS Frequency',\n                        state: 'SET',\n                    },\n                    {\n                        title: 'Standby: Delivery / Ground Frequency',\n                        state: 'SET',\n                    },\n                ]),\n            },\n            {\n                title: 'Radio Selector',\n                state: 'VHF 1, BOTH SIDES',\n            },\n            {\n                title: 'ATC Code',\n                state: 'SET',\n            },\n            {\n                title: 'ATC Mode',\n                state: 'AUTO',\n            },\n            {\n                title: 'TCAS Mode',\n                state: 'STANDBY',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_FUEL,\n        title: 'Fuel Quantity',\n        state: 'CHECKED / REFUEL',\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_MCDU,\n        title: 'MCDU Initialization',\n        state: 'COMPLETE',\n        subItems: mcduInitializationSubItems(),\n    },\n    {\n        uid: ChecklistItems.A32NX_ORIGINATING_MCDU_SIMBRIEF,\n        title: 'MCDU Initialization',\n        state: 'COMPLETE',\n        subItems: mcduInitializationSubItems({ withSimbrief: true }),\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_ENGINE_START_APU,\n        title: 'APU',\n        state: 'STARTED / BLEED ON',\n        subItems: createTransformedList()(apuStartProcedure),\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_ENGINE_START_EXT_POWER,\n        title: 'External Power',\n        state: 'OFF / DISCONNECTED',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_ENGINE_START_TCAS,\n        title: 'TCAS: ATC',\n        state: 'AUTO',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_ENGINE_START_DOORS,\n        title: 'Doors / Slides',\n        state: 'CLOSED / ARMED',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_ENGINE_START_BEACON,\n        title: 'Beacon',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_ENGINE_START_THRUST_LEVERS,\n        title: 'Thrust Levers',\n        state: 'IDLE',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_ENGINE_START_PARKING_BRAKE,\n        title: 'Parking Brake',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_ENGINE_START_BRAKE_PRESSURE,\n        title: 'Brake Pressure',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.A32NX_ENGINE_START_CHRONO_START,\n        title: 'Chrono',\n        state: 'STARTED',\n        moreInfoShort: 'Chronometer is available on the glare shield and will be displayed on the MFD.',\n    },\n    {\n        uid: ChecklistItems.A32NX_ENGINE_START_ENGINE_MODE,\n        title: 'Engine Mode Switch',\n        state: 'IGNITION / START',\n    },\n    {\n        uid: ChecklistItems.A32NX_ENGINE_START_ENG2_START,\n        title: 'Engine 2',\n        state: 'STARTED',\n        subItems: createTransformedList()([\n            {\n                title: 'Engine 2 Switch',\n                state: 'ON',\n            },\n            engineStartVitals,\n        ]),\n    },\n    {\n        uid: ChecklistItems.A32NX_ENGINE_START_ENG1_START,\n        title: 'Engine 1',\n        state: 'STARTED',\n        subItems: createTransformedList()([\n            {\n                title: 'Engine 1 Switch',\n                state: 'ON',\n            },\n            engineStartVitals,\n        ]),\n    },\n    {\n        uid: ChecklistItems.A32NX_AFTER_ENGINE_START_ENGINE_MODE,\n        title: 'Engine Mode Switch',\n        state: 'NORM',\n    },\n    {\n        uid: ChecklistItems.A32NX_AFTER_ENGINE_START_FLAPS,\n        title: 'Flaps',\n        state: 'SET FOR TAKEOFF',\n    },\n    {\n        uid: ChecklistItems.A32NX_AFTER_ENGINE_START_GROUND_SPOILERS,\n        title: 'Ground Spoilers',\n        state: 'ARMED',\n    },\n    {\n        uid: ChecklistItems.A32NX_AFTER_ENGINE_START_APU_BLEED,\n        title: 'APU Bleed',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.A32NX_AFTER_ENGINE_START_APU,\n        title: 'APU',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.A32NX_AFTER_ENGINE_START_ANTI_ICE,\n        title: 'Anti-Ice',\n        state: 'AS REQUIRED',\n    },\n    {\n        uid: ChecklistItems.A32NX_AFTER_ENGINE_START_PITCH_TRIM,\n        title: 'Pitch Trim',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.A32NX_AFTER_ENGINE_START_RUDDER_TRIM,\n        title: 'Rudder Trim',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.A32NX_AFTER_ENGINE_START_FLIGHT_CONTROLS,\n        title: 'Flight Controls',\n        state: 'FREE AND CORRECT',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_TAXI_EXTERIOR_LIGHTS,\n        title: 'Exterior Lights',\n        state: 'AS REQUIRED',\n        subItems: createTransformedList()([\n            {\n                title: 'Nose Lights',\n                state: 'TAXI',\n            },\n            {\n                title: 'Runway Turn-Off Lights',\n                state: 'AS REQUIRED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_TAXI_RADAR,\n        title: 'Radar',\n        state: 'AS DESIRED',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_TAXI_PREDICTIVE_WINDSHEAR_SYS,\n        title: 'Windshear Predictive System',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_TAXI_TCAS,\n        title: 'TCAS',\n        state: 'TA/RA',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_TAXI_PARKING_BRAKE,\n        title: 'Parking Brake',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_TAXI_BRAKE_PRESSURE,\n        title: 'Brake Pressure',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_TAXI_TERRAIN_ON_ND,\n        title: 'Terrain on ND',\n        state: 'AS DESIRED',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_TAKEOFF_AUTOBRAKE,\n        title: 'Auto-Brake',\n        state: 'MAX',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_TAKEOFF_CABIN_CREW,\n        title: 'Cabin Crew',\n        state: 'NOTIFIED',\n        moreInfoShort: 'Cabin crew can be notified by pressing the ALL call on the left side of the overhead.',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_TAKEOFF_TAKEOFF_CONFIG_TEST,\n        title: 'Take-Off Config Test',\n        state: 'COMPLETED',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_TAKEOFF_BRAKE_TEMP,\n        title: 'Brake Temperature',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_TAKEOFF_EXTERIOR_LIGHTS,\n        title: 'Exterior Lights',\n        state: 'AS REQUIRED',\n        subItems: createTransformedList()([\n            {\n                title: 'Landing Lights',\n                state: 'ON',\n            },\n            {\n                title: 'Nose Lights',\n                state: 'T.O.',\n            },\n            {\n                title: 'Strobe',\n                state: 'ON',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.A32NX_CLIMB_LANDING_GEAR,\n        title: 'Landing Gear',\n        state: 'ORDER / UP',\n    },\n    {\n        uid: ChecklistItems.A32NX_CLIMB_AUTOPILOT,\n        title: 'Autopilot',\n        state: 'AS REQUIRED',\n    },\n    {\n        uid: ChecklistItems.A32NX_CLIMB_THRUST_LEVERS,\n        title: 'Thrust Levers',\n        state: 'CLIMB',\n        moreInfoShort: (\n            'Thrust levers should be moved to the climb detent at the Thrust Reduction Altitude, when'\n            + ' LVR CLB flashes on PFD'\n        ),\n    },\n    {\n        uid: ChecklistItems.A32NX_CLIMB_FLAPS,\n        title: 'Flaps',\n        state: 'ORDER / RETRACT',\n        moreInfoShort: (\n            'Flaps may be retracted once S speed is reached, see PFD indicator on speed tape.'\n        ),\n    },\n    {\n        uid: ChecklistItems.A32NX_CLIMB_GROUND_SPOILERS,\n        title: 'Ground Spoilers',\n        state: 'DISARM',\n    },\n    {\n        uid: ChecklistItems.A32NX_CLIMB_EXTERIOR_LIGHTS,\n        title: 'Exterior Lights',\n        state: 'AS REQUIRED',\n        subItems: createTransformedList()([\n            {\n                title: 'Landing Lights',\n                state: 'OFF / RETRACTED ABOVE 10,000 FT',\n            },\n            {\n                title: 'Nose Lights',\n                state: 'OFF ABOVE 10,000 FT',\n            },\n            {\n                title: 'Strobe',\n                state: 'OFF ABOVE 10,000 FT',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.A32NX_CLIMB_SEATBELT_SIGNS,\n        title: 'Seatbelt Signs',\n        state: 'AS DESIRED',\n    },\n    {\n        uid: ChecklistItems.A32NX_CLIMB_ALTIMETER,\n        title: 'Altimeter',\n        state: 'AS REQUIRED',\n    },\n    {\n        uid: ChecklistItems.A32NX_CLIMB_RADAR,\n        title: 'Radar',\n        state: 'AS DESIRED',\n    },\n    {\n        uid: ChecklistItems.A32NX_CLIMB_ANTI_ICE,\n        title: 'Anti-Ice',\n        state: 'AS REQUIRED',\n    },\n    {\n        uid: ChecklistItems.A32NX_CLIMB_EFIS,\n        title: 'EFIS Options',\n        state: 'AS DESIRED',\n        moreInfoShort: <>EFIS Options may be adjusted (CSTR/ARPT)</>,\n    },\n    {\n        uid: ChecklistItems.A32NX_CLIMB_ECAM_MEMO,\n        title: 'ECAM MEMO',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.A32NX_CLIMB_NAVAIDS,\n        title: 'Navigation Aids (MCDU)',\n        state: 'CLEARED',\n    },\n    {\n        uid: ChecklistItems.A32NX_CRUISE_ECAM_MEMO,\n        title: 'ECAM MEMO / SD Pages',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.A32NX_CRUISE_FLIGHT_PROGRESS,\n        title: 'Flight Progress',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.A32NX_CRUISE_FUEL,\n        title: 'Fuel',\n        state: 'MONITOR',\n    },\n    {\n        uid: ChecklistItems.A32NX_CRUISE_NAVIGATION_ACCURACY,\n        title: 'Navigation Accuracy',\n        state: 'MONITOR',\n    },\n    {\n        uid: ChecklistItems.A32NX_CRUISE_RADAR,\n        title: 'Radar',\n        state: 'AS DESIRED',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_DESCENT_WEATHER,\n        title: 'Weather and Landing Information',\n        state: 'OBTAINED',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_DESCENT_NAV_CHARTS,\n        title: 'Navigation Charts',\n        state: 'PREPARED',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_DESCENT_EFB_LANDING_PERF,\n        title: 'EFB: Landing Performance',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_DESCENT_MCDU,\n        title: 'MCDU',\n        state: 'SET / CHECKED',\n    },\n    { // FIXME: What is GPWS?\n        uid: ChecklistItems.A32NX_BEFORE_DESCENT_GPWS_LDG_FLAPS_3,\n        title: 'GPWS Landing Flap 3',\n        state: 'AS REQUIRED',\n        moreInfoShort: 'If the intent is to land with flaps 3, GPWS should be configured.',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_DESCENT_LANDING_ELEV,\n        title: 'Landing Elevation',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_DESCENT_AUTO_BRAKE,\n        title: 'Auto-Brake',\n        state: 'AS DESIRED',\n        moreInfoShort: 'MED on short or contaminated runway, LO otherwise.',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_DESCENT_APPROACH_BRIEFING,\n        title: 'Approach Briefing',\n        state: 'COMPLETED',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_DESCENT_TERR_ON_ND,\n        title: 'Terrain on ND',\n        state: 'AS REQUIRED',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_DESCENT_RADAR,\n        title: 'Radar',\n        state: 'AS DESIRED',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_DESCENT_ANTI_ICE,\n        title: 'Anti-Ice',\n        state: 'AS REQUIRED',\n    },\n    {\n        uid: ChecklistItems.A32NX_DESCENT_MCDU_PERF,\n        title: 'MCDU Descent Performance',\n        state: 'COMPLETED',\n    },\n    {\n        uid: ChecklistItems.A32NX_DESCENT_ALTIMETER,\n        title: 'Altimeter',\n        state: 'AS REQUIRED',\n    },\n    {\n        uid: ChecklistItems.A32NX_DESCENT_EXTERIOR_LIGHTS,\n        title: 'Exterior Lights',\n        state: 'AS REQUIRED',\n        subItems: createTransformedList()([\n            {\n                title: 'Landing Lights',\n                state: 'ON BELOW 10,000 FT',\n            },\n            {\n                title: 'Nose Lights',\n                state: 'T.O. BELOW 10,000 FT',\n            },\n            {\n                title: 'Strobe Lights',\n                state: 'ON BELOW 10,000 FT',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.A32NX_DESCENT_EFIS,\n        title: 'EFIS Options',\n        state: 'AS REQUIRED',\n        moreInfoShort: 'Constraints (CSTR) should be enabled for this phase.',\n    },\n    {\n        uid: ChecklistItems.A32NX_DESCENT_NAVAIDS,\n        title: 'Navigation Aids (NAVAIDS)',\n        state: 'SELECTED',\n    },\n    {\n        uid: ChecklistItems.A32NX_APPROACH_FPLN_SEQUENCING,\n        title: 'Flight Plan Sequencing',\n        state: 'ADJUST',\n    },\n    {\n        uid: ChecklistItems.A32NX_APPROACH_APPROACH_PHASE,\n        title: 'Approach Phase',\n        state: 'CHECKED / ACTIVATED',\n    },\n    {\n        uid: ChecklistItems.A32NX_APPROACH_MANAGED_SPEED,\n        title: 'Managed Speed',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.A32NX_APPROACH_SPEED_BRAKES,\n        title: 'Speed Brakes Lever',\n        state: 'AS REQUIRED',\n    },\n    {\n        uid: ChecklistItems.A32NX_APPROACH_RADAR,\n        title: 'Radar',\n        state: 'AS DESIRED',\n    },\n    {\n        uid: ChecklistItems.A32NX_APPROACH_FLAPS,\n        title: 'Flaps',\n        state: 'AS REQUIRED',\n    },\n    {\n        uid: ChecklistItems.A32NX_APPROACH_LANDING_GEAR,\n        title: 'Landing Gear',\n        state: 'DOWN, GREEN',\n    },\n    {\n        uid: ChecklistItems.A32NX_APPROACH_GROUND_SPOILERS,\n        title: 'Ground Spoilers',\n        state: 'ARMED',\n    },\n    {\n        uid: ChecklistItems.A32NX_APPROACH_EXTERIOR_LIGHTS,\n        title: 'Exterior Lights',\n        state: 'AS REQUIRED',\n        subItems: createTransformedList()([\n            {\n                title: 'Landing Lights',\n                state: 'ON',\n            },\n            {\n                title: 'Nose Lights',\n                state: 'T.O.',\n            },\n            {\n                title: 'Strobe Lights',\n                state: 'ON',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.A32NX_APPROACH_AUTO_THROTTLE,\n        title: 'Auto Throttles',\n        state: 'SPEED OR OFF',\n    },\n    {\n        uid: ChecklistItems.A32NX_APPROACH_ANTI_ICE,\n        title: 'Anti-Ice',\n        state: 'AS REQUIRED',\n    },\n    {\n        uid: ChecklistItems.A32NX_APPROACH_SLIDING_TABLE,\n        title: 'Sliding Table',\n        state: 'STOWED',\n        tag: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.A32NX_APPROACH_CABIN_CREW,\n        title: 'Cabin Crew',\n        state: 'NOTIFIED',\n    },\n    {\n        uid: ChecklistItems.A32NX_APPROACH_LANDING_MEMO,\n        title: 'EICAS Landing MEMO',\n        state: 'NO BLUE',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_LANDING_FLAPS,\n        title: 'Flaps',\n        state: 'FULL / 3',\n    },\n    {\n        uid: ChecklistItems.A32NX_BEFORE_LANDING_LANDING_GEAR,\n        title: 'Landing Gear',\n        state: 'DOWN, ALL GREEN',\n    },\n    {\n        uid: ChecklistItems.A32NX_AFTER_LANDING_GROUND_SPOILERS,\n        title: 'Ground Spoilers',\n        state: 'DISARMED',\n    },\n    {\n        uid: ChecklistItems.A32NX_AFTER_LANDING_EXTERIOR_LIGHTS,\n        title: 'Exterior Lights',\n        state: 'AS REQUIRED',\n        subItems: createTransformedList()([\n            {\n                title: 'Landing Lights',\n                state: 'RETRACTED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.A32NX_AFTER_LANDING_RADAR,\n        title: 'Radar',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.A32NX_AFTER_LANDING_PREDICTIVE_WINDSHEAR_SYSTEM,\n        title: 'Windshear Predictive System',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.A32NX_AFTER_LANDING_ENG_MODE,\n        title: 'Engine Mode Selector',\n        state: 'NORM',\n    },\n    {\n        uid: ChecklistItems.A32NX_AFTER_LANDING_TCAS,\n        title: 'TCAS',\n        state: 'AS REQUIRED',\n    },\n    {\n        uid: ChecklistItems.A32NX_AFTER_LANDING_ATC,\n        title: 'ATC',\n        state: 'AS REQUIRED',\n    },\n    {\n        uid: ChecklistItems.A32NX_AFTER_LANDING_APU,\n        title: 'APU',\n        state: 'STARTED',\n        subItems: apuStartProcedure,\n    },\n    {\n        uid: ChecklistItems.A32NX_PARKING_ANTI_ICE,\n        title: 'Anti-Ice',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.A32NX_PARKING_PARKING_BRAKE,\n        title: 'Parking Brake',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.A32NX_PARKING_ENGINE_MASTERS,\n        title: 'Engine Masters',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.A32NX_PARKING_SEAT_BELT_SIGNS,\n        title: 'Seat Belt Signs',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.A32NX_PARKING_FUEL_PUMPS,\n        title: 'Fuel Pumps',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.A32NX_PARKING_ATC,\n        title: 'ATC',\n        state: 'STANDBY',\n    },\n    {\n        uid: ChecklistItems.A32NX_PARKING_EXTERIOR_LIGHTS,\n        title: 'Exterior Lights',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.A32NX_PARKING_EXT_POWER,\n        title: 'External Power',\n        state: 'CHECK AVAIL, ON',\n    },\n    {\n        uid: ChecklistItems.A32NX_SECURING_PARKING_BRAKE,\n        title: 'Parking Brake',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.A32NX_SECURING_ADIRS,\n        title: 'All ADIRS',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.A32NX_SECURING_EXTERIOR_LIGHTS,\n        title: 'Exterior Lights',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.A32NX_SECURING_APU_BLEED,\n        title: 'APU Bleed',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.A32NX_SECURING_APU,\n        title: 'APU',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.A32NX_SECURING_EMERGENCY_LIGHTS,\n        title: 'Emergency Exit Lights',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.A32NX_SECURING_SIGNS,\n        title: 'Signs Panel',\n        state: 'ALL OFF',\n    },\n    {\n        uid: ChecklistItems.A32NX_SECURING_BATTERIES,\n        title: 'Battery 1 & 2',\n        state: 'OFF',\n    },\n]);\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { styled } from 'styletron-react';\n\nimport { MonospacedFonts } from 'components/lib/Monospaced';\nimport { pick } from 'lib/pick';\n\nconst levelToColorsMapping = {\n    critical: '#ff3e3e',\n    warning: '#f5cd37',\n    success: '#2bc52d',\n    info: '#fff',\n    data: '#98f0ff',\n};\n\nconst CASMessageContainer = styled('span', (props) => ({\n    backgroundColor: '#1f1f1f',\n    fontFamily: MonospacedFonts,\n    color: pick(levelToColorsMapping[props.$level], levelToColorsMapping.info),\n    padding: '2px 5px',\n    fontSize: '.9em',\n    whiteSpace: 'nowrap',\n    borderRadius: '2px',\n}));\n\nexport const CASMessage = ({ children, level }) => (\n    <CASMessageContainer $level={level}>\n        {children}\n    </CASMessageContainer>\n);\n\nCASMessage.propTypes = {\n    level: PropTypes.oneOf(Object.keys(levelToColorsMapping)),\n    children: PropTypes.node.isRequired,\n};\n\nCASMessage.defaultProps = {\n    level: null,\n};\n","import React from 'react';\n\nimport { CASMessage } from 'components/lib/CASMessage';\nimport { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistTags } from 'lib/checklist/data/tags';\nimport { createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst addC172Tags = (value) => ({\n    ...value,\n    tags: [...value.tags, ChecklistTags.OFFICIAL, ChecklistTags.C172],\n});\n\nexport const C172ChecklistItemsData = createTransformedMapping(addC172Tags)([\n    {\n        uid: ChecklistItems.C172_PREFLIGHT_AIRCRAFT_DOCUMENTS,\n        title: 'Aircraft Documents',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172_PREFLIGHT_PARKING_BRAKE,\n        title: 'Parking Brake',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172_PREFLIGHT_IGNITION,\n        title: 'Ignition',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172_PREFLIGHT_AVIONICS_SWITCHES_OFF,\n        title: 'Avionics Switches (BUS 1 and BUS 2)',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172_PREFLIGHT_FUEL_QUANTITY,\n        title: 'Fuel Quantity Indicators',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172_PREFLIGHT_LOW_FUEL_ANNUNCIATORS,\n        title: <>Low Fuel Annunciators</>,\n        state: 'OFF',\n        moreInfoShort: (\n            <>\n                Check that neither\n                {' '}\n                <CASMessage level=\"warning\">LOW FUEL L</CASMessage>\n                {' '}\n                or\n                {' '}\n                <CASMessage level=\"warning\">LOW FUEL R</CASMessage>\n                {' '}\n                annunciators are displayed in the CAS messages.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.C172_PREFLIGHT_STATIC_PRESSURE_ALT_SOURCE_VALVE,\n        title: 'Static Pressure Alt Source Valve',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172_PREFLIGHT_PITOT_HEAT_ON,\n        title: 'Pitot Heat',\n        state: 'ON, CHECK WORKING',\n    },\n    {\n        uid: ChecklistItems.C172_PREFLIGHT_PITOT_HEAT_OFF,\n        title: 'Pitot Heat',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172_PREFLIGHT_FUEL_SELECTOR,\n        title: 'Fuel Selector',\n        state: 'BOTH',\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_START_PREFLIGHT_INSPECTION,\n        title: 'Preflight Inspection',\n        state: 'COMPLETE',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_START_SEATS_BELTS,\n        title: 'Seats, Belts',\n        state: 'ADJUST AND LOCK',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_START_ELECTRICAL_EQUIPMENT,\n        title: 'Electrical Equipment',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_START_AVIONICS_SWITCHES,\n        title: 'Avionics Switches (BUS 1 and BUS 2)',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_START_FUEL_SELECTOR,\n        title: 'Fuel Selector',\n        state: 'BOTH',\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_START_FUEL_SHUTOFF_VALVE,\n        title: 'Fuel Shutoff Valve',\n        state: 'OPEN',\n    },\n    {\n        uid: ChecklistItems.C172_ENGINE_START_THROTTLE,\n        title: 'Throttle',\n        state: 'OPEN 1/4 INCH',\n    },\n    {\n        uid: ChecklistItems.C172_ENGINE_START_MIXTURE_1,\n        title: 'Mixture',\n        state: 'IDLE CUTOFF',\n    },\n    {\n        uid: ChecklistItems.C172_ENGINE_START_PROPELLER_AREA,\n        title: 'Propeller Area',\n        state: 'CLEAR',\n    },\n    {\n        uid: ChecklistItems.C172_ENGINE_START_BEACON_LIGHT,\n        title: 'Beacon Light',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172_ENGINE_START_MIXTURE_2,\n        title: 'Mixture',\n        state: 'RICH',\n    },\n    {\n        uid: ChecklistItems.C172_ENGINE_START_AUX_FUEL_PUMP,\n        title: 'AUX Fuel Pump',\n        state: 'ON 3-5 SECONDS, THEN OFF',\n    },\n    {\n        uid: ChecklistItems.C172_ENGINE_START_MIXTURE_3,\n        title: 'Mixture',\n        state: 'LEAN',\n    },\n    {\n        uid: ChecklistItems.C172_ENGINE_START_FEET_BRAKES,\n        title: 'Feet',\n        state: 'READY TO BRAKE',\n    },\n    {\n        uid: ChecklistItems.C172_ENGINE_START_IGNITION,\n        title: 'Ignition',\n        state: 'START',\n    },\n    {\n        uid: ChecklistItems.C172_ENGINE_START_MIXTURE_4,\n        title: 'Mixture',\n        state: 'RICH WHEN ENGINE STARTS',\n    },\n    {\n        uid: ChecklistItems.C172_AFTER_START_THROTTLE,\n        title: 'Throttle',\n        state: 'ADJUST 1000 RPM',\n    },\n    {\n        uid: ChecklistItems.C172_AFTER_START_OIL_PRESSURE,\n        title: 'Oil Pressure',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172_AFTER_START_AVIONICS_SWITCHES,\n        title: 'Avionics Switches (BUS 1 and BUS 2)',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172_AFTER_START_FLAPS,\n        title: 'Flaps',\n        state: 'UP',\n    },\n    {\n        uid: ChecklistItems.C172_TAXI_TAXI_LIGHT,\n        title: 'Taxi Light',\n        state: 'AS REQUIRED',\n    },\n    {\n        uid: ChecklistItems.C172_TAXI_LANDING_LIGHT,\n        title: 'Landing Light',\n        state: 'AS REQUIRED',\n    },\n    {\n        uid: ChecklistItems.C172_TAXI_STROBE_LIGHT,\n        title: 'Strobe Light',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172_TAXI_NAV_LIGHT,\n        title: 'Navigation Lights',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172_TAXI_PARKING_BRAKE,\n        title: 'Parking Brake',\n        state: 'RELEASE',\n    },\n    {\n        uid: ChecklistItems.C172_TAXI_BRAKES,\n        title: 'Brakes',\n        state: 'TEST',\n    },\n    {\n        uid: ChecklistItems.C172_TAXI_RUDDER,\n        title: 'Rudder',\n        state: 'TEST',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_PARKING_BRAKE,\n        title: 'Parking Brake',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_SEATS_BACKS,\n        title: 'Pilot and Passenger Seat Backs',\n        state: 'MOST UPRIGHT POSITION',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_SEATS_BELTS,\n        title: 'Seats, Belts',\n        state: 'CHECK SECURE',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_FLIGHT_CONTROLS_1,\n        title: 'Flight Controls',\n        state: 'FREE AND CORRECT',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_FUEL_QUANTITY,\n        title: 'Fuel Quantity Indicators',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_MIXTURE,\n        title: 'Mixture',\n        state: 'RICH',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_FUEL_SELECTOR,\n        title: 'Fuel Selector',\n        state: 'BOTH',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_AUTOPILOT,\n        title: 'Autopilot',\n        state: 'ENGAGE',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_FLIGHT_CONTROLS_2,\n        title: 'Flight Controls',\n        state: 'MOVE AGAINST AP',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_THROTTLE_1,\n        title: 'Throttle',\n        state: 'SET 1800 RPM',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_MAGNETOS_1,\n        title: 'Magnetos',\n        state: '150 RPM MAX DECREASE',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_MAGNETOS_2,\n        title: 'Magnetos',\n        state: '50 RPM MAX DIFFERENCE',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_MAGNETOS_3,\n        title: 'Magnetos',\n        state: 'BOTH',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_VACCUM_GAUGE,\n        title: 'Vacuum Gauge',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_ENGINE_IDLE,\n        title: 'Engine Idle',\n        state: 'CHECK 600-650 RPM',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_THROTTLE_2,\n        title: 'Throttle',\n        state: 'ADJUST 1000 RPM',\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_TAKEOFF_FLAPS,\n        title: 'Flaps',\n        state: '0-10 DEGREES',\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_TAKEOFF_CABIN_WINDOWS,\n        title: 'Cabin Windows',\n        state: 'CLOSED AND LOCKED',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_TAKEOFF_PARKING_BRAKE,\n        title: 'Parking Brake',\n        state: 'RELEASE',\n    },\n    {\n        uid: ChecklistItems.C172_TAKEOFF_FLAPS_1,\n        title: 'Flaps',\n        state: '0-10 DEGREES',\n    },\n    {\n        uid: ChecklistItems.C172_TAKEOFF_THROTTLE,\n        title: 'Throttle',\n        state: 'FULL, 2300 RPM MINIMUM',\n    },\n    {\n        uid: ChecklistItems.C172_TAKEOFF_MIXTURE,\n        title: 'Mixture',\n        state: 'RICH',\n    },\n    {\n        uid: ChecklistItems.C172_TAKEOFF_AIRSPEED_INDICATOR,\n        title: 'Airspeed Indicator',\n        state: 'CHECK WORKING',\n    },\n    {\n        uid: ChecklistItems.C172_TAKEOFF_LIFT_NOSEWHEEL,\n        title: 'Lift Nosewheel',\n        state: '55 KIAS',\n    },\n    {\n        uid: ChecklistItems.C172_TAKEOFF_INITIAL_CLIMB,\n        title: 'Initial Climb',\n        state: '70-80 KIAS',\n    },\n    {\n        uid: ChecklistItems.C172_TAKEOFF_FLAPS_2,\n        title: 'Flaps',\n        state: 'UP ABOVE 300 FT AGL',\n    },\n    {\n        uid: ChecklistItems.C172_CLIMB_AIRSPEED,\n        title: 'Airspeed',\n        state: '70-85 KIAS',\n    },\n    {\n        uid: ChecklistItems.C172_CLIMB_THROTTLE,\n        title: 'Throttle',\n        state: 'FULL',\n    },\n    {\n        uid: ChecklistItems.C172_CLIMB_MIXTURE_1,\n        title: 'Mixture',\n        state: 'RICH',\n    },\n    {\n        uid: ChecklistItems.C172_CLIMB_ENGINE_GAUGES,\n        title: 'Engine Gauges',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172_CLIMB_TAXI_LANDING_LIGHTS,\n        title: 'Taxi And Landing Lights',\n        state: 'OFF ABOVE 1000 FT AGL',\n    },\n    {\n        uid: ChecklistItems.C172_CLIMB_MIXTURE_2,\n        title: 'Mixture',\n        state: 'LEAN ABOVE 3000 FT',\n    },\n    {\n        uid: ChecklistItems.C172_CRUISE_POWER,\n        title: 'Power',\n        state: '2100-2700 RPM, 75% POWER MAX',\n    },\n    {\n        uid: ChecklistItems.C172_CRUISE_ELEVATOR_TRIM,\n        title: 'Elevator Trim',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172_CRUISE_MIXTURE,\n        title: 'Mixture',\n        state: 'LEAN FOR ALTITUDE',\n    },\n    {\n        uid: ChecklistItems.C172_CRUISE_ENGINE_GAUGES,\n        title: 'Engine Gauges',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172_DESCENT_POWER,\n        title: 'Power',\n        state: 'AS DESIRED',\n    },\n    {\n        uid: ChecklistItems.C172_DESCENT_MIXTURE,\n        title: 'Mixture',\n        state: 'ADJUST',\n    },\n    {\n        uid: ChecklistItems.C172_DESCENT_FUEL_SELECTOR,\n        title: 'Fuel Selector',\n        state: 'BOTH',\n    },\n    {\n        uid: ChecklistItems.C172_DESCENT_FLAPS,\n        title: 'Flaps',\n        state: 'AS REQUIRED',\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_LANDING_SEATS_BACKS,\n        title: 'Pilot and Passenger Seat Backs',\n        state: 'MOST UPRIGHT POSITION',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_LANDING_SEATS_BELTS,\n        title: 'Seats, Belts',\n        state: 'SECURED AND LOCKED',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_LANDING_FUEL_SELECTOR,\n        title: 'Fuel Selector',\n        state: 'BOTH',\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_LANDING_MIXTURE,\n        title: 'Mixture',\n        state: 'RICH',\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_LANDING_TAXI_LANDING_LIGHTS,\n        title: 'Taxi and Landing Lights',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_LANDING_AUTOPILOT,\n        title: 'Autopilot',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172_LANDING_FLAPS,\n        title: 'Flaps',\n        state: 'DOWN',\n    },\n    {\n        uid: ChecklistItems.C172_LANDING_AIRSPEED,\n        title: 'Final Approach Airspeed',\n        state: '60-70 KIAS',\n    },\n    {\n        uid: ChecklistItems.C172_LANDING_TOUCHDOWN,\n        title: 'Touchdown',\n        state: 'MAIN FIRST',\n    },\n    {\n        uid: ChecklistItems.C172_LANDING_LANDING_ROLL,\n        title: 'Landing Roll',\n        state: 'LOWER NOSE GENTLY',\n    },\n    {\n        uid: ChecklistItems.C172_LANDING_BRAKING,\n        title: 'Braking',\n        state: 'MINIMUM REQUIRED',\n    },\n    {\n        uid: ChecklistItems.C172_AFTER_LANDING_FLAPS,\n        title: 'Flaps',\n        state: 'UP',\n    },\n    {\n        uid: ChecklistItems.C172_AFTER_LANDING_LANDING_LIGHT,\n        title: 'Landing Lights',\n        state: 'AS REQUIRED',\n    },\n    {\n        uid: ChecklistItems.C172_AFTER_LANDING_TAXI_LIGHT,\n        title: 'Taxi Lights',\n        state: 'AS REQUIRED',\n    },\n    {\n        uid: ChecklistItems.C172_AFTER_LANDING_STROBE_LIGHT,\n        title: 'Strobe Lights',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172_AFTER_LANDING_ELEVATOR_TRIM,\n        title: 'Elevator Trim',\n        state: 'RESET TO NEUTRAL',\n    },\n    {\n        uid: ChecklistItems.C172_AFTER_LANDING_TRANSPONDER,\n        title: 'Transponder',\n        state: 'STANDBY',\n    },\n    {\n        uid: ChecklistItems.C172_PARKING_PARKING_BRAKE,\n        title: 'Parking Brake',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172_PARKING_AVIONICS_SWITCHES,\n        title: 'Avionics Switches (BUS 1 and BUS 2)',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172_PARKING_ENGINE_IDLE,\n        title: 'Engine Idle',\n        state: 'CHECK 600-650 RPM',\n    },\n    {\n        uid: ChecklistItems.C172_PARKING_MAGNETOS,\n        title: 'Magnetos',\n        state: 'CUTOFF TEST',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.C172_PARKING_MIXTURE,\n        title: 'Mixture',\n        state: 'IDLE CUTOFF',\n    },\n    {\n        uid: ChecklistItems.C172_SECURING_IGNITION,\n        title: 'Ignition',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172_SECURING_LANDING_LIGHT,\n        title: 'Landing Light',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172_SECURING_TAXI_LIGHT,\n        title: 'Taxi Light',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172_SECURING_NAV_LIGHT,\n        title: 'Navigation Lights',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172_SECURING_FUEL_SELECTOR,\n        title: 'Fuel Selector',\n        state: 'LEFT OR RIGHT',\n    },\n]);\n","import { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistTags } from 'lib/checklist/data/tags';\nimport { createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst addC172G1000Tags = (value) => ({\n    ...value,\n    tags: [\n        ...value.tags,\n        ChecklistTags.OFFICIAL,\n        ChecklistTags.C172,\n        ChecklistTags.C172_G1000,\n    ],\n});\n\nexport const C172G1000ChecklistItemsData = createTransformedMapping(addC172G1000Tags)([\n    {\n        uid: ChecklistItems.C172G1000_PREFLIGHT_MASTER_SWITCHES_1,\n        title: 'Master Switches (ALT and BAT)',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172G1000_PREFLIGHT_PFD,\n        title: 'Primary Flight Display (PFD_CJ4)',\n        state: 'CHECK ON',\n    },\n    {\n        uid: ChecklistItems.C172G1000_PREFLIGHT_OIL_PRESSURE_ANNUNCIATOR,\n        title: 'Oil Pressure Annunciator',\n        state: 'CHECK ON',\n    },\n    {\n        uid: ChecklistItems.C172G1000_PREFLIGHT_LOW_VACUUM_ANNUNCIATOR,\n        title: 'Low Vacuum Annunciator',\n        state: 'CHECK ON',\n    },\n    {\n        uid: ChecklistItems.C172G1000_PREFLIGHT_AVIONICS_SWITCH_1_ON,\n        title: 'Avionics Switch (BUS 1)',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172G1000_PREFLIGHT_AVIONICS_SWITCH_1_FAN,\n        title: 'Forward Avionics Fan',\n        state: 'CHECK FAN IS HEARD',\n    },\n    {\n        uid: ChecklistItems.C172G1000_PREFLIGHT_AVIONICS_SWITCH_1_OFF,\n        title: 'Avionics Switch (BUS 1)',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172G1000_PREFLIGHT_AVIONICS_SWITCH_2_ON,\n        title: 'Avionics Switch (BUS 2)',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172G1000_PREFLIGHT_AVIONICS_SWITCH_2_FAN,\n        title: 'Aft Avionics Fan',\n        state: 'CHECK FAN IS HEARD',\n    },\n    {\n        uid: ChecklistItems.C172G1000_PREFLIGHT_AVIONICS_SWITCH_2_OFF,\n        title: 'Avionics Switch (BUS 2)',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172G1000_PREFLIGHT_LOW_VOLTS_ANNUNCIATOR,\n        title: 'Low Volts Annunciator',\n        state: 'CHECK ON',\n    },\n    {\n        uid: ChecklistItems.C172G1000_PREFLIGHT_MASTER_SWITCHES_2,\n        title: 'Master Switches (ALT and BAT)',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172G1000_PREFLIGHT_ELEVATOR_TRIM,\n        title: 'Elevator Trim',\n        state: 'TAKE-OFF POSITION',\n    },\n    {\n        uid: ChecklistItems.C172G1000_BEFORE_START_BRAKES,\n        title: 'Brakes',\n        state: 'TEST AND SET',\n    },\n    {\n        uid: ChecklistItems.C172G1000_BEFORE_START_CIRCUIT_BREAKERS,\n        title: 'Circuit Breakers',\n        state: 'ALL PUSHED',\n    },\n    {\n        uid: ChecklistItems.C172G1000_ENGINE_START_STANDBY_BATT_TEST,\n        title: 'Standby Battery Switch (STBY BATT)',\n        state: 'TEST, HOLD FOR 20 SEC',\n    },\n    {\n        uid: ChecklistItems.C172G1000_ENGINE_START_STANDBY_BATT_ARM,\n        title: 'Standby Battery Switch (STBY BATT)',\n        state: 'ARM, VERIFY PFD_CJ4 ON',\n    },\n    {\n        uid: ChecklistItems.C172G1000_ENGINE_START_ENGINE_INDICATING_SYSTEM,\n        title: 'Engine Indicating System',\n        state: 'CHECK PARAMETERS',\n    },\n    {\n        uid: ChecklistItems.C172G1000_ENGINE_START_BUS_E_VOLTS,\n        title: 'BUS E Volts',\n        state: 'CHECK 24 VOLS MINIMUM',\n    },\n    {\n        uid: ChecklistItems.C172G1000_ENGINE_START_BUS_M_VOLTS,\n        title: 'M BUS Volts',\n        state: 'CHECK 1.5 VOLTS OR LESS',\n    },\n    {\n        uid: ChecklistItems.C172G1000_ENGINE_START_BATT_S_AMPS,\n        title: 'Battery S Amps',\n        state: 'CHECK, VERIFY DISCHARGE',\n    },\n    {\n        uid: ChecklistItems.C172G1000_ENGINE_START_STANDBY_BATT_ANNUNCIATOR,\n        title: 'Standby Battery Annunciator',\n        state: 'CHECK ON',\n    },\n    {\n        uid: ChecklistItems.C172G1000_ENGINE_START_MASTER_SWITCH,\n        title: 'Master Switches (ALT and BAT)',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172G1000_AFTER_START_AMPS,\n        title: 'Amps (M BATT and BATT S)',\n        state: 'CHECK, VERIFY CHARGE SHOWN',\n    },\n    {\n        uid: ChecklistItems.C172G1000_AFTER_START_LOW_VOLTS_ANNUNCIATOR,\n        title: 'Low Volts Annunciator',\n        state: 'CHECK OFF',\n    },\n    {\n        uid: ChecklistItems.C172G1000_RUNUP_DOORS,\n        title: 'Doors',\n        state: 'CLOSED AND LOCKED',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.C172G1000_RUNUP_FLIGHT_INSTRUMENTS,\n        title: 'Flight Instruments (PFD_CJ4)',\n        state: 'CHECK NO RED X\\'s',\n    },\n    {\n        uid: ChecklistItems.C172G1000_RUNUP_ALTIMETER,\n        title: 'Altimeter (PFD_CJ4)',\n        state: 'SET BARO',\n    },\n    {\n        uid: ChecklistItems.C172G1000_RUNUP_STANDBY_ALTIMETER,\n        title: 'Standby Altimeter',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172G1000_RUNUP_ALTITUDE_SELECT,\n        title: 'ALT SEL',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172G1000_RUNUP_STANDBY_FLIGHT_INSTRUMENTS,\n        title: 'Standby Flight Instruments',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172G1000_RUNUP_AP_TRIM_DISC,\n        title: 'A/P Trim DISC Button',\n        state: 'PRESS',\n    },\n    {\n        uid: ChecklistItems.C172G1000_RUNUP_FLIGHT_DIRECTOR,\n        title: 'Flight Director',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172G1000_RUNUP_ELEVATOR_TRIM,\n        title: 'Elevator Trim',\n        state: 'SET FOR TAKEOFF',\n    },\n    {\n        uid: ChecklistItems.C172G1000_RUNUP_ENGINE_INDICATORS,\n        title: 'Engine Indicators',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172G1000_RUNUP_ANMETERS_VOLTMETERS,\n        title: 'Anmeters and Voltmeters',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172G1000_RUNUP_ANNUNCIATORS,\n        title: 'Annunciators',\n        state: 'CHECK NONE DISPLAYED',\n    },\n    {\n        uid: ChecklistItems.C172G1000_BEFORE_TAKEOFF_COM_FREQS,\n        title: 'COM Frequency(s)',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172G1000_BEFORE_TAKEOFF_NAV_FREQS,\n        title: 'NAV Frequency(s)',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172G1000_BEFORE_TAKEOFF_FMS_GPS,\n        title: 'FMS/GPS Flight PLan',\n        state: 'AS DESIRED',\n    },\n    {\n        uid: ChecklistItems.C172G1000_BEFORE_TAKEOFF_TRANSPONDER,\n        title: 'Transponder',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172G1000_BEFORE_TAKEOFF_CDI_NAV_SOURCE,\n        title: 'CDI Softkey',\n        state: 'SELECT NAV SOURCE',\n    },\n    {\n        uid: ChecklistItems.C172G1000_BEFORE_TAKEOFF_CABIN_PWR,\n        title: 'Cabin Power 12V Switch',\n        state: 'OFF',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.C172G1000_TAKEOFF_ANNUNCIATORS,\n        title: 'Annunciators',\n        state: 'CHECK NONE DISPLAYED',\n    },\n    {\n        uid: ChecklistItems.C172G1000_CRUISE_FMS_GPS,\n        title: 'FMS/GPS',\n        state: 'REVIEW AND BRIEF',\n    },\n    {\n        uid: ChecklistItems.C172G1000_DESCENT_ALTIMETER,\n        title: 'Altimeter (PFD_CJ4)',\n        state: 'SET BARO',\n    },\n    {\n        uid: ChecklistItems.C172G1000_DESCENT_STANDBY_ALTIMETER,\n        title: 'Standby Altimeter',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172G1000_DESCENT_ALTITUDE_SELECT,\n        title: 'ALT SEL',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172G1000_DESCENT_CDI_NAV,\n        title: 'CDI Softkey',\n        state: 'SELECT NAV SOURCE',\n    },\n    {\n        uid: ChecklistItems.C172G1000_DESCENT_FMS_GPS,\n        title: 'FMS/GPS',\n        state: 'REVIEW AND BRIEF',\n    },\n    {\n        uid: ChecklistItems.C172G1000_BEFORE_LANDING_CABIN_PWR,\n        title: 'Cabin Power 12V Switch',\n        state: 'OFF',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.C172G1000_SECURING_MASTER_SWITCHES,\n        title: 'Master Switches (ALT and BAT)',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172G1000_SECURING_STANDBY_BATT,\n        title: 'Standby Battery Switch (STBY BATT)',\n        state: 'OFF',\n    },\n]);\n","import { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistTags } from 'lib/checklist/data/tags';\nimport { createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst addC172SteamTags = (value) => ({\n    ...value,\n    tags: [\n        ...value.tags,\n        ChecklistTags.OFFICIAL,\n        ChecklistTags.C172,\n        ChecklistTags.C172_STEAM,\n    ],\n});\n\nexport const C172SteamChecklistItemsData = createTransformedMapping(addC172SteamTags)([\n    {\n        uid: ChecklistItems.C172STEAM_PREFLIGHT_BATTERY_SWITCH_1,\n        title: 'Battery Switch',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_PREFLIGHT_BATTERY_SWITCH_2,\n        title: 'Battery Switch',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_PREFLIGHT_AVIONICS_SWITCHES_1,\n        title: 'Avionics Switches (BUS 1 and BUS 2)',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_PREFLIGHT_AVIONICS_SWITCHES_2,\n        title: 'Avionics Switches (BUS 1 and BUS 2)',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_PREFLIGHT_AVIONICS_COOLING_FAN,\n        title: 'Avionics Cooling Fan',\n        state: 'AUDIBLE',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_PREFLIGHT_ANNUNCIATOR_PANEL,\n        title: 'Annunciator Panel',\n        state: 'TEST',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_PREFLIGHT_FUEL_SHUTOFF_VALVE,\n        title: 'Fuel Shutoff Valve',\n        state: 'OPEN',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_PREFLIGHT_FLAPS_DOWN,\n        title: 'Flaps',\n        state: 'DOWN',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_PREFLIGHT_ELEVATOR_TRIM,\n        title: 'Elevator Trim',\n        state: 'NEUTRAL',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_ENGINE_START_BATTERY_SWITCH,\n        title: 'Battery Switch',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_AFTER_START_ALTERNATOR,\n        title: 'Alternator',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_AFTER_START_ALTERNATOR_INDICATOR,\n        title: 'Alternator Indicator',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_AFTER_START_ANMETER,\n        title: 'Anmeter',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_AFTER_START_RADIOS,\n        title: 'Radios',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_AFTER_START_TRANSPONDER,\n        title: 'Transponder',\n        state: 'STANDBY',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_AFTER_START_HEADING_INDICATOR,\n        title: 'Heading Indicator',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_AFTER_START_ALTIMETER,\n        title: 'Altimeter',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_AFTER_START_ALTITUDE_INDICATOR,\n        title: 'Altitude Indicator',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_TAXI_TURN_COORDINATOR,\n        title: 'Turn Coordinator',\n        state: 'CHECK WORKING',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_TAXI_HEADING_INDICATOR,\n        title: 'Heading Indicator',\n        state: 'CHECK WORKING',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_TAXI_COMPASS,\n        title: 'Compass',\n        state: 'CHECK WORKING',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_RUNUP_FLIGHT_INSTRUMENTS,\n        title: 'Flight Instruments',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_RUNUP_AUTOPILOT,\n        title: 'Autopilot',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_RUNUP_OIL_PRESSURE,\n        title: 'Oil Pressure',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_RUNUP_OIL_TEMPERATURE,\n        title: 'Oil Temperature',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_RUNUP_ANMETER,\n        title: 'Anmeter',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_RUNUP_ANNUNCIATOR_PANEL,\n        title: 'Annunciator Panel',\n        state: 'CLEAR',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_BEFORE_TAKEOFF_RADIOS,\n        title: 'Radios',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_BEFORE_TAKEOFF_AVIONICS,\n        title: 'Avionics',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_BEFORE_TAKEOFF_NAV_GPS_SWITCH,\n        title: 'NAV/GPS switch',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_BEFORE_TAKEOFF_TRANSPONDER,\n        title: 'Transponder',\n        state: 'ON ALT',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_BEFORE_TAKEOFF_AUTOPILOT,\n        title: 'Autopilot',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_BEFORE_TAKEOFF_ELEVATOR_TRIM,\n        title: 'Elevator Trim',\n        state: 'SET FOR TAKEOFF',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_TAKEOFF_ANNUNCIATORS,\n        title: 'Annunciator Panel',\n        state: 'CLEAR',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_CRUISE_FLIGHT_INSTRUMENTS,\n        title: 'Flight Instruments',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_DESCENT_ALTIMETER,\n        title: 'Altimeter Setting',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_DESCENT_NAV_GPS,\n        title: 'NAV/GPS Switch',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_PARKING_TRANSPONDER,\n        title: 'Transponder',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_SECURING_ALTERNATOR,\n        title: 'Alternator',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_SECURING_BATTERY,\n        title: 'Battery Switch',\n        state: 'OFF',\n    },\n]);\n","import React from 'react';\n\nimport { Vernacular } from 'components/lib/vernacular/Vernacular';\n\nexport const PFD_CJ4 = <Vernacular title=\"Primary Flight Display - Left Side Display\">PFD</Vernacular>;\nexport const DCP_CJ4 = <Vernacular title=\"Display Control Panel - Above PFD\">DCP</Vernacular>;\n\nexport const MFD_CJ4 = <Vernacular title=\"Multi Function Display - Right Side Display\">MFD</Vernacular>;\nexport const CCP_CJ4 = <Vernacular title=\"Cursor Control Panel - Button Panel below MFD\">CCP</Vernacular>;\n\nexport const EP_CJ4 = <Vernacular title=\"Electrical Panel - Panel Left of PFD\">Electrical Panel</Vernacular>;\nexport const TP_CJ4 = <Vernacular title=\"Tilt Panel - Panel Below PFD and MFD\">Tilt Panel</Vernacular>;\n\nexport const EICAS_CJ4 = <Vernacular title=\"Engine Indicating and Crew Alerting System - Top of MFD\">EICAS</Vernacular>;\nexport const SFD_CJ4 = <Vernacular title=\"Standby Flight Display\">SFD</Vernacular>;\n","import React from 'react';\n\nimport { Alert } from 'antd';\nimport { generatePath } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nimport { CASMessage } from 'components/lib/CASMessage';\nimport { ExternalLink } from 'components/lib/ExternalLink';\nimport { KeyboardInputs } from 'components/lib/KeyboardInputs';\nimport { Monospaced } from 'components/lib/Monospaced';\nimport {\n    CCP_CJ4, DCP_CJ4, EICAS_CJ4, EP_CJ4, MFD_CJ4, PFD_CJ4, SFD_CJ4, TP_CJ4,\n} from 'components/lib/vernacular/cj4';\nimport {\n    AGL,\n    FADEC,\n    FMS, ITT, KIAS, N1, N2, OAT, QNH, SAT, VR,\n} from 'components/lib/vernacular/common';\nimport { AntiIceAircrafts } from 'lib/anti-ice/data/aircrafts';\nimport { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistTags } from 'lib/checklist/data/tags';\nimport { createTransformedList, createTransformedMapping } from 'lib/checklist/data/transforms';\nimport { AntiIceWithNameRoute } from 'lib/routes';\n\nconst addCJ4Tags = (value) => ({\n    ...value,\n    tags: [ChecklistTags.OFFICIAL, ChecklistTags.CJ4, ...value.tags],\n});\n\nconst cj4AntiIceRules = (\n    <>\n        Anti-ice rules explained\n        {' '}\n        <Link\n            to={generatePath(AntiIceWithNameRoute, { aircraftName: AntiIceAircrafts.WORKINGTITLE_CJ4 })}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n        >\n            here\n        </Link>\n        .\n    </>\n);\n\nexport const CJ4ChecklistItemsData = createTransformedMapping(addCJ4Tags)([\n    {\n        uid: ChecklistItems.CJ4_BEFORE_START_BATTERY_SWITCH,\n        title: 'Battery Switch',\n        state: 'ON',\n        moreInfoLong: (\n            <>\n                Battery switch is the red switch located in the\n                {' '}\n                {EP_CJ4}\n                ,\n                and can be turned on by moving it in up position.\n                <br />\n                <br />\n                {MFD_CJ4}\n                {' '}\n                should turn on and show a few errors and warnings once battery is ON. Battery life is limited at 10\n                to 15 minutes so either engines must be started or ground power used pretty quickly.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_START_EMERGENCY_LIGHTS_SWITCH,\n        title: 'Emergency Lights Switch',\n        state: 'ARMED',\n        moreInfoLong: (\n            <>\n                Emergency Lights switch is in the\n                {' '}\n                {EP_CJ4}\n                {' '}\n                along with battery switch, on the second row\n                on the left. It can be armed by moving it in the up position. Warning\n                {' '}\n                <CASMessage level=\"warning\">EMER LIGHTS NOT ARMED</CASMessage>\n                {' '}\n                should disappear from\n                {' '}\n                {MFD_CJ4}\n                {' '}\n                after completing this step.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_START_STANDBY_FLIGHT_DISPLAY_SWITCH,\n        title: 'Standby Flight Display Switch',\n        state: 'ON',\n        moreInfoLong: (\n            <>\n                {SFD_CJ4}\n                {' '}\n                Switch is also in the\n                {' '}\n                {EP_CJ4}\n                , on the second row in the middle. It can be turned on by moving it in the up position.\n                {' '}\n                {SFD_CJ4}\n                {' '}\n                right of\n                {' '}\n                {MFD_CJ4}\n                , above landing gear state display, should turn ON.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_START_AVIONICS_SWITCH,\n        title: 'Avionics Switch',\n        state: 'DISPATCH',\n        moreInfoLong: (\n            <>\n                Avionics Switch is located in the electrical panel, on the second row on the right. It can be turned\n                into dispatch mode by moving it in the down position.\n                {' '}\n                {FMS}\n                {' '}\n                will start and\n                {' '}\n                <CASMessage level=\"warning\">BAT AMP</CASMessage>\n                {' '}\n                warning should flash on\n                {' '}\n                {MFD_CJ4}\n                {' '}\n                after this step.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_START_PARKING_BRAKES,\n        title: 'Parking Brake',\n        state: 'SET',\n        moreInfoShort: (\n            <>\n                Parking Brake is located below the\n                {' '}\n                {TP_CJ4}\n                , as a black and round pull handle. Parking brakes are set when the handle is fully extended.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_START_WHEEL_CHOCKS,\n        title: 'Wheel Chocks',\n        state: 'REMOVE',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_START_CABIN_DOOR,\n        title: 'Cabin Door',\n        state: 'CLOSED',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_START_PASSENGER_BRIEFING,\n        title: 'Passenger Briefing',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                Passenger briefing can be started using the\n                {' '}\n                {CCP_CJ4}\n                {' '}\n                below the\n                {' '}\n                {MFD_CJ4}\n                {' '}\n                with the\n                {' '}\n                <KeyboardInputs inputs={['PASS BRIEF']} />\n                {' '}\n                button (bottom right). Use one of the two available\n                {' '}\n                <CASMessage>TAKEOFF (LONG)</CASMessage>\n                {' '}\n                or\n                {' '}\n                <CASMessage>TAKEOFF (SHORT)</CASMessage>\n                {' '}\n                briefings depending on how familiar\n                your passengers are with flying.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_START_PILOTS_SEATS_ADJUSTED,\n        title: 'Seats / Belts / Pedals',\n        state: 'ADJUST / SECURE',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_START_EXTERIOR_LIGHTS,\n        title: 'Exterior Lights',\n        state: 'AS REQUIRED',\n        subItems: createTransformedList()([\n            {\n                title: 'BEACON',\n                state: 'ON',\n            },\n            {\n                title: 'NAV',\n                state: 'ON',\n            },\n            {\n                title: 'LOGO',\n                state: 'ON',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_START_EICAS,\n        title: 'EICAS',\n        state: 'CHECK',\n        moreInfoShort: (\n            <>\n                {EICAS_CJ4}\n                {' '}\n                on top of\n                {' '}\n                {MFD_CJ4}\n                {' '}\n                should be checked for all data to be GREEN.\n            </>\n        ),\n        subItems: createTransformedList()([\n            {\n                title: 'N1',\n                state: 'GREEN, 0',\n            },\n            {\n                title: 'N2',\n                state: 'GREEN, 0',\n            },\n            {\n                title: (<>Oil Temperature (OIL &deg;C)</>),\n                state: 'GREEN',\n            },\n            {\n                title: 'Oil Pressure (OIL PSI)',\n                state: 'GREEN, 0',\n            },\n            {\n                title: 'Trims',\n                state: 'GREEN',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_START_FMS,\n        title: 'FMS',\n        state: 'CHECK/SET',\n        subItems: createTransformedList()([\n            {\n                title: 'Configuration',\n                state: 'SET / CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: 'FMS / MFD Units',\n                        state: 'SET / CHECKED',\n                    },\n                ]),\n            },\n            {\n                title: 'Position Initialization',\n                state: 'COMPLETE',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                POS INIT Page (\n                                <KeyboardInputs inputs={['IDX', 'LSK 4 (POS INIT)']} />\n                                )\n                            </>\n                        ),\n                        state: 'OPEN',\n                    },\n                    {\n                        title: (\n                            <>\n                                GPS Position Copy (\n                                <KeyboardInputs inputs={['RSK 4 (SET POS TO GNSS)']} />\n                                )\n                            </>\n                        ),\n                        state: 'COMPLETE',\n                    },\n                    {\n                        title: (\n                            <>\n                                FMS Position (\n                                <KeyboardInputs inputs={['RSK 5 (SET POS)']} />\n                                )\n                            </>\n                        ),\n                        state: 'CHECKED',\n                    },\n                ]),\n            },\n            {\n                title: 'Flight Plan (1)',\n                state: 'SET / CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                SimBrief Direct Import (\n                                <KeyboardInputs\n                                    inputs={[\n                                        'IDX',\n                                        'NEXT',\n                                        'RSK 1 (ROUTE MENU)',\n                                        'LSK 3 (FPLN RECALL (SB))',\n                                    ]}\n                                />\n                                )\n                            </>\n                        ),\n                        state: 'AS DESIRED',\n                    },\n                    {\n                        title: (\n                            <>\n                                Flight Plan Page (\n                                <KeyboardInputs inputs={['FPLN']} />\n                                )\n                            </>\n                        ),\n                        state: 'OPEN',\n                    },\n                    {\n                        title: (\n                            <>\n                                Origin Airport (\n                                <KeyboardInputs inputs={['INPUT', 'LSK 1 (ORIGIN)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET / CHECKED',\n                    },\n                    {\n                        title: (\n                            <>\n                                Destination Airport (\n                                <KeyboardInputs inputs={['INPUT', 'RSK 1 (DEST)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET / CHECKED',\n                    },\n                ]),\n            },\n            {\n                title: 'Departure',\n                state: 'SET / CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Departure Page (\n                                <KeyboardInputs inputs={['DEP / ARR', '[opt] LSK 1 (DEP)']} />\n                                )\n                            </>\n                        ),\n                        state: 'AS DESIRED',\n                    },\n                    {\n                        title: (\n                            <>\n                                Departure Runway (\n                                <KeyboardInputs inputs={['RSK ? (Runways)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET / CHECKED',\n                    },\n                    {\n                        title: (\n                            <>\n                                Standard Instrument Departure (\n                                <KeyboardInputs inputs={['LSK ? (Departures)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET / CHECKED',\n                    },\n                    {\n                        title: (\n                            <>\n                                Transition (\n                                <KeyboardInputs inputs={['LSK ? (Trans)']} />\n                                )\n                            </>\n                        ),\n                        state: 'AS DESIRED',\n                    },\n                ]),\n            },\n            {\n                title: 'Flight Plan (2)',\n                state: 'SET / CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Flight Plan Page (\n                                <KeyboardInputs inputs={['FPLN']} />\n                                )\n                            </>\n                        ),\n                        state: 'OPEN',\n                    },\n                    {\n                        title: (\n                            <>\n                                Origin Runway (\n                                <KeyboardInputs inputs={['RSK 3 (ORIG RWY)']} />\n                                )\n                            </>\n                        ),\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: (\n                            <>\n                                VIA (\n                                <KeyboardInputs inputs={['LSK 4 (VIA)']} />\n                                )\n                            </>\n                        ),\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: (\n                            <>\n                                Flight Plan Legs (\n                                <KeyboardInputs inputs={['NEXT']} />\n                                )\n                            </>\n                        ),\n                        state: 'CHECKED',\n                    },\n                ]),\n            },\n            {\n                title: 'Arrival',\n                state: 'AS DESIRED',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Arrival Page (\n                                <KeyboardInputs inputs={['DEP / ARR', '[opt] DEP / ARR', '[opt] RSK 2 (ARR)']} />\n                                )\n                            </>\n                        ),\n                        state: 'AS DESIRED',\n                    },\n                    {\n                        title: (\n                            <>\n                                Arrival Approach (\n                                <KeyboardInputs inputs={['RSK ? (Approaches)']} />\n                                )\n                            </>\n                        ),\n                        state: 'AS DESIRED',\n                    },\n                    {\n                        title: (\n                            <>\n                                Standard Terminal Arrival Route (\n                                <KeyboardInputs inputs={['LSK ? (STARS)']} />\n                                )\n                            </>\n                        ),\n                        state: 'AS DESIRED',\n                    },\n                    {\n                        title: 'Transitions',\n                        state: 'AS DESIRED',\n                    },\n                ]),\n            },\n            {\n                title: 'Legs',\n                state: 'CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Legs Page (\n                                <KeyboardInputs inputs={['LEGS']} />\n                                )\n                            </>\n                        ),\n                        state: 'OPEN',\n                    },\n                    {\n                        title: 'All Waypoints',\n                        state: 'CHECKED',\n                    },\n                ]),\n            },\n            {\n                title: 'Performance Initialization',\n                state: 'COMPLETE',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Performance Initialization Page (\n                                <KeyboardInputs inputs={['PERF', 'LSK 1 (PERF INIT)']} />\n                                )\n                            </>\n                        ),\n                        state: 'OPEN',\n                        subItems: createTransformedList()([\n\n                        ]),\n                    },\n                    {\n                        title: (\n                            <>\n                                Zero Fuel Weight (\n                                <KeyboardInputs inputs={['PERF', 'RSK 3 (ZFW)']} />\n                                )\n                            </>),\n                        state: 'SET',\n                    },\n                ]),\n            },\n        ]),\n        moreInfoShort: (\n            <>\n                {FMS}\n                {' '}\n                should be checked and programmed at this point.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_START_CLIMATE_CONTROL_SELECTOR,\n        title: 'Climate Control Selector',\n        state: 'OFF',\n        moreInfoShort: (\n            <>\n                Climate Control Selector is in the middle of the\n                {' '}\n                {TP_CJ4}\n                . Turn it left to set it in OFF mode.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_ENGINE_START_THROTTLES,\n        title: 'Throttles',\n        state: 'IDLE',\n        moreInfoShort: (\n            <>\n                Before starting the engines, the throttles should be set all the way to idle, at their bottom\n                most position.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_ENGINE_START_STARTER_BUTTON_PUSH,\n        title: 'Engine Starter Button',\n        state: 'PUSH',\n        moreInfoShort: (\n            <>\n                Push the starter button located below the throttles for whichever side you would like to start\n                first. Alternating engine started first between trips to equalize engine running time is\n                recommended.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_ENGINE_START_RUNSTOP_BUTTON_TO_RUN,\n        title: 'Engine Run/Stop Button',\n        state: 'RUN',\n        moreInfoShort: (\n            <>\n                Push the Engine Run/Stop button behind the clear guard just above the throttles on the same side\n                without delay. Button should go from Blank to displaying RUN. Remember to close the guard again.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_ENGINE_START_ITT_RISE,\n        title: 'ITT',\n        state: 'CHECK FOR RISE',\n        moreInfoShort: (\n            <>\n                Monitor\n                {' '}\n                {N1}\n                {' '}\n                /\n                {' '}\n                {N2}\n                {' '}\n                /\n                {' '}\n                {ITT}\n                {' '}\n                within the\n                {' '}\n                {EICAS_CJ4}\n                . Starting sequence is managed by\n                {' '}\n                {FADEC}\n                {' '}\n                and simply needs to be monitored.\n            </>\n        ),\n        subItems: createTransformedList()([\n            {\n                title: (\n                    <>\n                        <CASMessage>STARTER</CASMessage>\n                        {' '}\n                        on\n                        {' '}\n                        {EICAS_CJ4}\n                    </>\n                ),\n                state: 'DISPLAYED',\n            },\n            {\n                title: (\n                    <>\n                        {N1}\n                        {' '}\n                        /\n                        {' '}\n                        {N2}\n                        {' '}\n                        on\n                        {' '}\n                        {EICAS_CJ4}\n                    </>\n                ),\n                state: 'RISING',\n            },\n            {\n                title: (\n                    <>\n                        <CASMessage level=\"success\">IGN</CASMessage>\n                        {' '}\n                        for\n                        {' '}\n                        {ITT}\n                    </>\n                ),\n                state: 'ON @ 12% N2',\n            },\n            {\n                title: (\n                    <>\n                        {N1}\n                        {' '}\n                        /\n                        {' '}\n                        {N2}\n                        {' '}\n                        /\n                        {' '}\n                        {ITT}\n                        {' '}\n                        on\n                        {' '}\n                        {EICAS_CJ4}\n                    </>\n                ),\n                state: 'RISING',\n            },\n            {\n                title: (\n                    <>\n                        <CASMessage level=\"success\">IGN</CASMessage>\n                        {' '}\n                        for\n                        {' '}\n                        {ITT}\n                    </>\n                ),\n                state: 'OFF',\n            },\n            {\n                title: (\n                    <>\n                        {N1}\n                        {' '}\n                        /\n                        {' '}\n                        {N2}\n                        {' '}\n                        /\n                        {' '}\n                        {ITT}\n                        {' '}\n                        on\n                        {' '}\n                        {EICAS_CJ4}\n                    </>\n                ),\n                state: 'STABLE',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_ENGINE_START_EICAS_CHECK,\n        title: 'EICAS',\n        state: 'CHECK',\n        moreInfoShort: (\n            <>\n                Indicators should settle around the following values. Every indicator should be green before moving\n                forward to second engine.\n                {' '}\n                {MFD_CJ4}\n                {' '}\n                warnings will only disappear after second engine is started.\n            </>\n        ),\n        subItems: createTransformedList()([\n            {\n                title: N1,\n                state: '24.5%',\n            },\n            {\n                title: N2,\n                state: '53.4%',\n            },\n            {\n                title: ITT,\n                state: <>600&deg;C</>,\n            },\n            {\n                title: 'Oil Pressure',\n                state: '70 PSI',\n            },\n            {\n                title: 'Oil Temperature',\n                state: <>MORE THAN 90&deg;C</>,\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_ENGINE_START_OPPOSITE_ENGINE_START,\n        title: 'Opposite Engine',\n        state: 'START',\n        moreInfoShort: (\n            <>\n                Repeat the process from the starter button push. After engine starts all warnings on\n                {' '}\n                {MFD_CJ4}\n                {' '}\n                should\n                disappear and more information should display regarding electrical systems, pressurization,\n                hydraulic pressure and fuel.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_ENGINE_START_EXTERNAL_POWER_DISCONNECT,\n        title: 'External Power',\n        state: 'DISCONNECTED',\n        moreInfoShort: (\n            <>\n                If external power was enabled, it should now be disconnected as all power should come from engines\n                at this stage. Battery AMP indicator should be -38 A if ground power is connected, or -22 A if it\n                is not.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_ENGINE_START_ELECTRICAL_SYSTEM_CHECK,\n        title: 'Electrical System',\n        state: 'CHECK',\n        moreInfoShort: (\n            <>\n                Check the electrical information on\n                {' '}\n                {MFD_CJ4}\n                {' '}\n                below\n                {' '}\n                {EICAS_CJ4}\n                {' '}\n                (or via\n                {' '}\n                <KeyboardInputs inputs={['SYS']} />\n                {' '}\n                key on\n                {' '}\n                {CCP_CJ4}\n                {' '}\n                if hidden).\n            </>\n        ),\n        subItems: createTransformedList()([\n            {\n                title: 'DC Electric',\n                state: 'CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Amperage',\n                        state: 'GREEN, +22 A',\n                    },\n                    {\n                        title: 'Voltage',\n                        state: 'GREEN, +29 V',\n                    },\n                ]),\n            },\n            {\n                title: 'Battery',\n                state: 'CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Amperage',\n                        state: 'GREEN, -22 A',\n                    },\n                    {\n                        title: 'Voltage',\n                        state: 'GREEN, +25 V',\n                    },\n                    {\n                        title: 'Temperature',\n                        state: 'GREEN',\n                    },\n                ]),\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_AVIONICS_SWITCH,\n        title: 'Avionics Switch',\n        state: 'ON',\n        moreInfoShort: (\n            <>\n                Avionics switch is in the eletrical panel left of\n                {' '}\n                {PFD_CJ4}\n                , on the second row on the right. Flick it\n                in the up position to switch from dispatch mode to on mode.\n                {' '}\n                {PFD_CJ4}\n                {' '}\n                should turn on after this step\n                is completed.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_CLIMATE_CONTROL_SWITCH,\n        title: 'Climate Control Selector',\n        state: 'NORM',\n        moreInfoShort: (\n            <>\n                Climate Control Selector is in the middle of the\n                {' '}\n                {TP_CJ4}\n                . Turn it right once for NORM mode to be enabled. Air conditioning fans should audibly\n                activate in the cabin.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_PASSENGER_LIGHTS_SAFETY,\n        title: 'Pass Lights Safety Button',\n        state: 'ON',\n        moreInfoShort: (\n            <>\n                Passenger safety and belts indicators should be turned on in the center console next to exterior\n                lights. Note that if passenger briefing is not finished, it will be interrupted by the safety light\n                announcement.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_TRIMS,\n        title: 'Trims',\n        state: 'CHECK/SET',\n        moreInfoShort: (\n            <>\n                Trims are indicated on the right side of the\n                {' '}\n                {EICAS_CJ4}\n                {' '}\n                on\n                {' '}\n                {MFD_CJ4}\n                . AIL is aileron trim, RUD is rudder trim and\n                ELEV is elevator trim (ND/NU is nose down/up respectively). For takeoff, trims should be in the green\n                area for each setting. They can be adjusted using controls below the throttles in the center console.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_FLIGHT_CONTROLS_FREE,\n        title: 'Flight Controls',\n        state: 'FREE/CORRECT',\n        moreInfoShort: (\n            <>\n                In exterior view, verify that controls are able to move all flight control surfaces (ailerons, rudders,\n                elevators).\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_SPEEDBRAKE_CHECK,\n        title: 'Speedbrakes / Ground Spoilers',\n        state: 'CHECK',\n        moreInfoShort: (\n            <>\n                Spoilers can be controlled in the center console left of throttles (or with\n                {' '}\n                <Monospaced>/</Monospaced>\n                {' '}\n                on numpad). Extend them 100% and check that they fully extend in exterior view, then retract them again.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_FLAPS,\n        title: 'Flaps',\n        state: 'CHECK/SET',\n        moreInfoShort: (\n            <>\n                Flaps can be controlled with the wing shaped control right of throttles. They have three settings: 0%,\n                15% and 35%. Extend flaps and check in exterior view that they are working, then retract them.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_HYDRAULIC_PRESSURE_CHECK,\n        title: 'Hydraulic Pressure',\n        state: 'CHECK',\n        moreInfoShort: (\n            <>\n                Check hydraulic pressure information on\n                {' '}\n                {MFD_CJ4}\n                {' '}\n                below\n                {' '}\n                {EICAS_CJ4}\n                {' '}\n                (or via\n                {' '}\n                <KeyboardInputs inputs={['SYS']} />\n                {' '}\n                key on\n                {' '}\n                {CCP_CJ4}\n                {' '}\n                if hidden). Hydraulic\n                pressure should be green and have a value of 3000 PSI.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_ENGINE_ONLY_ANTI_ICE,\n        title: 'Engine Only Anti-Ice',\n        state: 'AS REQUIRED',\n        moreInfoLong: (\n            <>\n                While on the ground, engine only anti-ice should be enabled when in icing condition but not until\n                engines have been on for at least 1 minute. Icing condition on ground exist when\n                {' '}\n                {OAT}\n                {' '}\n                or\n                {' '}\n                {SAT}\n                {' '}\n                is at\n                or below +5&deg;C and engine may ingest moisture such as snow, slush, or standing water.\n                <br />\n                <br />\n                Engine only anti-ice can be turned on with the buttons on\n                {' '}\n                {TP_CJ4}\n                {' '}\n                in anti-ice section, just below\n                {' '}\n                {CCP_CJ4}\n                . Current outside temperatures are visible at the very bottom of\n                {' '}\n                {MFD_CJ4}\n                .\n                {' '}\n                {cj4AntiIceRules}\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_TAKEOFF_DATA,\n        title: 'Takeoff Data',\n        state: 'CONFIRM/SET',\n        moreInfoShort: (\n            <>\n                Take-off data can be set on\n                {' '}\n                {FMS}\n                . Verify that speeds turn blue on\n                {' '}\n                {FMS}\n                {' '}\n                and are displayed on\n                {' '}\n                {PFD_CJ4}\n                {' '}\n                below speed tape indicator. Expect speeds between\n                90 and 140 knots.\n            </>\n        ),\n        subItems: createTransformedList()([\n            {\n                title: (\n                    <>\n                        Take-Off Performance Page 1 (\n                        <KeyboardInputs inputs={['PERF', 'LSK 3 (TAKEOFF)']} />\n                        )\n                    </>\n                ),\n                state: 'COMPLETE',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Runway (Right Side)',\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: (\n                            <>\n                                Wind (\n                                <KeyboardInputs inputs={['RSK 1 (WIND)']} />\n                                )\n                            </>\n                        ),\n                        state: 'AS DESIRED',\n                    },\n                    {\n                        title: (\n                            <>\n                                {OAT}\n                                {' '}\n                                (\n                                <KeyboardInputs inputs={['RSK 2 (OAT)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                {QNH}\n                                {' '}\n                                (\n                                <KeyboardInputs inputs={['RSK 3 (QNH)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Runway Condition\n                                {' '}\n                                (\n                                <KeyboardInputs inputs={['LSK 5 (RWY COND)']} />\n                                )\n                            </>\n                        ),\n                        state: 'CHECKED / SET',\n                    },\n                ]),\n            },\n            {\n                title: (\n                    <>\n                        Take-Off Performance Page 2 (\n                        <KeyboardInputs inputs={['NEXT']} />\n                        )\n                    </>\n                ),\n                state: 'COMPLETE',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Anti-Ice Setting\n                                {' '}\n                                (\n                                <KeyboardInputs inputs={['LSK 1 (A/I)']} />\n                                )\n                            </>\n                        ),\n                        state: 'CHECKED / SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Take-Off Flaps\n                                {' '}\n                                (\n                                <KeyboardInputs inputs={['LSK 2 (T/O FLAPS)']} />\n                                )\n                            </>\n                        ),\n                        state: 'CHECKED / SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                V-Speeds\n                                {' '}\n                                (\n                                <KeyboardInputs inputs={['RSK 6 (SEND)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SENT TO PFD',\n                    },\n                ]),\n            },\n            {\n                title: (\n                    <>\n                        V-Speeds on\n                        {' '}\n                        {PFD_CJ4}\n                    </>\n                ),\n                state: 'CHECKED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_AVIONICS_CHECK,\n        title: 'Avionics',\n        state: 'CHECK/SET',\n        subItems: createTransformedList()([\n            {\n                title: 'Altitude Selector: Initial Altitude',\n                state: 'SET',\n            },\n            {\n                title: 'Heading Bug: Runway Heading',\n                state: 'SET',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_AUTOPILOT_CONNECT_DISCONNECT,\n        title: 'Autopilot',\n        state: 'ENGAGE/DISCONNECT',\n        moreInfoShort: (\n            <Alert\n                type=\"warning\"\n                message={(\n                    <>\n                        <strong>Bug:</strong>\n                        {' '}\n                        <Monospaced>YD</Monospaced>\n                        {' '}\n                        does not remain\n                        {' '}\n                        <Monospaced>ON</Monospaced>\n                        {' '}\n                        with normal\n                        {' '}\n                        <Monospaced>AP</Monospaced>\n                        {' '}\n                        disconnect at the moment. Expected fixed in SU7.\n                    </>\n                )}\n            />\n        ),\n        subItems: createTransformedList()([\n            {\n                title: 'YD/AP Disc Bar Disconnect Test',\n                state: 'COMPLETE',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Autopilot (\n                                <KeyboardInputs inputs={['AP']} />\n                                )\n                            </>\n                        ),\n                        state: 'ENGAGED',\n                    },\n                    {\n                        title: (\n                            <>\n                                <CASMessage level=\"success\">AP</CASMessage>\n                                {' '}\n                                on\n                                {' '}\n                                {PFD_CJ4}\n                                {' '}\n                                (autopilot connected)\n                            </>\n                        ),\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: (\n                            <>\n                                Disc Bar Trigger (\n                                <KeyboardInputs inputs={['YD/AP Disc Bar']} />\n                                )\n                            </>\n                        ),\n                        state: 'COMPLETE',\n                    },\n                    {\n                        title: (\n                            <>\n                                {PFD_CJ4}\n                                {' '}\n                                autopilot mode clear\n                            </>\n                        ),\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: (\n                            <>\n                                Disc Bar Release (\n                                <KeyboardInputs inputs={['YD/AP Disc Bar']} />\n                                )\n                            </>\n                        ),\n                        state: 'COMPLETE',\n                    },\n                ]),\n            },\n            {\n                title: 'AP Button Disconnect Test',\n                state: 'COMPLETE',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Autopilot (\n                                <KeyboardInputs inputs={['AP']} />\n                                )\n                            </>\n                        ),\n                        state: 'ENGAGED',\n                    },\n                    {\n                        title: (\n                            <>\n                                <CASMessage level=\"success\">AP</CASMessage>\n                                {' '}\n                                on\n                                {' '}\n                                {PFD_CJ4}\n                                {' '}\n                                (autopilot connected)\n                            </>\n                        ),\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: (\n                            <>\n                                AP Disconnect (\n                                <KeyboardInputs inputs={['AP']} />\n                                )\n                            </>\n                        ),\n                        state: 'COMPLETE',\n                    },\n                    {\n                        title: (\n                            <>\n                                <CASMessage level=\"success\">YD</CASMessage>\n                                {' '}\n                                on\n                                {' '}\n                                {PFD_CJ4}\n                                {' '}\n                                (yaw damper connected)\n                            </>\n                        ),\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: (\n                            <>\n                                YD Disconnect (\n                                <KeyboardInputs inputs={['YD']} />\n                                )\n                            </>\n                        ),\n                        state: 'COMPLETE',\n                    },\n                    {\n                        title: (\n                            <>\n                                {PFD_CJ4}\n                                {' '}\n                                autopilot mode clear\n                            </>\n                        ),\n                        state: 'CHECKED',\n                    },\n                ]),\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_ALTIMETER_SET,\n        title: 'Altimeter',\n        state: 'SET / CHECKED',\n        moreInfoShort: (\n            <>\n                On\n                {' '}\n                {DCP_CJ4}\n                , turn the BARO button to set barometric pressure on\n                {' '}\n                {PFD_CJ4}\n                . Then move to standby flight display and use the rotary button on its bottom right to set\n                barometric pressure for standby display. Check\n                {' '}\n                {PFD_CJ4}\n                {' '}\n                and standby display barometric pressure and indicated altitude match.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_PRESSURIZATION_CHECK,\n        title: 'Pressurization',\n        state: 'VERIFY/SET',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_EICAS_CHECK,\n        title: 'EICAS',\n        state: 'CHECK',\n        moreInfoShort: (\n            <>\n                Verify\n                {' '}\n                {EICAS_CJ4}\n                {' '}\n                on\n                {' '}\n                {MFD_CJ4}\n                {' '}\n                for all green values and no warning or error message.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_AFT_DIVIDER_DOORS_OPEN,\n        title: 'Aft Divider Doors',\n        state: 'Latched Open',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CJ4_TAXI_EXTERIOR_LIGHTS,\n        title: 'Exterior Lights',\n        state: 'AS REQUIRED',\n        subItems: createTransformedList()([\n            {\n                title: 'TAXI Light',\n                state: 'ON',\n            },\n            {\n                title: 'LANDING Light',\n                state: 'AS REQUIRED',\n            },\n            {\n                title: 'STROBE Light',\n                state: 'AS REQUIRED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_TAXI_BRAKES_APPLIED,\n        title: 'Brakes',\n        state: 'APPLY/HOLD',\n        moreInfoShort: (\n            <>\n                In order to control airplane on release of Parking Brake, apply brakes first.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_TAXI_PARKING_BRAKE_RELEASED,\n        title: 'Parking Brake',\n        state: 'RELEASE',\n        moreInfoShort: (\n            <>\n                Release parking brake by pushing the pull handle below\n                {' '}\n                {TP_CJ4}\n                {' '}\n                on the left all the way in.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_TAXI_BRAKES_CHECK,\n        title: 'Brakes',\n        state: 'CHECK',\n        moreInfoShort: (\n            <>\n                Increase throttles and release brakes to start moving forward, once moving, press brakes again and\n                check that airplane can stop.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_TAXI_NOSE_WHEEL_STEERING_CHECK,\n        title: 'Nosewheel Steering',\n        state: 'CHECK',\n        moreInfoShort: (\n            <>\n                Increase throttles again and release brakes. Use rudder input to turn slightly. The airplane should\n                turn easily even at very low speeds.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_TAXI_FLIGHT_INSTRUMENTS_CHECK,\n        title: 'Flight Instruments',\n        state: 'CHECK',\n        subItems: createTransformedList()([\n            {\n                title: 'Ground Speed (GS)',\n                state: 'POSITIVE',\n            },\n            {\n                title: 'Air Speed (AS)',\n                state: 'POSITIVE',\n            },\n            {\n                title: 'Roses',\n                state: 'MOVING',\n            },\n            {\n                title: 'Artificial Horizon',\n                state: 'CHECKED / LEVEL',\n            },\n            {\n                title: 'Altimeter',\n                state: 'CHECKED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_ICE_PROTECTION_SYSTEM_CHECK,\n        title: 'Ice Protection System',\n        state: 'CHECK',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n        moreInfoShort: (\n            <>\n                Not currently modelled. Wing and engine anti-ice systems require hot air from the engines. Procedure\n                here would be to spool engines\n                {' '}\n                {N2}\n                {' '}\n                to around 70% and turn on ice protection. The\n                {' '}\n                {EICAS_CJ4}\n                {' '}\n                would display\n                {' '}\n                <CASMessage level=\"warning\">WING-ANTI-ICE-COLD</CASMessage>\n                {' '}\n                message which should disappear within 2 minutes. This indicates\n                that wings/engine anti-ice is getting hot bleed air. Required for flying in icy conditions.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_RUDDER_BIAS_SYSTEM_CHECK,\n        title: 'Rudder Bias System',\n        state: 'CHECK',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n        moreInfoShort: (\n            <>\n                <strong>Not Implemented.</strong>\n                {' '}\n                When running on a single engine, Rudder Bias System compensates for the forces that would be required\n                to put in rudder pedals to control the aircraft. These forces cannot exceed 150 lbs (68 kg) nor\n                require to reduce engine power in order to maintain control at\n                {' '}\n                <ExternalLink href=\"https://en.wikipedia.org/wiki/Minimum_control_speeds\">\n                    V\n                    <sub>MC</sub>\n                </ExternalLink>\n                {' '}\n                by regulation. For this item, pilots would spool engines up separately and verify that they can feel\n                a push in the rudder pedals.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_SEATS_UPRIGHT,\n        title: 'Seats',\n        state: 'UPRIGHT/OUTBOARD',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_FLAPS_SET,\n        title: 'Flaps',\n        state: 'CHECK/SET',\n        moreInfoShort: (\n            <>\n                Verify on\n                {' '}\n                {EICAS_CJ4}\n                {' '}\n                that flaps are extended as configured in the TAKEOFF\n                performance page. This should generally be 15&deg;. Flaps are indicated\n                on on the right side of the\n                {' '}\n                {EICAS_CJ4}\n                {' '}\n                on top of\n                {' '}\n                {MFD_CJ4}\n                , just below trims.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_SPEEDBRAKES_OFF,\n        title: 'Speed Brakes',\n        state: '0%',\n        moreInfoShort: (\n            <>\n                Verify that speedbrakes are fully retracted and set to 0%.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_TRIMS_CHECK,\n        title: 'Trims (3)',\n        state: 'SET FOR TAKEOFF',\n        moreInfoShort: (\n            <>\n                On the top right section of the\n                {' '}\n                {MFD_CJ4}\n                .\n            </>\n        ),\n        subItems: createTransformedList()([\n            {\n                title: (\n                    <>\n                        Rudder Trim (\n                        <CASMessage>RUD</CASMessage>\n                        )\n                    </>\n                ),\n                state: 'GREEN',\n            },\n            {\n                title: (\n                    <>\n                        Aileron Trim (\n                        <CASMessage>AIL</CASMessage>\n                        )\n                    </>\n                ),\n                state: 'GREEN',\n            },\n            {\n                title: (\n                    <>\n                        Elevator Trim (\n                        <CASMessage>ELEV</CASMessage>\n                        )\n                    </>\n                ),\n                state: 'GREEN',\n            },\n        ]),\n    },\n    { // FIXME: Departure Briefing.\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_CREW_BRIEFING,\n        title: 'Crew Briefing',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                Review departure instructions and verify they are programmed in\n                {' '}\n                {FMS}\n                {' '}\n                as desired.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_TCAS_TARA,\n        title: 'TCAS',\n        state: 'TA/RA',\n        moreInfoShort: (\n            <>\n                In\n                {' '}\n                {FMS}\n                , set TCAS to mode TA/RA by clicking\n                {' '}\n                <KeyboardInputs inputs={['TUN', 'RSK 5 (TA/RA)']} />\n                . This turns mode C on for transponder, emitting altitude information.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_RADAR_AS_REQUIRED,\n        title: 'Radar',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                At this point it is allowed to enable radar (traffic, weather, terrain) as required for takeoff.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_GA_BUTTON_PUSH,\n        title: 'GA Button',\n        state: 'PUSH',\n        moreInfoShort: (\n            <>\n                Above\n                {' '}\n                {FMS}\n                /\n                {MFD_CJ4}\n                {' '}\n                right of\n                {' '}\n                {DCP_CJ4}\n                {' '}\n                there is a black button below the FIRE button which\n                enables Takeoff/Go Around mode. It should be pushed once and\n                {' '}\n                <CASMessage level=\"success\">TO TO</CASMessage>\n                {' '}\n                should display\n                on the autopilot line. Flight director should also display with intended pitch at\n                takeoff.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_BATTERY_AMPS_CHECK,\n        title: 'Battery Amps',\n        state: 'VERIFY 20 OR LESS',\n        moreInfoShort: (\n            <>\n                On the\n                {' '}\n                {EICAS_CJ4}\n                , or via the\n                {' '}\n                <KeyboardInputs inputs={['SYS']} />\n                {' '}\n                key on\n                {' '}\n                {CCP_CJ4}\n                , ensure that battery still has -20 or less amps.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_ICE_PROTECTION_SYSTEM_AS_REQUIRED,\n        title: 'Ice Protection Systems',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                Check temperatures and prepare for anti-ice procedure during takeoff. Enable anti-ice as required as\n                soon as necessary.\n                {' '}\n                {cj4AntiIceRules}\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_PITOT_STATIC_HEAT_BUTTONS,\n        title: 'Pitot/Static Heat Buttons',\n        state: 'ON',\n        moreInfoShort: (\n            <>\n                Pitot/Static Heat buttons are located in the Ice Protection section on the\n                {' '}\n                {TP_CJ4}\n                {' '}\n                under the\n                {' '}\n                {MFD_CJ4}\n                . They should be turned on before take-off and on for the whole flight.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_EXTERIOR_LIGHTS,\n        title: 'Exterior Lights',\n        state: 'AS REQUIRED',\n        subItems: createTransformedList()([\n            {\n                title: 'STROBE Lights',\n                state: 'ON',\n            },\n            {\n                title: 'LANDING Lights',\n                state: 'ON',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_EICAS_CHECK,\n        title: 'EICAS',\n        state: 'CHECK',\n        moreInfoShort: (\n            <>\n                Check\n                {' '}\n                {EICAS_CJ4}\n                {' '}\n                on top of\n                {' '}\n                {MFD_CJ4}\n                , verify all values are green.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_TAKEOFF_THROTTLES,\n        title: 'Throttles',\n        state: 'TAKEOFF',\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n        moreInfoShort: (\n            <>\n                To proceed with a rolling take-off, simply push throttles all the way to 100%. If doing a standing\n                start takeoff, maintain brake pressure until\n                {' '}\n                {N1}\n                {' '}\n                settles around the top of its range, in the green, and\n                release the brakes.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_TAKEOFF_N1_COMMAND_BUGS_GREEN,\n        title: 'N1 Command Bugs',\n        state: 'GREEN CHEVRON',\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n    },\n    {\n        uid: ChecklistItems.CJ4_TAKEOFF_BRAKES_RELEASED,\n        title: 'Brakes',\n        state: 'RELEASE',\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n    },\n    {\n        uid: ChecklistItems.CJ4_TAKEOFF_CONTROL_WHEEL_ROTATE_AT_VR,\n        title: 'Control Wheel',\n        state: 'ROTATE AT VR',\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n        moreInfoShort: (\n            <>\n                Monitor speed tape, once\n                {' '}\n                {VR}\n                {' '}\n                is reached, pull lightly on yoke and let\n                nose come up as speed picks up.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_TAKEOFF_LANDING_GEAR_UP,\n        title: 'Landing Gear',\n        state: 'UP',\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n        moreInfoShort: (\n            <>\n                Once airborne with positive rate of climb, pull landing gear up. It can be done using the\n                lever below\n                {' '}\n                {SFD_CJ4}\n                .\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_TAKEOFF_FLAPS_0,\n        title: 'Flaps',\n        state: <>0&deg;</>,\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n        moreInfoShort: (\n            <>\n                Retract flaps fully by using the handle to the right of throttle levers by pushing it forward.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_TAKEOFF_THROTTLES_CLIMB,\n        title: 'Throttles',\n        state: 'CLIMB',\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n        moreInfoShort: (\n            <>\n                Pull back throttles below the takeoff (TO) detent. This can be checked on the\n                {' '}\n                {EICAS_CJ4}\n                {' '}\n                near the\n                on the\n                {' '}\n                {N2}\n                {' '}\n                bars where indication should go from TO to CLB.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_TAKEOFF_YAW_DAMPER_ON,\n        title: 'Yaw Damper',\n        state: 'ON',\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n        moreInfoShort: (\n            <>\n                Yaw Damper can be enabled using the the button labelled\n                {' '}\n                <KeyboardInputs inputs={['YD']} />\n                {' '}\n                just left of the autopilot button. This step is not necessary if you intend to enable autopilot\n                immediately as yaw damper is enabled with\n                {' '}\n                <KeyboardInputs inputs={['AP']} />\n                .\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_TAKEOFF_AUTOPILOT_AS_REQUIRED,\n        title: 'Autopilot',\n        state: 'AS DESIRED',\n        moreInfoShort: (\n            <>\n                Autopilot may be enabled using the button labelled\n                {' '}\n                <KeyboardInputs inputs={['AP']} />\n                {' '}\n                on the autopilot row. If enabled, you should also select modes like heading.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_TAKEOFF_ICE_PROTECTION_SYSTEM_CHECK,\n        title: 'Ice Protection Systems',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                Keep monitoring conditions via temperatures at the bottom of\n                {' '}\n                {MFD_CJ4}\n                {' '}\n                and follow rules outlined under the Before Takeoff checklist.\n                {' '}\n                {cj4AntiIceRules}\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_TAKEOFF_PASSENGER_LIGHTS_AS_REQUIRED,\n        title: 'Pass Lights Buttons',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                Belt sign may be turned off above 10,000ft in non-turbulant air.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_TAKEOFF_EXTERIOR_LIGHTS,\n        title: 'Landing Lights Button',\n        state: 'AS REQUIRED',\n        subItems: createTransformedList()([\n            {\n                title: 'LANDING Light',\n                state: 'OFF ABOVE 10,000 FT',\n            },\n            {\n                title: 'STROBE Light',\n                state: 'OFF ABOVE 10,000 FT',\n            },\n            {\n                title: 'LOGO Light',\n                state: 'OFF ABOVE 10,000 FT',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_TAKEOFF_PRESSURIZATION_CHECK,\n        title: 'Pressurization',\n        state: 'CHECK',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_TAKEOFF_ALTIMETERS_SET,\n        title: 'Altimeters',\n        state: 'SET/CROSSCHECK',\n        moreInfoShort: (\n            <>\n                Take note of transition altitude at departure and click the\n                {' '}\n                <KeyboardInputs inputs={['BARO']} />\n                {' '}\n                rotary in the\n                {' '}\n                {DCP_CJ4}\n                {' '}\n                to switch to standard pressure. Easiest way to check is to verify that\n                {' '}\n                <CASMessage level=\"data\">STD</CASMessage>\n                {' '}\n                is displayed below the altitude tape or on the standby flight display.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_CRUISE_THROTTLES,\n        title: 'Throttles',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                During cruise, any throttle setting maybe be used within CRUISE or CLIMB detents. Pilot should modulate\n                throttling to maintain chosen cruising speed.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_CRUISE_PRESSURIZATION,\n        title: 'Pressurization',\n        state: 'CHECK',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CJ4_CRUISE_ICE_PROTECTION_SYSTEMS,\n        title: 'Ice Protection Systems',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                Continue to monitor icing condition during cruise.\n                {' '}\n                {cj4AntiIceRules}\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_DESCENT_PRESSURIZATION,\n        title: 'Pressurization',\n        state: 'VERIFY/SET LDG ELEV',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CJ4_DESCENT_ICE_PROTECTION_SYSTEMS,\n        title: 'Ice Protection Systems',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                Prepare for anti-ice procedure during descent and enable anti-ice protection systems as soon as\n                required.\n                {' '}\n                {cj4AntiIceRules}\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_DESCENT_ALTIMETERS,\n        title: 'Altimeters',\n        state: 'SET/CROSSCHECK',\n        moreInfoShort: (\n            <>\n                Preset\n                {' '}\n                <KeyboardInputs inputs={['BARO']} />\n                {' '}\n                for landing pressure and verify transition level, press\n                {' '}\n                <KeyboardInputs inputs={['BARO']} />\n                {' '}\n                to switch from standard to local pressure altitude at transition level. Once switched, configure\n                {' '}\n                {SFD_CJ4}\n                {' '}\n                and crosscheck altitude shown.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_DESCENT_EXTERIOR_LIGHTS,\n        title: 'Exterior Lights',\n        state: 'AS REQUIRED',\n        subItems: createTransformedList()([\n            {\n                title: 'LANDING Light',\n                state: 'ON BELOW 10,000 FT',\n            },\n            {\n                title: 'STROBE Light',\n                state: 'ON BELOW 10,000 FT',\n            },\n            {\n                title: 'LOGO Light',\n                state: 'ON BELOW 10,000 FT',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_APPROACH_LANDING_DATA,\n        title: 'Landing Data',\n        state: 'CONFIRM',\n        moreInfoShort: (\n            <>\n                Once approach and runway is confirmed, configure landing performance using wind, temperature and\n                pressure altitude found in latest METAR/ATIS.\n            </>\n        ),\n        subItems: createTransformedList()([\n            {\n                title: (\n                    <>\n                        Approach Performance Page 1 (\n                        <KeyboardInputs inputs={['PERF', 'RSK 3 (APPROACH)']} />\n                        )\n                    </>\n                ),\n                state: 'OPEN',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Runway (Right Side)',\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: (\n                            <>\n                                Wind (\n                                <KeyboardInputs inputs={['RSK 1 (WIND)']} />\n                                )\n                            </>\n                        ),\n                        state: 'AS DESIRED',\n                    },\n                    {\n                        title: (\n                            <>\n                                {OAT}\n                                {' '}\n                                (\n                                <KeyboardInputs inputs={['RSK 2 (OAT)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                {QNH}\n                                {' '}\n                                (\n                                <KeyboardInputs inputs={['RSK 3 (QNH)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Runway Condition\n                                {' '}\n                                (\n                                <KeyboardInputs inputs={['LSK 6 (RWY COND)']} />\n                                )\n                            </>\n                        ),\n                        state: 'CHECKED / SET',\n                    },\n                ]),\n            },\n            {\n                title: (\n                    <>\n                        Approach Performance Page 2 (\n                        <KeyboardInputs inputs={['NEXT']} />\n                        )\n                    </>\n                ),\n                state: 'COMPLETE',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Anti-Ice Setting\n                                {' '}\n                                (\n                                <KeyboardInputs inputs={['LSK 1 (A/I)']} />\n                                )\n                            </>\n                        ),\n                        state: 'CHECKED / SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Landing Factor\n                                {' '}\n                                (\n                                <KeyboardInputs inputs={['LSK 5 (LDG FACTOR)']} />\n                                )\n                            </>\n                        ),\n                        state: 'CHECKED / SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                V-Speeds\n                                {' '}\n                                (\n                                <KeyboardInputs inputs={['RSK 6 (SEND)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SENT TO PFD',\n                    },\n                ]),\n            },\n\n        ]),\n    },\n    { // FIXME: crew briefing\n        uid: ChecklistItems.CJ4_APPROACH_CREW_BRIEFING,\n        title: 'Crew Briefing',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                Review approach procedure and prepare all necessary charts for quick access. Review missed approach\n                procedure as well.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_APPROACH_AVIONICS_FLIGHT_INSTRUMENTS,\n        title: 'Avionics/Flight Instruments',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.CJ4_APPROACH_MINIMUMS,\n        title: 'Minimums',\n        state: 'SET',\n        moreInfoShort: (\n            <>\n                Minimums can be found on the final approach chart. The CJ4 is only allowed to do CAT I approach which\n                means full visibility is required below 200 ft\n                {' '}\n                {AGL}\n                . The chart should provide the right altitude, adding ground altitude.\n                <br />\n                <br />\n                Once determined, go to the\n                {' '}\n                {DCP_CJ4}\n                , press\n                {' '}\n                <KeyboardInputs inputs={['REFS MENU']} />\n                , scroll down to\n                {' '}\n                <CASMessage>MINIMUMS</CASMessage>\n                {' '}\n                &gt;\n                {' '}\n                <CASMessage>BARO</CASMessage>\n                {' '}\n                using the large\n                {' '}\n                <KeyboardInputs inputs={['MENU ADV']} />\n                {' '}\n                scroll wheel, then use the small scroll wheel on same knob to select the altitude and\n                then click it. Minimum altitude will display under the altitude tape, as well as make an audible\n                announcement upon landing.\n                <br />\n                <br />\n                Autopilot and yaw damper should be disconnected by the time minimums are reached.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_APPROACH_FUEL_TRANSFER_SELECTOR,\n        title: 'Fuel Transfer Selector',\n        state: 'OFF',\n        moreInfoShort: (\n            <>\n                Fuel selector is located on the\n                {' '}\n                {TP_CJ4}\n                {' '}\n                near the Climate control selector. Ensure that it is in the middle position (OFF).\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_APPROACH_EXTERIOR_LIGHTS,\n        title: 'Exterior Lights',\n        state: 'AS REQUIRED',\n        subItems: createTransformedList()([\n            {\n                title: 'LANDING Light',\n                state: 'ON',\n            },\n            {\n                title: 'STROBE Light',\n                state: 'ON',\n            },\n            {\n                title: 'LOGO Light',\n                state: 'ON',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_APPROACH_ICE_PROTECTION_SYSTEMS,\n        title: 'Ice Protection Systems',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                Once again, keep monitoring conditions for anti-ice protection requirements.\n                {' '}\n                {cj4AntiIceRules}\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_APPROACH_FLAPS,\n        title: 'Flaps',\n        state: <>15&deg;</>,\n        moreInfoShort: (\n            <>\n                Extend flaps to 15&deg; once below 200\n                {' '}\n                {KIAS}\n                . This can be done by setting the flaps lever, right of\n                throttles, in the middle position.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_APPROACH_PASSENGER_BRIEFING,\n        title: 'Passenger Briefing',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                Use the\n                {' '}\n                {CCP_CJ4}\n                {' '}\n                to select the passenger briefing announcement by pressing the\n                {' '}\n                <KeyboardInputs inputs={['PASS BRIEF']} />\n                {' '}\n                button, selecting\n                {' '}\n                <CASMessage>LANDING</CASMessage>\n                {' '}\n                briefing using the menu selector.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_APPROACH_SEATS_UPRIGHT,\n        title: 'Seats',\n        state: 'UPRIGHT AND OUTBOARD',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CJ4_APPROACH_SEAT_BELTS,\n        title: 'Seat Belts',\n        state: 'ADJUSTED/SECURE',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CJ4_APPROACH_PASSENGER_LIGHTS,\n        title: 'Pass Lights Safety Button',\n        state: 'ON',\n        subItems: createTransformedList()([\n            {\n                title: 'BELT Light',\n                state: 'ON',\n            },\n            {\n                title: 'SAFETY Light',\n                state: 'ON',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_APPROACH_PRESSURIZATION,\n        title: 'Pressurization',\n        state: '< 0.5 PSI BEFORE LDG',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_LANDING_LANDING_GEAR,\n        title: 'Landing Gear',\n        state: 'DOWN (3 GREEN)',\n        moreInfoShort: (\n            <>\n                Pull landing gear down using the lever below\n                {' '}\n                {SFD_CJ4}\n                , and verify that 3 green lights come on to confirm landing gear is deployed.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_LANDING_FLAPS,\n        title: 'Flaps',\n        state: <>35&deg;</>,\n        moreInfoShort: (\n            <>\n                Deploy flaps to 35&deg; once below 160\n                {' '}\n                {KIAS}\n                . This can be done using the flaps lever pulled towards the passenger cabin completely.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_LANDING_SPEEDBRAKES_OFF,\n        title: 'Speed Brakes',\n        state: '0%',\n        moreInfoShort: (\n            <>\n                Ensure speed brakes are fully retracted by checking they are set to 0% by their lever left of\n                throttles.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_LANDING_AIRSPEED_VREF,\n        title: 'Airspeed',\n        state: 'VREF',\n        moreInfoShort: (\n            <>\n                Reduce speed to VREF. This should be visible on the speed tape after the setting landing data\n                previously, and around 105-115 knot area.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_LANDING_AUTOPILOT_AND_YAW_DAMPER,\n        title: 'Autopilot and Yaw Damper',\n        state: 'DISENGAGE',\n        moreInfoShort: (\n            <>\n                Disengage Autopilot and Yaw Damper by using their respective buttons by 200 ft\n                {' '}\n                {AGL}\n                .\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_LANDING_THROTTLES,\n        title: 'Throttles',\n        state: 'IDLE',\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n        moreInfoShort: (\n            <>\n                Once passing the threshold of runway, pull throttles all the way back to idle.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_LANDING_BRAKES,\n        title: 'Brakes (After NLG Touchdown)',\n        state: 'APPLY',\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n        moreInfoShort: (\n            <>\n                Let the airplane&apos;s speed die down and the airplane not want to fly until the nose landing gear\n                (NLG) touches the ground. Apply brake pressure once nose landing gear as touched down.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_LANDING_GROUND_SPOILERS,\n        title: 'Ground Spoilers',\n        state: 'EXTEND',\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n        moreInfoShort: (\n            <>\n                Extend ground spoilers to help with braking power. Ground spoilers are effective only above 70% of\n                landing speed and help brake effectiveness when airplane is still settling between on ground and\n                flying.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_GOAROUND_GA_BUTTON,\n        title: 'GA Button',\n        state: 'PUSH',\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n        moreInfoShort: (\n            <>\n                Push GA button, which is located on the right side of\n                {' '}\n                {DCP_CJ4}\n                . It is the button below\n                {' '}\n                <KeyboardInputs inputs={['L ENG FIRE']} />\n                .\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_GOAROUND_THROTTLES_1,\n        title: 'Throttles',\n        state: 'TO',\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n        moreInfoShort: (\n            <>\n                Push throttles all the way up and past the takeoff detent.\n                {' '}\n                {MFD_CJ4}\n                {' '}\n                should display TO in the\n                {' '}\n                {EICAS_CJ4}\n                .\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_GOAROUND_PITCH_ATTITUDE,\n        title: 'Pitch Attitude',\n        state: <>7.5&deg; THEN AS REQD</>,\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n        moreInfoShort: (\n            <>\n                As speed permits, pitch the airplane up to 7.5&deg; to gain altitude, then as required.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_GOAROUND_FLAPS_1,\n        title: 'Flaps',\n        state: <>15&deg;</>,\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n    },\n    {\n        uid: ChecklistItems.CJ4_GOAROUND_LANDING_GEAR,\n        title: 'Landing Gear',\n        state: 'UP',\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n        moreInfoShort: (\n            <>\n                Once positive rate of ascent is confirmed, pull landing gear up.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_GOAROUND_FLAPS_2,\n        title: 'Flaps',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                Depending on intentions, you may have to go into cruise mode or approach mode again. This decides\n                whether to stay in flaps 15&deg; and go back to approach checklist which will bring us back to 35&deg;,\n                or remove flaps completely to fly to another airport.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_GOAROUND_AIRSPEED,\n        title: 'Airspeed',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                Follow any restrictions applied by ATC or through altitude speed restrictions. Fly as required.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_GOAROUND_THROTTLES_2,\n        title: 'Throttles',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                Reduce throttles according to desired airspeed within the CLIMB or CRUISE detent.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_GOAROUND_YAW_DAMPER,\n        title: 'Yaw Damper',\n        state: 'ON',\n        moreInfoShort: (\n            <>\n                Yaw Damper can be enabled using the the button labelled\n                {' '}\n                <KeyboardInputs inputs={['YD']} />\n                {' '}\n                just left of the autopilot button. This step is not necessary if you intend to enable autopilot\n                immediately as yaw damper is enabled with AP.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_GOAROUND_AUTOPILOT,\n        title: 'Autopilot',\n        state: 'AS DESIRED',\n        moreInfoShort: (\n            <>\n                Autopilot may be enabled using the\n                {' '}\n                <KeyboardInputs inputs={['AP']} />\n                {' '}\n                within the autopilot controls of cabin. Verify modes engaged before engaging autopilot to avoid any\n                unexpected hard turns or altitude changes.\n            </>\n        ),\n    },\n\n    {\n        uid: ChecklistItems.CJ4_AFTER_LANDING_SPEEDBRAKES,\n        title: 'Speed Brakes',\n        state: '0%',\n        moreInfoShort: (\n            <>\n                Clean speed brakes by setting them to 0%.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_LANDING_FLAPS,\n        title: 'Flaps',\n        state: <>0&deg;</>,\n        moreInfoShort: (\n            <>\n                Clean flaps by setting them to 0&deg; using the lever right side of throttles.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_LANDING_PITOT_STATIC_HEAT,\n        title: 'Pitot/Static Heat Buttons',\n        state: 'OFF',\n        moreInfoShort: (\n            <>\n                Once final taxi is started, Pitot/Static Heat may be turned off using the buttons on the\n                {' '}\n                {TP_CJ4}\n                {' '}\n                under the anti-ice area.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_LANDING_ICE_PROTECTION_SYSTEMS,\n        title: 'Ice Protection Systems',\n        state: 'OFF / AS REQUIRED',\n        moreInfoShort: (\n            <>\n                Ground operation for ice protection is resumed. At this point only engine anti-ice may be used if\n                {' '}\n                {OAT}\n                /\n                {SAT}\n                {' '}\n                is below +5&deg;C and there is visible moisture that may be ingested by engines. All other\n                ice protection systems must be turned off.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_LANDING_RADAR,\n        title: 'Radar',\n        state: 'STANDBY',\n        moreInfoShort: (\n            <>\n                After leaving runway, disables all terrain and weather radar from\n                {' '}\n                {PFD_CJ4}\n                {' '}\n                /\n                {' '}\n                {MFD_CJ4}\n                .\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_LANDING_EXTERIOR_LIGHTS,\n        title: 'Exterior Lights',\n        state: 'AS REQUIRED',\n        subItems: createTransformedList()([\n            {\n                title: 'STROBE Lights',\n                state: 'AS REQUIRED',\n            },\n            {\n                title: 'LANDING Lights',\n                state: 'AS REQUIRED',\n            },\n            {\n                title: 'TAXI Lights',\n                state: 'ON',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_SHUTDOWN_PARKING_BRAKE,\n        title: 'Parking Brake',\n        state: 'SET/WHEELS CHOCKED',\n        moreInfoShort: (\n            <>\n                Set parking brakes by pulling the round handle under yoke fully out.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_SHUTDOWN_EMERGENCY_LIGHTS,\n        title: 'Emergency Lights Switch',\n        state: 'OFF',\n        moreInfoShort: (\n            <>\n                Under the electrical panel left of\n                {' '}\n                {PFD_CJ4}\n                , turn off Emergency Lights Switch on second row all the way\n                to the left by toggling it down.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_SHUTDOWN_STANDBY_FLIGHT_DISPLAY,\n        title: 'Standby Flight Display Switch',\n        state: 'OFF',\n        moreInfoShort: (\n            <>\n                Next to Emergency Lights Switch, in electrical panel, also toggle down the Standby Flight Display\n                switch.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_SHUTDOWN_AVIONICS_SWITCH,\n        title: 'Avionics Switch',\n        state: 'OFF',\n        moreInfoShort: (\n            <>\n                Turn avionics off by setting the Avionics switch in its middle position in the electrical panel, left\n                of\n                {' '}\n                {PFD_CJ4}\n                , rightmost switch of the second row.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_SHUTDOWN_CLIMATE_CONTROL_SELECTOR,\n        title: 'Climate Control Selector',\n        state: 'OFF',\n        moreInfoShort: (\n            <>\n                On the\n                {' '}\n                {TP_CJ4}\n                {' '}\n                towards the middle, set the Climate Control selector in its left position to turn\n                climate control off.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_SHUTDOWN_ICE_PROTECTION_SYSTEMS,\n        title: 'Ice Protection Systems (All)',\n        state: 'OFF',\n        moreInfoShort: (\n            <>\n                Turn off all ice protection systems, on the\n                {' '}\n                {TP_CJ4}\n                {' '}\n                under the anti ice section.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_SHUTDOWN_THROTTLES,\n        title: 'Throttles',\n        state: 'IDLE',\n        moreInfoShort: (\n            <>\n                Pull throttles all the way down to idle in preparation for engine shutdown.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_SHUTDOWN_ENGINE_RUNSTOP_BUTTONS,\n        title: 'Engine Run/Stop Buttons (Both)',\n        state: 'STOP',\n        moreInfoShort: (\n            <>\n                Hit each engine Run/Stop button once to toggle them in STOP mode and let the engines shut down. Those\n                are the buttons just above throttles displaying RUN as engine are running.\n                <br />\n                <br />\n                Note: MSFS screen for flight end should display after this step. You may click Continue to finish the\n                last two steps of this checklist.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_SHUTDOWN_EXTERIOR_LIGHTS,\n        title: 'Exterior Lights',\n        state: 'OFF',\n        moreInfoShort: (\n            <>\n                Turn all exterior lights off.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_SHUTDOWN_BATTERY_SWITCH,\n        title: 'Battery Switch',\n        state: 'OFF',\n        moreInfoShort: (\n            <>\n                Under the electrical panel left of\n                {' '}\n                {PFD_CJ4}\n                , turn the red Battery switch off by toggling it down.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_SHUTDOWN_CONTROL_LOCK,\n        title: 'Control Lock',\n        state: 'AS REQUIRED',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CJ4_SHUTDOWN_ENGINE_COVERS,\n        title: 'Engine Covers (After Engine Cool)',\n        state: 'INSTALL',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n]);\n","import React from 'react';\n\nimport { CASMessage } from 'components/lib/CASMessage';\nimport { KeyboardInputs } from 'components/lib/KeyboardInputs';\nimport { MFD_CJ4 } from 'components/lib/vernacular/cj4';\nimport { FMS } from 'components/lib/vernacular/common';\nimport { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistTags } from 'lib/checklist/data/tags';\nimport { createTransformedList, createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst addCJ4EXTTags = (value) => ({\n    ...value,\n    tags: [...value.tags, ChecklistTags.CJ4, ChecklistTags.EXTENSION],\n});\n\nexport const CJ4ExtChecklistItemsData = createTransformedMapping(addCJ4EXTTags)([\n    {\n        uid: ChecklistItems.CJ4EXT_BEFORE_START_EXTERNAL_POWER,\n        title: 'External Power',\n        state: 'AS REQUIRED',\n        subItems: createTransformedList()([\n            {\n                title: (\n                    <>\n                        Ground Power (\n                        <KeyboardInputs\n                            inputs={['IDX', 'NEXT', 'LSK 3 (MOD SET)', 'LSK 4 (Ground Power Unit to ON)']}\n                        />\n                        )\n                    </>\n                ),\n                state: 'ON',\n            },\n            {\n                title: (\n                    <>\n                        <CASMessage level=\"warning\">BAT AMP</CASMessage>\n                        {' '}\n                        on\n                        {' '}\n                        {MFD_CJ4}\n                    </>\n                ),\n                state: 'NOT DISPLAYED',\n            },\n        ]),\n        moreInfoLong: (\n            <>\n                Battery life without another source of power is around 10 to 15 minutes. If\n                engines are expected to be started within that timeframe, this step is not\n                necessary, otherwise it should be done.\n                <br />\n                <br />\n                In real life, cost of renting ground power would have to be weighted against cost of\n                burning a bit more fuel on the ground before taxi and using the engines as a source of power.\n                <br />\n                <br />\n                External Power can be enabled on\n                {' '}\n                {FMS}\n                . Warning\n                {' '}\n                <CASMessage level=\"warning\">BAT AMP</CASMessage>\n                {' '}\n                should disappear from\n                {' '}\n                {MFD_CJ4}\n                . If batteries get low, then\n                {' '}\n                <CASMessage level=\"warning\">LOW VOLTAGE</CASMessage>\n                {' '}\n                warning will appear on\n                {' '}\n                {MFD_CJ4}\n                .\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4EXT_BEFORE_TAKEOFF_RUNWAY_HEADING,\n        title: 'Autopilot Heading Setting',\n        state: 'RUNWAY HEADING',\n        moreInfoShort: (\n            <>\n                Optionally, it can be a good idea to do takeoff with runway heading pre-programmed\n                into autopilot. This does not mean enabling heading mode, but simply set the heading\n                setting to the runway heading so that heading mode can easily be enabled after take-off\n                if necessary.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4EXT_DESCENT_INTERIOR_LIGHTS,\n        title: 'Interior / Panel Lights',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                When starting descent above cloud layer, you should expect much lower light inside cockpit after\n                passing the cloud layer. Turn on Panel backlights using the middle rotary button just above the\n                exterior lights panel anti-clockwise.\n            </>\n        ),\n    },\n]);\n","import React from 'react';\n\nimport { Vernacular } from 'components/lib/vernacular/Vernacular';\n\nexport const EICAS_CRJ = (\n    <Vernacular title=\"Engine Indicating and Crew Alerting System - Two middle screens above FMS\">\n        EICAS\n    </Vernacular>\n);\n","import React from 'react';\n\nimport { CASMessage } from 'components/lib/CASMessage';\nimport { KeyboardInputs } from 'components/lib/KeyboardInputs';\nimport {\n    APU, ITT, N1, N2,\n} from 'components/lib/vernacular/common';\nimport { EICAS_CRJ } from 'components/lib/vernacular/crj';\nimport { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistTags } from 'lib/checklist/data/tags';\nimport { createTransformedList, createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst addCRJTags = (value) => ({\n    ...value,\n    tags: [...value.tags, ChecklistTags.CRJ, ChecklistTags.OFFICIAL],\n});\n\nexport const ACRJChecklistItemsData = createTransformedMapping(addCRJTags)([\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_CIRCUIT_BREAKERS,\n        title: 'Circuit Breakers',\n        state: 'CLOSED',\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_NOSEWHEEL,\n        title: 'Nose-Wheel Steering Switch',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_HYDRAULIC_PUMPS_1,\n        title: 'Hydraulic Pumps',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_LANDING_GEAR,\n        title: 'Landing Gear Lever',\n        state: 'DOWN',\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_FLIGHT_SPOILER_LEVER,\n        title: 'Flight Spoiler Lever',\n        state: 'RETRACTED',\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_SLATS_FLAPS_LEVER,\n        title: 'Slats / Flaps Lever',\n        state: 'SET',\n        moreInfoShort: (\n            <>\n                Lever should be set to the setting corresponding to the physical position of flaps and slats while in\n                cold and dark mode, to avoid any abrupt movement once hydraulics are turned on.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_RADAR,\n        title: 'Radar',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_ADG_MANUAL_RELEASE,\n        title: 'ADG Manual Release',\n        state: 'STOWED',\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_EMERGENCY_FLAP_SWITCH,\n        title: 'Emergency Flap Switch',\n        state: 'NORMAL',\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_BATTERY_MASTER_SWITCH,\n        title: 'Battery Master Switch',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_APU,\n        title: 'APU',\n        state: 'ON / OFF',\n        moreInfoShort: (\n            <>\n                {APU}\n                {' '}\n                must remain OFF until fire test is done in Originating check list for first flight of the day.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_AC_ELECTRICS,\n        title: 'AC Electrics',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                If\n                {' '}\n                {APU}\n                {' '}\n                was started, AC electrics can be established and verified in the\n                <KeyboardInputs inputs={['ELEC']} />\n                {' '}\n                page of the secondary\n                {' '}\n                {EICAS_CRJ}\n                .\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_IRS,\n        title: 'IRS',\n        state: 'NAV',\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_EMERGENCY_EQUIPMENT,\n        title: 'Emergency Equipment',\n        state: 'CHECKED',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_GEAR_SAFETY_PINS,\n        title: 'Gear and Safety Pins',\n        state: 'ON BOARD',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_AIRPLANE_DOCUMENTS,\n        title: 'Airplane Documents',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_HYDRAULIC_PUMPS_2,\n        title: 'Hydraulic 3A Pump',\n        state: 'ON / OFF',\n        moreInfoShort: (\n            <>\n                System 3 pumps are electric driven pumps when hydraulic pressure is necessary before engine start.\n                Can remain OFF in most cases at this point.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_FMS_INITIALIZATION,\n        title: 'FMS Position Initialization',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                In order to align the IRS, position initialization should be done as soon as possible. This is only\n                possible at this stage if\n                {' '}\n                {APU}\n                {' '}\n                was started.\n            </>\n        ),\n        subItems: createTransformedList()([\n            {\n                title: (\n                    <>\n                        POS INIT Page (\n                        <KeyboardInputs\n                            inputs={[\n                                'INDEX',\n                                'LSK 2 (POS INIT)',\n                            ]}\n                        />\n                        )\n                    </>\n                ),\n                state: 'OPEN',\n            },\n            {\n                title: (\n                    <>\n                        Airport Reference (\n                        <KeyboardInputs\n                            inputs={[\n                                'KEYBOARD INPUT',\n                                'LSK 2 (AIRPORT)',\n                            ]}\n                        />\n                        )\n                    </>\n                ),\n                state: 'SET',\n            },\n            {\n                title: (\n                    <>\n                        Position (\n                        <KeyboardInputs\n                            inputs={[\n                                'NEXT PAGE',\n                                'LSK 2 (GNSS1 POS)',\n                                'PREV PAGE',\n                                'RSK 5 (SET POS)',\n                            ]}\n                        />\n                        )\n                    </>\n                ),\n                state: 'SET',\n            },\n            {\n                title: 'Position',\n                state: 'VERIFIED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_CABIN_INSPECTION_CABIN_INSPECTION,\n        title: 'Cabin Inspection',\n        state: 'ACCOMPLISH',\n        subItems: createTransformedList()([\n            {\n                title: 'Emergency Lights Switch',\n                state: 'ON',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                <CASMessage>EMER LTS ON</CASMessage>\n                                {' '}\n                                on secondary\n                                {' '}\n                                {EICAS_CRJ}\n                                {' '}\n                                (STAT page)\n                            </>\n                        ),\n                        state: 'DISPLAYED',\n                    },\n                ]),\n            },\n            {\n                title: 'NO SMOKING and SEAT BELT Signs',\n                state: 'AUTO',\n            },\n            {\n                title: 'Emergency Lights Switch',\n                state: 'OFF',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                <CASMessage>EMER LTS ON</CASMessage>\n                                {' '}\n                                on secondary\n                                {' '}\n                                {EICAS_CRJ}\n                                {' '}\n                                (STAT page)\n                            </>\n                        ),\n                        state: 'NOT DISPLAYED',\n                    },\n                    {\n                        title: (\n                            <>\n                                <CASMessage level=\"warning\">EMER LTS OFF</CASMessage>\n                                {' '}\n                                on primary\n                                {' '}\n                                {EICAS_CRJ}\n                            </>\n                        ),\n                        state: 'DISPLAYED',\n                    },\n                ]),\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_CABIN_INSPECTION_WALKAROUND_INSPECTION,\n        title: 'Walk-Around Inspection',\n        state: 'ACCOMPLISH',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_CREW_OXYGEN,\n        title: 'Crew Oxygen and Masks',\n        state: 'CHECKED',\n        tags: [ChecklistTags.FFOTD],\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_AUDIO_WARNING_PANEL,\n        title: 'Audio Warning Panel',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_ELECTRICAL_POWER_PANEL,\n        title: 'Electrical Power Panel',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'All Generators Switches (ALL GEN)',\n                state: 'AUTO',\n            },\n            {\n                title: 'IDG Disc Switches',\n                state: 'GUARDED',\n            },\n            {\n                title: 'DC Service Switch',\n                state: 'OFF',\n            },\n            {\n                title: 'Battery Master',\n                state: 'ON',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_FIRE_DETECTION,\n        title: 'Fire Detection / FIREX Monitor Test',\n        state: 'COMPLETE',\n        tags: [ChecklistTags.FFOTD],\n        subItems: createTransformedList()([\n            {\n                title: 'Fire Detection Monitor Button',\n                state: 'PRESS 2 SECONDS',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                {' '}\n                                <CASMessage level=\"success\">FIRE SYS OK</CASMessage>\n                                {' '}\n                                on secondary\n                                {' '}\n                                {EICAS_CRJ}\n                            </>\n                        ),\n                        state: 'DISPLAYED',\n                    },\n                ]),\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_EXTERNAL_LIGHTS_PANEL,\n        title: 'External Lights Panel',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'NAV Light',\n                state: 'ON',\n            },\n            {\n                title: 'Beacon Light',\n                state: 'OFF',\n            },\n            {\n                title: 'Strobe Light',\n                state: 'OFF',\n            },\n            {\n                title: 'Logo Lights',\n                state: 'ON',\n            },\n            {\n                title: 'Wing Inspection Light',\n                state: 'OFF',\n            },\n            {\n                title: 'Landing Lights',\n                state: 'OFF',\n            },\n            {\n                title: 'Taxi Lights',\n                state: 'OFF',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_FUEL_PANEL,\n        title: 'Fuel Panel',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_BLEED_AIR_PANEL,\n        title: 'Bleed Air Panel',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'Wing A/I Cross Bleed Switch',\n                state: 'NORMAL',\n            },\n            {\n                title: 'Bleed Valves Switch',\n                state: 'AUTO',\n            },\n            {\n                title: 'ISOL Switch',\n                state: 'OPEN', // FIXME: sub item help could be useful here.\n            },\n            {\n                title: 'Bleed Source Switch',\n                state: 'BOTH ENG',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_APU_PANEL,\n        title: 'APU Panel',\n        state: 'ON / OFF',\n        moreInfoShort: (\n            <>\n                If\n                {' '}\n                {APU}\n                {' '}\n                was not started before, it can now be safely started to supply power and bleed air to systems.\n            </>\n        ),\n        subItems: createTransformedList()([\n            {\n                title: 'PWR Fuel Switch',\n                state: 'PRESS',\n            },\n            {\n                title: 'START / STOP Switch',\n                state: 'START',\n            },\n            {\n                title: 'DC and AC Electrical Power',\n                state: 'CHECKED',\n            },\n            // FIXME: help items for sub items to explain \"as required\".\n            // {\n            //     title: 'Bleed Source Switch',\n            //     state: 'AS REQUIRED',\n            // },\n            // {\n            //     title: 'Bleed Valves Switch',\n            //     state: 'AS REQUIRED',\n            // },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_START_PANEL,\n        title: 'Start Panel',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'L ENG START and R ENG START Switches',\n                state: 'OFF',\n            },\n            {\n                title: 'IGNITION, CONT Switch',\n                state: 'OFF',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_HYDRAULIC_PANEL,\n        title: 'Hydraulic Panel',\n        state: 'CHECKED, AUTO, ON (3A)',\n        subItems: createTransformedList()([\n            {\n                title: 'All Hydraulic Switches',\n                state: 'OFF',\n            },\n            {\n                title: 'EICAS, HYD Synoptic Page',\n                state: 'SELECT',\n            },\n            {\n                title: 'STAB TRIM Switches',\n                state: 'OFF / DISENGAGE',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                <CASMessage level=\"warning\">STAB TRIM</CASMessage>\n                                {' '}\n                                on primary\n                                {' '}\n                                {EICAS_CRJ}\n                            </>\n                        ),\n                        state: 'DISPLAYED',\n                    },\n                ]),\n            },\n            {\n                title: 'Fluid Quantities',\n                state: 'CHECKED',\n            },\n            {\n                title: 'Pump 1, 3B and 2 Switches',\n                state: 'ON',\n            },\n            {\n                title: 'Hydraulic Pressures',\n                state: 'CHECKED',\n            },\n            {\n                title: 'EICAS, STAT Synoptic Page',\n                state: 'SELECT',\n            },\n            {\n                title: 'STAB TRIM Switches',\n                state: 'ENGAGE',\n            },\n            {\n                title: 'Pump 1, 3B and 2 Switches',\n                state: 'AUTO',\n            },\n            {\n                title: 'Pump 3A',\n                state: 'ON',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_ELT_SWITCH,\n        title: 'ELT Switch',\n        state: 'ARM / RESET',\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_CABIN_PRESSURE_PANEL,\n        title: 'Cabin Pressure Panel',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'EICAS, ECS Synoptic Page',\n                state: 'SELECT',\n            },\n            {\n                title: 'MAN ALT Switch',\n                state: 'CENTER POSITION',\n            },\n            {\n                title: 'EMER DEPRESS Switch',\n                state: 'OFF / GUARDED',\n            },\n            {\n                title: 'PRESS CONTROL Switch',\n                state: 'OFF / FLUSH',\n            },\n            {\n                title: 'MAN RATE Switch',\n                state: 'FULL DECR',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_AIR_CONDITIONING_PANEL,\n        title: 'Air Conditioning Panel',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'PACK Switches',\n                state: 'AUTO',\n            },\n            {\n                title: 'RECIRC FAN Switch',\n                state: 'ON',\n            },\n            {\n                title: 'Temperature Control Mode',\n                state: 'AUTO',\n            },\n            {\n                title: 'RAM AIR Switch',\n                state: 'OFF / GUARDED',\n            },\n            {\n                title: 'Aft Cargo',\n                state: 'AS REQUIRED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_ANTIICE_PANEL,\n        title: 'Anti-Ice Panel',\n        state: 'CHECKED / COMPLETE',\n        subItems: createTransformedList()([\n            {\n                title: 'EICAS, PRI and STAT Pages',\n                state: 'SELECT',\n            },\n            {\n                title: 'WING and COWL Anti-Ice Switches',\n                state: 'OFF',\n            },\n            {\n                title: 'DET TEST Switch',\n                state: 'PRESSED 2 SEC',\n                subItems: createTransformedList()([\n                    {\n                        title: 'ICE Switch Light',\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: (\n                            <>\n                                <CASMessage level=\"success\">ADS HEAT TEST OK</CASMessage>\n                                {' '}\n                                on secondary\n                                {' '}\n                                {EICAS_CRJ}\n                            </>\n                        ),\n                        state: 'CHECKED',\n                    },\n                ]),\n            },\n            {\n                title: 'DET TEST Switch',\n                state: 'PRESS / RESET',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_WINDSHIELD_HEAT,\n        title: 'Windshield Heat',\n        state: 'LOW',\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_EMERGENCY_LIGHTS,\n        title: 'Emergency Lights Switch',\n        state: 'ARMED',\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_STANDBY_COMPASS,\n        title: 'Standby Compass',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_STALL_TEST,\n        title: 'Stall Test',\n        state: 'COMPLETE',\n        tags: [ChecklistTags.FFOTD],\n        subItems: createTransformedList()([\n            {\n                title: 'STALL PTCT, Pusher Switches',\n                state: 'ON',\n            },\n            {\n                title: 'STALL Switch',\n                state: 'PUSH, HOLD',\n                subItems: createTransformedList()([\n                    {\n                        title: 'INGITION, CONT Switch',\n                        state: 'ON',\n                    },\n                    {\n                        title: (\n                            <>\n                                <CASMessage>CONT IGNITION</CASMessage>\n                                {' '}\n                                on secondary\n                                {' '}\n                                {EICAS_CRJ}\n                            </>\n                        ),\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: 'STALL Switch',\n                        state: 'FLASHING',\n                    },\n                    {\n                        title: 'Stick Checker',\n                        state: 'ON',\n                    },\n                ]),\n            },\n            {\n                title: 'STALL Switch',\n                state: 'RELEASE',\n                subItems: createTransformedList()([\n                    {\n                        title: 'INGITION, CONT Switch',\n                        state: 'OFF',\n                    },\n                    {\n                        title: (\n                            <>\n                                <CASMessage>CONT IGNITION</CASMessage>\n                                {' '}\n                                on secondary\n                                {' '}\n                                {EICAS_CRJ}\n                            </>\n                        ),\n                        state: 'OFF',\n                    },\n                ]),\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_NOSEWHEEL,\n        title: 'Nose-Wheel Steering Switch',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_CLOCKS,\n        title: 'Clocks',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_EFIS_CONTROL_PANELS,\n        title: 'EFIS Control Panels',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'Display Control Switches',\n                state: 'MAP',\n            },\n            {\n                title: 'NAV Source',\n                state: 'FMS1',\n            },\n            {\n                title: 'BARO Switch',\n                state: 'SET',\n            },\n            {\n                title: 'Display Reversionary Selector',\n                state: 'NORM',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_INSTRUMENT_PANELS,\n        title: 'Instrument Panels',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'Primary Flight Display',\n                state: 'CHECKED',\n            },\n            {\n                title: 'Altimeter Readout',\n                state: 'CROSS-CHECKED',\n            },\n            {\n                title: 'Multifunction Display',\n                state: 'CHECKED',\n            },\n            {\n                title: 'Cockpit Voice Recorder',\n                state: 'TEST',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_EICAS_AND_STDBY,\n        title: 'EICAS and Standby Instruments',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'EICAS Primary Display',\n                state: 'CHECKED',\n            },\n            {\n                title: 'Standby Altimeters / Airspeed Indicator',\n                state: 'CROSS-CHECKED',\n            },\n            {\n                title: 'EICAS Secondary Display',\n                state: 'CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Brake Temperature',\n                        state: 'CHECKED',\n                    },\n                ]),\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_UPPER_PEDESTAL,\n        title: 'Upper Pedestal',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'MUTE HORN Switch',\n                state: 'GUARDED',\n            },\n            {\n                title: 'ANTI SKID Test',\n                state: 'COMPLETE',\n                subItems: createTransformedList()([\n                    {\n                        title: 'ANTI SKID Switch',\n                        state: 'ARMED',\n                    },\n                    {\n                        title: (\n                            <>\n                                <CASMessage level=\"warning\">A/SKID INBD</CASMessage>\n                                {' '}\n                                and\n                                <CASMessage level=\"warning\">A/SKID OUTBD</CASMessage>\n                                {' '}\n                                on secondary\n                                {' '}\n                                {EICAS_CRJ}\n                            </>\n                        ),\n                        state: 'NOT DISPLAYED',\n                    },\n                    {\n                        title: 'ANTI SKID Switch',\n                        state: 'OFF',\n                    },\n                    {\n                        title: (\n                            <>\n                                <CASMessage level=\"warning\">A/SKID INBD</CASMessage>\n                                {' '}\n                                and\n                                <CASMessage level=\"warning\">A/SKID OUTBD</CASMessage>\n                                {' '}\n                                on secondary\n                                {' '}\n                                {EICAS_CRJ}\n                            </>\n                        ),\n                        state: 'DISPLAYED',\n                    },\n                    {\n                        title: 'ANTI SKID Switch',\n                        state: 'ARMED',\n                    },\n                    {\n                        title: (\n                            <>\n                                <CASMessage level=\"warning\">A/SKID INBD</CASMessage>\n                                {' '}\n                                and\n                                <CASMessage level=\"warning\">A/SKID OUTBD</CASMessage>\n                                {' '}\n                                on secondary\n                                {' '}\n                                {EICAS_CRJ}\n                            </>\n                        ),\n                        state: 'NOT DISPLAYED',\n                    },\n                ]),\n            },\n            {\n                title: 'MLG BAY Over-Heat Test',\n                state: 'COMPLETE',\n                subItems: createTransformedList()([\n                    {\n                        title: 'MLG BAY OVHT Switch',\n                        state: 'HOLD',\n                        subItems: createTransformedList()([\n                            {\n                                title: (\n                                    <>\n                                        <CASMessage level=\"critical\">MLG BAY OVHT</CASMessage>\n                                        {' '}\n                                        on primary\n                                        {' '}\n                                        {EICAS_CRJ}\n                                    </>\n                                ),\n                                state: 'DISPLAYED',\n                            },\n                        ]),\n                    },\n                    {\n                        title: 'MLG TEST WARN FAIL Switch',\n                        state: 'HOLD',\n                        subItems: createTransformedList()([\n                            {\n                                title: (\n                                    <>\n                                        <CASMessage level=\"warning\">MLG OVHT FAIL</CASMessage>\n                                        {' '}\n                                        on primary\n                                        {' '}\n                                        {EICAS_CRJ}\n                                    </>\n                                ),\n                                state: 'DISPLAYED',\n                            },\n                        ]),\n                    },\n                ]),\n            },\n            {\n                title: 'Landing Gear Lever',\n                state: 'DOWN',\n            },\n            {\n                title: 'Engines Sync Switches',\n                state: 'N1 or N2',\n            },\n            {\n                title: 'Indicator Lights Switch (IND LTS)',\n                state: 'AS REQUIRED',\n            },\n            {\n                title: 'Ground Proximity Switches (GRND PROX)',\n                state: 'CHECKED, GUARDED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_THRUST_LEVER_QUADRANT,\n        title: 'Thrust Lever Quadrant',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'PITCH and ROLL DISC Handles',\n                state: 'IN / STOWED',\n            },\n            {\n                title: 'GND LIFT DUMPING Switch',\n                state: 'CHECK / AUTO',\n            },\n            {\n                title: 'Thrust Reverser Switches',\n                state: 'ARMED',\n            },\n            {\n                title: 'Thrust Levers',\n                state: 'CHECKED / SHUT OFF',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_AVIONICS,\n        title: 'Avionics / Radio Tuning Panels',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'TCAS Test',\n                state: 'COMPLETE',\n            },\n            {\n                title: 'RTU & FMS TUNE INHIBIT Switches',\n                state: 'OFF / FLUSH',\n            },\n            {\n                title: 'Back-Up Mode Selector Switch',\n                state: 'STBY',\n            },\n            {\n                title: 'DSPLAY FAN Switch',\n                state: 'NORM',\n            },\n            {\n                title: 'IRS Switch',\n                state: 'NAV',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_TRIMS,\n        title: 'Trims',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'STAB TRIM and MACH TRIM Switches',\n                state: 'ENGAGE',\n            },\n            {\n                title: 'Aileron and Rudder Trim (AIL, RUD)',\n                state: 'CHECKED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_YAW_DAMPER,\n        title: 'Yaw Damper',\n        state: 'ENGAGE',\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_SOURCE_SELECT_PANEL,\n        title: 'Source Select Panel',\n        state: 'NORM',\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_LOWER_PEDESTAL,\n        title: 'Lower Pedestal',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'Parking Brake',\n                state: 'SET',\n            },\n            {\n                title: 'Landing Gear Manual Release Handle',\n                state: 'STOWED',\n            },\n            {\n                title: 'ADG Manual Deploy Handle',\n                state: 'STOWED',\n            },\n            {\n                title: 'Emergency Flap Switch (EMER Flap)',\n                state: 'NORMAL',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_START_CHECK_PASS_SIGNS,\n        title: 'Passenger Signs',\n        state: 'ON',\n        subItems: createTransformedList()([\n            {\n                title: 'No Smoking Sign (NO SMKG)',\n                state: 'ON',\n            },\n            {\n                title: 'Seat Belts Sign (SEAT BLTS)',\n                state: 'ON',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_START_CHECK_LANDING_ELEVATION,\n        title: 'Landing Elevation',\n        state: 'SET',\n        moreInfoShort: (\n            <>\n                This elevation should be set to the elevation of the field we will return to in case of an emergency\n                at take-off.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_START_CHECK_BOOST_PUMPS,\n        title: 'Boost Fuel Pumps',\n        state: 'ON / CHECKED',\n        moreInfoShort: (\n            <>\n                Center tank&apos;s quantity should not increase by more than 68 kg (150 lbs). Wait 10 minutes to verify\n                values.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_START_CHECK_ALTIMETERS,\n        title: 'Altimeters',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_START_CHECK_FMS,\n        title: 'FMS',\n        state: 'SET, CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: (\n                    <>\n                        Status Page (\n                        <KeyboardInputs inputs={['INDEX', 'LSK 1 (STATUS)']} />\n                        )\n                    </>\n                ),\n                state: 'CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Navigation Data',\n                        state: 'WORLD',\n                    },\n                    {\n                        title: 'Active Database Dates',\n                        state: 'ACCURATE',\n                    },\n                    {\n                        title: 'FMC Time',\n                        state: 'ACCURATE',\n                    },\n                ]),\n            },\n            {\n                title: (\n                    <>\n                        Position Initialization (\n                        <KeyboardInputs inputs={['RSK 6 (POS INIT)']} />\n                        )\n                    </>\n                ),\n                state: 'CHECKED',\n            },\n            {\n                title: (\n                    <>\n                        Flight Plan Init 1 (\n                        <KeyboardInputs inputs={['RSK 6 (FPLN)']} />\n                        )\n                    </>\n                ),\n                state: 'SET',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Origin Airport (\n                                <KeyboardInputs inputs={['INPUT', 'LSK 1 (ORIGIN)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Destination Airport (\n                                <KeyboardInputs inputs={['INPUT', 'RSK 1 (DEST)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Alternate Destination Airport (\n                                <KeyboardInputs inputs={['INPUT', 'RSK 2 (ALTN)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Flight Number (\n                                <KeyboardInputs inputs={['INPUT', 'RSK 5 (FLT NO)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Execute (\n                                <KeyboardInputs inputs={['EXEC']} />\n                                )\n                            </>\n                        ),\n                        state: 'COMPLETE',\n                    },\n                ]),\n            },\n            {\n                title: (\n                    <>\n                        Departure Init (\n                        <KeyboardInputs inputs={['DEP/ARR']} />\n                        )\n                    </>\n                ),\n                state: 'SET',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Departure Runway (\n                                <KeyboardInputs inputs={['RSK ?']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Standard Instrument Departure (\n                                <KeyboardInputs inputs={['LSK ?']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Transition (\n                                <KeyboardInputs inputs={['INPUT', 'RSK 2 (ALTN)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Execute (\n                                <KeyboardInputs inputs={['EXEC']} />\n                                )\n                            </>\n                        ),\n                        state: 'COMPLETE',\n                    },\n                ]),\n            },\n            {\n                title: (\n                    <>\n                        Flight Plan Init 2 (\n                        <KeyboardInputs inputs={['FPLN', 'NEXT PAGE']} />\n                        )\n                    </>\n                ),\n                state: 'SET',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Highways / Waypoints (\n                                <KeyboardInputs inputs={['LSK ? / RSK ?']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Execute (\n                                <KeyboardInputs inputs={['EXEC']} />\n                                )\n                            </>\n                        ),\n                        state: 'COMPLETE',\n                    },\n                ]),\n            },\n            {\n                title: (\n                    <>\n                        Legs Page (\n                        <KeyboardInputs inputs={['LEGS']} />\n                        )\n                    </>\n                ),\n                state: 'CHECKED',\n            },\n            {\n                title: (\n                    <>\n                        Performance Page (\n                        <KeyboardInputs inputs={['PERF']} />\n                        )\n                    </>\n                ),\n                state: 'SET',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Performance Init Page 1 (\n                                <KeyboardInputs inputs={['LSK 1 (PERF INIT)']} />\n                                )\n                            </>\n                        ),\n                        state: 'OPEN',\n                        subItems: createTransformedList()([\n                            {\n                                title: 'EFB: Copy Performance Init Data to FMS',\n                                state: 'SELECTED',\n                            },\n                            {\n                                title: 'FMS: Zero Fuel Weight, Fuel Weight',\n                                state: 'CHECKED',\n                            },\n                            {\n                                title: (\n                                    <>\n                                        Cruise Altitude (\n                                        <KeyboardInputs inputs={['RSK 1 (CRZ ALT)']} />\n                                        )\n                                    </>\n                                ),\n                                state: 'SET',\n                            },\n                            {\n                                title: (\n                                    <>\n                                        Alternate Cruise Altitude (\n                                        <KeyboardInputs inputs={['RSK 2 (ALTN CRZ ALT)']} />\n                                        )\n                                    </>\n                                ),\n                                state: 'SET',\n                            },\n                        ]),\n                    },\n                    {\n                        title: (\n                            <>\n                                Performance Init Page 2 (\n                                <KeyboardInputs inputs={['NEXT PAGE']} />\n                                )\n                            </>\n                        ),\n                        state: 'OPEN',\n                        subItems: createTransformedList()([\n                            {\n                                title: (\n                                    <>\n                                        ISA Dev (\n                                        <KeyboardInputs inputs={['LSK 2 (ISA DEV)']} />\n                                        )\n                                    </>\n                                ),\n                                state: 'SET',\n                            },\n                        ]),\n                    },\n                    {\n                        title: (\n                            <>\n                                Performance Init Page 3 (\n                                <KeyboardInputs inputs={['NEXT PAGE']} />\n                                )\n                            </>\n                        ),\n                        state: 'OPEN',\n                        subItems: createTransformedList()([\n                            {\n                                title: (\n                                    <>\n                                        Reserves Fuel (\n                                        <KeyboardInputs inputs={['LSK 1 (RESERVES)']} />\n                                        )\n                                    </>\n                                ),\n                                state: 'SET',\n                            },\n                            {\n                                title: (\n                                    <>\n                                        Taxi Fuel (\n                                        <KeyboardInputs inputs={['RSK 1 (TAXI FUEL)']} />\n                                        )\n                                    </>\n                                ),\n                                state: 'SET',\n                            },\n                        ]),\n                    },\n                    {\n                        title: (\n                            <>\n                                VNAV Climb Profile (\n                                <KeyboardInputs inputs={['LSK 6 (VNAV SETUP)']} />\n                                )\n                            </>\n                        ),\n                        state: 'OPEN',\n                        subItems: createTransformedList()([\n                            {\n                                title: (\n                                    <>\n                                        Transition Altitude (\n                                        <KeyboardInputs inputs={['RSK 1 (TRANS ALT)']} />\n                                        )\n                                    </>\n                                ),\n                                state: 'SET',\n                            },\n                        ]),\n                    },\n                ]),\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_START_CHECK_IRS,\n        title: 'IRS',\n        state: 'ALIGNED, NAV',\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_START_CHECK_RADIOS,\n        title: 'Radios and Nav Aids',\n        state: 'SET',\n        moreInfoShort: 'If any navigation aids (VORs) can be used on departure, they should be configured now.',\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_START_CHECK_TAKEOFF_DATA,\n        title: 'Take-Off Data',\n        state: 'SET',\n        subItems: createTransformedList()([\n            {\n                title: 'EFB: Take-Off Speeds',\n                state: 'SET ALL',\n            },\n            {\n                title: 'PFD: V Speeds',\n                state: 'AVAILABLE',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_START_CHECK_TAKEOFF_BRIEFING,\n        title: 'Take-Off Briefing',\n        state: 'COMPLETE',\n        // FIXME: create an abstract briefing\n    },\n    {\n        uid: ChecklistItems.CRJ_CLEARED_TO_START_CHECK_PERSONAL_ELECTRONIC_DEVICES,\n        title: 'Personal Electronic Devices',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_CLEARED_TO_START_CHECK_APU,\n        title: 'APU',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.CRJ_CLEARED_TO_START_CHECK_ELECTRICS,\n        title: 'Electrics',\n        state: 'CHECKED',\n        moreInfoShort: (\n            <>\n                Electric circuits can be checked on the ELEC page of the secondary\n                {' '}\n                {EICAS_CRJ}\n                .\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CRJ_CLEARED_TO_START_CHECK_DOORS,\n        title: 'Doors',\n        state: 'CLOSED / LOCKED',\n        moreInfoShort: (\n            <>\n                Door status can be checked on the DOORS page of the secondary\n                {' '}\n                {EICAS_CRJ}\n                .\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CRJ_CLEARED_TO_START_CHECK_BEACON,\n        title: 'Beacon',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.CRJ_CLEARED_TO_START_CHECK_FUEL_PUMPS,\n        title: 'Fuel Pumps and Quantity',\n        state: 'ON, CHECKED',\n    },\n    {\n        uid: ChecklistItems.CRJ_CLEARED_TO_START_CHECK_HYDRAULIC_PUMPS,\n        title: 'Hydraulic Pumps',\n        state: 'AUTO / ON',\n    },\n    {\n        uid: ChecklistItems.CRJ_CLEARED_TO_START_CHECK_PARKING_BRAKE,\n        title: 'Parking Brake',\n        state: 'AS REQUIRED',\n    },\n    {\n        uid: ChecklistItems.CRJ_CLEARED_TO_START_ENGINE_START,\n        title: 'Engine Start',\n        state: 'COMPLETE',\n        subItems: createTransformedList()([\n            {\n                title: 'Right Engine Start',\n                state: 'COMPLETE',\n                subItems: createTransformedList()([\n                    {\n                        title: 'R ENG Start Button',\n                        state: 'PUSH',\n                    },\n                    {\n                        title: (\n                            <>\n                                {N2}\n                                {' '}\n                                Monitor\n                            </>\n                        ),\n                        state: '20%',\n                    },\n                    {\n                        title: 'Right Throttle Lever',\n                        state: 'IDLE',\n                    },\n                    {\n                        title: (\n                            <>\n                                {N1}\n                                {' '}\n                                = 20%,\n                                {' '}\n                                {N2}\n                                {' '}\n                                = 60%,\n                                {' '}\n                                {ITT}\n                                {' '}\n                                = 525&deg;C\n                            </>\n                        ),\n                        state: 'CHECKED',\n                    },\n                ]),\n            },\n            {\n                title: 'Fuel Feed Check Valve Test',\n                state: 'COMPLETE',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Fuel Page on\n                                {' '}\n                                {EICAS_CRJ}\n                                {' '}\n                                (\n                                <KeyboardInputs inputs={['FUEL']} />\n                                )\n                            </>\n                        ),\n                        state: 'OPEN',\n                    },\n                    {\n                        title: 'Fuel Boost Pumps',\n                        state: 'OFF, BOTH',\n                    },\n                    {\n                        title: (\n                            <>\n                                <CASMessage level=\"warning\">LEFT FUEL LO PRESS</CASMessage>\n                                {' '}\n                                on primary\n                                {' '}\n                                {EICAS_CRJ}\n                            </>\n                        ),\n                        state: 'DISPLAYED',\n                    },\n                    {\n                        title: 'Fuel Boost Pumps',\n                        state: 'ON, BOTH',\n                    },\n                ]),\n            },\n            {\n                title: 'Left Engine Start',\n                state: 'COMPLETE',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_AFTER_START_CHECK_GENERATORS,\n        title: 'Electrical Panel: Generators',\n        state: 'AUTO',\n    },\n    {\n        uid: ChecklistItems.CRJ_AFTER_START_CHECK_BLEED_VALVES,\n        title: 'Bleed Valves',\n        state: 'AUTO',\n    },\n    {\n        uid: ChecklistItems.CRJ_AFTER_START_CHECK_PACKS,\n        title: 'Packs',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.CRJ_AFTER_START_CHECK_SYNOPTIC_PAGES,\n        title: 'Synoptic Pages',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: (\n                    <>\n                        Hyrdaulic System Pages (\n                        <KeyboardInputs inputs={['HYD']} />\n                        )\n                    </>\n                ),\n                state: 'CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Hydraulic Pump 1A',\n                        state: 'GREEN',\n                    },\n                    {\n                        title: 'Hydraulic Pump 2A',\n                        state: 'GREEN',\n                    },\n                    {\n                        title: 'Hydraulic Pump 3A',\n                        state: 'GREEN',\n                    },\n                ]),\n            },\n            {\n                title: (\n                    <>\n                        Eletric System Pages (\n                        <KeyboardInputs inputs={['ELEC']} />\n                        )\n                    </>\n                ),\n                state: 'CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Generator 1',\n                        state: 'GREEN',\n                    },\n                    {\n                        title: 'Generator 2',\n                        state: 'GREEN',\n                    },\n                ]),\n            },\n            {\n                title: (\n                    <>\n                        Fuel System Page (\n                        <KeyboardInputs inputs={['FUEL']} />\n                        )\n                    </>\n                ),\n                state: 'CHECKED',\n            },\n            {\n                title: (\n                    <>\n                        Flight Control Surfaces Page (\n                        <KeyboardInputs inputs={['F/CTL']} />\n                        ), Flight Controls\n                    </>\n                ),\n                state: 'FREE AND MOVING',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_AFTER_START_CHECK_APU,\n        title: 'APU',\n        state: 'OFF',\n        subItems: createTransformedList()([\n            {\n                title: 'APU Start/Stop Switch',\n                state: 'PRESSED',\n            },\n            {\n                title: 'APU, PWR Fuel Switch',\n                state: 'PRESSED',\n            },\n            {\n                title: (\n                    <>\n                        Secondary\n                        {' '}\n                        {EICAS_CRJ}\n                        {' '}\n                        Page (\n                        <KeyboardInputs inputs={['STAT']} />\n                        ), APU DOOR CLSD\n                    </>\n                ),\n                state: 'CHECKED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_AFTER_START_CHECK_ANTIICE_PROBES,\n        title: 'Anti-Ice Probes',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.CRJ_AFTER_START_CHECK_ANTIICE,\n        title: 'Anti-Ice',\n        state: 'AS REQUIRED',\n    },\n    {\n        uid: ChecklistItems.CRJ_AFTER_START_CHECK_NOSEWHEEL,\n        title: 'Nose-Wheel Steering Switch',\n        state: 'ARMED',\n    },\n    {\n        uid: ChecklistItems.CRJ_TAXI_CHECK_SLATS_FLAPS,\n        title: 'Slats / Flaps',\n        state: 'SET, CHECKED',\n    },\n    {\n        uid: ChecklistItems.CRJ_TAXI_CHECK_FLIGHT_CONTROLS,\n        title: 'Flight Controls',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.CRJ_TAXI_CHECK_TRIMS,\n        title: 'Trims',\n        state: 'GREEN, CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'Rudder Trim (RUD)',\n                state: 'GREEN',\n            },\n            {\n                title: 'Aileron Trim (AIL)',\n                state: 'GREEN',\n            },\n            {\n                title: 'Elevator Trim',\n                state: 'SET FOR TAKEOFF, GREEN',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_TAXI_CHECK_THRUST_REVERSERS,\n        title: 'Thrust Reversers',\n        state: 'ARMED',\n    },\n    {\n        uid: ChecklistItems.CRJ_TAXI_CHECK_EXTERNAL_LIGHTS,\n        title: 'External Lights',\n        state: 'AS REQUIRED',\n        subItems: createTransformedList()([\n            {\n                title: 'Taxi Lights (RECOG TAXI LTS)',\n                state: 'ON',\n            },\n            {\n                title: 'Strobe Lights (STROBE)',\n                state: 'AS REQUIRED',\n            },\n            {\n                title: 'Landing Lights (All LANDING LTS)',\n                state: 'AS REQUIRED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_TAXI_CHECK_FLIGHT_INSTRUMENTS,\n        title: 'Flight Instruments',\n        state: 'CHECKED', // FIXME: shared with other aircraft, check the roses rotate, speeds are indicated, ...\n    },\n    {\n        uid: ChecklistItems.CRJ_TAXI_CHECK_BRAKE_TEMPS,\n        title: 'Brake Temperatures',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_TAKEOFF_CHECK_EXTERNAL_LIGHTS,\n        title: 'External Lights',\n        state: 'ON',\n        subItems: createTransformedList()([\n            {\n                title: 'Strobe Lights (STROBE)',\n                state: 'ON',\n            },\n            {\n                title: 'Landing Lights (All LANDING LTS)',\n                state: 'ON',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_TAKEOFF_CHECK_FUEL_XFLOW,\n        title: 'Fuel Cross-Flow (XFLOW)',\n        state: 'MANUAL',\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_TAKEOFF_CHECK_FLIGHT_ATTENDANT,\n        title: 'Flight Attendants',\n        state: 'ADVISED',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_TAKEOFF_CHECK_TRANSPONDER,\n        title: 'Transponder / TCAS',\n        state: 'ON, SET',\n        moreInfoShort: 'Rotate ATC SEL in Radios section on Pedestal to 1.',\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_TAKEOFF_CHECK_RADAR,\n        title: 'Radar / Terrain Display',\n        state: 'SET',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_TAKEOFF_CHECK_CAS,\n        title: 'CAS',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.CRJ_CLIMB_CHECK_FUEL_XFLOW,\n        title: 'Fuel Cross-Flow (XFLOW)',\n        state: 'AUTO',\n    },\n    {\n        uid: ChecklistItems.CRJ_CLIMB_CHECK_BLEEDS_AND_APU,\n        title: 'Bleeds and APU',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.CRJ_CLIMB_CHECK_THRUST_REVERSERS,\n        title: 'Thrust Reversers',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_CLIMB_CHECK_CAS,\n        title: 'CAS',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.CRJ_DESCENT_CHECK_LANDING_ELEVATION,\n        title: 'Landing Elevation',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.CRJ_DESCENT_CHECK_FUEL,\n        title: 'Fuel',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.CRJ_DESCENT_CHECK_TCAS,\n        title: 'TCAS',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.CRJ_DESCENT_CHECK_RADAR,\n        title: 'Radar',\n        state: 'ON / OFF',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CRJ_DESCENT_CHECK_CAS,\n        title: 'CAS',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.CRJ_DESCENT_CHECK_LANDING_DATA,\n        title: 'Landing Data',\n        state: 'SET',\n        subItems: createTransformedList()([\n            {\n                title: (\n                    <>\n                        Arrival Init (\n                        <KeyboardInputs inputs={['DEP/ARR']} />\n                        )\n                    </>\n                ),\n                state: 'SET',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Approach (\n                                <KeyboardInputs inputs={['RSK ?']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Standard Terminal Arrival Route (\n                                <KeyboardInputs inputs={['LSK ?']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Execute (\n                                <KeyboardInputs inputs={['EXEC']} />\n                                )\n                            </>\n                        ),\n                        state: 'COMPLETE',\n                    },\n                ]),\n            },\n            {\n                title: (\n                    <>\n                        Legs Page (\n                        <KeyboardInputs inputs={['LEGS']} />\n                        )\n                    </>\n                ),\n                state: 'CHECKED',\n            },\n            {\n                title: (\n                    <>\n                        VNAV Descent Profile (\n                        <KeyboardInputs inputs={['PERF', 'LSK 2 (VNAV SETUP)', 'NEXT PAGE', 'NEXT PAGE']} />\n                        )\n                    </>\n                ),\n                state: 'OPEN',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Transition Level (\n                                <KeyboardInputs inputs={['RSK 1 (TRANS FL)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Execute (\n                                <KeyboardInputs inputs={['EXEC']} />\n                                )\n                            </>\n                        ),\n                        state: 'COMPLETE',\n                    },\n                ]),\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_DESCENT_CHECK_APPROACH_BRIEFING,\n        title: 'Approach Briefing',\n        state: 'COMPLETE',\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_LANDING_CHECK_FLIGHT_ATTENDANT,\n        title: 'Flight Attendants',\n        state: 'ADVISED',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_LANDING_CHECK_PASSENGER_SIGNS,\n        title: 'Passenger Signs',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_LANDING_CHECK_THRUST_REVERSERS,\n        title: 'Thrust Reversers',\n        state: 'ARMED',\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_LANDING_CHECK_LANDING_GEAR,\n        title: 'Landing Gear',\n        state: 'DOWN',\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_LANDING_CHECK_FLAPS,\n        title: 'Flaps',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.CRJ_AFTER_LANDING_CHECK_APU,\n        title: 'APU',\n        state: 'ON / OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_AFTER_LANDING_CHECK_TRANSPONDER_RADAR,\n        title: 'Transponder / Radar',\n        state: 'STANDBY / OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_AFTER_LANDING_CHECK_FLAPS,\n        title: 'Flaps',\n        state: 'UP / ZERO',\n    },\n    {\n        uid: ChecklistItems.CRJ_AFTER_LANDING_CHECK_EXTERNAL_LIGHTS,\n        title: 'External Lights',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.CRJ_AFTER_LANDING_CHECK_PROBES,\n        title: 'Probes',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_SHUTDOWN_CHECK_PARKING_BRAKE,\n        title: 'Parking Brake',\n        state: 'ON / OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_SHUTDOWN_CHECK_SEAT_BELTS,\n        title: 'Seat Belts',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_SHUTDOWN_CHECK_THRUST_LEVERS,\n        title: 'Thrust Levers',\n        state: 'SHUT OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_SHUTDOWN_CHECK_ANTIICE,\n        title: 'Anti-Ice',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_SHUTDOWN_CHECK_FUEL_PUMPS,\n        title: 'Fuel Pumps',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_SHUTDOWN_CHECK_BEACON,\n        title: 'Beacon',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_SHUTDOWN_CHECK_NOSEWHEEL,\n        title: 'Nose-Wheel Steering Switch',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_TERMINATING_CHECK_CHOCKS_AND_BRAKES,\n        title: 'Chocks And Brakes',\n        state: 'IN / OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_TERMINATING_CHECK_IRS,\n        title: 'IRS',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_TERMINATING_CHECK_EMERGENCY_LIGHTS,\n        title: 'Emergency Lights Switch',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_TERMINATING_CHECK_ANTIICE,\n        title: 'Anti-Ice',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_TERMINATING_CHECK_HYDRAULIC_PUMPS,\n        title: 'Hydraulic Pumps',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_TERMINATING_CHECK_EXTERNAL_LIGHTS,\n        title: 'External Lights',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_TERMINATING_CHECK_APU,\n        title: 'APU',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_TERMINATING_CHECK_BATTERY_MASTER,\n        title: 'Battery Master Switch',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_TERMINATING_CHECK_COCKPIT_LIGHTS,\n        title: 'Cockpit Lights',\n        state: 'OFF',\n    },\n]);\n","import { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistTags } from 'lib/checklist/data/tags';\nimport { createTransformedList, createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst addCRJExtTags = (value) => ({\n    ...value,\n    tags: [...value.tags, ChecklistTags.CRJ, ChecklistTags.EXTENSION],\n});\n\nexport const ACRJExtChecklistItemsData = createTransformedMapping(addCRJExtTags)([\n    {\n        uid: ChecklistItems.CRJEXT_PRE_FLIGHT_AIRCRAFT_EFB_SETUP,\n        title: 'Aircraft Setup',\n        state: 'COMPLETE',\n        subItems: createTransformedList()([\n            {\n                title: 'Performance Tab',\n                state: 'COMPLETE',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Zero Fuel Weight (ZFW)',\n                        state: 'SET',\n                    },\n                    {\n                        title: 'Fuel',\n                        state: 'SET',\n                    },\n                    {\n                        title: 'SET PAYLOAD IN SIMULATOR',\n                        state: 'COMPLETE',\n                    },\n                ]),\n            },\n            {\n                title: 'Aircraft Tab',\n                state: 'COMPLETE',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Wheel Chocks',\n                        state: 'IN PLACE',\n                    },\n                    {\n                        title: 'Passenger Door',\n                        state: 'OPEN',\n                    },\n                    {\n                        title: 'Forward Cargo Door',\n                        state: 'OPEN',\n                    },\n                    {\n                        title: 'Aft Cargo Door',\n                        state: 'OPEN',\n                    },\n                    {\n                        title: 'Service Door',\n                        state: 'OPEN',\n                    },\n                ]),\n            },\n            {\n                title: 'Maintenance Tab',\n                state: 'CHECKED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJEXT_ORIGINATING_CHECK_FMS_INIT_REMINDER,\n        title: 'FMS Position Initialization (Reminder)',\n        state: 'COMPLETE',\n    },\n    {\n        uid: ChecklistItems.CRJEXT_BEFORE_START_CHECK_DOORS_CHOCKS,\n        title: 'Doors / Chocks',\n        state: 'LOCKED / REMOVED',\n        subItems: createTransformedList()([\n            {\n                title: 'Passenger Door',\n                state: 'CLOSED',\n            },\n            {\n                title: 'Forward Cargo Door',\n                state: 'CLOSED',\n            },\n            {\n                title: 'Aft Cargo Door',\n                state: 'CLOSED',\n            },\n            {\n                title: 'Service Door',\n                state: 'CLOSED',\n            },\n            {\n                title: 'Wheel Chocks',\n                state: 'REMOVED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJEXT_CRUISE_ANTIICE,\n        title: 'Anti-Ice',\n        state: 'AS REQUIRED',\n    },\n]);\n","import React from 'react';\n\nimport { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistTags } from 'lib/checklist/data/tags';\nimport { createTransformedList, createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst addNavTags = (value) => ({\n    ...value,\n    tags: [...value.tags, ChecklistTags.NAV],\n});\n\nexport const NavChecklistItemsData = createTransformedMapping(addNavTags)([\n    {\n        uid: ChecklistItems.NAV_FLIGHT_PLANNING,\n        title: 'Flight Planning',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                Plan the full flight, expect to figure out the following information: departure and arrival airport,\n                type of flight, route including most likely departure and arrival procedure, time in flight and fuel\n                required. This is subject to changes by controllers, but a plan needs to be made. Tools such as\n                Simbrief may be used to simplify this step.\n            </>\n        ),\n        subItems: createTransformedList()([\n            {\n                title: 'ATIS/METAR for departure/destinations',\n                state: 'CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Runways in Use',\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: 'Departure/Arrival/Approach in Use',\n                        state: 'CHECKED',\n                    },\n                ]),\n            },\n            {\n                title: 'Airframe',\n                state: 'SELECTED',\n            },\n            {\n                title: 'Route (1)',\n                state: 'SET',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Departure Airport',\n                        state: 'SET',\n                    },\n                    {\n                        title: 'Arrival Airport',\n                        state: 'SET',\n                    },\n                ]),\n            },\n            {\n                title: 'Departure',\n                state: 'SET',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Departure Runway Predicted (based on METAR/ATIS)',\n                        state: 'CHECKED / SET',\n                    },\n                    {\n                        title: 'Departure Time',\n                        state: 'CHECKED / SET',\n                    },\n                ]),\n            },\n            {\n                title: 'Arrival Airport',\n                state: 'SET',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Arrival Runway Predicted (based on METAR/ATIS)',\n                        state: 'CHECKED / SET',\n                    },\n                    {\n                        title: 'Scheduled Flight Time',\n                        state: 'CHECKED',\n                    },\n                ]),\n            },\n            {\n                title: 'Alternate Airport',\n                state: 'CHECKED / SET',\n            },\n            {\n                title: 'Route (2)',\n                state: 'CHECKED / SET',\n                subItems: createTransformedList()([\n                    {\n                        title: 'SID / STAR',\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: 'Route',\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: 'Distance Within Range',\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: 'Weather / Winds',\n                        state: 'CHECKED',\n                    },\n                ]),\n            },\n            {\n                title: 'OFP',\n                state: 'CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Call Sign / Registration / Aircraft Type',\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: 'Flight Level Steps',\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: 'Fuel',\n                        state: 'CHECKED',\n                        subItems: createTransformedList()([\n                            {\n                                title: 'Taxi Fuel',\n                                state: 'CHECKED',\n                            },\n                            {\n                                title: 'Trip Fuel',\n                                state: 'CHECKED',\n                            },\n                            {\n                                title: 'Alternate Fuel',\n                                state: 'CHECKED',\n                            },\n                            {\n                                title: 'Reserves',\n                                state: 'CHECKED',\n                            },\n                            {\n                                title: 'Block Fuel',\n                                state: 'CHECKED',\n                            },\n                        ]),\n                    },\n                    {\n                        title: 'Weights',\n                        state: 'CHECKED',\n                        subItems: createTransformedList()([\n                            {\n                                title: 'TOW (Maximum / Estimated)',\n                                state: 'CHECKED',\n                            },\n                            {\n                                title: 'LAW (Maximum)',\n                                state: 'CHECKED',\n                            },\n                            {\n                                title: 'ZFW',\n                                state: 'CHECKED',\n                            },\n                        ]),\n                    },\n                    {\n                        title: 'Alternate',\n                        state: 'CHECKED',\n                        subItems: createTransformedList()([\n                            {\n                                title: 'Route',\n                                state: 'CHECKED',\n                            },\n                            {\n                                title: 'Flight Level',\n                                state: 'CHECKED',\n                            },\n                        ]),\n                    },\n                ]),\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.NAV_TAKEOFF_DEPARTURE_BRIEFING,\n        title: 'Take-Off / Departure Briefing',\n        state: 'COMPLETE',\n        replaces: [\n            ChecklistItems.CRJ_BEFORE_START_CHECK_TAKEOFF_BRIEFING,\n        ],\n        subItems: createTransformedList()([\n            {\n                title: 'Pilot In Command (PIC)',\n                state: 'SET',\n            },\n            {\n                title: 'Take-Off Runway',\n                state: 'CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Length (Required / Available)',\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: 'Winds',\n                        state: 'CHECKED',\n                    },\n                ]),\n            },\n            {\n                title: 'Departure',\n                state: 'CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Constraints',\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: 'Obstacles',\n                        state: 'CHECKED',\n                    },\n                ]),\n            },\n            {\n                title: 'Emergency Planning',\n                state: 'CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Engine Failure on Ground',\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: 'Engine Failure during Climb',\n                        state: 'CHECKED',\n                        subItems: createTransformedList()([\n                            {\n                                title: 'Emergency Landing Airport / Runways',\n                                state: 'CHECKED',\n                            },\n                            {\n                                title: 'Maximum Landing Weight / Take-Off Weight',\n                                state: 'CHECKED',\n                            },\n                        ]),\n                    },\n                ]),\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.NAV_TAKEOFF_DEPARTURE_BRIEFING_SHORT,\n        title: 'Take-Off / Departure Briefing (Short)',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                Just review the most important parts of the take-off briefing.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.NAV_DESCENT_PLANNING,\n        title: 'Descent Planning',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                Review the expected approach and plan for Top-of-Descent (TOD).\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.NAV_APPROACH_BRIEFING,\n        title: 'Approach Briefing',\n        state: 'COMPLETE',\n        replaces: [\n            ChecklistItems.CJ4_APPROACH_CREW_BRIEFING,\n            ChecklistItems.CRJ_DESCENT_CHECK_APPROACH_BRIEFING,\n        ],\n        subItems: createTransformedList()([\n            {\n                title: 'Pilot In Command (PIC)',\n                state: 'SET',\n            },\n            {\n                title: 'Approach',\n                state: 'CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Landing Runway',\n                        state: 'CHECKED',\n                        subItems: createTransformedList()([\n                            {\n                                title: 'Runway Length',\n                                state: 'CHECKED',\n                            },\n                            {\n                                title: 'Runway Exits',\n                                state: 'CHECKED',\n                            },\n                        ]),\n                    },\n                    {\n                        title: 'Obstacles',\n                        state: 'CHECKED',\n                    },\n                ]),\n            },\n            {\n                title: 'Missed Approach',\n                state: 'CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Constraints',\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: 'Hold',\n                        state: 'CHECKED',\n                    },\n                ]),\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.NAV_POST_FLIGHT_NOTES,\n        title: 'Flight Debrief Notes',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                In your chosen logbook, write down notes for the things that went well but more importantly the things\n                that did not go well and need to be reviewed. Improve every day!\n            </>\n        ),\n    },\n]);\n","import React from 'react';\n\nimport { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistTags } from 'lib/checklist/data/tags';\nimport { createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst addSimSetupTags = (value) => ({\n    ...value,\n    tags: [...value.tags, ChecklistTags.SIMSETUP],\n});\n\nexport const SimulatorSetupChecklistItemsData = createTransformedMapping(addSimSetupTags)([\n    {\n        uid: ChecklistItems.SIMSETUP_FLIGHT_TRACKING_START,\n        title: 'Flight Logbook Tracking',\n        state: 'AS DESIRED',\n        moreInfoShort: (\n            <>\n                If you use a third party logbook program such as Volanta or SimToolkit Pro, start it up, add the route\n                to it and connect it to your simulator.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.SIMSETUP_FLIGHT_TRACKING_END,\n        title: 'Flight Tracking',\n        state: 'ENDED',\n        moreInfoShort: (\n            <>\n                If not done automatically, stop flight tracking in preferred program and review log entry.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.SIMSETUP_FLIGHT_RECORDING_START,\n        title: 'Flight Video Recording',\n        state: 'AS DESIRED',\n        moreInfoShort: (\n            <>\n                Optional. Start software in order to screen record flight and sound. This is very useful in order\n                to review flight for mistakes or potentially report issues with aircrafts/simulator.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.SIMSETUP_FLIGHT_RECORDING_END,\n        title: 'Flight Video Recording',\n        state: 'ENDED',\n        moreInfoShort: (\n            <>\n                If flight recording was started on video, stop recording.\n            </>\n        ),\n    },\n]);\n","import { styled } from 'styletron-react';\n\nexport const List = styled('ul', {\n    listStyleType: 'circle',\n});\n\nexport const ListItem = styled('li', {\n    marginLeft: '40px',\n    marginBottom: '4px',\n});\n","import React from 'react';\n\nimport { ExternalLink } from 'components/lib/ExternalLink';\nimport { List, ListItem } from 'components/lib/List';\nimport { Monospaced } from 'components/lib/Monospaced';\nimport { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistTags } from 'lib/checklist/data/tags';\nimport { createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst addVATSIMTags = (value) => ({\n    ...value,\n    tags: [...value.tags, ChecklistTags.VATSIM],\n});\n\nexport const VATSIMChecklistItemsData = createTransformedMapping(addVATSIMTags)([\n    {\n        uid: ChecklistItems.VATSIM_FILE_FLIGHT_PLAN,\n        title: 'Connect / File Flight Plan',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                Using your VATSIM client, publish your flight plan on the network to help controllers and other pilots\n                navigate with you in the airspace. This is mandatory even if you are flying uncontrolled.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.VATSIM_REQUEST_INITIAL_CLEARANCE,\n        title: 'Initial Clearance',\n        state: 'COMPLETE',\n        moreInfoLong: (\n            <>\n                <p>\n                    Initial clearance should be requested from relevant controller. The\n                    {' '}\n                    <ExternalLink href=\"https://en.wikipedia.org/wiki/CRAFT_(aviation)\">C.R.A.F.T.</ExternalLink>\n                    {' '}\n                    mnemonic can be used to remember the relevant parts of the clearance.\n                </p>\n                <List>\n                    <ListItem>\n                        <strong>C</strong>\n                        learance: usually the destination, but may be a different waypoint if clearance is partial.\n                    </ListItem>\n                    <ListItem>\n                        <strong>R</strong>\n                        oute: this is generally only the specific departure to fly, since route should be pre-planned\n                        and filled.\n                    </ListItem>\n                    <ListItem>\n                        <strong>A</strong>\n                        ltitude: initial altitude and sometimes altitude 5/10 minutes after departure.\n                    </ListItem>\n                    <ListItem>\n                        <strong>F</strong>\n                        requency: expected departure frequency. May be omitted.\n                    </ListItem>\n                    <ListItem>\n                        <strong>T</strong>\n                        ransponder: transponder code (aka. squawk code) to be used.\n                    </ListItem>\n                </List>\n                <p>\n                    The clearance may also contain additional information such as a voidance time, at which point the\n                    clearance is not valid anymore if the aircraft is not airborn.\n                </p>\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.VATSIM_PUSHBACK_AND_START_CLEARANCE,\n        title: 'Pushback / Engine Start Clearance',\n        state: 'COMPLETE',\n    },\n    {\n        uid: ChecklistItems.VATSIM_DEPARTURE_SETTINGS,\n        title: 'Departure Settings',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                Program all of the necessary settings provided during initial clearance into the autopilot and avionics.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.VATSIM_TAXI_CLEARANCE,\n        title: 'Taxi Clearance',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                Request taxi clearance from controller either before or after pushback depending on airport rules. If\n                pushback request is required, it will be done first with a direction to face. Another request after\n                pushback will be necessary.\n                <br />\n                <br />\n                Taxi instruction which includes ending point of current instructions and taxiway path to take. Take\n                note of path provided on paper, readback and then confirm using charts before taxiing. Checking\n                the charts before taxi request to have a rough idea of path is great help in doing this smoothly.\n                <br />\n                <br />\n                In uncontrolled airport, simply announce your taxi intentions and path on UNICOM, 122.8.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.VATSIM_TAXI_MODE_CHARLIE,\n        title: 'TCAS / Transponder',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                Some airports require transponder to be in mode Charlie even during taxi (altitude reported). This is\n                specified in the ATIS. In this case, check that transponder is correctly set before starting your taxi.\n                <br />\n                <br />\n                CJ4: On FMS, check\n                {' '}\n                <Monospaced>TUN &gt; RSK 5 (TCAS MODE)</Monospaced>\n                {' '}\n                is set to\n                {' '}\n                <Monospaced>TA/RA</Monospaced>\n                {' '}\n                mode.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.VATSIM_TAKEOFF_CLEARANCE,\n        title: 'Takeoff Clearance',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                Controllers will generally give you clearance on their own to line up on runway and then takeoff. Make\n                sure to wait for such clearance. If frequency is quiet, you can also announce holding short of runway\n                once before takeoff runway checklist is finished and you are ready.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.VATSIM_DESCENT_CLEARANCE,\n        title: 'Descent Clearance',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                In controlled airspace you are likely to be given descent clearance without requesting it, but if you\n                are approaching your Top-Of-Descent (TOD), you may ask for level change.\n                <br />\n                <br />\n                In uncontrolled airspace, simply make sure there is no other aircraft around and below you before\n                starting your descent and monitor the situation using VATSpy or similar.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.VATSIM_APPROACH_CLEARANCE,\n        title: 'Approach Clearance',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                In controlled airspace, make sure to be cleared for an approach before starting it. You may request\n                approach clearance or failing that hold before starting approach.\n                <br />\n                <br />\n                For uncontrolled airspace, you should announce your approach on UNICOM (122.8) especially if other\n                pilots are at the same airport.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.VATSIM_LANDING_CLEARANCE,\n        title: 'Landing Clearance',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                In controlled airspace, make sure to be cleared for landing and are on the correct runway. This is\n                likely to happen without request, but you may confirm if it isn&apos;t. Go around might be necessary if\n                clearance is not provided.\n                <br />\n                <br />\n                For uncontrolled airspace, simply announce your landing intentions on UNICOM (122.8).\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.VATSIM_GOAROUND_ANNOUNCE,\n        title: 'Go-Around Announcement',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                Once the aircraft is climbing and stable, anounce to your controller that you are going around and\n                expect new instructions.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.VATSIM_LANDING_CLEAR_OF_RUNWAY,\n        title: 'Clear-Of-Runway Announcement',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                If you leave a runway after takeoff and controller does not immedately address you, you may anounce\n                clear of runway and specify taxiway. This is especially useful to higher level controllers like\n                approach as they may not be watching you land but might have someone queued behind you to land, who\n                might be waiting on clearance.\n                <br />\n                <br />\n                Expect: TAXI instructions to gate.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.VATSIM_DISCONNECT_GOODBYE,\n        title: 'Goodbye / Disconnect',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                If frequency is quiet, announce you are disconnecting and thank your controller!\n            </>\n        ),\n    },\n]);\n","import { A32NXChecklistItemsData } from 'lib/checklist/data/listItemsData/a32nx';\nimport { C172ChecklistItemsData } from 'lib/checklist/data/listItemsData/c172';\nimport { C172G1000ChecklistItemsData } from 'lib/checklist/data/listItemsData/c172g1000';\nimport { C172SteamChecklistItemsData } from 'lib/checklist/data/listItemsData/c172steam';\nimport { CJ4ChecklistItemsData } from 'lib/checklist/data/listItemsData/cj4';\nimport { CJ4ExtChecklistItemsData } from 'lib/checklist/data/listItemsData/cj4ext';\nimport { ACRJChecklistItemsData } from 'lib/checklist/data/listItemsData/crj';\nimport { ACRJExtChecklistItemsData } from 'lib/checklist/data/listItemsData/crjext';\nimport { NavChecklistItemsData } from 'lib/checklist/data/listItemsData/nav';\nimport { SimulatorSetupChecklistItemsData } from 'lib/checklist/data/listItemsData/simulatorSetup';\nimport { VATSIMChecklistItemsData } from 'lib/checklist/data/listItemsData/vatsim';\nimport { ChecklistTags } from 'lib/checklist/data/tags';\nimport { objectMap } from 'lib/objects';\nimport { pick } from 'lib/pick';\n\nexport const ChecklistItemsData = Object.freeze({\n    ...CJ4ChecklistItemsData,\n    ...CJ4ExtChecklistItemsData,\n    ...C172ChecklistItemsData,\n    ...C172SteamChecklistItemsData,\n    ...C172G1000ChecklistItemsData,\n    ...ACRJChecklistItemsData,\n    ...ACRJExtChecklistItemsData,\n    ...A32NXChecklistItemsData,\n    ...VATSIMChecklistItemsData,\n    ...NavChecklistItemsData,\n    ...SimulatorSetupChecklistItemsData,\n});\n\nexport const ChecklistItemsNotImplemented = new Set(\n    Object\n        .entries(objectMap(ChecklistItemsData, (item) => item.tagsSet.has(ChecklistTags.NOT_IMPLEMENTED)))\n        .filter((keyValue) => keyValue[1])\n        .map((keyValue) => keyValue[0]),\n);\n\nexport const ChecklistItemsReplacements = objectMap(\n    ChecklistItemsData,\n    (item) => pick(item.replaces, []),\n);\n","import { ChecklistLists } from 'lib/checklist/data/lists';\nimport { createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst commonListsData = createTransformedMapping()([\n    {\n        uid: ChecklistLists.PRE_FLIGHT,\n        title: 'Pre-Flight',\n    },\n    {\n        uid: ChecklistLists.CABIN_INSPECTION,\n        title: 'Cabin Inspection',\n    },\n    {\n        uid: ChecklistLists.SAFETY,\n        title: 'Safety',\n    },\n    {\n        uid: ChecklistLists.ORIGINATING,\n        title: 'Originating',\n    },\n    {\n        uid: ChecklistLists.BEFORE_ENGINE_START,\n        title: 'Before Engine Start',\n    },\n    {\n        uid: ChecklistLists.ENGINE_START,\n        title: 'Engine Start',\n    },\n    {\n        uid: ChecklistLists.AFTER_ENGINE_START,\n        title: 'After Engine Start',\n    },\n    {\n        uid: ChecklistLists.BEFORE_TAXI,\n        title: 'Before Taxi',\n    },\n    {\n        uid: ChecklistLists.TAXI,\n        title: 'Taxi',\n    },\n    {\n        uid: ChecklistLists.RUN_UP,\n        title: 'Run-Up',\n    },\n    {\n        uid: ChecklistLists.BEFORE_TAKEOFF,\n        title: 'Before Takeoff',\n    },\n    {\n        uid: ChecklistLists.TAKEOFF,\n        title: 'Takeoff',\n    },\n    {\n        uid: ChecklistLists.AFTER_TAKEOFF_CLIMB,\n        title: 'After Takeoff / Climb',\n    },\n    {\n        uid: ChecklistLists.CLIMB,\n        title: 'Climb',\n    },\n    {\n        uid: ChecklistLists.CRUISE,\n        title: 'Cruise',\n    },\n    {\n        uid: ChecklistLists.BEFORE_DESCENT,\n        title: 'Before Descent',\n    },\n    {\n        uid: ChecklistLists.DESCENT,\n        title: 'Descent',\n    },\n    {\n        uid: ChecklistLists.APPROACH,\n        title: 'Approach',\n    },\n    {\n        uid: ChecklistLists.BEFORE_LANDING,\n        title: 'Before Landing',\n    },\n    {\n        uid: ChecklistLists.LANDING,\n        title: 'Landing',\n    },\n    {\n        uid: ChecklistLists.ALL_ENGINES_GO_AROUND,\n        title: 'All Engines Go Around',\n        isEmergency: true,\n    },\n    {\n        uid: ChecklistLists.AFTER_LANDING,\n        title: 'After Landing',\n    },\n    {\n        uid: ChecklistLists.PARKING,\n        title: 'Parking',\n    },\n    {\n        uid: ChecklistLists.SECURING,\n        title: 'Securing',\n    },\n    {\n        uid: ChecklistLists.SHUTDOWN,\n        title: 'Shutdown',\n    },\n    {\n        uid: ChecklistLists.POST_FLIGHT,\n        title: 'Post-Flight',\n    },\n    {\n        uid: ChecklistLists.TERMINATING,\n        title: 'Terminating',\n    },\n]);\n\nexport const ChecklistListsData = Object.freeze({\n    ...commonListsData,\n});\n","import { ChecklistTags } from 'lib/checklist/data/tags';\nimport { createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst commonTagsData = createTransformedMapping()([\n    {\n        uid: ChecklistTags.OFFICIAL,\n        hidden: true,\n    },\n    {\n        uid: ChecklistTags.NOT_IMPLEMENTED,\n        hidden: true,\n    },\n    {\n        uid: ChecklistTags.FFOTD,\n        hidden: true,\n    },\n    {\n        uid: ChecklistTags.IN_MEMORY_ITEM,\n        title: 'MEM',\n        color: '#d36a15',\n    },\n    {\n        uid: ChecklistTags.EXTENSION,\n        title: 'EXT',\n        color: '#080f8d',\n    },\n    {\n        uid: ChecklistTags.CJ4,\n        color: '#9d0606',\n    },\n    {\n        uid: ChecklistTags.C172,\n        color: '#20603c',\n    },\n    {\n        uid: ChecklistTags.C172_STEAM,\n        title: 'Steam',\n        color: '#43a0da',\n    },\n    {\n        uid: ChecklistTags.C172_G1000,\n        title: 'G1000',\n        color: '#306a8d',\n    },\n    {\n        uid: ChecklistTags.VATSIM,\n        color: '#cbab00',\n    },\n    {\n        uid: ChecklistTags.SIMSETUP,\n        color: '#7e2fd3',\n    },\n    {\n        uid: ChecklistTags.CRJ,\n        color: '#000',\n    },\n    {\n        uid: ChecklistTags.NAV,\n        color: '#fa1d93',\n    },\n    {\n        uid: ChecklistTags.A32NX,\n        color: '#00C2CB',\n    },\n]);\n\nexport const ChecklistTagsData = Object.freeze({\n    ...commonTagsData,\n});\n","import { ChecklistFiltersResults } from 'lib/checklist/data/filtersResults';\nimport { ChecklistItemsReplacements } from 'lib/checklist/data/listItemsData';\nimport { useDeepMemo } from 'lib/hooks/deep';\nimport { pick } from 'lib/pick';\n\nconst useChecklistFilterFunction = ({ checklistData, selectedFilters }) => useDeepMemo(() => {\n    const selectedFiltersSet = new Set(pick(selectedFilters, []));\n\n    const {\n        selectableFilters,\n        selectableFiltersData,\n\n        defaultFilters,\n        defaultFiltersData,\n    } = checklistData;\n\n    const filterFNs = [];\n\n    // We add all selectable filters that are selected currently.\n    selectableFilters.forEach((filterName) => {\n        if (selectedFiltersSet.has(filterName)) {\n            filterFNs.push(selectableFiltersData[filterName].fn);\n        }\n    });\n\n    // We then add all default selected filters.\n    defaultFilters.forEach((filterName) => {\n        filterFNs.push(defaultFiltersData[filterName].fn);\n    });\n\n    const finalFilterResults = new Set([\n        ChecklistFiltersResults.INCLUDE,\n        ChecklistFiltersResults.EXCLUDE,\n    ]);\n\n    return (item) => {\n        let idx = 0;\n\n        for (; idx < filterFNs.length; idx += 1) {\n            const filteringResult = filterFNs[idx](item);\n\n            if (finalFilterResults.has(filteringResult)) {\n                return filteringResult;\n            }\n        }\n\n        // Most likely with have a terminal filter in the defaults, but if not\n        // what remains gets included.\n        return ChecklistFiltersResults.INCLUDE;\n    };\n}, [checklistData, selectedFilters]);\n\nexport const useChecklistFilteredLists = ({ checklistData, selectedFilters }) => {\n    const filterFN = useChecklistFilterFunction({ checklistData, selectedFilters });\n\n    return useDeepMemo(\n        () => {\n            const { listNames, listsData, listItemsData } = checklistData;\n\n            const replacedItems = new Set();\n\n            const itemIncluded = (itemName) => filterFN(listItemsData[itemName]) === ChecklistFiltersResults.INCLUDE;\n\n            return listNames\n                .map((listName) => {\n                    const filteredItems = listsData[listName].items.filter(itemIncluded);\n\n                    filteredItems\n                        .reduce((agg, itemName) => [...agg, ...ChecklistItemsReplacements[itemName]], [])\n                        .forEach((itemName) => { replacedItems.add(itemName); });\n\n                    return {\n                        listName,\n                        items: filteredItems,\n                    };\n                })\n                .map((value) => ({\n                    ...value,\n                    items: value.items.filter((itemName) => !replacedItems.has(itemName)),\n                }))\n                .filter((value) => value.items.length > 0);\n        },\n        [checklistData, filterFN],\n    );\n};\n","import { useMemo } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { useChecklistCountersInit } from 'lib/checklist/hooks/useChecklistCountersInit';\nimport { useChecklistData } from 'lib/checklist/hooks/useChecklistData';\nimport { useChecklistFilteredLists } from 'lib/checklist/hooks/useChecklistFilteredLists';\nimport { resetChecklistCheckedItems } from 'state/actions/checklist';\n\nexport const useChecklist = ({\n    checklistName,\n    selectedFilters,\n}) => {\n    const dispatch = useDispatch();\n\n    const checklistData = useChecklistData({ checklistName });\n\n    const filteredChecklistLists = useChecklistFilteredLists({\n        checklistData,\n        selectedFilters,\n    });\n\n    useChecklistCountersInit({\n        checklistName,\n        filteredChecklistLists,\n        checklistData,\n    });\n\n    const [resetFullCallback] = useMemo(() => [\n        () => dispatch(resetChecklistCheckedItems(checklistName)),\n    ], [checklistName]);\n\n    return {\n        checklistData,\n        checklistListsData: filteredChecklistLists,\n        resetFullCallback,\n    };\n};\n","import { useMemo } from 'react';\n\nimport { ChecklistsData } from 'lib/checklist/data/checklistsData';\nimport { ChecklistFiltersData } from 'lib/checklist/data/filtersData';\nimport { ChecklistItemsData, ChecklistItemsNotImplemented } from 'lib/checklist/data/listItemsData';\nimport { ChecklistListsData } from 'lib/checklist/data/listsData';\nimport { ChecklistTagsData } from 'lib/checklist/data/tagsData';\nimport { objectFromList } from 'lib/objects';\nimport { pick } from 'lib/pick';\n\nexport const useChecklistData = ({ checklistName }) => useMemo(() => {\n    const baseData = ChecklistsData[checklistName];\n\n    const filtersDataFN = (filterName) => ({ key: filterName, value: ChecklistFiltersData[filterName] });\n\n    const selectableFiltersData = objectFromList(baseData.selectableFilters, filtersDataFN);\n    const defaultFiltersData = objectFromList(baseData.defaultFilters, filtersDataFN);\n\n    const listNames = [];\n    const listItems = [];\n\n    const listsData = objectFromList(baseData.lists, (checklistList) => {\n        const {\n            listName, description, items, nextListNames,\n        } = checklistList;\n\n        listNames.push(listName);\n        listItems.push(...items);\n\n        return {\n            key: listName,\n            value: {\n                ...ChecklistListsData[listName],\n\n                description: pick(description),\n                items: pick(items, []),\n                nextListNames: pick(nextListNames, []),\n            },\n        };\n    });\n\n    // Remove duplicates.\n    const listItemsU = Array.from(new Set(listItems));\n\n    const listItemsData = objectFromList(listItemsU, (itemName) => {\n        const item = ChecklistItemsData[itemName];\n        const isNotImplemented = ChecklistItemsNotImplemented.has(itemName);\n        const tagsData = Array.from(item.tags).map((tag) => ChecklistTagsData[tag]);\n\n        return {\n            key: itemName,\n            value: {\n                ...item,\n\n                tagsData,\n                isNotImplemented,\n            },\n        };\n    });\n\n    return {\n        title: baseData.title,\n        description: baseData.description,\n\n        selectableFilters: pick(baseData.selectableFilters, []),\n        defaultFilters: pick(baseData.defaultFilters, []),\n\n        selectableFiltersData,\n        defaultFiltersData,\n\n        listNames,\n        listsData,\n        listItemsData,\n    };\n}, [checklistName]);\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { ChecklistInfo } from 'components/checklists/ChecklistInfo';\nimport { ChecklistListDisplay } from 'components/checklists/ChecklistListDisplay';\nimport { CenteredContentContainer } from 'components/lib/CenteredContentContainer';\nimport { useChecklist } from 'lib/checklist/hooks/useChecklist';\nimport { useChecklistSelectedListScroll } from 'lib/checklist/hooks/useChecklistSelectedListScroll';\n\nexport const ChecklistDisplay = ({\n    checklistName,\n    checklistListName,\n    selectedFilters,\n    checklistURLManager,\n}) => {\n    const {\n        checklistData,\n        checklistListsData,\n        resetFullCallback,\n    } = useChecklist({\n        checklistName,\n        selectedFilters,\n    });\n\n    useChecklistSelectedListScroll({ checklistListName });\n\n    return (\n        <CenteredContentContainer>\n            {/* FIXME: Removing this for now, should only make it work on mobile? */}\n            {/* <BlockLockscreen /> */}\n\n            <ChecklistInfo\n                checklistData={checklistData}\n                checklistURLManager={checklistURLManager}\n                selectedFilters={selectedFilters}\n                resetFullCallback={resetFullCallback}\n            />\n\n            {checklistListsData.map(({ listName, items }) => (\n                <ChecklistListDisplay\n                    key={`${checklistName}:${listName}`}\n                    checklistListName={listName}\n                    checklistName={checklistName}\n                    checklistURLManager={checklistURLManager}\n                    checklistData={checklistData}\n                    items={items}\n                />\n            ))}\n        </CenteredContentContainer>\n    );\n};\n\nChecklistDisplay.propTypes = {\n    checklistName: PropTypes.string.isRequired,\n    checklistListName: PropTypes.string,\n    selectedFilters: PropTypes.arrayOf(PropTypes.string).isRequired,\n    // eslint-disable-next-line react/forbid-prop-types\n    checklistURLManager: PropTypes.object.isRequired,\n};\n\nChecklistDisplay.defaultProps = {\n    checklistListName: null,\n};\n","import { useEffect } from 'react';\n\nimport Scroll from 'react-scroll';\n\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\n\nexport const useChecklistSelectedListScroll = ({ checklistListName }) => useEffect(() => {\n    if (isNullOrUndefined(checklistListName)) {\n        return () => null;\n    }\n\n    const timeoutID = setTimeout(() => {\n        Scroll.scroller.scrollTo(checklistListName, {\n            duration: 400,\n            smooth: true,\n            offset: -100,\n        }, 75);\n    });\n\n    return () => clearTimeout(timeoutID);\n}, [checklistListName]);\n","import React from 'react';\n\nimport { Empty } from 'antd';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport const ChecklistNotFound = ({ checklistName }) => {\n    const description = (\n        <>\n            Unknown checklist\n            {' '}\n            <em>{checklistName}</em>\n            .\n            {' '}\n            <Link to=\"/\">Go Back</Link>\n            .\n        </>\n    );\n\n    return (\n        <>\n            <Empty description={description} />\n        </>\n    );\n};\n\nChecklistNotFound.propTypes = {\n    checklistName: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport { ChecklistDisplay } from 'components/checklists/ChecklistDisplay';\nimport { ChecklistNotFound } from 'components/checklists/ChecklistNotFound';\nimport { useChecklistCheck } from 'lib/checklist/hooks/useChecklistCheck';\nimport { useChecklistURLConfig } from 'lib/checklist/hooks/useChecklistURLConfig';\n\nexport const Checklist = () => {\n    const {\n        checklistName,\n        checklistListName,\n        selectedFilters,\n        checklistURLManager,\n    } = useChecklistURLConfig();\n\n    const { checklistFound } = useChecklistCheck({\n        checklistName,\n        checklistListName,\n    });\n\n    if (!checklistFound) {\n        return <ChecklistNotFound checklistName={checklistName} />;\n    }\n\n    return (\n        <ChecklistDisplay\n            checklistName={checklistName}\n            checklistListName={checklistListName}\n            selectedFilters={selectedFilters}\n            checklistURLManager={checklistURLManager}\n        />\n    );\n};\n","import { useMemo } from 'react';\n\nimport { Checklists } from 'lib/checklist/data/checklists';\nimport { ChecklistLists } from 'lib/checklist/data/lists';\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\n\nexport const useChecklistCheck = ({\n    checklistName,\n    checklistListName,\n}) => {\n    const knownLists = useMemo(() => ({\n        checklistsNames: new Set(Object.values(Checklists)),\n        checklistListNames: new Set(Object.values(ChecklistLists)),\n    }), []);\n\n    return useMemo(() => ({\n        checklistFound: knownLists.checklistsNames.has(checklistName),\n        checklistListFound: (\n            isNullOrUndefined(checklistListName)\n            || knownLists.checklistListNames.has(checklistListName)\n        ),\n    }), [checklistName, checklistListName]);\n};\n","import React from 'react';\n\nimport { GithubOutlined } from '@ant-design/icons';\nimport { Layout } from 'antd';\nimport { useStyletron } from 'styletron-react';\n\nimport { ExternalLink } from 'components/lib/ExternalLink';\nimport { useWindowDimensions } from 'lib/hooks/useWindowDimensions';\n\nconst ANTDFooter = Layout.Footer;\n\nexport const Footer = () => {\n    const [css] = useStyletron();\n\n    const { width } = useWindowDimensions();\n\n    return (\n        <ANTDFooter className={css({ textAlign: 'center' })}>\n            TOOLING AVAILABLE\n            {' '}\n            <strong>FOR FLIGHT SIMULATION ONLY</strong>\n            .\n            {width < 780 ? (<br />) : ' '}\n            DO NOT USE FOR REAL WORLD OPERATIONS.\n            {width < 970 ? (<br />) : (\n                <>\n                    {' '}\n                    &mdash;\n                    {' '}\n                </>\n            )}\n            <GithubOutlined />\n            {' '}\n            <ExternalLink href=\"https://github.com/fmichea/flightsim-tools\" noIcon>\n                Sources\n            </ExternalLink>\n            {' '}\n            or\n            {' '}\n            <ExternalLink href=\"https://github.com/fmichea/flightsim-tools/issues\" noIcon>\n                Report Issues\n            </ExternalLink>\n        </ANTDFooter>\n    );\n};\n\nFooter.propTypes = {};\n","import React, { useMemo } from 'react';\n\nimport { useHistory } from 'react-router';\nimport { styled } from 'styletron-react';\n\nconst logoSize = 48;\n\nconst LogoContainer = styled('div', {\n    float: 'left',\n    color: 'white',\n    margin: '8px 24px 8px 0',\n    height: `${logoSize}px`,\n    fontSize: '1.5em',\n    lineHeight: `${logoSize}px`,\n    fontWeight: 'bold',\n    verticalAlign: 'middle',\n    display: 'inline-block',\n    ':hover': {\n        color: 'rgba(255, 255, 255, .8)',\n    },\n});\n\nexport const HeaderLogo = () => {\n    const history = useHistory();\n\n    const clickHandler = useMemo(() => () => history.push('/'), [history]);\n\n    return <LogoContainer onClick={clickHandler}>FlightSim Tools</LogoContainer>;\n};\n","import React, { useMemo } from 'react';\n\nimport { Menu } from 'antd';\nimport { useHistory, useLocation } from 'react-router';\n\nimport { AntiIceAircrafts } from 'lib/anti-ice/data/aircrafts';\nimport { Checklists } from 'lib/checklist/data/checklists';\nimport { objectMap } from 'lib/objects';\nimport { MetarExplainerRoute } from 'lib/routes';\n\nconst useNavbarMenus = (mapping) => {\n    const { pathname } = useLocation();\n    const history = useHistory();\n\n    const menuItems = useMemo(() => objectMap(mapping, (url) => ({\n        isSelected: pathname.startsWith(url),\n        props: {\n            key: url,\n            onClick: () => history.push(url),\n        },\n    })), [mapping, pathname]);\n\n    const selectedKeys = useMemo(\n        () => Object.values(menuItems)\n            .filter((value) => value.isSelected)\n            .map((value) => value.props.key),\n        [menuItems],\n    );\n\n    return { menuItems, selectedKeys };\n};\n\nexport const Navbar = () => {\n    const {\n        menuItems: {\n            wtCJ4MenuItem,\n            wtCJ4AntiIceItem,\n            c172ChecklistMenuItem,\n            c172G1000ChecklistMenuItem,\n            crjChecklistMenuItem,\n            a32nxChecklistMenuItem,\n            otherMetarExplainerMenuItem,\n        },\n        selectedKeys,\n    } = useNavbarMenus({\n        wtCJ4MenuItem: `/checklists/${Checklists.WORKINGTITLE_CJ4}`,\n        wtCJ4AntiIceItem: `/anti-ice/${AntiIceAircrafts.WORKINGTITLE_CJ4}`,\n        c172ChecklistMenuItem: `/checklists/${Checklists.C172_STEAM}`,\n        c172G1000ChecklistMenuItem: `/checklists/${Checklists.C172_G1000}`,\n        crjChecklistMenuItem: `/checklists/${Checklists.AEROSOFT_CRJ}`,\n        a32nxChecklistMenuItem: `/checklists/${Checklists.FLYBYWIRE_A32NX}`,\n        otherMetarExplainerMenuItem: MetarExplainerRoute,\n    });\n\n    return (\n        <Menu theme=\"dark\" mode=\"horizontal\" selectedKeys={selectedKeys}>\n            <Menu.SubMenu key=\"wt-cj4-menu\" title=\"WorkingTitle CJ4\">\n                <Menu.Item {...wtCJ4MenuItem.props}>Checklist</Menu.Item>\n                <Menu.Item {...wtCJ4AntiIceItem.props}>Anti-Ice</Menu.Item>\n            </Menu.SubMenu>\n            <Menu.SubMenu key=\"c172-menu\" title=\"Cessna 172\">\n                <Menu.Item {...c172ChecklistMenuItem.props}>C172 (Steam Gauges) Checklist</Menu.Item>\n                <Menu.Item {...c172G1000ChecklistMenuItem.props}>C172 (G1000) Checklist</Menu.Item>\n            </Menu.SubMenu>\n            <Menu.SubMenu key=\"crj-menu\" title=\"Aerosoft CRJ\">\n                <Menu.Item {...crjChecklistMenuItem.props}>Checklist</Menu.Item>\n            </Menu.SubMenu>\n            <Menu.SubMenu key=\"fbw-a32nx-menu\" title=\"FlyByWire A32NX\">\n                <Menu.Item {...a32nxChecklistMenuItem.props}>Checklist</Menu.Item>\n            </Menu.SubMenu>\n            <Menu.SubMenu key=\"other\" title=\"Other\">\n                <Menu.Item {...otherMetarExplainerMenuItem.props}>METAR Explainer</Menu.Item>\n            </Menu.SubMenu>\n        </Menu>\n    );\n};\n\nNavbar.propTypes = {};\n","import React from 'react';\n\nimport { Layout as ANTDLayout } from 'antd';\nimport PropTypes from 'prop-types';\nimport { styled, useStyletron } from 'styletron-react';\n\nimport { Footer } from 'components/layout/Footer';\nimport { HeaderLogo } from 'components/layout/HeaderLogo';\nimport { Navbar } from 'components/layout/Navbar';\nimport { CenteredContentContainer } from 'components/lib/CenteredContentContainer';\nimport { useWindowDimensions } from 'lib/hooks/useWindowDimensions';\n\nconst { Header, Content } = ANTDLayout;\n\nconst LayoutBackground = styled('div', (props) => ({\n    background: 'white',\n    padding: props.$smallScreen ? '0' : '12px',\n    minHeight: '360px',\n    width: '100%',\n    maxWidth: '1200px',\n    margin: 'auto',\n}));\n\nconst contentStyle = {\n    marginBottom: '0',\n    marginTop: '0',\n    marginLeft: '16px',\n    marginRight: '16px',\n};\n\nconst contentStyleSmall = {\n    ...contentStyle,\n\n    marginLeft: '0',\n    marginRight: '0',\n};\n\nexport const Layout = ({ children }) => {\n    const [css] = useStyletron();\n\n    const { width } = useWindowDimensions();\n    const smallScreen = width < 500;\n\n    return (\n        <ANTDLayout className={css({ minHeight: '100vh' })}>\n            <Header>\n                <CenteredContentContainer>\n                    <HeaderLogo />\n                    <Navbar />\n                </CenteredContentContainer>\n            </Header>\n\n            <Content className={css(smallScreen ? contentStyleSmall : contentStyle)}>\n                <ANTDLayout>\n                    <LayoutBackground $smallScreen={smallScreen}>\n                        {children}\n                    </LayoutBackground>\n                </ANTDLayout>\n            </Content>\n\n            <Footer />\n\n        </ANTDLayout>\n    );\n};\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n","import React from 'react';\n\nimport { Col, Row, Typography } from 'antd';\n\nimport { List, ListItem } from 'components/lib/List';\n\nconst { Title } = Typography;\n\nexport const MainPage = () => (\n    <>\n        <Title>FlightSim Tools</Title>\n\n        <p>\n            This is just a set of tools that help me fly. Currently you will find checklists for aircrafts that I like,\n            and information for anti-ice for the CJ4. Here is a list of features that can be found for each.\n        </p>\n\n        <Row>\n            <Col span={12}>\n                <Title level={3}>Checklists</Title>\n\n                <List>\n                    <ListItem>\n                        <strong>Official Items:</strong>\n                        {' '}\n                        for each aircraft, by default, all the official items are included.\n                    </ListItem>\n\n                    <ListItem>\n                        <strong>Aircraft Extension Items:</strong>\n                        {' '}\n                        For some lists, extension items adding to the official checklist can be included within, using\n                        the Configure menu.\n                    </ListItem>\n\n                    <ListItem>\n                        <strong>VATSIM Items:</strong>\n                        {' '}\n                        For some lists, VATSIM items can be included within the checklists using the Configure menu.\n                    </ListItem>\n\n                    <ListItem>\n                        <strong>Easy Access to Next List:</strong>\n                        {' '}\n                        At the bottom of each list, access the next list that makes the most sense, even when two or\n                        more do.\n                    </ListItem>\n\n                    <ListItem>\n                        <strong>Small Screen Support:</strong>\n                        {' '}\n                        checklists layout changes as the screen gets smaller. Currently screens are supported down\n                        to iPad size.\n                    </ListItem>\n\n                    <ListItem>\n                        <strong>Left Handed Mode:</strong>\n                        {' '}\n                        Within configure, left handed mode can be enabled to move the switches to the left side of the\n                        screen, making it easier to manipulate item states left handed.\n                    </ListItem>\n                </List>\n            </Col>\n\n            <Col span={12}>\n                <Title level={3}>Anti-Ice</Title>\n\n                <List>\n                    <ListItem>\n                        <strong>Get Configuration:</strong>\n                        {' '}\n                        input current current moisture conditions, and temperature: get the right configuration to use\n                        and an explanation of why it may be configured as such.\n                    </ListItem>\n                </List>\n            </Col>\n        </Row>\n    </>\n);\n","import PropTypes from 'prop-types';\n\nexport const AirportIdentifierPropTypes = {\n    prettyArgs: PropTypes.shape({\n        airportCode: PropTypes.node.isRequired,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { AirportIdentifierPropTypes } from 'components/metar/renderers/airportIdentifier/propTypes';\n\nexport const AirportIdentifierValue = ({ prettyArgs: { airportCode } }) => <>{airportCode}</>;\n\nAirportIdentifierValue.propTypes = AirportIdentifierPropTypes;\n","import React from 'react';\n\nimport { AirportIdentifierPropTypes } from 'components/metar/renderers/airportIdentifier/propTypes';\n\nexport const AirportIdentifierShort = ({ prettyArgs: { airportCode } }) => (\n    <>\n        {airportCode}\n        {' '}\n        is the ICAO code of the airport for which this METAR was generated.\n    </>\n);\n\nAirportIdentifierShort.propTypes = AirportIdentifierPropTypes;\n","import React from 'react';\n\nimport { AirportIdentifierValue } from 'components/metar/renderers/airportIdentifier/AirportIdenfitierValue';\nimport { AirportIdentifierShort } from 'components/metar/renderers/airportIdentifier/AirportIdentifierShort';\n\nexport const AirportIdentifierRenderers = {\n    renderValue: AirportIdentifierValue,\n    renderTitle: () => <>Airport ICAO Code</>,\n    renderShort: AirportIdentifierShort,\n};\n","import PropTypes from 'prop-types';\n\nexport const AltimeterPropTypes = {\n    data: PropTypes.shape({\n        altimeterUnitP: PropTypes.string,\n        valueP: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    }).isRequired,\n\n    prettyArgs: PropTypes.shape({\n        altimeterUnit: PropTypes.node,\n        value: PropTypes.node,\n    }).isRequired,\n};\n","export const TokenTypes = Object.freeze({\n    NOT_RECOGNIZED: 'not-recognized',\n\n    AIRPORT_IDENTIFIER: 'airport-identifier',\n    ALTIMETER_SETTING: 'altimeter-setting',\n    CLOUD_COVERAGE: 'cloud-coverage',\n    METAR_PREFIX: 'metar-prefix',\n    METAR_PREFIX_OTHER: 'metar-prefix-other',\n    METAR_TIME: 'metar-time',\n    MISSING_DATA: 'missing-data',\n    PRESENT_WEATHER: 'present-weather',\n    PREVAILING_VISIBILITY: 'prevailing-visibility',\n    REMARKS: 'remarks',\n    RUNWAY_VISUAL_RANGE: 'runway-visual-range',\n    TEMPERATURES: 'temperatures',\n    TREND: 'trend',\n    VERTICAL_VISIBILITY: 'vertical-visibility',\n    WIND: 'wind',\n    WIND_SHEAR: 'wind-shear',\n    RECENT_WEATHER: 'recent-weather',\n    SEA_SURFACE: 'sea-surface',\n    RUNWAY_STATE: 'runway-state',\n    COLOR_SYSTEMS: 'color-systems',\n});\n\nexport const WindSpeedUnit = Object.freeze({\n    KNOTS: 'knots',\n    METERS_PER_SECOND: 'm/s',\n});\n\nexport const CloudLayerAmount = Object.freeze({\n    NSC: 'nil-significant-cloud',\n    NCD: 'no-cloud-description',\n    CLR: 'clear-12000',\n    SKC: 'sky-clear',\n\n    FEW: 'few',\n    SCT: 'scattered',\n    BKN: 'broken',\n    OVC: 'overcast',\n});\n\nexport const CloudTypes = Object.freeze({\n    CB: 'cumulonimbus',\n    TCU: 'towering-cumulonimbus',\n    NOT_DESCRIBED: 'not-described',\n});\n\nexport const CloudLayerAltitude = Object.freeze({\n    BELOW: 'below',\n});\n\nexport const AltimeterUnit = Object.freeze({\n    INHG: 'inHg',\n    HPA: 'hPA',\n});\n\nexport const AltimeterSetting = Object.freeze({\n    NOT_REPORTED: 'not-reported',\n});\n\nexport const WindDirections = Object.freeze({\n    VRB: 'variable',\n    NOT_REPORTED: 'not-reported',\n});\n\nexport const WindForce = Object.freeze({\n    NOT_REPORTED: 'not-reported',\n});\n\nexport const Directions = Object.freeze({\n    N: 'north',\n    NE: 'north-east',\n    E: 'east',\n    SE: 'south-east',\n    S: 'south',\n    SW: 'south-west',\n    W: 'west',\n    NW: 'north-west',\n\n    NDV: 'no-directional-variation',\n});\n\nexport const PrevailingVisibility = Object.freeze({\n    CAVOK: 'cavok',\n    TEN_K: '10k-or-better',\n    MISSING: 'missing',\n    LESS_THAN_QUARTER_MILE: 'less-than-quarter-mile',\n});\n\nexport const PrevailingVisibilityUnit = Object.freeze({\n    METERS: 'meters',\n    KILOMETERS: 'kilometers',\n    MILES: 'miles',\n});\n\nexport const WeatherIntensity = Object.freeze({\n    LIGHT: 'light',\n    HEAVY: 'heavy',\n});\n\nexport const WeatherProximity = Object.freeze({\n    VINCINITY: 'vincinity',\n});\n\nexport const WeatherDescriptor = Object.freeze({\n    SHALLOW: 'shallow',\n    PATCHES: 'patches',\n    PARTIAL: 'partial',\n    LOW_DRIFTING: 'low-drifting',\n    BLOWING: 'blowing',\n    SHOWER: 'shower',\n    THUNDERSTORM: 'thunderstorm',\n    FREEZING: 'freezing',\n});\n\nexport const WeatherPhenomena = Object.freeze({\n    // Precipitation\n    DRIZZLE: 'drizzle',\n    RAIN: 'rain',\n    SNOW: 'snow',\n    SNOW_GRAINS: 'snow-grains',\n    ICE_PELLETS: 'ice-pellets',\n    HAIL: 'hail',\n    SMALL_HAIL_SNOW: 'small-hail-snow',\n    UNKNOWN_PRECIPITATION: 'unknown-precipitation',\n\n    // Obscuration\n    MIST: 'mist',\n    FOG: 'fog',\n    SMOKE: 'smoke',\n    VOLCANIC_HASH: 'volcanic-hash',\n    DUST: 'widespread-dust',\n    SAND: 'sand',\n    HAZE: 'haze',\n\n    // Other\n    DUST_DEVILS: 'dust-devils',\n    SQUALLS: 'squalls',\n    FUNNEL_CLOUD: 'funnel-cloud',\n    SANDSTORM: 'sandstorm',\n    DUSTSTORM: 'duststorm',\n\n    NSW: 'no-significant-weather',\n});\n\nexport const RunwayVisualRangeQualifier = Object.freeze({\n    NONE: 'none',\n    AT_LEAST: 'at-least',\n    AT_MOST: 'at-most',\n});\n\nexport const WindShearRunway = Object.freeze({\n    ALL_RUNWAYS: 'all-runways',\n});\n\nexport const SeaSurfaceInfoType = Object.freeze({\n    SURFACE_STATE: 'surface-state',\n    WAVE_HEIGHT: 'wave-height',\n});\n\nexport const SeaSurfaceStateCode = Object.freeze({\n    CALM_GLASSY: 'calm-glassy', // 0\n    CALM_RIPPLED: 'calm-rippled', // 1\n    SMOOTH: 'smooth', // 2\n    SLIGHT: 'slight', // 3\n    MODERATE: 'moderate', // 4\n    ROUGH: 'rough', // 5\n    VERY_ROUGH: 'very-rough', // 6\n    HIGH: 'high', // 7\n    VERY_HIGH: 'very-high', // 8\n    PHENOMENAL: 'phenomenal', // 9\n});\n\nexport const RunwayDeposit = Object.freeze({\n    CLEAR_AND_DRY: 'clear-and-dry', // 0\n    DAMP: 'damp', // 1\n    WET: 'wet', // 2\n    RIME_AND_FROST: 'rime-and-frost', // 3\n    DRY_SNOW: 'dry-snow', // 4\n    WET_SNOW: 'wet-snow', // 5\n    SLUSH: 'slush', // 6\n    ICE: 'ice', // 7\n    COMPACTED_SNOW: 'compacted-snow', // 8\n    FROZEN_RUTS: 'frozen-ruts', // 9\n\n    NOT_REPORTED: 'not-reported', // /\n});\n\nexport const RunwayContaminationExtent = Object.freeze({\n    BELOW_TEN: 'below-ten', // 1\n    TEN_TO_TWENTY_FIVE: 'ten-to-twenty-five', // 2\n    TWENTY_FIVE_TO_FIFTY: 'twenty-five-to-fifty', // 5\n    ABOVE_FIFTY: 'above-fifty', // 9\n\n    NOT_REPORTED: 'not-reported', // /\n    UNKNOWN_RESERVED: 'unknown-reserved',\n});\n\nexport const RunwayContaminationDepth = Object.freeze({\n    TEN_CM: 'ten-cm', // 92\n    FIFTEEN_CM: 'fifteen-cm', // 93\n    TWENTY_CM: 'twenty-cm', // 94\n    TWENTY_FIVE_CM: 'twenty-five-cm', // 95\n    THIRTY_CM: 'thirty-cm', // 96\n    THIRTY_FIVE_CM: 'thirty-five-cm', // 97\n    FORTY_CM: 'forty-cm', // 98\n\n    NOT_OPERATIONAL: 'not-operational', // 99\n    NOT_REPORTED: 'not-reported', // //\n});\n\nexport const RunwaySurfaceFriction = Object.freeze({\n    BRAKING_ACTION_POOR: 'braking-action-poor', // 91\n    BRAKING_ACTION_MEDIUM_POOR: 'braking-action-medium-poor', // 92\n    BRAKING_ACTION_MEDIUM: 'braking-action-medium', // 93\n    BRAKING_ACTION_MEDIUM_GOOD: 'braking-action-medium-good', // 94\n    BRAKING_ACTION_GOOD: 'braking-action-good', // 95\n\n    UNRELIABLE: 'unreliable', // 99\n    UNKNOWN_RESERVED: 'unknown-reserved', // 96-98\n    NOT_REPORTED: 'not-reported', // //\n});\n\nexport const TrendType = Object.freeze({\n    NOSIG: 'no-significant-change',\n    BECOMING: 'becoming',\n    TEMPORARY: 'temporary',\n});\n\nexport const TrendTimeType = Object.freeze({\n    FROM: 'from',\n    UNTIL: 'until',\n    AT: 'at',\n});\n\nexport const Temperatures = Object.freeze({\n    NOT_REPORTED: 'not-reported',\n});\n","import React from 'react';\n\nimport { AltimeterPropTypes } from 'components/metar/renderers/altimeter/propTypes';\nimport { AltimeterSetting, AltimeterUnit } from 'lib/metar/enums';\n\nconst renderAltimeterUnit = (unit) => (unit === AltimeterUnit.HPA ? 'hectopascals' : 'inches of mercury');\n\nconst renderAltimeterValue = ({ valueP, value, altimeterUnitP }) => {\n    if (valueP === AltimeterSetting.NOT_REPORTED) {\n        return (\n            <>\n                but value could not be reported (\n                {value}\n                )\n            </>\n        );\n    }\n\n    return (\n        <>\n            and should be set to\n            {' '}\n            {valueP}\n            {' '}\n            {altimeterUnitP}\n            {' '}\n            (\n            {value}\n            )\n        </>\n    );\n};\n\nexport const AltimeterShort = ({\n    data: { altimeterUnitP, valueP },\n    prettyArgs: { altimeterUnit, value },\n}) => (\n    <>\n        Altimeter setting for airport is expressed in\n        {' '}\n        {renderAltimeterUnit(altimeterUnitP)}\n        {' '}\n        (\n        {altimeterUnit}\n        )\n        {' '}\n        {renderAltimeterValue({ valueP, value, altimeterUnitP })}\n    </>\n);\n\nAltimeterShort.propTypes = AltimeterPropTypes;\n","import React from 'react';\n\nimport { ThinSpace } from 'components/lib/spaces';\nimport { AltimeterPropTypes } from 'components/metar/renderers/altimeter/propTypes';\n\nexport const AltimeterValue = ({ prettyArgs: { altimeterUnit, value } }) => (\n    <>\n        {altimeterUnit}\n        <ThinSpace />\n        {value}\n    </>\n);\n\nAltimeterValue.propTypes = AltimeterPropTypes;\n","import React from 'react';\n\nimport { AltimeterShort } from 'components/metar/renderers/altimeter/AltimeterShort';\nimport { AltimeterValue } from 'components/metar/renderers/altimeter/AltimeterValue';\n\nexport const AltimeterRenderers = {\n    renderValue: AltimeterValue,\n    renderTitle: () => <>Altimeter Setting</>,\n    renderShort: AltimeterShort,\n};\n","import PropTypes from 'prop-types';\n\nexport const CloudCoveragePropTypes = {\n    data: PropTypes.shape({\n        altitudeP: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n        ]),\n        amountP: PropTypes.string.isRequired,\n        cloudTypeP: PropTypes.string,\n    }).isRequired,\n\n    prettyArgs: PropTypes.shape({\n        amount: PropTypes.node,\n        altitude: PropTypes.node,\n        cloudType: PropTypes.node,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { Monospaced } from 'components/lib/Monospaced';\nimport { CloudCoveragePropTypes } from 'components/metar/renderers/cloudCoverage/propTypes';\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { CloudLayerAltitude, CloudLayerAmount, CloudTypes } from 'lib/metar/enums';\n\nconst renderAmount = ({ amountP, amount }) => {\n    if (amountP === CloudLayerAmount.NSC) {\n        return (\n            <>\n                No significant cloud coverage was reported (\n                {amount}\n                {' '}\n                =\n                {' '}\n                <Monospaced>\n                    <strong>N</strong>\n                    il\n                    {' '}\n                    <strong>S</strong>\n                    ignificant\n                    {' '}\n                    <strong>C</strong>\n                    loud\n                </Monospaced>\n                )\n            </>\n        );\n    }\n\n    if (amountP === CloudLayerAmount.NCD) {\n        return (\n            <>\n                Automatic observing station was unable to report cloud coverage\n                {' '}\n                (\n                {amount}\n                )\n            </>\n        );\n    }\n\n    if (amountP === CloudLayerAmount.CLR) {\n        return (\n            <>\n                There are no visible clouds below 12000 ft (\n                {amount}\n                )\n            </>\n        );\n    }\n\n    if (amountP === CloudLayerAmount.SKC) {\n        return (\n            <>\n                Skies are clear (\n                {amount}\n                )\n            </>\n        );\n    }\n\n    switch (amountP) {\n    case CloudLayerAmount.FEW:\n        return (\n            <>\n                A few clouds covering up to 25% of the sky (\n                {amount}\n                ) was reported\n            </>\n        );\n\n    case CloudLayerAmount.SCT:\n        return (\n            <>\n                Scattered clouds covering 25 to 50% of the sky (\n                {amount}\n                ) was reported\n            </>\n        );\n\n    case CloudLayerAmount.BKN:\n        return (\n            <>\n                Broken clouds covering more than 50% of the sky (\n                {amount}\n                ) was reported\n            </>\n        );\n\n    case CloudLayerAmount.OVC:\n        return (\n            <>\n                Complete coverage of the sky by clouds (\n                {amount}\n                ) was reported\n            </>\n        );\n\n    default:\n        return <>FIXME</>;\n    }\n};\n\nconst renderAltitude = ({ altitudeP, altitude }) => {\n    if (isNullOrUndefined(altitudeP)) {\n        return null;\n    }\n\n    if (altitudeP === CloudLayerAltitude.BELOW) {\n        return (\n            <>\n                {' '}\n                below the reporting station (\n                {altitude}\n                )\n            </>\n        );\n    }\n\n    return (\n        <>\n            {' '}\n            at altitude of\n            {' '}\n            {altitudeP}\n            {' '}\n            ft (\n            {altitude}\n            )\n        </>\n    );\n};\nconst renderCloudType = ({ cloudTypeP, cloudType }) => {\n    if (isNullOrUndefined(cloudTypeP)) {\n        return null;\n    }\n\n    switch (cloudTypeP) {\n    case CloudTypes.CB:\n        return (\n            <>\n                Cumulonimbuses are reported (\n                {cloudType}\n                ).\n            </>\n        );\n\n    case CloudTypes.TCU:\n        return (\n            <>\n                Towering Cumulonimbuses are reported (\n                {cloudType}\n                ).\n            </>\n        );\n\n    case CloudTypes.NOT_DESCRIBED:\n        return (\n            <>\n                Cloud type could not be described by automated system (\n                {cloudType}\n                ).\n            </>\n        );\n\n    default:\n        return null;\n    }\n};\n\nexport const CloudCoverageShort = ({\n    data: { altitudeP, amountP, cloudTypeP },\n    prettyArgs: { amount, altitude, cloudType },\n}) => (\n    <>\n        {isNullOrUndefined(amountP) && isNullOrUndefined(altitudeP) ? null : (\n            <>\n                {renderAmount({ amountP, amount })}\n                {renderAltitude({ altitudeP, altitude })}\n                .\n                {isNullOrUndefined(cloudTypeP) ? null : ' '}\n            </>\n        )}\n        {renderCloudType({ cloudTypeP, cloudType })}\n    </>\n);\n\nCloudCoverageShort.propTypes = CloudCoveragePropTypes;\n","import React from 'react';\n\nimport { ThinSpace } from 'components/lib/spaces';\nimport { CloudCoveragePropTypes } from 'components/metar/renderers/cloudCoverage/propTypes';\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\n\nconst renderAmountAltitude = ({ amount, altitude }) => {\n    if (isNullOrUndefined(amount) && isNullOrUndefined(altitude)) {\n        return (\n            <>\n                &#47;&#47;&#47;\n                <ThinSpace />\n            </>\n        );\n    }\n    return (\n        <>\n            {amount}\n            {isNullOrUndefined(altitude) ? null : (\n                <>\n                    <ThinSpace />\n                    {altitude}\n                </>\n            )}\n        </>\n    );\n};\n\nexport const CloudCoverageValue = ({\n    prettyArgs: { amount, altitude, cloudType },\n}) => (\n    <>\n        {renderAmountAltitude({ amount, altitude })}\n        {isNullOrUndefined(cloudType) ? null : (\n            <>\n                <ThinSpace />\n                {cloudType}\n            </>\n        )}\n    </>\n);\n\nCloudCoverageValue.propTypes = CloudCoveragePropTypes;\n","import React from 'react';\n\nimport { CloudCoverageShort } from 'components/metar/renderers/cloudCoverage/CloudCoverageShort';\nimport { CloudCoverageValue } from 'components/metar/renderers/cloudCoverage/CloudCoverageValue';\n\nexport const CloudCoverageRenderers = {\n    renderValue: CloudCoverageValue,\n    renderTitle: () => <>Cloud Coverage</>,\n    renderShort: CloudCoverageShort,\n};\n","import React from 'react';\n\nimport { ColorSystemsShort } from 'components/metar/renderers/colorSystems/ColorSystemsShort';\nimport { ColorSystemsValue } from 'components/metar/renderers/colorSystems/ColorSystemsValue';\n\nexport const ColorSystemsRenderers = {\n    renderValue: ColorSystemsValue,\n    renderTitle: () => <>Color Systems</>,\n    renderShort: ColorSystemsShort,\n};\n","/* eslint-disable react/forbid-prop-types */\nimport PropTypes from 'prop-types';\n\nexport const ColorSystemsPropTypes = {\n    data: PropTypes.shape({\n        args: PropTypes.array.isRequired,\n    }).isRequired,\n\n    prettyArgs: PropTypes.any.isRequired,\n};\n","import React from 'react';\n\nimport { ThickSpace } from 'components/lib/spaces';\nimport { ColorSystemsPropTypes } from 'components/metar/renderers/colorSystems/propTypes';\n\nexport const ColorSystemsValue = ({ data: { args }, prettyArgs }) => {\n    const prettyArgsOrdered = args.map((value, idx) => (\n        <React.Fragment key={value}>\n            {idx === 0 ? null : <ThickSpace />}\n            {prettyArgs[value]}\n        </React.Fragment>\n    ));\n\n    return <>{prettyArgsOrdered}</>;\n};\n\nColorSystemsValue.propTypes = ColorSystemsPropTypes;\n","import React from 'react';\n\nexport const ColorSystemsShort = () => (\n    <>\n        Color codes defined at a local level. Refer to local METAR reference for explanation on the code&apos;s\n        meaning.\n    </>\n);\n","import PropTypes from 'prop-types';\n\nexport const METARTimePropTypes = {\n    data: PropTypes.shape({\n        dayOfMonthP: PropTypes.number.isRequired,\n        hour: PropTypes.string.isRequired,\n        minutes: PropTypes.string.isRequired,\n    }).isRequired,\n\n    prettyArgs: PropTypes.shape({\n        dayOfMonth: PropTypes.node.isRequired,\n        hour: PropTypes.node.isRequired,\n        minutes: PropTypes.node.isRequired,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { METARTimePropTypes } from 'components/metar/renderers/metarTime/propTypes';\nimport { getOrdinalNumber } from 'lib/numbers';\n\nexport const METARTimeShort = ({\n    data: { dayOfMonthP, hour: hourP, minutes: minutesP },\n    prettyArgs: { dayOfMonth, hour, minutes },\n}) => (\n    <>\n        METAR was generated on the\n        {' '}\n        {getOrdinalNumber(dayOfMonthP)}\n        {' '}\n        day of the month\n        (\n        {dayOfMonth}\n        ) at\n        {' '}\n        {hourP}\n        :\n        {minutesP}\n        {' '}\n        UTC time\n        (\n        {hour}\n        {' '}\n        {minutes}\n        ).\n    </>\n);\n\nMETARTimeShort.propTypes = METARTimePropTypes;\n","import React from 'react';\n\nimport { ThinSpace } from 'components/lib/spaces';\nimport { METARTimePropTypes } from 'components/metar/renderers/metarTime/propTypes';\n\nexport const METARTimeValue = ({ prettyArgs: { dayOfMonth, hour, minutes } }) => (\n    <>\n        {dayOfMonth}\n        <ThinSpace />\n        {hour}\n        <ThinSpace />\n        {minutes}\n        <ThinSpace />\n        Z\n    </>\n);\n\nMETARTimeValue.propTypes = METARTimePropTypes;\n","import React from 'react';\n\nimport { METARTimeShort } from 'components/metar/renderers/metarTime/METARTimeShort';\nimport { METARTimeValue } from 'components/metar/renderers/metarTime/METARTimeValue';\n\nexport const METARTimeRenderers = {\n    renderValue: METARTimeValue,\n    renderTitle: () => <>METAR Time</>,\n    renderShort: METARTimeShort,\n};\n","import PropTypes from 'prop-types';\n\nexport const MissingDataPropTypes = {\n    data: PropTypes.shape({\n        value: PropTypes.string,\n    }).isRequired,\n\n    prettyArgs: PropTypes.shape({\n        value: PropTypes.node,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { MissingDataPropTypes } from 'components/metar/renderers/missingData/propTypes';\n\nexport const MissingDataShort = ({ prettyArgs: { value } }) => (\n    <>\n        Information was missing or could not be reported by automated system. (\n        {value}\n        ).\n    </>\n);\n\nMissingDataShort.propTypes = MissingDataPropTypes;\n","import React from 'react';\n\nimport { MissingDataPropTypes } from 'components/metar/renderers/missingData/propTypes';\n\nexport const MissingDataValue = ({ prettyArgs: { value } }) => <>{value}</>;\n\nMissingDataValue.propTypes = MissingDataPropTypes;\n","import React from 'react';\n\nimport { MissingDataShort } from 'components/metar/renderers/missingData/MissingDataShort';\nimport { MissingDataValue } from 'components/metar/renderers/missingData/MissingDataValue';\n\nexport const MissingDataRenderers = {\n    renderValue: MissingDataValue,\n    renderTitle: () => <>Missing Data</>,\n    renderShort: MissingDataShort,\n};\n","import PropTypes from 'prop-types';\n\nexport const NotRecognizedPropTypes = {\n    data: PropTypes.shape({\n        value: PropTypes.string,\n        message: PropTypes.string,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { NotRecognizedPropTypes } from 'components/metar/renderers/notRecognized/propTypes';\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\n\nexport const NotRecognizedShort = ({ data: { message } }) => (\n    isNullOrUndefined(message) ? null : <>{message}</>);\n\nNotRecognizedShort.propTypes = NotRecognizedPropTypes;\n","import React from 'react';\n\nimport { NotRecognizedPropTypes } from 'components/metar/renderers/notRecognized/propTypes';\n\nexport const NotRecognizedValue = ({ data: { value } }) => <>{value}</>;\n\nNotRecognizedValue.propTypes = NotRecognizedPropTypes;\n","import { NotRecognizedShort } from 'components/metar/renderers/notRecognized/NotRecognizedShort';\nimport { NotRecognizedValue } from 'components/metar/renderers/notRecognized/NotRecognizedValue';\n\nexport const NotRecognizedRenderers = {\n    renderValue: NotRecognizedValue,\n    renderShort: NotRecognizedShort,\n};\n","import PropTypes from 'prop-types';\n\nexport const PrefixPropTypes = {\n    data: PropTypes.shape({\n        value: PropTypes.string.isRequired,\n    }).isRequired,\n\n    prettyArgs: PropTypes.shape({\n        value: PropTypes.node.isRequired,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { PrefixPropTypes } from 'components/metar/renderers/prefix/propTypes';\n\nexport const PrefixShort = ({ data: { value } }) => {\n    if (value === 'SPECI' || value === 'METAR') {\n        return <>Optional prefix prepended to METAR data.</>;\n    }\n\n    if (value === 'AUTO') {\n        return <>This weather report was generated by automated systems.</>;\n    }\n\n    if (value === 'COR') {\n        return <>This weather report is a correction of a previous report.</>;\n    }\n\n    return null;\n};\n\nPrefixShort.propTypes = PrefixPropTypes;\n","import React from 'react';\n\nimport { PrefixPropTypes } from 'components/metar/renderers/prefix/propTypes';\n\nexport const PrefixTitle = ({ data: { value } }) => {\n    if (value === 'SPECI' || value === 'METAR') {\n        return <>METAR Prefix</>;\n    }\n\n    if (value === 'AUTO') {\n        return <>Automated Weather Report</>;\n    }\n\n    if (value === 'COR') {\n        return <>Correction</>;\n    }\n\n    return null;\n};\n\nPrefixTitle.propTypes = PrefixPropTypes;\n","import React from 'react';\n\nimport { PrefixPropTypes } from 'components/metar/renderers/prefix/propTypes';\n\nexport const PrefixValue = ({ prettyArgs: { value } }) => <>{value}</>;\n\nPrefixValue.propTypes = PrefixPropTypes;\n","import { PrefixShort } from 'components/metar/renderers/prefix/PrefixShort';\nimport { PrefixTitle } from 'components/metar/renderers/prefix/PrefixTitle';\nimport { PrefixValue } from 'components/metar/renderers/prefix/PrefixValue';\n\nexport const PrefixRenderers = {\n    renderValue: PrefixValue,\n    renderTitle: PrefixTitle,\n    renderShort: PrefixShort,\n};\n","import PropTypes from 'prop-types';\n\nexport const PresentWeatherPropTypes = {\n    data: PropTypes.shape({\n        // eslint-disable-next-line react/forbid-prop-types\n        args: PropTypes.array.isRequired,\n        // eslint-disable-next-line react/forbid-prop-types\n        intensityParts: PropTypes.array.isRequired,\n        // eslint-disable-next-line react/forbid-prop-types\n        descriptorParts: PropTypes.array.isRequired,\n        // eslint-disable-next-line react/forbid-prop-types\n        phenomenaParts: PropTypes.array.isRequired,\n    }).isRequired,\n\n    // eslint-disable-next-line react/forbid-prop-types\n    prettyArgs: PropTypes.any.isRequired,\n};\n","import React from 'react';\n\nimport { ExternalLink } from 'components/lib/ExternalLink';\nimport { PresentWeatherPropTypes } from 'components/metar/renderers/presentWeather/propTypes';\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport {\n    WeatherDescriptor, WeatherIntensity, WeatherPhenomena, WeatherProximity,\n} from 'lib/metar/enums';\nimport { pick } from 'lib/pick';\n\nconst renderValues = ({ parts, renderFN, prettyArgs }) => {\n    if (parts.length === 0) {\n        return null;\n    }\n\n    const contents = parts.map((partData, idx) => (\n        <React.Fragment key={partData.argID}>\n            {idx === 0 ? null : ', '}\n            {renderFN({ prettyArgs, ...partData })}\n        </React.Fragment>\n    ));\n\n    return (\n        <>\n            {' '}\n            {contents}\n        </>\n    );\n};\n\nconst renderIntensity = ({ intensityP, argID, prettyArgs }) => {\n    if (intensityP !== WeatherIntensity.VINCINITY) {\n        return (\n            <React.Fragment key={argID}>\n                {intensityP}\n                {' '}\n                (\n                {prettyArgs[argID]}\n                )\n            </React.Fragment>\n        );\n    }\n    return null;\n};\n\nconst renderIntensities = ({ intensityParts, prettyArgs }) => renderValues({\n    parts: intensityParts,\n    renderFN: renderIntensity,\n    prettyArgs,\n});\n\nconst renderProximity = ({ proximityP, argID, prettyArgs }) => {\n    if (proximityP === WeatherProximity.VINCINITY) {\n        return (\n            <>\n                in the vincinity of the airport (\n                {prettyArgs[argID]}\n                )\n            </>\n        );\n    }\n    return null;\n};\n\nconst renderProximities = ({ proximityParts, prettyArgs }) => renderValues({\n    parts: proximityParts,\n    renderFN: renderProximity,\n    prettyArgs,\n});\n\nconst weatherPhenomenaInfo = Object.freeze({\n    [WeatherPhenomena.SNOW_GRAINS]: {\n        title: 'snow grains',\n        link: 'https://en.wikipedia.org/wiki/Snow_grains',\n    },\n    [WeatherPhenomena.ICE_PELLETS]: {\n        title: 'ice pellets',\n        link: 'https://en.wikipedia.org/wiki/Ice_pellets',\n    },\n    [WeatherPhenomena.SMALL_HAIL_SNOW]: {\n        title: 'small hail and/or snow pellets',\n    },\n    [WeatherPhenomena.UNKNOWN_PRECIPITATION]: {\n        title: 'unknown precipitation',\n    },\n    [WeatherPhenomena.MIST]: {\n        title: 'mist',\n        link: 'https://en.wikipedia.org/wiki/Mist',\n    },\n    [WeatherPhenomena.FOG]: {\n        title: 'fog',\n        link: 'https://en.wikipedia.org/wiki/Fog',\n    },\n    [WeatherPhenomena.DUST]: {\n        title: 'widespread dust',\n    },\n    [WeatherPhenomena.VOLCANIC_HASH]: {\n        title: 'volcanic hash',\n    },\n    [WeatherPhenomena.HAZE]: {\n        title: 'haze',\n        link: 'https://en.wikipedia.org/wiki/Haze',\n    },\n    [WeatherPhenomena.DUST_DEVILS]: {\n        title: 'dust/sand whirls (dust devils)',\n        link: 'https://en.wikipedia.org/wiki/Dust_devil',\n    },\n    [WeatherPhenomena.SQUALLS]: {\n        title: 'squalls',\n        link: 'https://en.wikipedia.org/wiki/Squall',\n    },\n    [WeatherPhenomena.FUNNEL_CLOUD]: {\n        title: 'funnel clouds (tornado or watersprout)',\n        link: 'https://en.wikipedia.org/wiki/Funnel_cloud',\n    },\n    [WeatherPhenomena.DRIZZLE]: {\n        title: 'drizzle',\n        link: 'https://en.wikipedia.org/wiki/Drizzle',\n    },\n    [WeatherPhenomena.NSW]: {\n        title: 'no significant weather',\n    },\n});\n\nconst renderWeatherPhenomena = ({ phenomenaP, argID, prettyArgs }) => {\n    const info = pick(weatherPhenomenaInfo[phenomenaP], {\n        title: phenomenaP,\n        link: null,\n    });\n\n    return (\n        <>\n            {isNullOrUndefined(info.link) ? info.title : (\n                <ExternalLink href={info.link}>{info.title}</ExternalLink>\n            )}\n            {' '}\n            (\n            {prettyArgs[argID]}\n            )\n        </>\n    );\n};\n\nexport const renderWeatherPhenomenons = ({ phenomenaParts, prettyArgs }) => {\n    if (phenomenaParts.length === 0) {\n        return <>undescribed weather phenomenons</>;\n    }\n\n    const result = [];\n\n    const mainPhenomena = phenomenaParts[0];\n\n    result.push(\n        <React.Fragment key=\"first-value\">\n            {renderWeatherPhenomena({\n                ...mainPhenomena,\n                prettyArgs,\n            })}\n        </React.Fragment>,\n    );\n\n    if (phenomenaParts.length > 1) {\n        result.push(\n            <React.Fragment key=\"bouts\">\n                {' '}\n                mainly, with bouts of\n            </React.Fragment>,\n        );\n\n        result.push(\n            <React.Fragment key=\"values\">\n                {renderValues({\n                    parts: phenomenaParts.slice(1),\n                    renderFN: renderWeatherPhenomena,\n                    prettyArgs,\n                })}\n            </React.Fragment>,\n        );\n    }\n\n    return result;\n};\n\nconst weatherDescriptorInfo = Object.freeze({\n    [WeatherDescriptor.PATCHES]: {\n        title: 'patchy',\n    },\n    [WeatherDescriptor.PARTIAL]: {\n        title: 'partially covering airport',\n    },\n    [WeatherDescriptor.SHOWER]: {\n        title: 'coming in showers',\n    },\n    [WeatherDescriptor.THUNDERSTORM]: {\n        title: 'with thunderstorms',\n    },\n});\n\nconst renderDescriptor = ({ descriptorP, argID, prettyArgs }) => {\n    const info = pick(weatherDescriptorInfo[descriptorP], {\n        title: descriptorP,\n    });\n\n    return (\n        <>\n            {info.title}\n            {' '}\n            (\n            {prettyArgs[argID]}\n            )\n        </>\n    );\n};\n\nconst renderDescriptors = ({ descriptorParts, prettyArgs }) => renderValues({\n    parts: descriptorParts,\n    renderFN: renderDescriptor,\n    prettyArgs,\n});\n\nexport const PresentWeatherShort = ({\n    data,\n    prettyArgs,\n}) => {\n    const {\n        intensityParts,\n        proximityParts,\n        descriptorParts,\n        phenomenaParts,\n    } = data;\n\n    return (\n        <>\n            Weather report suggests\n            {renderIntensities({ intensityParts, prettyArgs })}\n            {' '}\n            {renderWeatherPhenomenons({ phenomenaParts, prettyArgs })}\n            {renderProximities({ proximityParts, prettyArgs })}\n            .\n            {descriptorParts.length === 0 ? null : (\n                <>\n                    {' '}\n                    Weather is described as\n                    {renderDescriptors({ descriptorParts, prettyArgs })}\n                    .\n                </>\n            )}\n        </>\n    );\n};\n\nPresentWeatherShort.propTypes = PresentWeatherPropTypes;\n","import React from 'react';\n\nimport { ThinSpace } from 'components/lib/spaces';\nimport { PresentWeatherPropTypes } from 'components/metar/renderers/presentWeather/propTypes';\n\nexport const PresentWeatherValue = ({ data: { args }, prettyArgs }) => {\n    const prettyArgsOrdered = args.map((value, idx) => (\n        <span key={`arg-${value}`}>\n            {idx === 0 ? null : <ThinSpace />}\n            {prettyArgs[value]}\n        </span>\n    ));\n\n    return <>{prettyArgsOrdered}</>;\n};\n\nPresentWeatherValue.propTypes = PresentWeatherPropTypes;\n","import React from 'react';\n\nimport { PresentWeatherShort } from 'components/metar/renderers/presentWeather/PresentWeatherShort';\nimport { PresentWeatherValue } from 'components/metar/renderers/presentWeather/PresentWeatherValue';\n\nexport const PresentWeatherRenderers = {\n    renderValue: PresentWeatherValue,\n    renderTitle: () => <>Present Weather</>,\n    renderShort: PresentWeatherShort,\n};\n","import PropTypes from 'prop-types';\n\nexport const PrevailingVisibilityPropTypes = {\n    data: PropTypes.shape({\n        valueP: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n        directionP: PropTypes.string,\n        unitP: PropTypes.string,\n    }).isRequired,\n\n    prettyArgs: PropTypes.shape({\n        value: PropTypes.node.isRequired,\n        direction: PropTypes.node,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { PrevailingVisibilityPropTypes } from 'components/metar/renderers/prevailingVisibility/propTypes';\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { Directions, PrevailingVisibility } from 'lib/metar/enums';\n\nconst renderVisibilityValue = (value, unitP) => {\n    if (value === PrevailingVisibility.CAVOK) {\n        return (\n            <>\n                at least 10 kilometers, with no clouds below 1500 meters and no significant\n                weather phenomena\n            </>\n        );\n    }\n\n    if (value === PrevailingVisibility.TEN_K) {\n        return (\n            <>10 kilometers</>\n        );\n    }\n\n    if (value === PrevailingVisibility.MISSING) {\n        return (\n            <>missing or cannot be assessed</>\n        );\n    }\n\n    if (value === PrevailingVisibility.LESS_THAN_QUARTER_MILE) {\n        return (\n            <>less than a quarter of a mile</>\n        );\n    }\n\n    return (\n        <>\n            {value}\n            {' '}\n            {unitP}\n        </>\n    );\n};\n\nconst renderDirection = ({ directionP, direction }) => {\n    if (isNullOrUndefined(directionP)) {\n        return null;\n    }\n\n    if (directionP === Directions.NDV) {\n        return null;\n    }\n\n    return (\n        <>\n            {' '}\n            coming from the\n            {' '}\n            {directionP}\n            {' '}\n            (\n            {direction}\n            )\n        </>\n    );\n};\n\nconst renderNDV = ({ directionP, direction }) => {\n    if (directionP !== Directions.NDV) {\n        return null;\n    }\n\n    return (\n        <>\n            {' '}\n            No directional information could be reported. (\n            {direction}\n            ).\n        </>\n    );\n};\n\nexport const PrevailingVisibilityShort = ({\n    data: { unitP, valueP, directionP },\n    prettyArgs: { value, direction },\n}) => (\n    <>\n        Horizontal visibility\n        {renderDirection({ directionP, direction })}\n        {' '}\n        is\n        {' '}\n        {renderVisibilityValue(valueP, unitP)}\n        {' '}\n        (\n        {value}\n        ).\n        {renderNDV({ directionP, direction })}\n    </>\n);\n\nPrevailingVisibilityShort.propTypes = PrevailingVisibilityPropTypes;\n","import React from 'react';\n\nimport { ThinSpace } from 'components/lib/spaces';\nimport { PrevailingVisibilityPropTypes } from 'components/metar/renderers/prevailingVisibility/propTypes';\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { PrevailingVisibilityUnit } from 'lib/metar/enums';\n\nexport const PrevailingVisibilityValue = ({\n    data: { unitP },\n    prettyArgs: { value, direction },\n}) => (\n    <>\n        {value}\n        {isNullOrUndefined(direction) ? null : (\n            <>\n                <ThinSpace />\n                {direction}\n            </>\n        )}\n        {unitP === PrevailingVisibilityUnit.MILES ? (\n            <>\n                <ThinSpace />\n                SM\n            </>\n        ) : null}\n        {unitP === PrevailingVisibilityUnit.KILOMETERS ? (\n            <>\n                <ThinSpace />\n                KM\n            </>\n        ) : null}\n    </>\n);\n\nPrevailingVisibilityValue.propTypes = PrevailingVisibilityPropTypes;\n","import React from 'react';\n\nimport { PrevailingVisibilityShort } from 'components/metar/renderers/prevailingVisibility/PrevailingVisibilityShort';\nimport { PrevailingVisibilityValue } from 'components/metar/renderers/prevailingVisibility/PrevailingVisibilityValue';\n\nexport const PrevailingVisibilityRenderers = {\n    renderValue: PrevailingVisibilityValue,\n    renderTitle: () => <>Prevailing Visibility</>,\n    renderShort: PrevailingVisibilityShort,\n};\n","import PropTypes from 'prop-types';\n\nexport const RecentWeatherPropTypes = {\n    data: PropTypes.shape({\n        // eslint-disable-next-line react/forbid-prop-types\n        args: PropTypes.array.isRequired,\n        // eslint-disable-next-line react/forbid-prop-types\n        phenomenaParts: PropTypes.array.isRequired,\n    }).isRequired,\n\n    // eslint-disable-next-line react/forbid-prop-types\n    prettyArgs: PropTypes.any.isRequired,\n};\n","import React from 'react';\n\nimport { renderWeatherPhenomenons } from 'components/metar/renderers/presentWeather/PresentWeatherShort';\nimport { RecentWeatherPropTypes } from 'components/metar/renderers/recentWeather/propTypes';\n\nexport const RecentWeatherShort = ({ data: { phenomenaParts }, prettyArgs }) => (\n    <>\n        Weather observed recently includes\n        {' '}\n        {renderWeatherPhenomenons({ phenomenaParts, prettyArgs })}\n        . This weather was not present at the time of observation, but is still relevant operationally (eg. potential\n        for wet runway).\n    </>\n);\n\nRecentWeatherShort.propTypes = RecentWeatherPropTypes;\n","import React from 'react';\n\nimport { ThinSpace } from 'components/lib/spaces';\nimport { RecentWeatherPropTypes } from 'components/metar/renderers/recentWeather/propTypes';\n\nexport const RecentWeatherValue = ({\n    data: { args },\n    prettyArgs,\n}) => {\n    const prettyArgsOrdered = args.map((value) => (\n        <React.Fragment key={value}>\n            <ThinSpace />\n            {prettyArgs[value]}\n        </React.Fragment>\n    ));\n\n    return (\n        <>\n            RE\n            {prettyArgsOrdered}\n        </>\n    );\n};\n\nRecentWeatherValue.propTypes = RecentWeatherPropTypes;\n","import React from 'react';\n\nimport { RecentWeatherShort } from 'components/metar/renderers/recentWeather/RecentWeatherShort';\nimport { RecentWeatherValue } from 'components/metar/renderers/recentWeather/RecentWeatherValue';\n\nexport const RecentWeatherRenderers = {\n    renderValue: RecentWeatherValue,\n    renderTitle: () => <>Recent Weather</>,\n    renderShort: RecentWeatherShort,\n};\n","import PropTypes from 'prop-types';\n\nexport const RemarksPropTypes = {\n    prettyArgs: PropTypes.shape({\n        rmk: PropTypes.node,\n        remarks: PropTypes.node,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { RemarksPropTypes } from 'components/metar/renderers/remarks/propTypes';\n\nexport const RemarksValue = ({ prettyArgs: { rmk, remarks } }) => (\n    <>\n        {rmk}\n        {' '}\n        {remarks}\n    </>\n);\n\nRemarksValue.propTypes = RemarksPropTypes;\n","import React from 'react';\n\nimport { RemarksShort } from 'components/metar/renderers/remarks/RemarksShort';\nimport { RemarksValue } from 'components/metar/renderers/remarks/RemarksValue';\n\nexport const RemarksRenderers = {\n    renderValue: RemarksValue,\n    renderTitle: () => <>Remarks</>,\n    renderShort: RemarksShort,\n};\n","import React from 'react';\n\nexport const RemarksShort = () => (\n    <>\n        Remarks added and only defined on national level. These are not currently parsed.\n    </>\n);\n","import PropTypes from 'prop-types';\n\nexport const RunwayStatePropTypes = {\n    data: PropTypes.shape({\n        runwayP: PropTypes.number,\n        depositP: PropTypes.string,\n        extentP: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        depthP: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        frictionP: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    }).isRequired,\n\n    prettyArgs: PropTypes.shape({\n        runway: PropTypes.node,\n        deposit: PropTypes.node,\n        extent: PropTypes.node,\n        depth: PropTypes.node,\n        friction: PropTypes.node,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { ExternalLink } from 'components/lib/ExternalLink';\nimport { RunwayStatePropTypes } from 'components/metar/renderers/runwayState/propTypes';\nimport {\n    RunwayContaminationDepth,\n    RunwayContaminationExtent,\n    RunwayDeposit,\n    RunwaySurfaceFriction,\n} from 'lib/metar/enums';\nimport { pick } from 'lib/pick';\n\nconst depositDescriptions = {\n    [RunwayDeposit.CLEAR_AND_DRY]: 'clear and dry',\n    [RunwayDeposit.DAMP]: 'damp',\n    [RunwayDeposit.WET]: 'wet with water patches',\n    [RunwayDeposit.RIME_AND_FROST]: (\n        <>\n            covered with\n            <ExternalLink href=\"https://en.wikipedia.org/wiki/Rime_ice\">rime</ExternalLink>\n            {' '}\n            and frost\n        </>\n    ),\n    [RunwayDeposit.DRY_SNOW]: 'covered with dry snow',\n    [RunwayDeposit.WET_SNOW]: 'covered with wet snow',\n    [RunwayDeposit.SLUSH]: (\n        <>\n            covered with\n            <ExternalLink href=\"https://en.wikipedia.org/wiki/Slush\">slush</ExternalLink>\n        </>\n    ),\n    [RunwayDeposit.ICE]: 'icy',\n    [RunwayDeposit.COMPACTED_SNOW]: 'covered with compacted snow',\n    [RunwayDeposit.FROZEN_RUTS]: 'covered with frozen ruts',\n    [RunwayDeposit.NOT_REPORTED]: 'contaminated with unreported substance',\n};\n\nconst renderDeposit = ({ depositP, deposit }) => (\n    <>\n        {depositDescriptions[depositP]}\n        {' '}\n        (\n        {deposit}\n        )\n    </>\n);\n\nconst contaminationExtentDescriptions = {\n    [RunwayContaminationExtent.BELOW_TEN]: 'Below 10%',\n    [RunwayContaminationExtent.TEN_TO_TWENTY_FIVE]: 'Between 11 and 25%',\n    [RunwayContaminationExtent.TWENTY_FIVE_TO_FIFTY]: 'Between 26 and 50%',\n    [RunwayContaminationExtent.ABOVE_FIFTY]: 'Above 50%',\n    [RunwayContaminationExtent.NOT_REPORTED]: 'An unreported amount',\n    [RunwayContaminationExtent.UNKNOWN_RESERVED]: 'An unknown amount (reserved value)',\n};\n\nconst renderContaminationExtent = ({ extentP, extent }) => (\n    <>\n        {contaminationExtentDescriptions[extentP]}\n        {' '}\n        (\n        {extent}\n        )\n    </>\n);\n\nconst contaminationDepthDescriptions = {\n    [RunwayContaminationDepth.TEN_CM]: '10 centimeters deep',\n    [RunwayContaminationDepth.FIFTEEN_CM]: '15 centimeters deep',\n    [RunwayContaminationDepth.TWENTY_CM]: '20 centimeters deep',\n    [RunwayContaminationDepth.TWENTY_FIVE_CM]: '25 centimeters deep',\n    [RunwayContaminationDepth.THIRTY_CM]: '30 centimeters deep',\n    [RunwayContaminationDepth.THIRTY_FIVE_CM]: '35 centimeters deep',\n    [RunwayContaminationDepth.FORTY_CM]: 'more than 40 centimeters deep',\n    [RunwayContaminationDepth.NOT_OPERATIONAL]: 'of an unreported depth above operational constraints',\n    [RunwayContaminationDepth.NOT_REPORTED]: 'of an unreported depth',\n};\n\nconst renderContaminationDepth = ({ depthP, depth }) => {\n    const desc = pick(\n        contaminationDepthDescriptions[depthP],\n        <>\n            {depthP}\n            {' '}\n            millimeters deep\n        </>,\n    );\n\n    return (\n        <>\n            {desc}\n            {' '}\n            (\n            {depth}\n            )\n        </>\n    );\n};\n\nconst frictionDescriptions = {\n    [RunwaySurfaceFriction.BRAKING_ACTION_POOR]: 'Braking action is described as poor',\n    [RunwaySurfaceFriction.BRAKING_ACTION_MEDIUM_POOR]: 'Braking action is described as poor to medium',\n    [RunwaySurfaceFriction.BRAKING_ACTION_MEDIUM]: 'Braking action is described as medium',\n    [RunwaySurfaceFriction.BRAKING_ACTION_MEDIUM_GOOD]: 'Braking action is described as medium to good',\n    [RunwaySurfaceFriction.BRAKING_ACTION_GOOD]: 'Braking action is described as good',\n    [RunwaySurfaceFriction.UNRELIABLE]: 'Braking action reports are unreliable',\n    [RunwaySurfaceFriction.UNKNOWN_RESERVED]: 'Unknown reserved braking action value was used',\n    [RunwaySurfaceFriction.NOT_REPORTED]: 'Braking action could not reported or runway is not operational',\n};\n\nconst renderFriction = ({ frictionP, friction }) => {\n    const frictionDesc = pick(\n        frictionDescriptions[frictionP],\n        <>\n            Friction coefficient is\n            {' '}\n            {frictionP}\n            /1\n        </>,\n    );\n\n    return (\n        <>\n            {frictionDesc}\n            {' '}\n            (\n            {friction}\n            ).\n        </>\n    );\n};\n\nexport const RunwayStateShort = ({\n    data: {\n        runwayP,\n        depositP,\n        extentP,\n        depthP,\n        frictionP,\n    },\n    prettyArgs: {\n        runway,\n        deposit,\n        extent,\n        depth,\n        friction,\n    },\n}) => (\n    <>\n        {renderContaminationExtent({ extentP, extent })}\n        {' '}\n        of runway\n        {' '}\n        {runwayP}\n        {' '}\n        (\n        {runway}\n        ) is\n        {' '}\n        {renderDeposit({ depositP, deposit })}\n        . Coverage is\n        {' '}\n        {renderContaminationDepth({ depthP, depth })}\n        .\n        {' '}\n        {renderFriction({ frictionP, friction })}\n    </>\n);\n\nRunwayStateShort.propTypes = RunwayStatePropTypes;\n","import React from 'react';\n\nimport { ThinSpace } from 'components/lib/spaces';\nimport { RunwayStatePropTypes } from 'components/metar/renderers/runwayState/propTypes';\n\nexport const RunwayStateValue = ({\n    prettyArgs: {\n        runway, deposit, extent, depth, friction,\n    },\n}) => (\n    <>\n        R\n        <ThinSpace />\n        {runway}\n        <ThinSpace />\n        /\n        <ThinSpace />\n        {deposit}\n        <ThinSpace />\n        {extent}\n        <ThinSpace />\n        {depth}\n        <ThinSpace />\n        {friction}\n    </>\n);\n\nRunwayStateValue.propTypes = RunwayStatePropTypes;\n","import React from 'react';\n\nimport { RunwayStateShort } from 'components/metar/renderers/runwayState/RunwayStateShort';\nimport { RunwayStateValue } from 'components/metar/renderers/runwayState/RunwayStateValue';\n\nexport const RunwayStateRenderers = {\n    renderValue: RunwayStateValue,\n    renderTitle: () => <>State of Runway</>,\n    renderShort: RunwayStateShort,\n};\n","import PropTypes from 'prop-types';\n\nexport const RunwayVisualRangePropTypes = {\n    data: PropTypes.shape({\n        runway: PropTypes.string.isRequired,\n        qualifier: PropTypes.string,\n\n        distance: PropTypes.string.isRequired,\n        distanceP: PropTypes.number.isRequired,\n    }).isRequired,\n\n    prettyArgs: PropTypes.shape({\n        runway: PropTypes.node,\n        qualifier: PropTypes.node,\n        distance: PropTypes.node,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { RunwayVisualRangePropTypes } from 'components/metar/renderers/runwayVisualRange/propTypes';\nimport { RunwayVisualRangeQualifier } from 'lib/metar/enums';\n\nconst renderQualifier = ({ qualifierP, qualifier }) => {\n    if (qualifierP === RunwayVisualRangeQualifier.NONE) {\n        return null;\n    }\n\n    return (\n        <>\n            {' '}\n            {qualifierP === RunwayVisualRangeQualifier.AT_LEAST ? 'at least' : 'at most'}\n            {' '}\n            (\n            {qualifier}\n            )\n        </>\n    );\n};\n\nexport const RunwayVisualRangeShort = ({\n    data: { runway: runwayP, qualifierP, distanceP },\n    prettyArgs: { runway, qualifier, distance },\n}) => (\n    <>\n        Visual range for runway\n        {' '}\n        {runwayP}\n        {' '}\n        (\n        {runway}\n        ) is\n        {renderQualifier({ qualifierP, qualifier })}\n        {' '}\n        {distanceP}\n        {' '}\n        meters (\n        {distance}\n        ).\n    </>\n);\n\nRunwayVisualRangeShort.propTypes = RunwayVisualRangePropTypes;\n","import React from 'react';\n\nimport { ThinSpace } from 'components/lib/spaces';\nimport { RunwayVisualRangePropTypes } from 'components/metar/renderers/runwayVisualRange/propTypes';\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\n\nexport const RunwayVisualRangeValue = ({\n    prettyArgs: { runway, qualifier, distance },\n}) => (\n    <>\n        R\n        <ThinSpace />\n        {runway}\n        <ThinSpace />\n        /\n        {isNullOrUndefined(qualifier) ? null : (\n            <>\n                <ThinSpace />\n                {qualifier}\n            </>\n        )}\n        <ThinSpace />\n        {distance}\n    </>\n);\n\nRunwayVisualRangeValue.propTypes = RunwayVisualRangePropTypes;\n","import React from 'react';\n\nimport { RunwayVisualRangeShort } from 'components/metar/renderers/runwayVisualRange/RunwayVisualRangeShort';\nimport { RunwayVisualRangeValue } from 'components/metar/renderers/runwayVisualRange/RunwayVisualRangeValue';\n\nexport const RunwayVisualRangeRenderers = {\n    renderValue: RunwayVisualRangeValue,\n    renderTitle: () => <>Runway Visual Range</>,\n    renderShort: RunwayVisualRangeShort,\n};\n","import PropTypes from 'prop-types';\n\nexport const SeaSurfacePropTypes = {\n    data: PropTypes.shape({\n        infoType: PropTypes.string,\n\n        temperatureP: PropTypes.number.isRequired,\n        seaStateCodeP: PropTypes.string,\n        waveHeightP: PropTypes.number,\n    }).isRequired,\n\n    prettyArgs: PropTypes.shape({\n        temperature: PropTypes.node,\n        seaStateCode: PropTypes.node,\n        waveHeight: PropTypes.node,\n    }).isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const TemperaturesPropTypes = {\n    data: PropTypes.shape({\n        oatP: PropTypes.number.isRequired,\n        dewPointP: PropTypes.number.isRequired,\n    }).isRequired,\n\n    prettyArgs: PropTypes.shape({\n        oat: PropTypes.node,\n        dewPoint: PropTypes.node,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { TemperaturesPropTypes } from 'components/metar/renderers/temperatures/propTypes';\nimport { Temperatures } from 'lib/metar/enums';\n\nexport const renderTemperature = ({ tempP, temp }) => {\n    if (tempP === Temperatures.NOT_REPORTED) {\n        return (\n            <>\n                could not be reported (\n                {temp}\n                )\n            </>\n        );\n    }\n\n    return (\n        <>\n            is\n            {' '}\n            {tempP}\n            &deg;C (\n            {temp}\n            )\n        </>\n    );\n};\n\nexport const TemperaturesShort = ({\n    data: { oatP, dewPointP },\n    prettyArgs: { oat, dewPoint },\n}) => (\n    <>\n        Outside Air Temperature (OAT) at airport\n        {' '}\n        {renderTemperature({ tempP: oatP, temp: oat })}\n        {' '}\n        and Dew Point Temperature\n        {' '}\n        {renderTemperature({ tempP: dewPointP, temp: dewPoint })}\n        .\n    </>\n);\n\nTemperaturesShort.propTypes = TemperaturesPropTypes;\n","import React from 'react';\n\nimport { SeaSurfacePropTypes } from 'components/metar/renderers/seaSurface/propTypes';\nimport { renderTemperature } from 'components/metar/renderers/temperatures/TemperaturesShort';\nimport { SeaSurfaceInfoType, SeaSurfaceStateCode } from 'lib/metar/enums';\n\nconst seaStateCodeDescriptions = Object.freeze({\n    [SeaSurfaceStateCode.CALM_GLASSY]: {\n        short: <>calm (glassy)</>,\n        long: <>no waves</>,\n    },\n    [SeaSurfaceStateCode.CALM_RIPPLED]: {\n        short: <>calm (rippled)</>,\n        long: <>waves of height 10 centimeters or below in height</>,\n    },\n    [SeaSurfaceStateCode.SMOOTH]: {\n        short: <>smooth</>,\n        long: <>waves between 10 and 50 centimeters in height</>,\n    },\n    [SeaSurfaceStateCode.SLIGHT]: {\n        short: <>slight</>,\n        long: <>waves between 50 centimeters and 1.25 meters in height</>,\n    },\n    [SeaSurfaceStateCode.MODERATE]: {\n        short: <>moderate</>,\n        long: <>waves between 1.25 and 2.5 meters in height</>,\n    },\n    [SeaSurfaceStateCode.ROUGH]: {\n        short: <>rough</>,\n        long: <>waves between 2.5 and 4 meters in height</>,\n    },\n    [SeaSurfaceStateCode.VERY_ROUGH]: {\n        short: <>very rough</>,\n        long: <>waves between 4 and 6 meters in height</>,\n    },\n    [SeaSurfaceStateCode.HIGH]: {\n        short: <>high</>,\n        long: <>waves between 6 and 9 meters in height</>,\n    },\n    [SeaSurfaceStateCode.VERY_HIGH]: {\n        short: <>very high</>,\n        long: <>waves between 9 and 14 meters in height</>,\n    },\n    [SeaSurfaceStateCode.PHENOMENAL]: {\n        short: <>phenomenal</>,\n        long: <>waves over 14 meters high</>,\n    },\n});\n\nexport const SeaSurfaceShort = ({\n    data: {\n        infoType, temperatureP, seaStateCodeP, waveHeightP,\n    },\n    prettyArgs: { temperature, seaStateCode, waveHeight },\n}) => {\n    let info = null;\n\n    if (infoType === SeaSurfaceInfoType.WAVE_HEIGHT) {\n        info = (\n            <>\n                Wave height is\n                {' '}\n                {waveHeightP > 100 ? (\n                    <>\n                        {waveHeightP / 100}\n                        {' '}\n                        meters\n                    </>\n                ) : (\n                    <>\n                        {waveHeightP}\n                        {' '}\n                        centimeters\n                    </>\n                )}\n                {' '}\n                (\n                {waveHeight}\n                ).\n            </>\n        );\n    }\n\n    if (infoType === SeaSurfaceInfoType.SURFACE_STATE) {\n        const codeDesc = seaStateCodeDescriptions[seaStateCodeP];\n\n        info = (\n            <>\n                Sea activity is described as\n                {' '}\n                {codeDesc.short}\n                {' '}\n                with\n                {' '}\n                {codeDesc.long}\n                {' '}\n                (\n                {seaStateCode}\n                ).\n            </>\n        );\n    }\n\n    return (\n        <>\n            Sea surface water temperature\n            {' '}\n            {renderTemperature({ tempP: temperatureP, temp: temperature })}\n            .\n            {' '}\n            {info}\n        </>\n    );\n};\n\nSeaSurfaceShort.propTypes = SeaSurfacePropTypes;\n","import React from 'react';\n\nimport { ThinSpace } from 'components/lib/spaces';\nimport { SeaSurfacePropTypes } from 'components/metar/renderers/seaSurface/propTypes';\nimport { SeaSurfaceInfoType } from 'lib/metar/enums';\n\nexport const SeaSurfaceValue = ({\n    data: { infoType },\n    prettyArgs: { temperature, seaStateCode, waveHeight },\n}) => {\n    let info = null;\n\n    if (infoType === SeaSurfaceInfoType.SURFACE_STATE) {\n        info = (\n            <>\n                S\n                <ThinSpace />\n                {seaStateCode}\n            </>\n        );\n    }\n\n    if (infoType === SeaSurfaceInfoType.WAVE_HEIGHT) {\n        info = (\n            <>\n                H\n                <ThinSpace />\n                {waveHeight}\n            </>\n        );\n    }\n\n    return (\n        <>\n            W\n            <ThinSpace />\n            {temperature}\n            <ThinSpace />\n            /\n            <ThinSpace />\n            {info}\n        </>\n    );\n};\n\nSeaSurfaceValue.propTypes = SeaSurfacePropTypes;\n","import React from 'react';\n\nimport { SeaSurfaceShort } from 'components/metar/renderers/seaSurface/SeaSurfaceShort';\nimport { SeaSurfaceValue } from 'components/metar/renderers/seaSurface/SeaSurfaceValue';\n\nexport const SeaSurfaceRenderers = {\n    renderValue: SeaSurfaceValue,\n    renderTitle: () => <>Sea Surface Information</>,\n    renderShort: SeaSurfaceShort,\n};\n","import React from 'react';\n\nimport { TemperaturesShort } from 'components/metar/renderers/temperatures/TemperaturesShort';\nimport { TemperaturesValue } from 'components/metar/renderers/temperatures/TemperaturesValue';\n\nexport const TemperaturesRenderers = {\n    renderValue: TemperaturesValue,\n    renderTitle: () => <>Temperatures</>,\n    renderShort: TemperaturesShort,\n};\n","import React from 'react';\n\nimport { ThinSpace } from 'components/lib/spaces';\nimport { TemperaturesPropTypes } from 'components/metar/renderers/temperatures/propTypes';\n\nexport const TemperaturesValue = ({ prettyArgs: { oat, dewPoint } }) => (\n    <>\n        {oat}\n        <ThinSpace />\n        /\n        <ThinSpace />\n        {dewPoint}\n    </>\n);\n\nTemperaturesValue.propTypes = TemperaturesPropTypes;\n","/* eslint-disable react/forbid-prop-types */\nimport PropTypes from 'prop-types';\n\nexport const TrendPropTypes = {\n    data: PropTypes.shape({\n        trendTypeP: PropTypes.string.isRequired,\n        args: PropTypes.array.isRequired,\n        timeParts: PropTypes.array.isRequired,\n    }).isRequired,\n\n    prettyArgs: PropTypes.any.isRequired,\n};\n","import React from 'react';\n\nimport { TrendPropTypes } from 'components/metar/renderers/trend/propTypes';\nimport { TrendType } from 'lib/metar/enums';\n\nconst renderTimeParts = ({ timeParts, prettyArgs }) => {\n    const parts = timeParts.map(({ argID, timeP: { trendTimeType, hour, minutes } }, idx) => (\n        <React.Fragment key={argID}>\n            {idx === 0 ? null : ', '}\n            {trendTimeType}\n            {' '}\n            {hour}\n            :\n            {minutes}\n            {' '}\n            (\n            {prettyArgs[argID]}\n            )\n        </React.Fragment>\n    ));\n\n    return <>{parts}</>;\n};\n\nexport const TrendShort = ({ data: { trendTypeP, timeParts }, prettyArgs }) => {\n    if (trendTypeP === TrendType.NOSIG) {\n        return (\n            <>\n                No Significant Change is expected to occur. (\n                {prettyArgs.trendType}\n                )\n            </>\n        );\n    }\n\n    return (\n        <>\n            Weather conditions are expected to\n            {' '}\n            {trendTypeP === TrendType.BECOMING ? null : (\n                <>\n                    temporarily\n                    {' '}\n                </>\n            )}\n            change (\n            {prettyArgs.trendType}\n            ). Change is expected\n            {' '}\n            {renderTimeParts({ timeParts, prettyArgs })}\n            . All the following items with the same background are part of this trend change.\n        </>\n    );\n};\n\nTrendShort.propTypes = TrendPropTypes;\n","import React from 'react';\n\nimport { ThickSpace } from 'components/lib/spaces';\nimport { TrendPropTypes } from 'components/metar/renderers/trend/propTypes';\n\nexport const TrendValue = ({ data: { args }, prettyArgs }) => {\n    const prettyArgsOrdered = args.map((value, idx) => (\n        <span key={`arg-${value}`}>\n            {idx === 0 ? null : <ThickSpace />}\n            {prettyArgs[value]}\n        </span>\n    ));\n\n    return <>{prettyArgsOrdered}</>;\n};\n\nTrendValue.propTypes = TrendPropTypes;\n","import React from 'react';\n\nimport { TrendShort } from 'components/metar/renderers/trend/TrendShort';\nimport { TrendValue } from 'components/metar/renderers/trend/TrendValue';\n\nexport const TrendRenderers = {\n    renderValue: TrendValue,\n    renderTitle: () => <>Trend</>,\n    renderShort: TrendShort,\n};\n","import PropTypes from 'prop-types';\n\nexport const VerticalVisibilityPropTypes = {\n    data: PropTypes.shape({\n        altitudeP: PropTypes.number,\n    }).isRequired,\n\n    prettyArgs: PropTypes.shape({\n        altitude: PropTypes.node,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { VerticalVisibilityPropTypes } from 'components/metar/renderers/verticalVisibility/propTypes';\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\n\nexport const VerticalVisibilityShort = ({\n    data: { altitudeP },\n    prettyArgs: { altitude },\n}) => {\n    if (isNullOrUndefined(altitudeP)) {\n        return (\n            <>\n                Vertical visibility could not be assessed (\n                {altitude}\n                ).\n            </>\n        );\n    }\n\n    return (\n        <>\n            Vertical visibility is estimated to be\n            {' '}\n            {altitudeP}\n            {' '}\n            ft (\n            {altitude}\n            ).\n        </>\n    );\n};\n\nVerticalVisibilityShort.propTypes = VerticalVisibilityPropTypes;\n","import React from 'react';\n\nimport { ThinSpace } from 'components/lib/spaces';\nimport { VerticalVisibilityPropTypes } from 'components/metar/renderers/verticalVisibility/propTypes';\n\nexport const VerticalVisibilityValue = ({\n    prettyArgs: { altitude },\n}) => (\n    <>\n        VV\n        <ThinSpace />\n        {altitude}\n    </>\n);\nVerticalVisibilityValue.propTypes = VerticalVisibilityPropTypes;\n","import React from 'react';\n\nimport { VerticalVisibilityShort } from 'components/metar/renderers/verticalVisibility/VerticalVisibilityShort';\nimport { VerticalVisibilityValue } from 'components/metar/renderers/verticalVisibility/VerticalVisibilityValue';\n\nexport const VerticalVisibilityRenderers = {\n    renderValue: VerticalVisibilityValue,\n    renderTitle: () => <>Vertical Visibility</>,\n    renderShort: VerticalVisibilityShort,\n};\n","import React from 'react';\n\nimport { ThinSpace } from 'components/lib/spaces';\nimport { WindPropTypes } from 'components/metar/renderers/wind/propTypes';\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { WindDirections, WindForce } from 'lib/metar/enums';\n\nconst renderDirection = ({ directionP, direction }) => {\n    if (directionP === WindDirections.VRB) {\n        return (\n            <>\n                Wind is not coming from any particular direction (\n                {direction}\n                )\n            </>\n        );\n    }\n\n    if (directionP === WindDirections.NOT_REPORTED) {\n        return (\n            <>\n                Wind direction was not reported (\n                {direction}\n                )\n            </>\n        );\n    }\n\n    return (\n        <>\n            Wind is mainly coming from\n            {' '}\n            {directionP}\n            &deg; (\n            {direction}\n            )\n        </>\n    );\n};\n\nconst renderForce = ({\n    forceP, force, unitP, unit,\n}) => {\n    if (forceP === WindForce.NOT_REPORTED) {\n        return (\n            <>\n                Wind force could not be reported (\n                {force}\n                )\n            </>\n        );\n    }\n\n    return (\n        <>\n            It has an average speed of\n            {' '}\n            {forceP}\n            {' '}\n            {unitP}\n            {' '}\n            (\n            {force}\n            {' '}\n            {unit}\n            )\n        </>\n    );\n};\n\nconst renderGustsForce = ({\n    gustsForceP, gustsForce, unitP, unit,\n}) => {\n    if (isNullOrUndefined(gustsForce)) {\n        return null;\n    }\n\n    return (\n        <>\n            , with gusts of\n            {' '}\n            {gustsForceP}\n            {' '}\n            {unitP}\n            {' '}\n            (\n            {gustsForce}\n            {' '}\n            {unit}\n            )\n        </>\n    );\n};\n\nexport const WindShort = ({\n    data: {\n        isCalm, directionP, fromDirectionP, toDirectionP, forceP, gustsForceP, unitP,\n    },\n    prettyArgs: {\n        direction, force, gustsForce, unit, fromDirection, toDirection,\n    },\n}) => {\n    if (isCalm) {\n        return (\n            <>\n                Wind is noted as calm, with no particular direction or speed. (\n                {direction}\n                <ThinSpace />\n                {force}\n                <ThinSpace />\n                {unit}\n                )\n            </>\n        );\n    }\n\n    return (\n        <>\n            {renderDirection({ directionP, direction })}\n            {isNullOrUndefined(fromDirection) ? null : (\n                <>\n                    , with variations from\n                    {' '}\n                    {fromDirectionP}\n                    &deg; to\n                    {' '}\n                    {toDirectionP}\n                    &deg;\n                    {' '}\n                    (\n                    {fromDirection}\n                    {' '}\n                    and\n                    {' '}\n                    {toDirection}\n                    )\n                </>\n            )}\n            .\n            {' '}\n            {renderForce({\n                forceP, force, unitP, unit,\n            })}\n            {renderGustsForce({\n                gustsForceP, gustsForce, unitP, unit,\n            })}\n            .\n        </>\n    );\n};\n\nWindShort.propTypes = WindPropTypes;\n","import PropTypes from 'prop-types';\n\nexport const WindPropTypes = {\n    data: PropTypes.shape({\n        isCalm: PropTypes.bool.isRequired,\n        directionP: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.string,\n        ]),\n        fromDirectionP: PropTypes.number,\n        toDirectionP: PropTypes.number,\n        forceP: PropTypes.number.isRequired,\n        gustsForceP: PropTypes.number,\n        unitP: PropTypes.string.isRequired,\n    }).isRequired,\n\n    prettyArgs: PropTypes.shape({\n        direction: PropTypes.node,\n        force: PropTypes.node,\n        gustsForce: PropTypes.node,\n        unit: PropTypes.node,\n        fromDirection: PropTypes.node,\n        toDirection: PropTypes.node,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { WindShort } from 'components/metar/renderers/wind/WindShort';\nimport { WindValue } from 'components/metar/renderers/wind/WindValue';\n\nexport const WindRenderers = {\n    renderValue: WindValue,\n    renderTitle: () => <>Winds</>,\n    renderShort: WindShort,\n};\n","import React from 'react';\n\nimport { ThickSpace, ThinSpace } from 'components/lib/spaces';\nimport { WindPropTypes } from 'components/metar/renderers/wind/propTypes';\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\n\nexport const WindValue = ({\n    prettyArgs: {\n        direction, force, gustsForce, unit, fromDirection, toDirection,\n    },\n}) => (\n    <>\n        {direction}\n        <ThinSpace />\n        {force}\n        <ThinSpace />\n        {isNullOrUndefined(gustsForce) ? null : (\n            <>\n                G\n                <ThinSpace />\n                {gustsForce}\n                <ThinSpace />\n            </>\n        )}\n        {unit}\n        {isNullOrUndefined(fromDirection) ? null : (\n            <>\n                <ThickSpace />\n                {fromDirection}\n                <ThinSpace />\n                V\n                <ThinSpace />\n                {toDirection}\n            </>\n        )}\n    </>\n);\n\nWindValue.propTypes = WindPropTypes;\n","import PropTypes from 'prop-types';\n\nexport const WindShearPropTypes = {\n    data: PropTypes.shape({\n        runwayP: PropTypes.string.isRequired,\n    }).isRequired,\n\n    prettyArgs: PropTypes.shape({\n        runway: PropTypes.node,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { WindShearPropTypes } from 'components/metar/renderers/windShear/propTypes';\nimport { WindShearRunway } from 'lib/metar/enums';\n\nexport const renderRunway = ({ runwayP, runway }) => {\n    if (runwayP === WindShearRunway.ALL_RUNWAYS) {\n        return (\n            <>\n                all runways (\n                {runway}\n                )\n            </>\n        );\n    }\n\n    return (\n        <>\n            runway\n            {' '}\n            {runwayP}\n            {' '}\n            (\n            {runway}\n            )\n        </>\n    );\n};\n\nexport const WindShearShort = ({ data: { runwayP }, prettyArgs: { runway } }) => (\n    <>\n        Wind shear reported for\n        {' '}\n        {renderRunway({ runwayP, runway })}\n        .\n    </>\n);\n\nWindShearShort.propTypes = WindShearPropTypes;\n","import React from 'react';\n\nimport { ThickSpace } from 'components/lib/spaces';\nimport { WindShearPropTypes } from 'components/metar/renderers/windShear/propTypes';\n\nexport const WindShearValue = ({ prettyArgs: { runway } }) => (\n    <>\n        WS\n        <ThickSpace />\n        {runway}\n    </>\n);\n\nWindShearValue.propTypes = WindShearPropTypes;\n","import React from 'react';\n\nimport { WindShearShort } from 'components/metar/renderers/windShear/WindShearShort';\nimport { WindShearValue } from 'components/metar/renderers/windShear/WindShearValue';\n\nexport const WindShearRenderers = {\n    renderValue: WindShearValue,\n    renderTitle: () => <>Wind Shear</>,\n    renderShort: WindShearShort,\n};\n","import { AirportIdentifierRenderers } from 'components/metar/renderers/airportIdentifier/renderers';\nimport { AltimeterRenderers } from 'components/metar/renderers/altimeter/renderers';\nimport { CloudCoverageRenderers } from 'components/metar/renderers/cloudCoverage/renderers';\nimport { ColorSystemsRenderers } from 'components/metar/renderers/colorSystems/renderers';\nimport { METARTimeRenderers } from 'components/metar/renderers/metarTime/renderers';\nimport { MissingDataRenderers } from 'components/metar/renderers/missingData/renderers';\nimport { NotRecognizedRenderers } from 'components/metar/renderers/notRecognized/renderers';\nimport { PrefixRenderers } from 'components/metar/renderers/prefix/renderers';\nimport { PresentWeatherRenderers } from 'components/metar/renderers/presentWeather/renderers';\nimport { PrevailingVisibilityRenderers } from 'components/metar/renderers/prevailingVisibility/renderers';\nimport { RecentWeatherRenderers } from 'components/metar/renderers/recentWeather/renderers';\nimport { RemarksRenderers } from 'components/metar/renderers/remarks/renderers';\nimport { RunwayStateRenderers } from 'components/metar/renderers/runwayState/renderers';\nimport { RunwayVisualRangeRenderers } from 'components/metar/renderers/runwayVisualRange/renderers';\nimport { SeaSurfaceRenderers } from 'components/metar/renderers/seaSurface/renderers';\nimport { TemperaturesRenderers } from 'components/metar/renderers/temperatures/renderers';\nimport { TrendRenderers } from 'components/metar/renderers/trend/renderers';\nimport { VerticalVisibilityRenderers } from 'components/metar/renderers/verticalVisibility/renderers';\nimport { WindRenderers } from 'components/metar/renderers/wind/renderers';\nimport { WindShearRenderers } from 'components/metar/renderers/windShear/renderers';\nimport { TokenTypes } from 'lib/metar/enums';\n\nexport const TokenRenderers = {\n    [TokenTypes.AIRPORT_IDENTIFIER]: AirportIdentifierRenderers,\n    [TokenTypes.ALTIMETER_SETTING]: AltimeterRenderers,\n    [TokenTypes.CLOUD_COVERAGE]: CloudCoverageRenderers,\n    [TokenTypes.COLOR_SYSTEMS]: ColorSystemsRenderers,\n    [TokenTypes.METAR_PREFIX]: PrefixRenderers,\n    [TokenTypes.METAR_PREFIX_OTHER]: PrefixRenderers,\n    [TokenTypes.METAR_TIME]: METARTimeRenderers,\n    [TokenTypes.MISSING_DATA]: MissingDataRenderers,\n    [TokenTypes.NOT_RECOGNIZED]: NotRecognizedRenderers,\n    [TokenTypes.PRESENT_WEATHER]: PresentWeatherRenderers,\n    [TokenTypes.PREVAILING_VISIBILITY]: PrevailingVisibilityRenderers,\n    [TokenTypes.RECENT_WEATHER]: RecentWeatherRenderers,\n    [TokenTypes.REMARKS]: RemarksRenderers,\n    [TokenTypes.RUNWAY_STATE]: RunwayStateRenderers,\n    [TokenTypes.RUNWAY_VISUAL_RANGE]: RunwayVisualRangeRenderers,\n    [TokenTypes.SEA_SURFACE]: SeaSurfaceRenderers,\n    [TokenTypes.TEMPERATURES]: TemperaturesRenderers,\n    [TokenTypes.TREND]: TrendRenderers,\n    [TokenTypes.VERTICAL_VISIBILITY]: VerticalVisibilityRenderers,\n    [TokenTypes.WIND]: WindRenderers,\n    [TokenTypes.WIND_SHEAR]: WindShearRenderers,\n};\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\n\nexport const isLocalServer = () => (\n    isNotNullOrUndefined(process.env.REACT_APP_IS_LOCAL_SERVER)\n    && process.env.REACT_APP_IS_LOCAL_SERVER !== ''\n);\n","import { useEffect, useMemo, useState } from 'react';\n\nimport { useHistory } from 'react-router';\n\nimport { useQueryParams } from 'lib/hooks/useQueryParams';\nimport { isLocalServer } from 'lib/isLocalServer';\nimport { pick } from 'lib/pick';\nimport { MetarExplainerRoute } from 'lib/routes';\n\nexport class MetarURLManager {\n    // eslint-disable-next-line class-methods-use-this\n    buildURL(metarData) {\n        const queryParams = new URLSearchParams();\n        queryParams.set('value', metarData);\n        return `${MetarExplainerRoute}?${queryParams.toString()}`;\n    }\n}\n\nconst defaultMETARData = () => {\n    if (isLocalServer()) {\n        return 'SPECI LUDO 211025Z 31015G27KT 280V350 '\n            + '4000 1400SW R24/P2000 +SHRA FEW005 '\n            + 'FEW010CB SCT018 BKN025 10/03 Q0995 '\n            + 'RERA WS R24 W19/S4 R24/451293 BECMG '\n            + 'FM1100 25035G50KT TEMPO AT1100 NSW '\n            + 'BLU YLO+ RMK A02 STUFF $';\n    }\n    return '';\n};\n\nexport const useMetarURLConfig = () => {\n    const queryParams = useQueryParams();\n    const history = useHistory();\n\n    const [initialValue, setInitialValue] = useState('');\n\n    const lastValue = useMemo(\n        () => pick(queryParams.get('value'), defaultMETARData()),\n        [queryParams],\n    );\n\n    useEffect(() => {\n        if (lastValue !== '') {\n            setInitialValue(lastValue);\n            history.replace(MetarExplainerRoute);\n        }\n    }, [lastValue]);\n\n    const metarURLManager = useMemo(() => new MetarURLManager(), []);\n\n    return { initialValue, metarURLManager };\n};\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { AltimeterUnit, AltimeterSetting, TokenTypes } from 'lib/metar/enums';\n\nconst fixAltimeterValue = (altimeterUnitP, value) => {\n    if (value === '////') {\n        return AltimeterSetting.NOT_REPORTED;\n    }\n    return altimeterUnitP === AltimeterUnit.INHG ? (value / 100) : 1 * value;\n};\n\nexport const parseAltimeter = (parser) => {\n    const { groups } = parser.matchNextTokenAndForward(\n        '(?<altimeterUnit>[QA])(?<value>([0-9]{4}|////))',\n    );\n\n    if (isNotNullOrUndefined(groups)) {\n        const { altimeterUnit, value } = groups;\n\n        const altimeterUnitP = altimeterUnit === 'A' ? AltimeterUnit.INHG : AltimeterUnit.HPA;\n\n        return {\n            tokenType: TokenTypes.ALTIMETER_SETTING,\n            args: ['altimeterUnit', 'value'],\n\n            altimeterUnit,\n            value,\n\n            altimeterUnitP,\n            valueP: fixAltimeterValue(altimeterUnitP, value),\n        };\n    }\n    return null;\n};\n","import { isNotNullOrUndefined, isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport {\n    CloudLayerAltitude, CloudLayerAmount, CloudTypes, TokenTypes,\n} from 'lib/metar/enums';\nimport { pick } from 'lib/pick';\n\nconst fixCloudAltitude = (altitude) => {\n    if (isNullOrUndefined(altitude)) {\n        return null;\n    }\n\n    if (altitude === '///') {\n        return CloudLayerAltitude.BELOW;\n    }\n\n    return altitude * 100; // feet\n};\n\nconst createCloudDescriptorsToken = (amount, { altitude, cloudType } = {}) => ({\n    tokenType: TokenTypes.CLOUD_COVERAGE,\n    args: ['amount', 'altitude', 'cloudType'],\n\n    amount,\n    altitude: pick(altitude),\n    cloudType: pick(cloudType === '' ? null : cloudType),\n\n    amountP: pick(CloudLayerAmount[amount]),\n    altitudeP: fixCloudAltitude(altitude),\n    cloudTypeP: pick(cloudType === '///' ? CloudTypes.NOT_DESCRIBED : null, CloudTypes[cloudType]),\n});\n\nexport const parseCloudDescriptors = (parser) => {\n    const { completeMatch: nscCompleteMatch } = parser.matchNextTokenAndForward('NSC');\n    if (isNotNullOrUndefined(nscCompleteMatch)) {\n        return createCloudDescriptorsToken(nscCompleteMatch);\n    }\n\n    const { completeMatch: ncdCompleteMatch } = parser.matchNextTokenAndForward('NCD');\n    if (isNotNullOrUndefined(ncdCompleteMatch)) {\n        return createCloudDescriptorsToken(ncdCompleteMatch);\n    }\n\n    const { completeMatch: clrCompleteMatch } = parser.matchNextTokenAndForward('CLR');\n    if (isNotNullOrUndefined(clrCompleteMatch)) {\n        return createCloudDescriptorsToken(clrCompleteMatch);\n    }\n\n    const { completeMatch: skcCompleteMatch } = parser.matchNextTokenAndForward('SKC');\n    if (isNotNullOrUndefined(skcCompleteMatch)) {\n        return createCloudDescriptorsToken(skcCompleteMatch);\n    }\n\n    const { groups: simpleGroups } = parser.matchNextTokenAndForward(\n        '(?<amount>FEW|SCT|BKN|OVC)(?<altitude>[0-9]{3})(?<cloudType>CB|TCU|///|)',\n    );\n    if (isNotNullOrUndefined(simpleGroups)) {\n        const { amount, altitude, cloudType } = simpleGroups;\n\n        return createCloudDescriptorsToken(\n            amount,\n            {\n                altitude,\n                cloudType,\n            },\n        );\n    }\n\n    const { groups: belowGroups } = parser.matchNextTokenAndForward(\n        '(?<amount>FEW|SCT|BKN|OVC)///(?<cloudType>CB|TCU|)',\n    );\n    if (isNotNullOrUndefined(belowGroups)) {\n        const { amount, cloudType } = belowGroups;\n\n        return createCloudDescriptorsToken(\n            amount,\n            {\n                altitude: '///',\n                cloudType,\n            },\n        );\n    }\n\n    const { groups: cloudTypeOnlyGroups } = parser.matchNextTokenAndForward(\n        '///(?<cloudType>CB|TCU)',\n    );\n    if (isNotNullOrUndefined(cloudTypeOnlyGroups)) {\n        const { cloudType } = cloudTypeOnlyGroups;\n\n        return createCloudDescriptorsToken(\n            null,\n            { cloudType },\n        );\n    }\n    return null;\n};\n","export const buildVariableArgs = (prefix, parts) => {\n    const argsKey = `${prefix}Args`;\n    const countKey = `${prefix}Count`;\n    const partsKey = `${prefix}Parts`;\n\n    const result = {\n        [argsKey]: [],\n        [countKey]: parts.length,\n        [partsKey]: [],\n    };\n\n    parts.forEach((part, idx) => {\n        const valueIdxKey = `${prefix}${idx}`;\n        const valueIdxKeyP = `${valueIdxKey}P`;\n\n        result[argsKey].push(valueIdxKey);\n        result[valueIdxKey] = part.value;\n        result[valueIdxKeyP] = part.parsed;\n\n        const valueKey = prefix;\n        const valueKeyP = `${valueKey}P`;\n\n        result[partsKey].push({\n            [valueKey]: part.value,\n            [valueKeyP]: part.parsed,\n            argID: valueIdxKey,\n        });\n    });\n    return result;\n};\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { TokenTypes } from 'lib/metar/enums';\nimport { pick } from 'lib/pick';\n\nconst createPrefixToken = (value, { tokenType } = {}) => ({\n    tokenType: pick(tokenType, TokenTypes.METAR_PREFIX),\n    args: ['value'],\n    value,\n});\n\nexport const skipMETARPrefix = (parser) => {\n    const { completeMatch: completeMatch1 } = parser.matchNextTokenAndForward('METAR');\n    if (isNotNullOrUndefined(completeMatch1)) {\n        return createPrefixToken(completeMatch1);\n    }\n\n    const { completeMatch: completeMatch2 } = parser.matchNextTokenAndForward('SPECI');\n    if (isNotNullOrUndefined(completeMatch2)) {\n        return createPrefixToken(completeMatch2);\n    }\n    return null;\n};\n\nexport const parseAirportICAOCode = (parser) => {\n    const { groups } = parser.matchNextTokenAndForward('(?<airportCode>[A-Z][A-Z0-9]{3})');\n\n    if (isNotNullOrUndefined(groups)) {\n        const { airportCode } = groups;\n\n        return {\n            tokenType: TokenTypes.AIRPORT_IDENTIFIER,\n            args: ['airportCode'],\n            airportCode,\n        };\n    }\n\n    return {\n        tokenType: TokenTypes.NOT_RECOGNIZED,\n        message: 'No airport ICAO code was found/recognized.',\n    };\n};\n\nexport const parseMETARTime = (parser) => {\n    const { groups } = parser.matchNextTokenAndForward(\n        '(?<dayOfMonth>[0-9]{2})(?<hour>[0-9]{2})(?<minutes>[0-9]{2})Z',\n    );\n\n    if (isNotNullOrUndefined(groups)) {\n        const { dayOfMonth, hour, minutes } = groups;\n\n        return {\n            tokenType: TokenTypes.METAR_TIME,\n            args: ['dayOfMonth', 'hour', 'minutes'],\n\n            dayOfMonth,\n            hour,\n            minutes,\n\n            dayOfMonthP: 1 * dayOfMonth,\n        };\n    }\n    return {\n        tokenType: TokenTypes.NOT_RECOGNIZED,\n        message: 'No METAR time was found/recognized.',\n    };\n};\n\nexport const parseAuto = (parser) => {\n    const { completeMatch } = parser.matchNextTokenAndForward('AUTO');\n\n    if (isNotNullOrUndefined(completeMatch)) {\n        return createPrefixToken(completeMatch, {\n            tokenType: TokenTypes.METAR_PREFIX_OTHER,\n        });\n    }\n    return null;\n};\n\nexport const parseNIL = (parser) => {\n    const { completeMatch } = parser.matchNextTokenAndForward('NIL');\n\n    if (isNotNullOrUndefined(completeMatch)) {\n        return createPrefixToken(completeMatch, {\n            tokenType: TokenTypes.METAR_PREFIX_OTHER,\n        });\n    }\n    return null;\n};\n\nexport const parseCOR = (parser) => {\n    const { completeMatch: completeMatch1 } = parser.matchNextTokenAndForward('COR');\n\n    if (isNotNullOrUndefined(completeMatch1)) {\n        return createPrefixToken(completeMatch1, {\n            tokenType: TokenTypes.METAR_PREFIX_OTHER,\n        });\n    }\n    return null;\n};\n","import {\n    WeatherDescriptor, WeatherIntensity, WeatherPhenomena, WeatherProximity,\n} from 'lib/metar/enums';\nimport { buildVariableArgs } from 'lib/metar/parsers/internal/varargs';\n\nexport const WeatherIntensityPatterns = '\\\\+|-';\nexport const WeatherProximityPatterns = 'VC';\nexport const WeatherDescriptorPatterns = 'MI|BC|PR|DR|BL|SH|TS|FZ';\nexport const WeatherPhenomenaPatterns = 'DZ|RA|SN|SG|PL|GR|GS|UP|BR|FG|FU|VA|DU|SA|HZ|PO|SQ|FC|SS|DS';\n\nconst weatherDescriptorMapping = Object.freeze({\n    MI: WeatherDescriptor.SHALLOW,\n    BC: WeatherDescriptor.PATCHES,\n    PR: WeatherDescriptor.PARTIAL,\n    DR: WeatherDescriptor.LOW_DRIFTING,\n    BL: WeatherDescriptor.BLOWING,\n    SH: WeatherDescriptor.SHOWER,\n    TS: WeatherDescriptor.THUNDERSTORM,\n    FZ: WeatherDescriptor.FREEZING,\n});\n\nconst weatherPhenomenaMapping = Object.freeze({\n    DZ: WeatherPhenomena.DRIZZLE,\n    RA: WeatherPhenomena.RAIN,\n    SN: WeatherPhenomena.SNOW,\n    SG: WeatherPhenomena.SNOW_GRAINS,\n    PL: WeatherPhenomena.ICE_PELLETS,\n    GR: WeatherPhenomena.HAIL,\n    GS: WeatherPhenomena.SMALL_HAIL_SNOW,\n    UP: WeatherPhenomena.UNKNOWN_PRECIPITATION,\n    BR: WeatherPhenomena.MIST,\n    FG: WeatherPhenomena.FOG,\n    FU: WeatherPhenomena.SMOKE,\n    VA: WeatherPhenomena.VOLCANIC_HASH,\n    DU: WeatherPhenomena.DUST,\n    SA: WeatherPhenomena.SAND,\n    HZ: WeatherPhenomena.HAZE,\n    PO: WeatherPhenomena.DUST_DEVILS,\n    SQ: WeatherPhenomena.SQUALLS,\n    FC: WeatherPhenomena.FUNNEL_CLOUD,\n    SS: WeatherPhenomena.SANDSTORM,\n    DS: WeatherPhenomena.DUSTSTORM,\n});\n\nconst splitValuesIntoParts = (valuesStr, parseValue, lengthOfValue) => {\n    const parts = [];\n\n    let currentValue = valuesStr;\n\n    while (currentValue.length !== 0) {\n        const x = currentValue.substring(0, lengthOfValue);\n\n        parts.push({\n            value: x,\n            parsed: parseValue(x),\n        });\n        currentValue = currentValue.substring(lengthOfValue);\n    }\n\n    return parts;\n};\n\nexport const buildIntensitiesArgs = (parts) => buildVariableArgs('intensity', parts);\n\nexport const splitWeatherItensitiesIntoParts = (valuesStr) => splitValuesIntoParts(\n    valuesStr,\n    (x) => {\n        if (x === '-') return WeatherIntensity.LIGHT;\n        if (x === '+') return WeatherIntensity.HEAVY;\n        return null;\n    },\n    1,\n);\n\nexport const buildProximitiessArgs = (parts) => buildVariableArgs('proximity', parts);\n\nexport const splitWeatherProximitiesIntoParts = (valuesStr) => splitValuesIntoParts(\n    valuesStr,\n    (x) => {\n        if (x === 'VC') return WeatherProximity.VINCINITY;\n        return null;\n    },\n    2,\n);\n\nexport const buildDescriptorsArgs = (parts) => buildVariableArgs('descriptor', parts);\n\nexport const splitWeatherDescriptorsIntoParts = (valuesStr) => splitValuesIntoParts(\n    valuesStr,\n    (x) => weatherDescriptorMapping[x],\n    2,\n);\n\nexport const buildPhenomenonsArgs = (parts) => buildVariableArgs('phenomena', parts);\n\nexport const splitWeatherPhenomenonsIntoParts = (valuesStr) => splitValuesIntoParts(\n    valuesStr,\n    (x) => weatherPhenomenaMapping[x],\n    2,\n);\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { TokenTypes, WeatherPhenomena } from 'lib/metar/enums';\nimport {\n    buildDescriptorsArgs,\n    buildIntensitiesArgs,\n    buildPhenomenonsArgs,\n    buildProximitiessArgs,\n    splitWeatherDescriptorsIntoParts,\n    splitWeatherItensitiesIntoParts,\n    splitWeatherPhenomenonsIntoParts,\n    splitWeatherProximitiesIntoParts,\n    WeatherDescriptorPatterns,\n    WeatherIntensityPatterns,\n    WeatherPhenomenaPatterns,\n    WeatherProximityPatterns,\n} from 'lib/metar/parsers/internal/weather';\nimport { pick } from 'lib/pick';\n\nconst createPresentWeatherToken = ({\n    intensityParts, proximityParts, descriptorParts, phenomenaParts,\n}) => {\n    const intensitiesData = buildIntensitiesArgs(pick(intensityParts, []));\n    const proximityData = buildProximitiessArgs(pick(proximityParts, []));\n    const descriptorsData = buildDescriptorsArgs(pick(descriptorParts, []));\n    const phenomenonsData = buildPhenomenonsArgs(pick(phenomenaParts, []));\n\n    return {\n        tokenType: TokenTypes.PRESENT_WEATHER,\n        args: [\n            ...intensitiesData.intensityArgs,\n            ...proximityData.proximityArgs,\n            ...descriptorsData.descriptorArgs,\n            ...phenomenonsData.phenomenaArgs,\n        ],\n\n        ...intensitiesData,\n        ...proximityData,\n        ...descriptorsData,\n        ...phenomenonsData,\n    };\n};\n\nconst parsePresentWeatherCombination = (parser, descriptorCount, phenomenaCount) => {\n    const { groups } = parser.matchNextTokenAndForward(\n        `(?<intensities>(${WeatherIntensityPatterns})*)`\n        + `(?<proximities>(${WeatherProximityPatterns})*)`\n        + `(?<descriptors>(${WeatherDescriptorPatterns})${descriptorCount})`\n        + `(?<phenomenons>(${WeatherPhenomenaPatterns})${phenomenaCount})`,\n    );\n\n    if (isNotNullOrUndefined(groups)) {\n        const {\n            intensities, proximities, descriptors, phenomenons,\n        } = groups;\n\n        return createPresentWeatherToken({\n            intensityParts: splitWeatherItensitiesIntoParts(intensities),\n            proximityParts: splitWeatherProximitiesIntoParts(proximities),\n            descriptorParts: splitWeatherDescriptorsIntoParts(descriptors),\n            phenomenaParts: splitWeatherPhenomenonsIntoParts(phenomenons),\n        });\n    }\n\n    return null;\n};\n\nexport const parsePresentWeather = (parser) => {\n    const { completeMatch } = parser.matchNextTokenAndForward('NSW');\n    if (isNotNullOrUndefined(completeMatch)) {\n        return createPresentWeatherToken({\n            phenomenaParts: [\n                {\n                    value: completeMatch,\n                    parsed: WeatherPhenomena.NSW,\n                },\n            ],\n        });\n    }\n\n    const combinations = [['+', '+'], ['*', '+'], ['+', '*']];\n\n    for (let idx = 0; idx < combinations.length; idx += 1) {\n        const combination = combinations[idx];\n        const result = parsePresentWeatherCombination(parser, combination[0], combination[1]);\n\n        if (isNotNullOrUndefined(result)) {\n            return result;\n        }\n    }\n\n    return null;\n};\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport {\n    Directions, PrevailingVisibility, PrevailingVisibilityUnit, TokenTypes,\n} from 'lib/metar/enums';\nimport { pick } from 'lib/pick';\n\nconst fixPVValue = (value) => {\n    if (value === '////') {\n        return PrevailingVisibility.MISSING;\n    }\n\n    if (value === 'CAVOK') {\n        return PrevailingVisibility.CAVOK;\n    }\n\n    if (value === '9999') {\n        return PrevailingVisibility.TEN_K;\n    }\n\n    if (value === 'M1/4') {\n        return PrevailingVisibility.LESS_THAN_QUARTER_MILE;\n    }\n\n    const matchResult1 = value.match(new RegExp('(?<whole>[0-9]+)\\\\s(?<numerator>[0-9]+)/(?<denominator>[0-9]+)'));\n    if (isNotNullOrUndefined(matchResult1)) {\n        const { whole, numerator, denominator } = matchResult1.groups;\n        return 1 * whole + numerator / denominator;\n    }\n\n    const matchResult2 = value.match(new RegExp('(?<numerator>[0-9]+)/(?<denominator>[0-9]+)'));\n    if (isNotNullOrUndefined(matchResult2)) {\n        const { numerator, denominator } = matchResult2.groups;\n        return numerator / denominator;\n    }\n\n    return 1 * value;\n};\n\nconst isWithoutUnit = (valueP) => valueP === PrevailingVisibility.MISSING || valueP === PrevailingVisibility.CAVOK;\n\nconst createPrevailingVisibility = (value, { direction, unit } = {}) => {\n    const valueP = fixPVValue(value);\n\n    return {\n        tokenType: TokenTypes.PREVAILING_VISIBILITY,\n        args: ['value', 'direction'],\n\n        value,\n        direction: direction === '' ? null : pick(direction),\n\n        valueP,\n        directionP: pick(Directions[direction]),\n        unitP: pick(unit, isWithoutUnit(valueP) ? null : PrevailingVisibilityUnit.METERS),\n    };\n};\n\nexport const parsePrevailingVisibility = (parser) => {\n    const { completeMatch: cavokCompleteMatch } = parser.matchNextTokenAndForward('CAVOK');\n    if (isNotNullOrUndefined(cavokCompleteMatch)) {\n        return createPrevailingVisibility(cavokCompleteMatch);\n    }\n\n    const { groups: groups1 } = parser.matchNextTokenAndForward('(?<distance>[0-9]{4})(?<direction>[A-Z]*)');\n    if (isNotNullOrUndefined(groups1)) {\n        const { distance, direction } = groups1;\n        return createPrevailingVisibility(distance, { direction });\n    }\n\n    const { groups: groups2 } = parser.matchNextTokenAndForward('(?<distance>[0-9]+(\\\\s[0-9]+)?(/[0-9]+)?)SM');\n    if (isNotNullOrUndefined(groups2)) {\n        const { distance } = groups2;\n        return createPrevailingVisibility(\n            distance,\n            { unit: PrevailingVisibilityUnit.MILES },\n        );\n    }\n\n    const { groups: groups4 } = parser.matchNextTokenAndForward('(?<distance>M1/4)SM');\n    if (isNotNullOrUndefined(groups4)) {\n        const { distance } = groups4;\n        return createPrevailingVisibility(\n            distance,\n            { unit: PrevailingVisibilityUnit.MILES },\n        );\n    }\n\n    const { groups: groups5 } = parser.matchNextTokenAndForward('(?<distance>////)SM');\n    if (isNotNullOrUndefined(groups5)) {\n        const { distance } = groups5;\n        return createPrevailingVisibility(\n            distance,\n            { unit: PrevailingVisibilityUnit.MILES },\n        );\n    }\n\n    const { groups: groups3 } = parser.matchNextTokenAndForward('(?<distance>[0-9]+(\\\\s[0-9]+)?(/[0-9]+)?)KM');\n    if (isNotNullOrUndefined(groups3)) {\n        const { distance } = groups3;\n        return createPrevailingVisibility(\n            distance,\n            { unit: PrevailingVisibilityUnit.KILOMETERS },\n        );\n    }\n\n    const { completeMatch: completeMatch2 } = parser.matchNextTokenAndForward('////');\n    if (isNotNullOrUndefined(completeMatch2)) {\n        return createPrevailingVisibility(completeMatch2);\n    }\n    return null;\n};\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { TokenTypes } from 'lib/metar/enums';\nimport {\n    buildDescriptorsArgs,\n    buildPhenomenonsArgs, splitWeatherDescriptorsIntoParts,\n    splitWeatherPhenomenonsIntoParts, WeatherDescriptorPatterns,\n    WeatherPhenomenaPatterns,\n} from 'lib/metar/parsers/internal/weather';\n\nconst parseRecentWeatherCombination = (parser, descriptorCount, phenomenaCount) => {\n    const { groups } = parser.matchNextTokenAndForward(\n        'RE'\n        + `(?<descriptors>(${WeatherDescriptorPatterns})${descriptorCount})`\n        + `(?<phenomenons>(${WeatherPhenomenaPatterns})${phenomenaCount})`,\n    );\n    if (isNotNullOrUndefined(groups)) {\n        const { descriptors, phenomenons } = groups;\n\n        const descriptorsData = buildDescriptorsArgs(splitWeatherDescriptorsIntoParts(descriptors));\n        const phenomenonsData = buildPhenomenonsArgs(splitWeatherPhenomenonsIntoParts(phenomenons));\n\n        return {\n            tokenType: TokenTypes.RECENT_WEATHER,\n            args: [\n                ...descriptorsData.descriptorArgs,\n                ...phenomenonsData.phenomenaArgs,\n            ],\n\n            ...descriptorsData,\n            ...phenomenonsData,\n        };\n    }\n\n    return null;\n};\n\nexport const parseRecentWeather = (parser) => {\n    const combinations = [['+', '+'], ['*', '+'], ['+', '*']];\n\n    for (let idx = 0; idx < combinations.length; idx += 1) {\n        const combination = combinations[idx];\n        const result = parseRecentWeatherCombination(parser, combination[0], combination[1]);\n\n        if (isNotNullOrUndefined(result)) {\n            return result;\n        }\n    }\n\n    return null;\n};\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport {\n    RunwayContaminationDepth, RunwayContaminationExtent, RunwayDeposit, RunwaySurfaceFriction, TokenTypes,\n} from 'lib/metar/enums';\nimport { pick } from 'lib/pick';\n\nconst depositMapping = [\n    RunwayDeposit.CLEAR_AND_DRY,\n    RunwayDeposit.DAMP,\n    RunwayDeposit.WET,\n    RunwayDeposit.RIME_AND_FROST,\n    RunwayDeposit.DRY_SNOW,\n    RunwayDeposit.WET_SNOW,\n    RunwayDeposit.SLUSH,\n    RunwayDeposit.ICE,\n    RunwayDeposit.COMPACTED_SNOW,\n    RunwayDeposit.FROZEN_RUTS,\n];\n\nconst parseDepositType = (value) => {\n    if (value === '/') {\n        return RunwayDeposit.NOT_REPORTED;\n    }\n    return depositMapping[1 * value];\n};\n\nconst contaminationExtentMapping = {\n    1: RunwayContaminationExtent.BELOW_TEN,\n    2: RunwayContaminationExtent.TEN_TO_TWENTY_FIVE,\n    5: RunwayContaminationExtent.TWENTY_FIVE_TO_FIFTY,\n    9: RunwayContaminationExtent.ABOVE_FIFTY,\n};\n\nconst parseContaminationExtent = (value) => {\n    if (value === '/') {\n        return RunwayContaminationExtent.NOT_REPORTED;\n    }\n\n    return pick(\n        contaminationExtentMapping[1 * value],\n        RunwayContaminationExtent.UNKNOWN_RESERVED,\n    );\n};\n\nconst contaminationDepthMapping = {\n    92: RunwayContaminationDepth.TEN_CM,\n    93: RunwayContaminationDepth.FIFTEEN_CM,\n    94: RunwayContaminationDepth.TWENTY_CM,\n    95: RunwayContaminationDepth.TWENTY_FIVE_CM,\n    96: RunwayContaminationDepth.THIRTY_CM,\n    97: RunwayContaminationDepth.THIRTY_FIVE_CM,\n    98: RunwayContaminationDepth.FORTY_CM,\n    99: RunwayContaminationDepth.NOT_OPERATIONAL,\n};\n\nconst parseContaminationDepth = (value) => {\n    if (value === '//') {\n        return RunwayContaminationDepth.NOT_REPORTED;\n    }\n\n    const valueI = 1 * value;\n    return pick(contaminationDepthMapping[valueI], valueI);\n};\n\nconst surfaceFrictionMapping = {\n    91: RunwaySurfaceFriction.BRAKING_ACTION_POOR,\n    92: RunwaySurfaceFriction.BRAKING_ACTION_MEDIUM_POOR,\n    93: RunwaySurfaceFriction.BRAKING_ACTION_MEDIUM,\n    94: RunwaySurfaceFriction.BRAKING_ACTION_MEDIUM_GOOD,\n    95: RunwaySurfaceFriction.BRAKING_ACTION_GOOD,\n\n    96: RunwaySurfaceFriction.UNKNOWN_RESERVED,\n    97: RunwaySurfaceFriction.UNKNOWN_RESERVED,\n    98: RunwaySurfaceFriction.UNKNOWN_RESERVED,\n\n    99: RunwaySurfaceFriction.UNRELIABLE,\n};\n\nconst parseSurfaceFriction = (value) => {\n    if (value === '//') {\n        return RunwaySurfaceFriction.NOT_REPORTED;\n    }\n\n    const valueI = 1 * value;\n    return pick(surfaceFrictionMapping[valueI], valueI / 100);\n};\n\nexport const parseRunwayState = (parser) => {\n    const { groups } = parser.matchNextTokenAndForward(\n        'R(?<runway>[0-9]{2})/(?<deposit>([0-9]|/))(?<extent>([0-9]|/))'\n        + '(?<depth>([0-9]{2}|//))(?<friction>([0-9]{2}|//))',\n    );\n\n    if (isNotNullOrUndefined(groups)) {\n        const {\n            runway, deposit, extent, depth, friction,\n        } = groups;\n\n        return {\n            tokenType: TokenTypes.RUNWAY_STATE,\n            args: ['runway', 'deposit', 'extent', 'depth', 'friction'],\n\n            runway,\n            deposit,\n            extent,\n            depth,\n            friction,\n\n            runwayP: runway,\n            depositP: parseDepositType(deposit),\n            extentP: parseContaminationExtent(extent),\n            depthP: parseContaminationDepth(depth),\n            frictionP: parseSurfaceFriction(friction),\n        };\n    }\n\n    return null;\n};\n","import { Temperatures } from 'lib/metar/enums';\n\nexport const TemperaturePattern = '(M?[0-9]{2}|//)';\n\nexport const fixTemp = (temp) => {\n    if (temp === '//') {\n        return Temperatures.NOT_REPORTED;\n    }\n    return temp[0] === 'M' ? -1 * temp.substring(1) : 1 * temp;\n};\n","import { isNotNullOrUndefined, isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { SeaSurfaceInfoType, SeaSurfaceStateCode, TokenTypes } from 'lib/metar/enums';\nimport { fixTemp, TemperaturePattern } from 'lib/metar/parsers/internal/temperatures';\nimport { pick } from 'lib/pick';\n\nconst stateCodesMapping = [\n    SeaSurfaceStateCode.CALM_GLASSY,\n    SeaSurfaceStateCode.CALM_RIPPLED,\n    SeaSurfaceStateCode.SMOOTH,\n    SeaSurfaceStateCode.SLIGHT,\n    SeaSurfaceStateCode.MODERATE,\n    SeaSurfaceStateCode.ROUGH,\n    SeaSurfaceStateCode.VERY_ROUGH,\n    SeaSurfaceStateCode.HIGH,\n    SeaSurfaceStateCode.VERY_HIGH,\n    SeaSurfaceStateCode.PHENOMENAL,\n];\n\nexport const createSeaSurfaceToken = (temperature, { seaStateCode, waveHeight }) => ({\n    tokenType: TokenTypes.SEA_SURFACE,\n    args: ['temperature', 'seaStateCode', 'waveHeight'],\n\n    infoType: (\n        isNullOrUndefined(waveHeight)\n            ? SeaSurfaceInfoType.SURFACE_STATE\n            : SeaSurfaceInfoType.WAVE_HEIGHT\n    ),\n\n    temperature,\n    seaStateCode: pick(seaStateCode),\n    waveHeight: pick(waveHeight),\n\n    temperatureP: fixTemp(temperature),\n    seaStateCodeP: isNullOrUndefined(seaStateCode) ? null : pick(stateCodesMapping[1 * seaStateCode]),\n    waveHeightP: isNullOrUndefined(waveHeight) ? null : waveHeight * 10,\n});\n\nexport const parseSeaSurface = (parser) => {\n    const { groups: seaStateGroups } = parser.matchNextTokenAndForward(\n        `W(?<temperature>${TemperaturePattern})/S(?<seaStateCode>[0-9])`,\n    );\n    if (isNotNullOrUndefined(seaStateGroups)) {\n        const { temperature, seaStateCode } = seaStateGroups;\n        return createSeaSurfaceToken(temperature, { seaStateCode });\n    }\n\n    const { groups: waveHeightGroups } = parser.matchNextTokenAndForward(\n        `W(?<temperature>${TemperaturePattern})/H(?<waveHeight>[0-9]{3})`,\n    );\n    if (isNotNullOrUndefined(waveHeightGroups)) {\n        const { temperature, waveHeight } = waveHeightGroups;\n        return createSeaSurfaceToken(temperature, { waveHeight });\n    }\n\n    return null;\n};\n","import { v4 as uuidv4 } from 'uuid';\n\nimport { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { TokenTypes, TrendTimeType, TrendType } from 'lib/metar/enums';\nimport { buildVariableArgs } from 'lib/metar/parsers/internal/varargs';\nimport { pick } from 'lib/pick';\n\nconst trendTypesMapping = {\n    NOSIG: TrendType.NOSIG,\n    BECMG: TrendType.BECOMING,\n    TEMPO: TrendType.TEMPORARY,\n};\n\nconst createTrendToken = (trendType, { timeParts } = {}) => {\n    const timeData = buildVariableArgs('time', pick(timeParts, []));\n\n    return ({\n        tokenType: TokenTypes.TREND,\n        args: ['trendType', ...timeData.timeArgs],\n        context: uuidv4(),\n\n        trendType,\n        ...timeData,\n\n        trendTypeP: trendTypesMapping[trendType],\n    });\n};\n\nconst createHourMinutePart = (value, { trendTimeType, hour, minutes }) => {\n    const result = { trendTimeType, hour, minutes };\n    return { value, parsed: result };\n};\n\nconst parseTimeToken = (parser, prefix, trendTimeType) => {\n    const { completeMatch, groups } = parser.matchNextTokenAndForward(`${prefix}(?<hour>[0-9]{2})(?<minutes>[0-9]{2})`);\n    if (isNotNullOrUndefined(groups)) {\n        return createHourMinutePart(completeMatch, { trendTimeType, ...groups });\n    }\n\n    return null;\n};\n\nconst parseFrom = (parser) => parseTimeToken(parser, 'FM', TrendTimeType.FROM);\nconst parseUntil = (parser) => parseTimeToken(parser, 'TL', TrendTimeType.UNTIL);\nconst parseAt = (parser) => parseTimeToken(parser, 'AT', TrendTimeType.AT);\n\nconst parseTimeInfo = (parser) => {\n    const groups = [];\n\n    const timeParserFuncs = [\n        parseFrom,\n        parseUntil,\n        parseAt,\n    ];\n\n    // We expect potentially as many groups as there are functions.\n    for (let i = 0; i < timeParserFuncs.length; i += 1) {\n        let finished = false;\n\n        // We find the type of group by executing each function in order and take the first non-null result.\n        for (let j = 0; j < timeParserFuncs.length; j += 1) {\n            const fnResult = timeParserFuncs[j](parser);\n\n            if (isNotNullOrUndefined(fnResult)) {\n                groups.push(fnResult);\n                break;\n            }\n\n            finished = true;\n        }\n\n        if (finished) {\n            break;\n        }\n    }\n\n    return groups;\n};\n\nexport const parseTrend = (parser) => {\n    const { completeMatch: completeMatchNOSIG } = parser.matchNextTokenAndForward('NOSIG');\n    if (isNotNullOrUndefined(completeMatchNOSIG)) {\n        return createTrendToken(completeMatchNOSIG);\n    }\n\n    const { completeMatch: completeMatchBecoming } = parser.matchNextTokenAndForward('BECMG');\n    if (isNotNullOrUndefined(completeMatchBecoming)) {\n        return createTrendToken(completeMatchBecoming, {\n            timeParts: parseTimeInfo(parser),\n        });\n    }\n\n    const { completeMatch: completeMatchTemporary } = parser.matchNextTokenAndForward('TEMPO');\n    if (isNotNullOrUndefined(completeMatchTemporary)) {\n        return createTrendToken(completeMatchTemporary, {\n            timeParts: parseTimeInfo(parser),\n        });\n    }\n\n    return null;\n};\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { TokenTypes } from 'lib/metar/enums';\n\nconst createVerticalVisibilityToken = (altitude) => ({\n    tokenType: TokenTypes.VERTICAL_VISIBILITY,\n    args: ['altitude'],\n\n    altitude,\n    altitudeP: altitude === '///' ? null : altitude * 100,\n});\n\nexport const parseVerticalVisibility = (parser) => {\n    const { groups: vvAltGroups } = parser.matchNextTokenAndForward(\n        'VV(?<altitude>[0-9]{3})',\n    );\n    if (isNotNullOrUndefined(vvAltGroups)) {\n        return createVerticalVisibilityToken(vvAltGroups.altitude);\n    }\n\n    const { completeMatch: noDataCompleteMatch } = parser.matchNextTokenAndForward('VV///');\n    if (isNotNullOrUndefined(noDataCompleteMatch)) {\n        return createVerticalVisibilityToken('///');\n    }\n\n    return null;\n};\n","import { isNotNullOrUndefined, isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport {\n    TokenTypes, WindDirections, WindForce, WindSpeedUnit,\n} from 'lib/metar/enums';\nimport { pick } from 'lib/pick';\n\nconst fixForce = (force) => {\n    if (force === '//') {\n        return WindForce.NOT_REPORTED;\n    }\n    return force[0] === 'P' ? 100 + 1 * force.substring(1) : 1 * force;\n};\n\nconst windDirectionsMapping = {\n    VRB: WindDirections.VRB,\n    '///': WindDirections.NOT_REPORTED,\n};\n\nconst createWindToken = (direction, force, unit, { gustsForce, fromDirection, toDirection } = {}) => ({\n    tokenType: TokenTypes.WIND,\n\n    args: ['direction', 'force', 'gustsForce', 'unit', 'fromDirection', 'toDirection'],\n\n    direction,\n    force,\n    unit,\n    gustsForce: pick(gustsForce),\n    fromDirection: pick(fromDirection),\n    toDirection: pick(toDirection),\n\n    isCalm: direction === '000' && force === '00',\n\n    directionP: pick(windDirectionsMapping[direction], 1 * direction),\n    fromDirectionP: isNullOrUndefined(fromDirection) ? null : 1 * fromDirection,\n    toDirectionP: isNullOrUndefined(toDirection) ? null : 1 * toDirection,\n\n    forceP: fixForce(force),\n    gustsForceP: isNullOrUndefined(gustsForce) ? null : fixForce(gustsForce),\n    unitP: unit === 'KT' ? WindSpeedUnit.KNOTS : WindSpeedUnit.METERS_PER_SECOND,\n});\n\nconst parseWindVariableDirection = (parser) => {\n    const { groups } = parser.matchNextTokenAndForward(\n        '(?<fromDirection>[0-9]{3})V(?<toDirection>[0-9]{3})',\n    );\n\n    if (isNotNullOrUndefined(groups)) {\n        const { fromDirection, toDirection } = groups;\n        return { fromDirection, toDirection };\n    }\n    return {};\n};\n\nexport const parseWind = (parser) => {\n    const { groups: simpleGroups } = parser.matchNextTokenAndForward(\n        '(?<direction>(VRB|[0-9]{3}|///))(?<force>(P?[0-9]{2}|//))(?<unit>KT|MPS)',\n    );\n    if (isNotNullOrUndefined(simpleGroups)) {\n        const { direction, force, unit } = simpleGroups;\n        return createWindToken(\n            direction,\n            force,\n            unit,\n            parseWindVariableDirection(parser),\n        );\n    }\n\n    const { groups: withGustsGroups } = parser.matchNextTokenAndForward(\n        '(?<direction>(VRB|[0-9]{3}|///))(?<force>(P?[0-9]{2}|//))G(?<gustsForce>(P?[0-9]{2}|//))(?<unit>KT|MPS)',\n    );\n    if (isNotNullOrUndefined(withGustsGroups)) {\n        const {\n            direction, force, unit, gustsForce,\n        } = withGustsGroups;\n\n        return createWindToken(\n            direction,\n            force,\n            unit,\n            {\n                gustsForce,\n                ...parseWindVariableDirection(parser),\n            },\n        );\n    }\n\n    return null;\n};\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { TokenTypes, WindShearRunway } from 'lib/metar/enums';\n\nconst allRwyValue = 'ALL RWY';\n\nconst createWindShearTokens = (runway) => ({\n    tokenType: TokenTypes.WIND_SHEAR,\n    args: ['runway'],\n\n    runway,\n\n    runwayP: runway === allRwyValue ? WindShearRunway.ALL_RUNWAYS : runway.substring(1),\n});\n\nexport const parseWindShear = (parser) => {\n    const { completeMatch: completeMatchAllRwy } = parser.matchNextTokenAndForward('WS\\\\s+ALL\\\\s+RWY');\n    if (isNotNullOrUndefined(completeMatchAllRwy)) {\n        return createWindShearTokens(allRwyValue);\n    }\n\n    const { groups: rwyGroups } = parser.matchNextTokenAndForward('WS\\\\s+(?<runway>R[0-9]{2})');\n    if (isNotNullOrUndefined(rwyGroups)) {\n        return createWindShearTokens(rwyGroups.runway);\n    }\n\n    return null;\n};\n","import { isNotNullOrUndefined, isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { TokenTypes } from 'lib/metar/enums';\nimport { pick } from 'lib/pick';\n\nexport class ParserState {\n    constructor(metar) {\n        this.originalMetar = metar;\n        this.currentValue = metar;\n        this.context = null;\n\n        this.tokens = [];\n    }\n\n    hasMoreToMatch() {\n        this.skipWhitespace();\n        return this.currentValue.length !== 0;\n    }\n\n    matchAndForward(pattern) {\n        const result = this.currentValue.match(new RegExp(pattern));\n\n        if (isNullOrUndefined(result)) {\n            return { matched: false };\n        }\n\n        this.currentValue = this.currentValue.substring(\n            result.index + result[0].length,\n        );\n\n        return {\n            matched: true,\n            completeMatch: pick(result[0], '').trim(),\n            groups: pick(result.groups),\n        };\n    }\n\n    matchNextTokenAndForward(pattern) {\n        this.skipWhitespace();\n\n        const { matched: matched1, ...result1 } = this.matchAndForward(`^${pattern}$`);\n        if (matched1) {\n            return result1;\n        }\n\n        const { matched: matched2, ...result2 } = this.matchAndForward(`^${pattern}\\\\s`);\n        if (matched2) {\n            return result2;\n        }\n\n        return {};\n    }\n\n    skipWhitespace() {\n        this.matchAndForward('^\\\\s+');\n    }\n\n    skipToken() {\n        const { completeMatch } = this.matchNextTokenAndForward('[^\\\\s]+');\n\n        this.pushToken({\n            tokenType: TokenTypes.NOT_RECOGNIZED,\n            value: completeMatch,\n            message: 'Token was not recognized.',\n        });\n    }\n\n    pushToken(value) {\n        if (value.context !== undefined) {\n            this.context = value.context;\n        }\n\n        this.tokens.push({\n            context: pick(this.context),\n            ...value,\n        });\n    }\n\n    cleanIrrelevantCharacters() {\n        const result = this.currentValue.match(new RegExp('=+$'));\n        if (isNotNullOrUndefined(result)) {\n            this.currentValue = this.currentValue.substring(\n                0, this.currentValue.length - result[0].length,\n            );\n        }\n    }\n}\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { parseAltimeter } from 'lib/metar/parsers/altimeter';\nimport { parseCloudDescriptors } from 'lib/metar/parsers/cloudDescriptors';\nimport { parseColorSystems } from 'lib/metar/parsers/colorSystems';\nimport {\n    parseAirportICAOCode,\n    parseAuto,\n    parseMETARTime,\n    parseNIL,\n    parseCOR,\n    skipMETARPrefix,\n} from 'lib/metar/parsers/metarPrefixes';\nimport { parseMissingData } from 'lib/metar/parsers/missingData';\nimport { parsePresentWeather } from 'lib/metar/parsers/presentWeather';\nimport { parsePrevailingVisibility } from 'lib/metar/parsers/prevailingVisibility';\nimport { parseRecentWeather } from 'lib/metar/parsers/recentWeather';\nimport { parseRemarks } from 'lib/metar/parsers/remarks';\nimport { parseRunwayState } from 'lib/metar/parsers/runwayState';\nimport { parseRunwayVisualRange } from 'lib/metar/parsers/runwayVisualRange';\nimport { parseSeaSurface } from 'lib/metar/parsers/seaSurface';\nimport { parseTemperatures } from 'lib/metar/parsers/temperatures';\nimport { parseTrend } from 'lib/metar/parsers/trend';\nimport { parseVerticalVisibility } from 'lib/metar/parsers/verticalVisibility';\nimport { parseWind } from 'lib/metar/parsers/wind';\nimport { parseWindShear } from 'lib/metar/parsers/windShear';\nimport { ParserState } from 'lib/metar/parserState';\nimport { pick } from 'lib/pick';\n\nconst prefixFunctions = [\n    skipMETARPrefix,\n    parseCOR,\n    parseAirportICAOCode,\n    parseMETARTime,\n];\n\nconst parsersFunctions = [\n    parseCOR,\n    parseNIL,\n    parseAuto,\n\n    parseAltimeter,\n    parseCloudDescriptors,\n    parsePresentWeather,\n    parsePrevailingVisibility,\n    parseRemarks,\n    parseRunwayVisualRange,\n    parseTemperatures,\n    parseTrend,\n    parseVerticalVisibility,\n    parseWind,\n    parseRecentWeather,\n    parseWindShear,\n    parseSeaSurface,\n    parseRunwayState,\n    parseColorSystems,\n\n    parseMissingData,\n];\n\nconst parseToken = (parser) => {\n    for (let idx = 0; idx < parsersFunctions.length; idx += 1) {\n        const result = parsersFunctions[idx](parser);\n\n        if (isNotNullOrUndefined(result)) {\n            parser.pushToken(result);\n            return true;\n        }\n    }\n    return false;\n};\n\nconst parseNextToken = (parser) => {\n    if (parseToken(parser)) {\n        return;\n    }\n\n    parser.skipToken();\n};\n\nexport const parseMETAR = (value) => {\n    const parser = new ParserState(pick(value, ''));\n    parser.cleanIrrelevantCharacters();\n\n    prefixFunctions.forEach((fn) => {\n        if (!parser.hasMoreToMatch()) {\n            return;\n        }\n\n        const result = fn(parser);\n        if (isNotNullOrUndefined(result)) {\n            parser.pushToken(result);\n        }\n    });\n\n    while (parser.hasMoreToMatch()) {\n        parseNextToken(parser);\n    }\n\n    return parser.tokens;\n};\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { TokenTypes } from 'lib/metar/enums';\n\nexport const parseRemarks = (parser) => {\n    const { groups } = parser.matchAndForward('^RMK\\\\s+(?<remarks>[^]+)$');\n\n    if (isNotNullOrUndefined(groups)) {\n        const { remarks } = groups;\n\n        return {\n            tokenType: TokenTypes.REMARKS,\n            args: ['rmk', 'remarks'],\n            context: null,\n\n            rmk: 'RMK',\n            remarks,\n        };\n    }\n    return null;\n};\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { RunwayVisualRangeQualifier, TokenTypes } from 'lib/metar/enums';\n\nexport const parseRunwayVisualRange = (parser) => {\n    const { groups } = parser.matchNextTokenAndForward(\n        'R(?<runway>[0-9]{2})/(?<qualifier>M|P|)(?<distance>[0-9]{4})',\n    );\n    if (isNotNullOrUndefined(groups)) {\n        const { runway, qualifier, distance } = groups;\n\n        let qualifierP = RunwayVisualRangeQualifier.NONE;\n        if (qualifier === 'M') {\n            qualifierP = RunwayVisualRangeQualifier.AT_MOST;\n        } else if (qualifier === 'P') {\n            qualifierP = RunwayVisualRangeQualifier.AT_LEAST;\n        }\n\n        return {\n            tokenType: TokenTypes.RUNWAY_VISUAL_RANGE,\n            args: ['runway', 'qualifier', 'distance'],\n\n            runway,\n            qualifier: qualifier === '' ? null : qualifier,\n            distance,\n\n            qualifierP,\n            distanceP: 1 * distance,\n        };\n    }\n\n    return null;\n};\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { TokenTypes } from 'lib/metar/enums';\nimport { fixTemp, TemperaturePattern } from 'lib/metar/parsers/internal/temperatures';\n\nexport const parseTemperatures = (parser) => {\n    const { groups } = parser.matchNextTokenAndForward(\n        `(?<oat>${TemperaturePattern})/(?<dewPoint>${TemperaturePattern})`,\n    );\n\n    if (isNotNullOrUndefined(groups)) {\n        const { oat, dewPoint } = groups;\n\n        return {\n            tokenType: TokenTypes.TEMPERATURES,\n            args: ['oat', 'dewPoint'],\n\n            oat,\n            dewPoint,\n\n            oatP: fixTemp(oat),\n            dewPointP: fixTemp(dewPoint),\n        };\n    }\n    return null;\n};\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { TokenTypes } from 'lib/metar/enums';\nimport { buildVariableArgs } from 'lib/metar/parsers/internal/varargs';\n\nconst splitValues = (completeMatch) => completeMatch.trim().split(/\\s+/).map((value) => ({ value, parsed: value }));\n\nexport const parseColorSystems = (parser) => {\n    const { completeMatch } = parser.matchNextTokenAndForward('(((WHT|GRN|BLU|YLO|RED|BLACK)(\\\\+|-)?)\\\\s*)+');\n    if (isNotNullOrUndefined(completeMatch)) {\n        const colorData = buildVariableArgs('color', splitValues(completeMatch));\n        return {\n            tokenType: TokenTypes.COLOR_SYSTEMS,\n            args: [...colorData.colorArgs],\n\n            ...colorData,\n        };\n    }\n\n    return null;\n};\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { TokenTypes } from 'lib/metar/enums';\n\nexport const parseMissingData = (parser) => {\n    const { completeMatch } = parser.matchNextTokenAndForward('/+');\n\n    if (isNotNullOrUndefined(completeMatch)) {\n        return {\n            tokenType: TokenTypes.MISSING_DATA,\n            args: ['value'],\n            value: completeMatch,\n        };\n    }\n    return null;\n};\n","import React, { useEffect, useMemo, useState } from 'react';\n\nimport {\n    Button, Col, Form, Input, List, Row, Typography, Alert, notification,\n} from 'antd';\nimport PropTypes from 'prop-types';\nimport { styled, useStyletron, withStyle } from 'styletron-react';\n\nimport { CenteredContentContainer } from 'components/lib/CenteredContentContainer';\nimport { ExternalLink } from 'components/lib/ExternalLink';\nimport { Monospaced } from 'components/lib/Monospaced';\nimport { VerticalSpace, VWSpace } from 'components/lib/spaces';\nimport { TokenRenderers } from 'components/metar/renderers/mapping';\nimport { getFullBaseURL } from 'lib/getFullBaseURL';\nimport { isNotNullOrUndefined, isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { useMetarURLConfig } from 'lib/metar/hooks/useMetarURLConfig';\nimport { parseMETAR } from 'lib/metar/parser';\nimport { objectMap } from 'lib/objects';\nimport { pick } from 'lib/pick';\n\nconst { Title } = Typography;\n\nconst METARDataValueContainer = styled('div', {\n    display: 'flex',\n    alignItems: 'center', /* Vertical center alignment */\n    justifyContent: 'center', /* Horizontal center alignment */\n    height: '100%',\n    padding: '4px',\n});\n\nconst METARColumnContainer = styled('div', {\n    padding: '12px 0px',\n});\n\nconst METARDataValue = withStyle(Monospaced, {\n    fontSize: '1.2em',\n    fontWeight: 'bold',\n});\n\nconst Arg = withStyle(Monospaced, {\n    fontWeight: 'bold',\n});\n\nconst argWithColor = (color) => withStyle(Arg, (props) => ({\n    color,\n    textDecoration: props.$isEven ? undefined : 'underline',\n}));\n\nconst ArgComponents = [\n    '#2f66a9',\n    '#a9502f',\n    '#35771a',\n    '#a12fa9',\n    '#a9912f',\n    '#2fa98d',\n].map(argWithColor);\n\nconst ContextColors = [\n    'rgba(0,116,255,0.1)',\n    'rgba(255,135,0,0.15)',\n    'rgba(4,255,0,0.15)',\n];\n\nconst getArgumentComp = (idx) => ArgComponents[idx % ArgComponents.length];\n\nconst buildPrettyArgs = (data) => {\n    let counter = 0;\n    const result = {};\n\n    pick(data.args, []).forEach((argName) => {\n        const arg = data[argName];\n\n        if (isNullOrUndefined(arg)) {\n            return;\n        }\n\n        const Comp = getArgumentComp(counter);\n        result[argName] = <Comp $isEven={counter % 2 === 0}>{arg}</Comp>;\n        counter += 1;\n    });\n\n    return result;\n};\n\nconst DisplayInfo = ({ data }) => {\n    const [css] = useStyletron();\n\n    const prettyArgs = buildPrettyArgs(data);\n\n    const tokenTypeRenderers = pick(TokenRenderers[data.tokenType], {});\n\n    const result = {\n        renderValue: ({ data: { value } }) => <>{value}</>,\n        renderTitle: null,\n        renderShort: null,\n        renderDescription: null,\n        ...tokenTypeRenderers,\n    };\n\n    const {\n        renderedValue,\n        renderedTitle,\n        renderedShort,\n        renderedDescription,\n    } = objectMap(\n        {\n            renderedValue: result.renderValue,\n            renderedTitle: result.renderTitle,\n            renderedShort: result.renderShort,\n            renderedDescription: result.renderDescription,\n        },\n        (fn) => (isNullOrUndefined(fn) ? null : fn({ data, prettyArgs })),\n    );\n\n    let containerStyle = { width: '100%' };\n    let contentStyle = { padding: '0px 18px' };\n\n    if (isNotNullOrUndefined(data.context)) {\n        containerStyle = {\n            ...containerStyle,\n            backgroundColor: ContextColors[data.contextCounter % ContextColors.length],\n        };\n\n        if (!data.isFirstInContext) {\n            contentStyle = {\n                ...contentStyle,\n                backgroundColor: 'white',\n            };\n        }\n    }\n\n    return (\n        <div className={css(containerStyle)}>\n            <Row>\n                <Col span={6}>\n                    <METARColumnContainer>\n                        <METARDataValueContainer>\n                            <METARDataValue className=\"metar-data\">\n                                {renderedValue}\n                            </METARDataValue>\n                        </METARDataValueContainer>\n                    </METARColumnContainer>\n                </Col>\n\n                <Col span={18} className={css(contentStyle)}>\n                    <METARColumnContainer>\n                        {isNullOrUndefined(renderedTitle) ? null : (\n                            <Title level={5}>{renderedTitle}</Title>\n                        )}\n                        {isNullOrUndefined(renderedShort) ? null : (\n                            <>\n                                <strong>Short:</strong>\n                                {' '}\n                                {renderedShort}\n                            </>\n                        )}\n                    </METARColumnContainer>\n                </Col>\n            </Row>\n            {isNullOrUndefined(renderedDescription) ? null : (\n                <Row>\n                    <Col offset={6} span={18}>\n                        {renderedDescription}\n                    </Col>\n                </Row>\n            )}\n        </div>\n    );\n};\n\nDisplayInfo.propTypes = {\n    // eslint-disable-next-line react/forbid-prop-types\n    data: PropTypes.any.isRequired,\n};\n\nconst useShareableLinkHandler = ({ metarData, metarURLManager }) => useMemo(() => () => {\n    const url = `${getFullBaseURL()}${metarURLManager.buildURL(metarData)}`;\n\n    navigator.clipboard.writeText(url).then(() => {\n        notification.success({\n            message: 'Copy Successful',\n            description: 'A shareable link was successfully copied into your clipboard!',\n        });\n    });\n}, [metarURLManager, metarData]);\n\nexport const Metar = () => {\n    const [form] = Form.useForm();\n\n    // This is the data that was actually explained. Textarea content may be different if user changed it.\n    const [metarData, setMetarData] = useState('');\n\n    // This tracks whether there is data in the textarea, which enables the explain button.\n    const [explainButtonEnabled, setExplainButtonEnabled] = useState(false);\n\n    const updateExplainedButtonEnabledState = useMemo(\n        () => (value) => { setExplainButtonEnabled(value.replace(/\\s/g, '') !== ''); },\n        [setExplainButtonEnabled],\n    );\n\n    const { initialValue, metarURLManager } = useMetarURLConfig();\n\n    // Every time the state from the URL changes to a new value, we update current data. This is cleared\n    // automatically so this only happens when a shareable link is pasted.\n    useEffect(\n        () => {\n            form.setFieldsValue({ metarFieldData: initialValue });\n            setMetarData(initialValue);\n            updateExplainedButtonEnabledState(initialValue);\n        },\n        [initialValue],\n    );\n\n    // This helps track if the data in the textarea has changed, which disables the shareable link button\n    // until the metar is explained.\n    const [metarDataChanged, setMetarDataChanged] = useState(false);\n\n    // Whenever textarea data is changed, this event handler is called.\n    const onChangeMETAR = useMemo(\n        () => (event) => {\n            const metarFieldData = event.target.value;\n\n            setMetarDataChanged(metarData !== metarFieldData);\n            updateExplainedButtonEnabledState(metarFieldData);\n        },\n        [metarData, setMetarDataChanged],\n    );\n\n    // When Explain button is pressed, this event handler is called.\n    const onFinish = useMemo(() => ({ metarFieldData }) => {\n        setMetarData(metarFieldData);\n        setMetarDataChanged(false);\n    }, [setMetarData]);\n\n    // Data gets parsed every time it changes.\n    const parsedData = useMemo(() => {\n        const result = [];\n        const tokens = parseMETAR(metarData);\n\n        let currentContext = null;\n        let contextCounter = -1;\n\n        for (let idx = 0; idx < tokens.length; idx += 1) {\n            let isFirstInContext = false;\n            const token = tokens[idx];\n\n            if (currentContext !== token.context) {\n                currentContext = token.context;\n\n                contextCounter += 1;\n                isFirstInContext = true;\n            }\n\n            result.push({\n                ...token,\n\n                contextCounter,\n                isFirstInContext,\n            });\n        }\n\n        return result;\n    }, [metarData]);\n\n    // Handler for shareable button.\n    const onClickShareableLink = useShareableLinkHandler({ metarData, metarURLManager });\n\n    const shareableButtonDisabled = useMemo(\n        () => metarDataChanged || metarData === '',\n        [metarDataChanged, metarData],\n    );\n\n    return (\n        <CenteredContentContainer>\n            <Alert\n                message={(\n                    <>\n                        This is a new feature currently in testing stage (beta). It is based on the\n                        {' '}\n                        <ExternalLink href=\"https://library.wmo.int/doc_num.php?explnum_id=10474\">\n                            World Meteorogical Organization&apos;s METAR reference\n                        </ExternalLink>\n                        {' '}\n                        (\n                        <ExternalLink href=\"https://library.wmo.int/doc_num.php?explnum_id=10235\">\n                            Code Tables\n                        </ExternalLink>\n                        )\n                        . Please feel free to leave feedback on the\n                        {' '}\n                        <ExternalLink href=\"https://github.com/fmichea/flightsim-tools/issues\">\n                            issue tracker\n                        </ExternalLink>\n                        {' '}\n                        with improvement ideas or sample METAR that cannot be parsed, as this gets improved.\n                    </>\n                )}\n                type=\"warning\"\n            />\n\n            <VerticalSpace />\n\n            <Form\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                form={form}\n                labelCol={{ span: 2 }}\n                wrapperCol={{ span: 22 }}\n            >\n                <Form.Item label=\"METAR\" name=\"metarFieldData\">\n                    <Input.TextArea onChange={onChangeMETAR} />\n                </Form.Item>\n\n                <Form.Item wrapperCol={{ offset: 2, span: 22 }}>\n                    <Button type=\"primary\" htmlType=\"submit\" disabled={!explainButtonEnabled}>\n                        Explain\n                    </Button>\n\n                    <VWSpace />\n\n                    <Button\n                        type=\"default\"\n                        htmlType=\"button\"\n                        onClick={onClickShareableLink}\n                        disabled={shareableButtonDisabled}\n                    >\n                        Copy Shareable Link\n                    </Button>\n                </Form.Item>\n            </Form>\n\n            <List\n                dataSource={parsedData}\n                renderItem={(item) => (\n                    <List.Item style={{ padding: '0' }}>\n                        <DisplayInfo data={item} />\n                    </List.Item>\n                )}\n            />\n        </CenteredContentContainer>\n    );\n};\n","import { isLocalServer } from 'lib/isLocalServer';\n\nexport const getFullBaseURL = () => {\n    let baseURL = 'https://fmichea.github.io';\n    if (isLocalServer()) {\n        baseURL = 'http://localhost:8081';\n    }\n    return `${baseURL}${process.env.PUBLIC_URL}/#`;\n};\n","import { listItemKey } from 'lib/checklist/listItemKey';\nimport { objectMap } from 'lib/objects';\nimport { intersection } from 'lib/sets';\nimport {\n    defaultChecklistListState,\n    defaultChecklistState,\n    INITIALIZE_CHECKLIST,\n    RESET_CHECKED_ITEMS,\n    RESET_LIST_CHECKED_ITEMS,\n    TOGGLE_HIDE_HELP_MODE, TOGGLE_HIDE_SWITCHES_MODE,\n    TOGGLE_HIDE_TAGS_MODE,\n    TOGGLE_ITEM,\n    TOGGLE_LEFT_HANDED_MODE,\n} from 'state/constants/checklist';\n\nconst initializeChecklist = (state, action) => {\n    const checkedItems = new Set(state.checkedItems);\n\n    return {\n        ...state,\n        counters: {\n            listItemsTotals: objectMap(action.checklistLists, (items) => items.length),\n            listItemsChecked: objectMap(action.checklistLists, (items) => {\n                const itemsSet = new Set(items);\n                return Array.from(intersection(itemsSet, checkedItems)).length;\n            }),\n        },\n    };\n};\n\nconst checkItem = (state, checklistListName, itemKey) => ({\n    ...state,\n    counters: {\n        ...state.counters,\n        listItemsChecked: {\n            ...state.counters.listItemsChecked,\n            [checklistListName]: state.counters.listItemsChecked[checklistListName] + 1,\n        },\n    },\n    checkedItems: [...state.checkedItems, itemKey],\n});\n\nconst uncheckItem = (state, checklistListName, itemKey) => ({\n    ...state,\n    counters: {\n        ...state.counters,\n        listItemsChecked: {\n            ...state.counters.listItemsChecked,\n            [checklistListName]: state.counters.listItemsChecked[checklistListName] - 1,\n        },\n    },\n    checkedItems: state.checkedItems.filter((item) => item !== itemKey),\n});\n\nconst checklistListReducer = (state = defaultChecklistListState, action) => {\n    switch (action.type) {\n    case INITIALIZE_CHECKLIST:\n        return initializeChecklist(state, action);\n\n    case RESET_CHECKED_ITEMS:\n        return {\n            ...state,\n            counters: {\n                ...state.counters,\n                listItemsChecked: objectMap(state.counters.listItemsChecked, () => 0),\n            },\n            checkedItems: [],\n        };\n\n    case RESET_LIST_CHECKED_ITEMS:\n        return {\n            ...state,\n            counters: {\n                ...state.counters,\n                listItemsChecked: objectMap(\n                    state.counters.listItemsChecked,\n                    (value, key) => (key === action.checklistListName ? 0 : value),\n                ),\n            },\n            checkedItems: state.checkedItems.filter((value) => !value.startsWith(listItemKey(\n                action.checklistName,\n                action.checklistListName,\n                '',\n            ))),\n        };\n\n    case TOGGLE_ITEM:\n        if (state.checkedItems.includes(action.itemKey)) {\n            return uncheckItem(state, action.checklistListName, action.itemKey);\n        }\n        return checkItem(state, action.checklistListName, action.itemKey);\n\n    default:\n        return state;\n    }\n};\n\nconst toggleGlobalConfig = (state, fn) => ({\n    ...state,\n    config: {\n        ...state.config,\n        ...fn(state.config),\n    },\n});\n\nexport const checklistReducer = (state = defaultChecklistState, action) => {\n    switch (action.type) {\n    case TOGGLE_LEFT_HANDED_MODE:\n        return toggleGlobalConfig(state, (config) => ({ leftHandedMode: !config.leftHandedMode }));\n\n    case TOGGLE_HIDE_TAGS_MODE:\n        return toggleGlobalConfig(state, (config) => ({ hideTagsMode: !config.hideTagsMode }));\n\n    case TOGGLE_HIDE_HELP_MODE:\n        return toggleGlobalConfig(state, (config) => ({ hideHelpMode: !config.hideHelpMode }));\n\n    case TOGGLE_HIDE_SWITCHES_MODE:\n        return toggleGlobalConfig(state, (config) => ({ hideSwitchesMode: !config.hideSwitchesMode }));\n\n    case INITIALIZE_CHECKLIST:\n    case TOGGLE_ITEM:\n    case RESET_CHECKED_ITEMS:\n    case RESET_LIST_CHECKED_ITEMS:\n        return {\n            ...state,\n            lists: {\n                ...state.lists,\n                [action.checklistName]: checklistListReducer(\n                    state.lists[action.checklistName],\n                    action,\n                ),\n            },\n        };\n\n    default:\n        return state;\n    }\n};\n","export const intersection = (setA, setB) => {\n    const result = new Set();\n\n    Array.from(setB).forEach((elem) => {\n        if (setA.has(elem)) {\n            result.add(elem);\n        }\n    });\n    return result;\n};\n","import { combineReducers } from 'redux';\n\nimport { checklistReducer } from 'state/reducers/checklist';\n\nexport const reducers = combineReducers({\n    checklist: checklistReducer,\n});\n","import { applyMiddleware, createStore } from 'redux';\nimport logger from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\n\nimport { isLocalServer } from 'lib/isLocalServer';\nimport { reducers } from 'state/reducers';\n\nexport const createAppStore = () => {\n    let middlewares = [thunkMiddleware];\n\n    if (isLocalServer()) {\n        middlewares = [...middlewares, logger];\n    }\n\n    return createStore(reducers, applyMiddleware(...middlewares));\n};\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\nimport { Route, Switch } from 'react-router';\nimport { HashRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { Client as Styletron } from 'styletron-engine-atomic';\nimport { Provider as StyletronProvider } from 'styletron-react';\n\nimport { AntiIce } from 'components/anti-ice/AntiIce';\nimport { Checklist } from 'components/checklists/Checklist';\nimport { Layout } from 'components/layout/Layout';\nimport { MainPage } from 'components/MainPage';\nimport { Metar } from 'components/metar/Metar';\nimport {\n    AntiIceWithNameAndOperationModeNameRoute,\n    AntiIceWithNameRoute,\n    ChecklistsWithNameAndListNameRoute,\n    ChecklistsWithNameRoute,\n    MetarExplainerRoute,\n} from 'lib/routes';\nimport { createAppStore } from 'state/store';\n\nconst AppLayout = () => (\n    <Layout>\n        <Switch>\n            <Route exact path={ChecklistsWithNameAndListNameRoute} component={Checklist} />\n            <Route exact path={ChecklistsWithNameRoute} component={Checklist} />\n            <Route exact path={AntiIceWithNameAndOperationModeNameRoute} component={AntiIce} />\n            <Route exact path={AntiIceWithNameRoute} component={AntiIce} />\n            <Route exact path={MetarExplainerRoute} component={Metar} />\n            <Route exact path=\"/\" component={MainPage} />\n        </Switch>\n    </Layout>\n);\n\nconst withRouter = () => (Component) => (props) => (\n    <HashRouter>\n        <Component {...props} />\n    </HashRouter>\n);\n\nconst withStore = () => (Component) => (props) => (\n    <Provider store={createAppStore()}>\n        <Component {...props} />\n    </Provider>\n);\n\nconst withStyletron = () => (Component) => (props) => (\n    <StyletronProvider value={new Styletron()}>\n        <Component {...props} />\n    </StyletronProvider>\n);\n\nconst enhance = compose(\n    withRouter(),\n    withStore(),\n    withStyletron(),\n);\n\nexport const App = enhance(AppLayout);\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\n\nimport { App } from 'App';\n\nimport 'reset-css';\nimport 'antd/dist/antd.css';\n\nconst root = document.getElementById('root') || document.createElement('div');\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    root,\n);\n"],"sourceRoot":""}