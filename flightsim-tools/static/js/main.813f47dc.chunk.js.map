{"version":3,"sources":["components/anti-ice/AntiIceAircraftNotFound.jsx","components/anti-ice/AntiIceConfigurationSelector.jsx","components/lib/CenteringContainer.jsx","components/anti-ice/AntiIceMoistureSelector.jsx","components/anti-ice/AntiIceTableFootnote.jsx","components/anti-ice/AntiIceTableFootnotes.jsx","components/lib/NotImplementedContainer.jsx","lib/anti-ice/data/modeStates.jsx","lib/isNullOrUndefined.jsx","lib/checklist/data/transforms.jsx","lib/anti-ice/data/modeStatesData.jsx","lib/anti-ice/data/tags.jsx","lib/pick.jsx","components/anti-ice/AntiIceRecommendationDisplay.jsx","components/anti-ice/AntiIceTemperatureSelector.jsx","components/anti-ice/AntiIceTemperatureTitle.jsx","lib/anti-ice/data/aircrafts.jsx","lib/anti-ice/data/images.jsx","lib/anti-ice/data/operationModes.jsx","lib/anti-ice/data/systemModes.jsx","lib/anti-ice/data/aircraftsData.jsx","lib/anti-ice/data/systemModesData.jsx","lib/anti-ice/data/operationModesData.jsx","lib/anti-ice/hooks/useAntiIceOperationModeData.jsx","lib/anti-ice/data/imagesData.jsx","lib/anti-ice/hooks/useAntiIce.jsx","lib/anti-ice/hooks/useAntiIceMenuItems.jsx","lib/anti-ice/hooks/useAntiIceRecommendation.jsx","components/anti-ice/AntiIceDisplay.jsx","components/lib/CenteredContentContainer.jsx","lib/hooks/useQueryParams.jsx","lib/routes.jsx","lib/anti-ice/hooks/useAntiIceURLConfig.jsx","components/anti-ice/AntiIce.jsx","lib/anti-ice/hooks/useAntiIceCheck.jsx","components/lib/Clearfix.jsx","components/checklists/ChecklistConfigurationSwitch.jsx","lib/hooks/deep.jsx","lib/checklist/hooks/useChecklistURLConfig.jsx","state/constants/checklist.jsx","components/checklists/propTypes.jsx","state/readers/checklist.jsx","lib/checklist/hooks/useChecklistGlobalConfig.jsx","lib/checklist/hooks/useChecklistGlobalConfigWithTogglers.jsx","state/actions/checklist.jsx","lib/hooks/useBooleanToggle.jsx","components/checklists/ChecklistConfigureButton.jsx","components/lib/colors.jsx","components/lib/spaces.jsx","components/checklists/ChecklistInfo.jsx","lib/hooks/useDocumentTitle.jsx","lib/checklist/hooks/useChecklistListInfoData.jsx","components/checklists/ChecklistListInfo.jsx","components/checklists/formatting.jsx","components/lib/Monospaced.jsx","lib/numbers.jsx","components/checklists/ChecklistListItemHelp.jsx","components/checklists/ChecklistListItemSwitch.jsx","components/checklists/ChecklistListItemTags.jsx","lib/checklist/data/tags.jsx","lib/checklist/listItemKey.jsx","lib/checklist/hooks/useChecklistListItemData.jsx","components/checklists/ChecklistListItemDisplay.jsx","components/checklists/ChecklistNextListButton.jsx","components/checklists/ChecklistNextListButtonDisplay.jsx","components/checklists/ChecklistProgressAlert.jsx","components/checklists/ChecklistNextListButtonsDisplay.jsx","components/checklists/ChecklistListDisplay.jsx","lib/objects.jsx","lib/checklist/hooks/useChecklistCountersInit.jsx","lib/checklist/data/checklists.jsx","lib/checklist/data/filters.jsx","lib/checklist/data/listItems.jsx","lib/checklist/data/lists.jsx","lib/checklist/data/checklistsData/c172g1000.jsx","lib/checklist/data/checklistsData/c172steam.jsx","components/lib/ExternalLink.jsx","lib/checklist/data/checklistsData/cj4.jsx","lib/checklist/data/checklistsData/crj.jsx","lib/checklist/data/checklistsData.jsx","lib/checklist/data/filtersResults.jsx","lib/checklist/data/filtersData.jsx","components/lib/CASMessage.jsx","lib/checklist/data/listItemsData/c172.jsx","lib/checklist/data/listItemsData/c172g1000.jsx","lib/checklist/data/listItemsData/c172steam.jsx","components/lib/KeyboardInputs.jsx","components/lib/vernacular/Vernacular.jsx","components/lib/vernacular/cj4.jsx","components/lib/vernacular/common.jsx","lib/checklist/data/listItemsData/cj4.jsx","lib/checklist/data/listItemsData/cj4ext.jsx","components/lib/vernacular/crj.jsx","lib/checklist/data/listItemsData/crj.jsx","lib/checklist/data/listItemsData/crjext.jsx","lib/checklist/data/listItemsData/simulatorSetup.jsx","lib/checklist/data/listItemsData/vatsim.jsx","lib/checklist/data/listItemsData.jsx","lib/checklist/data/listsData.jsx","lib/checklist/data/tagsData.jsx","lib/checklist/hooks/useChecklistFilteredLists.jsx","lib/checklist/hooks/useChecklist.jsx","lib/checklist/hooks/useChecklistData.jsx","components/checklists/ChecklistDisplay.jsx","lib/checklist/hooks/useChecklistSelectedListScroll.jsx","components/checklists/ChecklistNotFound.jsx","components/checklists/Checklist.jsx","lib/checklist/hooks/useChecklistCheck.jsx","lib/hooks/useWindowDimensions.jsx","components/layout/Footer.jsx","components/layout/HeaderLogo.jsx","components/layout/Navbar.jsx","components/layout/Layout.jsx","components/lib/List.jsx","components/MainPage.jsx","components/metar/renderers/airportIdentifier/propTypes.jsx","components/metar/renderers/airportIdentifier/AirportIdenfitierValue.jsx","components/metar/renderers/airportIdentifier/AirportIdentifierShort.jsx","components/metar/renderers/airportIdentifier/renderers.jsx","components/metar/renderers/altimeter/propTypes.jsx","lib/metar/enums.jsx","components/metar/renderers/altimeter/AltimeterShort.jsx","components/metar/renderers/altimeter/AltimeterValue.jsx","components/metar/renderers/altimeter/renderers.jsx","components/metar/renderers/cloudCoverage/propTypes.jsx","components/metar/renderers/cloudCoverage/CloudCoverageShort.jsx","components/metar/renderers/cloudCoverage/CloudCoverageValue.jsx","components/metar/renderers/cloudCoverage/renderers.jsx","components/metar/renderers/colorSystems/renderers.jsx","components/metar/renderers/colorSystems/propTypes.jsx","components/metar/renderers/colorSystems/ColorSystemsValue.jsx","components/metar/renderers/colorSystems/ColorSystemsShort.jsx","components/metar/renderers/metarTime/propTypes.jsx","components/metar/renderers/metarTime/METARTimeShort.jsx","components/metar/renderers/metarTime/METARTimeValue.jsx","components/metar/renderers/metarTime/renderers.jsx","components/metar/renderers/missingData/propTypes.jsx","components/metar/renderers/missingData/MissingDataShort.jsx","components/metar/renderers/missingData/MissingDataValue.jsx","components/metar/renderers/missingData/renderers.jsx","components/metar/renderers/notRecognized/propTypes.jsx","components/metar/renderers/notRecognized/NotRecognizedShort.jsx","components/metar/renderers/notRecognized/NotRecognizedValue.jsx","components/metar/renderers/notRecognized/renderers.jsx","components/metar/renderers/prefix/propTypes.jsx","components/metar/renderers/prefix/PrefixShort.jsx","components/metar/renderers/prefix/PrefixTitle.jsx","components/metar/renderers/prefix/PrefixValue.jsx","components/metar/renderers/prefix/renderers.jsx","components/metar/renderers/presentWeather/propTypes.jsx","components/metar/renderers/presentWeather/PresentWeatherShort.jsx","components/metar/renderers/presentWeather/PresentWeatherValue.jsx","components/metar/renderers/presentWeather/renderers.jsx","components/metar/renderers/prevailingVisibility/propTypes.jsx","components/metar/renderers/prevailingVisibility/PrevailingVisibilityShort.jsx","components/metar/renderers/prevailingVisibility/PrevailingVisibilityValue.jsx","components/metar/renderers/prevailingVisibility/renderers.jsx","components/metar/renderers/recentWeather/propTypes.jsx","components/metar/renderers/recentWeather/RecentWeatherShort.jsx","components/metar/renderers/recentWeather/RecentWeatherValue.jsx","components/metar/renderers/recentWeather/renderers.jsx","components/metar/renderers/remarks/propTypes.jsx","components/metar/renderers/remarks/RemarksValue.jsx","components/metar/renderers/remarks/renderers.jsx","components/metar/renderers/remarks/RemarksShort.jsx","components/metar/renderers/runwayState/propTypes.jsx","components/metar/renderers/runwayState/RunwayStateShort.jsx","components/metar/renderers/runwayState/RunwayStateValue.jsx","components/metar/renderers/runwayState/renderers.jsx","components/metar/renderers/runwayVisualRange/propTypes.jsx","components/metar/renderers/runwayVisualRange/RunwayVisualRangeShort.jsx","components/metar/renderers/runwayVisualRange/RunwayVisualRangeValue.jsx","components/metar/renderers/runwayVisualRange/renderers.jsx","components/metar/renderers/seaSurface/propTypes.jsx","components/metar/renderers/temperatures/propTypes.jsx","components/metar/renderers/temperatures/TemperaturesShort.jsx","components/metar/renderers/seaSurface/SeaSurfaceShort.jsx","components/metar/renderers/seaSurface/SeaSurfaceValue.jsx","components/metar/renderers/seaSurface/renderers.jsx","components/metar/renderers/temperatures/renderers.jsx","components/metar/renderers/temperatures/TemperaturesValue.jsx","components/metar/renderers/trend/propTypes.jsx","components/metar/renderers/trend/TrendShort.jsx","components/metar/renderers/trend/TrendValue.jsx","components/metar/renderers/trend/renderers.jsx","components/metar/renderers/verticalVisibility/propTypes.jsx","components/metar/renderers/verticalVisibility/VerticalVisibilityShort.jsx","components/metar/renderers/verticalVisibility/VerticalVisibilityValue.jsx","components/metar/renderers/verticalVisibility/renderers.jsx","components/metar/renderers/wind/WindShort.jsx","components/metar/renderers/wind/propTypes.jsx","components/metar/renderers/wind/renderers.jsx","components/metar/renderers/wind/WindValue.jsx","components/metar/renderers/windShear/propTypes.jsx","components/metar/renderers/windShear/WindShearShort.jsx","components/metar/renderers/windShear/WindShearValue.jsx","components/metar/renderers/windShear/renderers.jsx","components/metar/renderers/mapping.jsx","lib/isLocalServer.jsx","lib/metar/hooks/useMetarURLConfig.jsx","lib/metar/parsers/altimeter.jsx","lib/metar/parsers/cloudDescriptors.jsx","lib/metar/parsers/internal/varargs.jsx","lib/metar/parsers/metarPrefixes.jsx","lib/metar/parsers/internal/weather.jsx","lib/metar/parsers/presentWeather.jsx","lib/metar/parsers/prevailingVisibility.jsx","lib/metar/parsers/recentWeather.jsx","lib/metar/parsers/runwayState.jsx","lib/metar/parsers/internal/temperatures.jsx","lib/metar/parsers/seaSurface.jsx","lib/metar/parsers/trend.jsx","lib/metar/parsers/verticalVisibility.jsx","lib/metar/parsers/wind.jsx","lib/metar/parsers/windShear.jsx","lib/metar/parserState.jsx","lib/metar/parser.jsx","lib/metar/parsers/remarks.jsx","lib/metar/parsers/runwayVisualRange.jsx","lib/metar/parsers/temperatures.jsx","lib/metar/parsers/colorSystems.jsx","lib/metar/parsers/missingData.jsx","components/metar/Metar.jsx","lib/getFullBaseURL.jsx","state/reducers/checklist.jsx","lib/sets.jsx","state/reducers/index.jsx","state/store.jsx","App.jsx","index.jsx"],"names":["AntiIceAircraftNotFound","aircraftName","description","to","Option","Select","AntiIceConfigurationSelector","currentConfiguration","setCurrentConfiguration","optionalModesOrder","optionalModesMapping","hasMoreConfigs","length","optionalModesOptions","map","uid","value","title","onChange","disabled","style","width","CenteringContainer","styled","display","justifyContent","RightJustifyingContainer","AntiIceMoistureSelector","moisture","setMoisture","useMemo","event","target","Group","buttonStyle","Button","AntiIceTableFootnote","footnoteID","footnote","useStyletron","css","span","className","textAlign","paddingRight","FootnotesContainer","marginTop","marginBottom","fontSize","AntiIceTableFootnotes","NotImplementedContainer","opacity","commonModeStates","Object","freeze","ON","OPTIONALLY_ON","OPTIONALLY_OFF","OFF","AntiIceModeStates","isNullOrUndefined","undefined","isNotNullOrUndefined","transformTagsInit","tags","transformTagsMakeSet","tagsSet","Set","transformValueBuilder","transforms","allTransforms","transformedValue","forEach","transform","createTransformedMapping","values","result","transformValueFN","Error","createTransformedList","commonModeStatesData","label","color","isOptional","AntiIceModeStatesData","commonTags","NOT_IMPLEMENTED","AntiIceTags","pick","idx","arg","Title","Typography","ImageContainer","height","backgroundSize","columns","render","isNotImplemented","state","isNonDefault","AntiIceRecommendationDisplay","antiIceAircraftData","recommendations","defaultStates","states","image","recs","path","data","modesOrderData","defaultState","key","has","dataSource","size","pagination","position","level","backgroundImage","process","AntiIceTemperatureSelector","temperature","sliderData","marks","min","max","included","handleStyle","tipFormatter","AntiIceTemperatureTitle","name","fullName","temperatureHelp","placement","overlayStyle","maxWidth","QuestionCircleOutlined","AntiIceAircrafts","WORKINGTITLE_CJ4","cj4Images","CJ4_ALL_OFF","CJ4_ENG_ONLY_ON","CJ4_PITOT_HEAT_ENG_ONLY_ON","CJ4_PITOT_ON","CJ4_PITOT_WING_ENG_ON","AntiIceImages","AntiIceOperationModes","GROUND_OPERATION","IN_FLIGHT_OPERATION","cj4IceProtectionSystemsModes","CJ4_WING_ENG_ANTI_ICE_MODE","CJ4_ENG_ONLY_ANTI_ICE_MODE","CJ4_TAIL_DEICE_ANTI_ICE_MODE","CJ4_PITOT_STATIC_HEAT_ANTI_ICE_MODE","AntiIceSystemModes","Strongish","AntiIceAircraftsData","modesOrder","operationModes","modeName","defaultMode","moistureHelp","limits","limit","optionalModes","cj4SystemModesData","AntiIceSystemModesData","baseOperationModes","AntiIceOperationModesData","SliderTempLabel","cj4ImagesData","AntiIceImagesData","useAntiIce","selectedOperationModeName","antiIceURLManager","baseData","menuItems","v","operationModeName","selectMenu","changeOperationMode","useAntiIceMenuItems","operationModeData","aircraftOperationData","filter","temperatures","operationalMode","push","sort","hasTemperatures","changeTemperature","useAntiIceOperationModeData","changeMoisture","omd","useAntiIceRecommendation","AntiIceDisplay","operationModeFound","useState","useEffect","menu","selectedKeys","mode","Item","onClick","ContentContainer","padding","CenteredContentContainer","withStyle","margin","useQueryParams","search","useLocation","URLSearchParams","ChecklistsWithNameAndListNameRoute","ChecklistsWithNameRoute","AntiIceWithNameRoute","AntiIceWithNameAndOperationModeNameRoute","MetarExplainerRoute","AntiIceURLManager","history","this","pushURL","baseURL","buildURL","urlParams","buildURLParams","fn","replace","generatePath","queryParams","set","toString","AntiIce","useHistory","useParams","get","useAntiIceURLConfig","knownLists","aircraftNames","operationModesSet","aircraftFound","useAntiIceCheck","Clearfix","clear","ChecklistConfigurationSwitchContainer","ChecklistConfigurationSwitchSwitchContainer","float","marginLeft","ChecklistConfigurationSwitch","checked","defaultProps","useDeepDeps","deps","isFirst","useRef","prevDeps","counter","isFirstEffect","current","isSame","every","obj","index","isEqual","useDeepMemo","useDeepSelector","useSelector","ChecklistURLManager","checklistName","checklistListName","selectedFilters","filterName","filters","append","useChecklistURLConfig","getAll","useSelectedFilters","checklistURLManager","TOGGLE_LEFT_HANDED_MODE","PropTypes","oneOfType","instanceOf","shape","changeChecklistList","func","isRequired","addFilter","removeFilter","selectableFilters","arrayOf","string","selectableFiltersData","TOGGLE_HIDE_TAGS_MODE","TOGGLE_HIDE_HELP_MODE","TOGGLE_HIDE_SWITCHES_MODE","INITIALIZE_CHECKLIST","TOGGLE_ITEM","RESET_CHECKED_ITEMS","RESET_LIST_CHECKED_ITEMS","defaultChecklistListState","counters","listItemsChecked","listItemsTotals","checkedItems","defaultChecklistState","config","leftHandedMode","hideTagsMode","hideHelpMode","hideSwitchesMode","lists","getChecklistGlobalConfig","checklist","getChecklistData","useChecklistGlobalConfig","useChecklistGlobalConfigWithTogglers","dispatch","useDispatch","checklistConfig","togglers","type","useBooleanToggle","defaultValue","setValue","toggleOn","toggleOff","toggleValue","modalStyle","ChecklistConfigureButton","checklistData","filtersData","selectedFiltersSet","modalVisible","filterItems","filterData","filterUID","visible","onOk","onCancel","cancelButtonProps","maskClosable","header","DarkerGrey","DarkRed","DarkeningMask","VWSpace","props","$width","ThickSpace","ThinSpace","VerticalSpace","Text","ChecklistTitleContainer","backgroundColor","paddingTop","borderBottom","whiteSpace","ChecklistTitleButtonsContainer","titleStyle","overflow","textOverflow","ChecklistInfo","resetFullCallback","resetChecklistSelectCallback","document","useDocumentTitle","offsetTop","useChecklistListInfoData","checkedCount","totalsCount","getChecklistListCountersData","progressPercent","toFixed","listsData","setActiveCallback","resetCallback","resetChecklistListCheckedItems","ChecklistListTitleContainer","ChecklistListInfoDescription","ChecklistListProgressContainer","marginRight","ChecklistListInfo","percent","checklistListItemBackground","$isNotImplemented","$isChecked","$isOddItem","checklistListItemHoverBackground","ChecklistListItemWrapper","ChecklistListItemRow","ChecklistListSubItemRow","$isOddSubItem","ChecklistListItemTitle","$isSubItemsList","fontWeight","ChecklistListItemSubTitle","ChecklistListItemState","textTransform","ChecklistItemColumn","$fitToContent","paddingBottom","paddingLeft","$isFirst","$isLast","ChecklistSubItemsTable","Monospaced","fontFamily","isOdd","isEven","getOrdinalNumber","valueI","unit","decimal","ChecklistItemHelpWrapper","verticalAlign","cursor","maxHeight","modalBodyStyle","overflowX","iconInvisibleStyle","treeCharLastLeaf","treeCharLeaf","treeCharForward","treeCharWhitespace","renderItemLevelTree","levels","levelIdx","total","isLeafLevel","levelHasOtherItem","treeChar","Fragment","buildSubItemKey","join","renderSubItems","subItems","subItemsLength","subItem","subItemLevels","ChecklistListItemHelp","moreInfoShort","moreInfoLong","hasHelp","hasSubItems","modalTitle","UnorderedListOutlined","bodyStyle","ChecklistListItemSwitch","isChecked","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","tagStyle","ChecklistListItemTags","tagsData","Array","from","tag","hidden","ChecklistTags","OFFICIAL","EXTENSION","FIRST_FLIGHT_OF_DAY","IN_MEMORY_ITEM","CJ4","C172","C172_STEAM","C172_G1000","CRJ","VATSIM","SIMSETUP","listItemKey","itemName","defaultData","useChecklistListItemData","itemKey","listItemsData","dynamicData","includes","getChecklistListItemData","toggleChecked","toggleItem","ChecklistListItemDisplay","isOddItem","subTitleItems","switchColumn","rightColumn","leftColumn","isSwitchColumnFirst","isTagsColumnFirst","isTitleColumnFirst","isSwitchColumnLast","isHelpColumnLast","isStateColumnLast","item","ChecklistNextListButton","isEmergency","classNames","buttonType","ChecklistNextListButtonDisplay","ChecklistProgressAlert","alertType","message","showIcon","ChecklistNextListButtonsDisplay","nextListNames","$style","gap","nextListName","ChecklistItemsTable","ChecklistListContainer","ChecklistListDisplay","items","Element","objectMap","callback","entries","keyValue","objectFromList","lst","lstValue","useChecklistCountersInit","filteredChecklistLists","initializeChecklistData","listName","useDeepEffect","checklistLists","initializeChecklist","Checklists","AEROSOFT_CRJ","ChecklistFilters","EXCLUDE_ALL_BUT_OFFICIAL","INCLUDE_VATSIM_ITEMS","INCLUDE_EXTENSIONS","EXCLUDE_EXTENSIONS","INCLUDE_SIMSETUP_ITEMS","EXCLUDE_FIRST_FLIGHT_OF_DAY","cj4Items","CJ4_BEFORE_START_BATTERY_SWITCH","CJ4_BEFORE_START_EMERGENCY_LIGHTS_SWITCH","CJ4_BEFORE_START_STANDBY_FLIGHT_DISPLAY_SWITCH","CJ4_BEFORE_START_AVIONICS_SWITCH","CJ4_BEFORE_START_PARKING_BRAKES","CJ4_BEFORE_START_WHEEL_CHOCKS","CJ4_BEFORE_START_CABIN_DOOR","CJ4_BEFORE_START_PASSENGER_BRIEFING","CJ4_BEFORE_START_PILOTS_SEATS_ADJUSTED","CJ4_BEFORE_START_EXTERIOR_LIGHTS","CJ4_BEFORE_START_EICAS","CJ4_BEFORE_START_FMS","CJ4_BEFORE_START_CLIMATE_CONTROL_SELECTOR","CJ4_ENGINE_START_THROTTLES","CJ4_ENGINE_START_STARTER_BUTTON_PUSH","CJ4_ENGINE_START_RUNSTOP_BUTTON_TO_RUN","CJ4_ENGINE_START_ITT_RISE","CJ4_ENGINE_START_EICAS_CHECK","CJ4_ENGINE_START_OPPOSITE_ENGINE_START","CJ4_ENGINE_START_EXTERNAL_POWER_DISCONNECT","CJ4_ENGINE_START_ELECTRICAL_SYSTEM_CHECK","CJ4_BEFORE_TAXI_AVIONICS_SWITCH","CJ4_BEFORE_TAXI_CLIMATE_CONTROL_SWITCH","CJ4_BEFORE_TAXI_PASSENGER_LIGHTS_SAFETY","CJ4_BEFORE_TAXI_TRIMS","CJ4_BEFORE_TAXI_FLIGHT_CONTROLS_FREE","CJ4_BEFORE_TAXI_SPEEDBRAKE_CHECK","CJ4_BEFORE_TAXI_FLAPS","CJ4_BEFORE_TAXI_HYDRAULIC_PRESSURE_CHECK","CJ4_BEFORE_TAXI_ENGINE_ONLY_ANTI_ICE","CJ4_BEFORE_TAXI_TAKEOFF_DATA","CJ4_BEFORE_TAXI_AVIONICS_CHECK","CJ4_BEFORE_TAXI_AUTOPILOT_CONNECT_DISCONNECT","CJ4_BEFORE_TAXI_ALTIMETER_SET","CJ4_BEFORE_TAXI_PRESSURIZATION_CHECK","CJ4_BEFORE_TAXI_EICAS_CHECK","CJ4_BEFORE_TAXI_AFT_DIVIDER_DOORS_OPEN","CJ4_TAXI_EXTERIOR_LIGHTS","CJ4_TAXI_BRAKES_APPLIED","CJ4_TAXI_PARKING_BRAKE_RELEASED","CJ4_TAXI_BRAKES_CHECK","CJ4_TAXI_NOSE_WHEEL_STEERING_CHECK","CJ4_TAXI_FLIGHT_INSTRUMENTS_CHECK","CJ4_BEFORE_TAKEOFF_ICE_PROTECTION_SYSTEM_CHECK","CJ4_BEFORE_TAKEOFF_RUDDER_BIAS_SYSTEM_CHECK","CJ4_BEFORE_TAKEOFF_SEATS_UPRIGHT","CJ4_BEFORE_TAKEOFF_FLAPS_SET","CJ4_BEFORE_TAKEOFF_SPEEDBRAKES_OFF","CJ4_BEFORE_TAKEOFF_TRIMS_CHECK","CJ4_BEFORE_TAKEOFF_CREW_BRIEFING","CJ4_BEFORE_TAKEOFF_TCAS_TARA","CJ4_BEFORE_TAKEOFF_RADAR_AS_REQUIRED","CJ4_BEFORE_TAKEOFF_GA_BUTTON_PUSH","CJ4_BEFORE_TAKEOFF_BATTERY_AMPS_CHECK","CJ4_BEFORE_TAKEOFF_ICE_PROTECTION_SYSTEM_AS_REQUIRED","CJ4_BEFORE_TAKEOFF_PITOT_STATIC_HEAT_BUTTONS","CJ4_BEFORE_TAKEOFF_EICAS_CHECK","CJ4_BEFORE_TAKEOFF_EXTERIOR_LIGHTS","CJ4_TAKEOFF_THROTTLES","CJ4_TAKEOFF_N1_COMMAND_BUGS_GREEN","CJ4_TAKEOFF_BRAKES_RELEASED","CJ4_TAKEOFF_CONTROL_WHEEL_ROTATE_AT_VR","CJ4_AFTER_TAKEOFF_LANDING_GEAR_UP","CJ4_AFTER_TAKEOFF_FLAPS_0","CJ4_AFTER_TAKEOFF_THROTTLES_CLIMB","CJ4_AFTER_TAKEOFF_YAW_DAMPER_ON","CJ4_AFTER_TAKEOFF_AUTOPILOT_AS_REQUIRED","CJ4_AFTER_TAKEOFF_ICE_PROTECTION_SYSTEM_CHECK","CJ4_AFTER_TAKEOFF_PASSENGER_LIGHTS_AS_REQUIRED","CJ4_AFTER_TAKEOFF_EXTERIOR_LIGHTS","CJ4_AFTER_TAKEOFF_PRESSURIZATION_CHECK","CJ4_AFTER_TAKEOFF_ALTIMETERS_SET","CJ4_CRUISE_THROTTLES","CJ4_CRUISE_PRESSURIZATION","CJ4_CRUISE_ICE_PROTECTION_SYSTEMS","CJ4_DESCENT_PRESSURIZATION","CJ4_DESCENT_ICE_PROTECTION_SYSTEMS","CJ4_DESCENT_ALTIMETERS","CJ4_DESCENT_EXTERIOR_LIGHTS","CJ4_APPROACH_LANDING_DATA","CJ4_APPROACH_CREW_BRIEFING","CJ4_APPROACH_AVIONICS_FLIGHT_INSTRUMENTS","CJ4_APPROACH_MINIMUMS","CJ4_APPROACH_FUEL_TRANSFER_SELECTOR","CJ4_APPROACH_EXTERIOR_LIGHTS","CJ4_APPROACH_ICE_PROTECTION_SYSTEMS","CJ4_APPROACH_FLAPS","CJ4_APPROACH_PASSENGER_BRIEFING","CJ4_APPROACH_SEATS_UPRIGHT","CJ4_APPROACH_SEAT_BELTS","CJ4_APPROACH_PASSENGER_LIGHTS","CJ4_APPROACH_PRESSURIZATION","CJ4_BEFORE_LANDING_LANDING_GEAR","CJ4_BEFORE_LANDING_FLAPS","CJ4_BEFORE_LANDING_SPEEDBRAKES_OFF","CJ4_BEFORE_LANDING_AIRSPEED_VREF","CJ4_BEFORE_LANDING_AUTOPILOT_AND_YAW_DAMPER","CJ4_LANDING_THROTTLES","CJ4_LANDING_BRAKES","CJ4_LANDING_GROUND_SPOILERS","CJ4_GOAROUND_GA_BUTTON","CJ4_GOAROUND_THROTTLES_1","CJ4_GOAROUND_PITCH_ATTITUDE","CJ4_GOAROUND_FLAPS_1","CJ4_GOAROUND_LANDING_GEAR","CJ4_GOAROUND_FLAPS_2","CJ4_GOAROUND_AIRSPEED","CJ4_GOAROUND_THROTTLES_2","CJ4_GOAROUND_YAW_DAMPER","CJ4_GOAROUND_AUTOPILOT","CJ4_AFTER_LANDING_SPEEDBRAKES","CJ4_AFTER_LANDING_FLAPS","CJ4_AFTER_LANDING_PITOT_STATIC_HEAT","CJ4_AFTER_LANDING_ICE_PROTECTION_SYSTEMS","CJ4_AFTER_LANDING_RADAR","CJ4_AFTER_LANDING_EXTERIOR_LIGHTS","CJ4_SHUTDOWN_PARKING_BRAKE","CJ4_SHUTDOWN_EMERGENCY_LIGHTS","CJ4_SHUTDOWN_STANDBY_FLIGHT_DISPLAY","CJ4_SHUTDOWN_AVIONICS_SWITCH","CJ4_SHUTDOWN_CLIMATE_CONTROL_SELECTOR","CJ4_SHUTDOWN_ICE_PROTECTION_SYSTEMS","CJ4_SHUTDOWN_THROTTLES","CJ4_SHUTDOWN_ENGINE_RUNSTOP_BUTTONS","CJ4_SHUTDOWN_EXTERIOR_LIGHTS","CJ4_SHUTDOWN_BATTERY_SWITCH","CJ4_SHUTDOWN_CONTROL_LOCK","CJ4_SHUTDOWN_ENGINE_COVERS","cj4ExtItems","CJ4EXT_BEFORE_START_EXTERNAL_POWER","CJ4EXT_BEFORE_TAKEOFF_RUNWAY_HEADING","CJ4EXT_DESCENT_INTERIOR_LIGHTS","c172Items","C172_PREFLIGHT_AIRCRAFT_DOCUMENTS","C172_PREFLIGHT_PARKING_BRAKE","C172_PREFLIGHT_IGNITION","C172_PREFLIGHT_AVIONICS_SWITCHES_OFF","C172_PREFLIGHT_FUEL_QUANTITY","C172_PREFLIGHT_LOW_FUEL_ANNUNCIATORS","C172_PREFLIGHT_STATIC_PRESSURE_ALT_SOURCE_VALVE","C172_PREFLIGHT_FUEL_SELECTOR","C172_PREFLIGHT_PITOT_HEAT_ON","C172_PREFLIGHT_PITOT_HEAT_OFF","C172_BEFORE_START_PREFLIGHT_INSPECTION","C172_BEFORE_START_SEATS_BELTS","C172_BEFORE_START_ELECTRICAL_EQUIPMENT","C172_BEFORE_START_AVIONICS_SWITCHES","C172_BEFORE_START_FUEL_SELECTOR","C172_BEFORE_START_FUEL_SHUTOFF_VALVE","C172_ENGINE_START_THROTTLE","C172_ENGINE_START_MIXTURE_1","C172_ENGINE_START_PROPELLER_AREA","C172_ENGINE_START_BEACON_LIGHT","C172_ENGINE_START_MIXTURE_2","C172_ENGINE_START_AUX_FUEL_PUMP","C172_ENGINE_START_MIXTURE_3","C172_ENGINE_START_FEET_BRAKES","C172_ENGINE_START_IGNITION","C172_ENGINE_START_MIXTURE_4","C172_AFTER_START_THROTTLE","C172_AFTER_START_OIL_PRESSURE","C172_AFTER_START_FLAPS","C172_AFTER_START_AVIONICS_SWITCHES","C172_TAXI_TAXI_LIGHT","C172_TAXI_LANDING_LIGHT","C172_TAXI_STROBE_LIGHT","C172_TAXI_NAV_LIGHT","C172_TAXI_PARKING_BRAKE","C172_TAXI_BRAKES","C172_TAXI_RUDDER","C172_RUNUP_PARKING_BRAKE","C172_RUNUP_SEATS_BACKS","C172_RUNUP_SEATS_BELTS","C172_RUNUP_FLIGHT_CONTROLS_1","C172_RUNUP_FUEL_QUANTITY","C172_RUNUP_MIXTURE","C172_RUNUP_FUEL_SELECTOR","C172_RUNUP_AUTOPILOT","C172_RUNUP_FLIGHT_CONTROLS_2","C172_RUNUP_THROTTLE_1","C172_RUNUP_MAGNETOS_1","C172_RUNUP_MAGNETOS_2","C172_RUNUP_MAGNETOS_3","C172_RUNUP_VACCUM_GAUGE","C172_RUNUP_ENGINE_IDLE","C172_RUNUP_THROTTLE_2","C172_BEFORE_TAKEOFF_FLAPS","C172_BEFORE_TAKEOFF_CABIN_WINDOWS","C172_BEFORE_TAKEOFF_PARKING_BRAKE","C172_TAKEOFF_FLAPS_1","C172_TAKEOFF_THROTTLE","C172_TAKEOFF_MIXTURE","C172_TAKEOFF_AIRSPEED_INDICATOR","C172_TAKEOFF_LIFT_NOSEWHEEL","C172_TAKEOFF_INITIAL_CLIMB","C172_TAKEOFF_FLAPS_2","C172_CLIMB_AIRSPEED","C172_CLIMB_THROTTLE","C172_CLIMB_MIXTURE_1","C172_CLIMB_ENGINE_GAUGES","C172_CLIMB_TAXI_LANDING_LIGHTS","C172_CLIMB_MIXTURE_2","C172_CRUISE_POWER","C172_CRUISE_ELEVATOR_TRIM","C172_CRUISE_MIXTURE","C172_CRUISE_ENGINE_GAUGES","C172_DESCENT_POWER","C172_DESCENT_MIXTURE","C172_DESCENT_FUEL_SELECTOR","C172_DESCENT_FLAPS","C172_BEFORE_LANDING_SEATS_BACKS","C172_BEFORE_LANDING_SEATS_BELTS","C172_BEFORE_LANDING_FUEL_SELECTOR","C172_BEFORE_LANDING_MIXTURE","C172_BEFORE_LANDING_TAXI_LANDING_LIGHTS","C172_BEFORE_LANDING_AUTOPILOT","C172_LANDING_FLAPS","C172_LANDING_AIRSPEED","C172_LANDING_TOUCHDOWN","C172_LANDING_LANDING_ROLL","C172_LANDING_BRAKING","C172_AFTER_LANDING_FLAPS","C172_AFTER_LANDING_LANDING_LIGHT","C172_AFTER_LANDING_TAXI_LIGHT","C172_AFTER_LANDING_STROBE_LIGHT","C172_AFTER_LANDING_ELEVATOR_TRIM","C172_AFTER_LANDING_TRANSPONDER","C172_PARKING_PARKING_BRAKE","C172_PARKING_AVIONICS_SWITCHES","C172_PARKING_ENGINE_IDLE","C172_PARKING_MAGNETOS","C172_PARKING_MIXTURE","C172_SECURING_IGNITION","C172_SECURING_LANDING_LIGHT","C172_SECURING_TAXI_LIGHT","C172_SECURING_NAV_LIGHT","C172_SECURING_FUEL_SELECTOR","c172SteamItems","C172STEAM_PREFLIGHT_BATTERY_SWITCH_1","C172STEAM_PREFLIGHT_BATTERY_SWITCH_2","C172STEAM_PREFLIGHT_AVIONICS_SWITCHES_1","C172STEAM_PREFLIGHT_AVIONICS_SWITCHES_2","C172STEAM_PREFLIGHT_AVIONICS_COOLING_FAN","C172STEAM_PREFLIGHT_ANNUNCIATOR_PANEL","C172STEAM_PREFLIGHT_FUEL_SHUTOFF_VALVE","C172STEAM_PREFLIGHT_FLAPS_DOWN","C172STEAM_PREFLIGHT_ELEVATOR_TRIM","C172STEAM_ENGINE_START_BATTERY_SWITCH","C172STEAM_AFTER_START_ALTERNATOR","C172STEAM_AFTER_START_ALTERNATOR_INDICATOR","C172STEAM_AFTER_START_ANMETER","C172STEAM_AFTER_START_RADIOS","C172STEAM_AFTER_START_TRANSPONDER","C172STEAM_AFTER_START_HEADING_INDICATOR","C172STEAM_AFTER_START_ALTIMETER","C172STEAM_AFTER_START_ALTITUDE_INDICATOR","C172STEAM_TAXI_TURN_COORDINATOR","C172STEAM_TAXI_HEADING_INDICATOR","C172STEAM_TAXI_COMPASS","C172STEAM_RUNUP_FLIGHT_INSTRUMENTS","C172STEAM_RUNUP_AUTOPILOT","C172STEAM_RUNUP_OIL_PRESSURE","C172STEAM_RUNUP_OIL_TEMPERATURE","C172STEAM_RUNUP_ANMETER","C172STEAM_RUNUP_ANNUNCIATOR_PANEL","C172STEAM_BEFORE_TAKEOFF_RADIOS","C172STEAM_BEFORE_TAKEOFF_AVIONICS","C172STEAM_BEFORE_TAKEOFF_NAV_GPS_SWITCH","C172STEAM_BEFORE_TAKEOFF_TRANSPONDER","C172STEAM_BEFORE_TAKEOFF_AUTOPILOT","C172STEAM_BEFORE_TAKEOFF_ELEVATOR_TRIM","C172STEAM_TAKEOFF_ANNUNCIATORS","C172STEAM_CRUISE_FLIGHT_INSTRUMENTS","C172STEAM_DESCENT_ALTIMETER","C172STEAM_DESCENT_NAV_GPS","C172STEAM_PARKING_TRANSPONDER","C172STEAM_SECURING_ALTERNATOR","C172STEAM_SECURING_BATTERY","c172G1000Items","C172G1000_PREFLIGHT_MASTER_SWITCHES_1","C172G1000_PREFLIGHT_PFD","C172G1000_PREFLIGHT_OIL_PRESSURE_ANNUNCIATOR","C172G1000_PREFLIGHT_LOW_VACUUM_ANNUNCIATOR","C172G1000_PREFLIGHT_AVIONICS_SWITCH_1_ON","C172G1000_PREFLIGHT_AVIONICS_SWITCH_1_FAN","C172G1000_PREFLIGHT_AVIONICS_SWITCH_1_OFF","C172G1000_PREFLIGHT_AVIONICS_SWITCH_2_ON","C172G1000_PREFLIGHT_AVIONICS_SWITCH_2_FAN","C172G1000_PREFLIGHT_AVIONICS_SWITCH_2_OFF","C172G1000_PREFLIGHT_LOW_VOLTS_ANNUNCIATOR","C172G1000_PREFLIGHT_MASTER_SWITCHES_2","C172G1000_PREFLIGHT_ELEVATOR_TRIM","C172G1000_BEFORE_START_BRAKES","C172G1000_BEFORE_START_CIRCUIT_BREAKERS","C172G1000_ENGINE_START_STANDBY_BATT_TEST","C172G1000_ENGINE_START_STANDBY_BATT_ARM","C172G1000_ENGINE_START_ENGINE_INDICATING_SYSTEM","C172G1000_ENGINE_START_BUS_E_VOLTS","C172G1000_ENGINE_START_BUS_M_VOLTS","C172G1000_ENGINE_START_BATT_S_AMPS","C172G1000_ENGINE_START_STANDBY_BATT_ANNUNCIATOR","C172G1000_ENGINE_START_MASTER_SWITCH","C172G1000_AFTER_START_AMPS","C172G1000_AFTER_START_LOW_VOLTS_ANNUNCIATOR","C172G1000_RUNUP_DOORS","C172G1000_RUNUP_FLIGHT_INSTRUMENTS","C172G1000_RUNUP_ALTIMETER","C172G1000_RUNUP_STANDBY_ALTIMETER","C172G1000_RUNUP_ALTITUDE_SELECT","C172G1000_RUNUP_STANDBY_FLIGHT_INSTRUMENTS","C172G1000_RUNUP_AP_TRIM_DISC","C172G1000_RUNUP_FLIGHT_DIRECTOR","C172G1000_RUNUP_ELEVATOR_TRIM","C172G1000_RUNUP_ENGINE_INDICATORS","C172G1000_RUNUP_ANMETERS_VOLTMETERS","C172G1000_RUNUP_ANNUNCIATORS","C172G1000_BEFORE_TAKEOFF_COM_FREQS","C172G1000_BEFORE_TAKEOFF_NAV_FREQS","C172G1000_BEFORE_TAKEOFF_FMS_GPS","C172G1000_BEFORE_TAKEOFF_TRANSPONDER","C172G1000_BEFORE_TAKEOFF_CDI_NAV_SOURCE","C172G1000_BEFORE_TAKEOFF_CABIN_PWR","C172G1000_TAKEOFF_ANNUNCIATORS","C172G1000_CRUISE_FMS_GPS","C172G1000_DESCENT_ALTIMETER","C172G1000_DESCENT_STANDBY_ALTIMETER","C172G1000_DESCENT_ALTITUDE_SELECT","C172G1000_DESCENT_CDI_NAV","C172G1000_DESCENT_FMS_GPS","C172G1000_BEFORE_LANDING_CABIN_PWR","C172G1000_SECURING_MASTER_SWITCHES","C172G1000_SECURING_STANDBY_BATT","crjItems","CRJ_SAFETY_CHECK_CIRCUIT_BREAKERS","CRJ_SAFETY_CHECK_NOSEWHEEL","CRJ_SAFETY_CHECK_HYDRAULIC_PUMPS_1","CRJ_SAFETY_CHECK_LANDING_GEAR","CRJ_SAFETY_CHECK_FLIGHT_SPOILER_LEVER","CRJ_SAFETY_CHECK_SLATS_FLAPS_LEVER","CRJ_SAFETY_CHECK_RADAR","CRJ_SAFETY_CHECK_ADG_MANUAL_RELEASE","CRJ_SAFETY_CHECK_EMERGENCY_FLAP_SWITCH","CRJ_SAFETY_CHECK_BATTERY_MASTER_SWITCH","CRJ_SAFETY_CHECK_APU","CRJ_SAFETY_CHECK_AC_ELECTRICS","CRJ_SAFETY_CHECK_IRS","CRJ_SAFETY_CHECK_EMERGENCY_EQUIPMENT","CRJ_SAFETY_CHECK_GEAR_SAFETY_PINS","CRJ_SAFETY_CHECK_AIRPLANE_DOCUMENTS","CRJ_SAFETY_CHECK_HYDRAULIC_PUMPS_2","CRJ_SAFETY_CHECK_FMS_INITIALIZATION","CRJ_CABIN_INSPECTION_CABIN_INSPECTION","CRJ_CABIN_INSPECTION_WALKAROUND_INSPECTION","CRJ_ORIGINATING_CHECK_CREW_OXYGEN","CRJ_ORIGINATING_CHECK_AUDIO_WARNING_PANEL","CRJ_ORIGINATING_CHECK_ELECTRICAL_POWER_PANEL","CRJ_ORIGINATING_CHECK_FIRE_DETECTION","CRJ_ORIGINATING_CHECK_EXTERNAL_LIGHTS_PANEL","CRJ_ORIGINATING_CHECK_FUEL_PANEL","CRJ_ORIGINATING_CHECK_BLEED_AIR_PANEL","CRJ_ORIGINATING_CHECK_APU_PANEL","CRJ_ORIGINATING_CHECK_START_PANEL","CRJ_ORIGINATING_CHECK_HYDRAULIC_PANEL","CRJ_ORIGINATING_CHECK_ELT_SWITCH","CRJ_ORIGINATING_CHECK_CABIN_PRESSURE_PANEL","CRJ_ORIGINATING_CHECK_AIR_CONDITIONING_PANEL","CRJ_ORIGINATING_CHECK_ANTIICE_PANEL","CRJ_ORIGINATING_CHECK_WINDSHIELD_HEAT","CRJ_ORIGINATING_CHECK_EMERGENCY_LIGHTS","CRJ_ORIGINATING_CHECK_STANDBY_COMPASS","CRJ_ORIGINATING_CHECK_STALL_TEST","CRJ_ORIGINATING_CHECK_NOSEWHEEL","CRJ_ORIGINATING_CHECK_CLOCKS","CRJ_ORIGINATING_CHECK_EFIS_CONTROL_PANELS","CRJ_ORIGINATING_CHECK_INSTRUMENT_PANELS","CRJ_ORIGINATING_CHECK_EICAS_AND_STDBY","CRJ_ORIGINATING_CHECK_UPPER_PEDESTAL","CRJ_ORIGINATING_CHECK_THRUST_LEVER_QUADRANT","CRJ_ORIGINATING_CHECK_AVIONICS","CRJ_ORIGINATING_CHECK_TRIMS","CRJ_ORIGINATING_CHECK_YAW_DAMPER","CRJ_ORIGINATING_CHECK_SOURCE_SELECT_PANEL","CRJ_ORIGINATING_CHECK_LOWER_PEDESTAL","CRJ_BEFORE_START_CHECK_PASS_SIGNS","CRJ_BEFORE_START_CHECK_LANDING_ELEVATION","CRJ_BEFORE_START_CHECK_BOOST_PUMPS","CRJ_BEFORE_START_CHECK_ALTIMETERS","CRJ_BEFORE_START_CHECK_FMS","CRJ_BEFORE_START_CHECK_IRS","CRJ_BEFORE_START_CHECK_RADIOS","CRJ_BEFORE_START_CHECK_TAKEOFF_DATA","CRJ_BEFORE_START_CHECK_TAKEOFF_BRIEFING","CRJ_CLEARED_TO_START_CHECK_PERSONAL_ELECTRONIC_DEVICES","CRJ_CLEARED_TO_START_CHECK_APU","CRJ_CLEARED_TO_START_CHECK_ELECTRICS","CRJ_CLEARED_TO_START_CHECK_DOORS","CRJ_CLEARED_TO_START_CHECK_BEACON","CRJ_CLEARED_TO_START_CHECK_FUEL_PUMPS","CRJ_CLEARED_TO_START_CHECK_HYDRAULIC_PUMPS","CRJ_CLEARED_TO_START_CHECK_PARKING_BRAKE","CRJ_CLEARED_TO_START_ENGINE_START","CRJ_AFTER_START_CHECK_GENERATORS","CRJ_AFTER_START_CHECK_BLEED_VALVES","CRJ_AFTER_START_CHECK_PACKS","CRJ_AFTER_START_CHECK_SYNOPTIC_PAGES","CRJ_AFTER_START_CHECK_APU","CRJ_AFTER_START_CHECK_ANTIICE_PROBES","CRJ_AFTER_START_CHECK_ANTIICE","CRJ_AFTER_START_CHECK_NOSEWHEEL","CRJ_TAXI_CHECK_SLATS_FLAPS","CRJ_TAXI_CHECK_FLIGHT_CONTROLS","CRJ_TAXI_CHECK_TRIMS","CRJ_TAXI_CHECK_THRUST_REVERSERS","CRJ_TAXI_CHECK_FLIGHT_INSTRUMENTS","CRJ_TAXI_CHECK_BRAKE_TEMPS","CRJ_TAXI_CHECK_EXTERNAL_LIGHTS","CRJ_BEFORE_TAKEOFF_CHECK_EXTERNAL_LIGHTS","CRJ_BEFORE_TAKEOFF_CHECK_FUEL_XFLOW","CRJ_BEFORE_TAKEOFF_CHECK_FLIGHT_ATTENDANT","CRJ_BEFORE_TAKEOFF_CHECK_TRANSPONDER","CRJ_BEFORE_TAKEOFF_CHECK_RADAR","CRJ_BEFORE_TAKEOFF_CHECK_CAS","CRJ_CLIMB_CHECK_FUEL_XFLOW","CRJ_CLIMB_CHECK_BLEEDS_AND_APU","CRJ_CLIMB_CHECK_THRUST_REVERSERS","CRJ_CLIMB_CHECK_CAS","CRJ_DESCENT_CHECK_LANDING_ELEVATION","CRJ_DESCENT_CHECK_FUEL","CRJ_DESCENT_CHECK_TCAS","CRJ_DESCENT_CHECK_RADAR","CRJ_DESCENT_CHECK_CAS","CRJ_DESCENT_CHECK_LANDING_DATA","CRJ_DESCENT_CHECK_APPROACH_BRIEFING","CRJ_BEFORE_LANDING_CHECK_FLIGHT_ATTENDANT","CRJ_BEFORE_LANDING_CHECK_PASSENGER_SIGNS","CRJ_BEFORE_LANDING_CHECK_THRUST_REVERSERS","CRJ_BEFORE_LANDING_CHECK_LANDING_GEAR","CRJ_BEFORE_LANDING_CHECK_FLAPS","CRJ_AFTER_LANDING_CHECK_APU","CRJ_AFTER_LANDING_CHECK_TRANSPONDER_RADAR","CRJ_AFTER_LANDING_CHECK_FLAPS","CRJ_AFTER_LANDING_CHECK_EXTERNAL_LIGHTS","CRJ_AFTER_LANDING_CHECK_PROBES","CRJ_SHUTDOWN_CHECK_PARKING_BRAKE","CRJ_SHUTDOWN_CHECK_SEAT_BELTS","CRJ_SHUTDOWN_CHECK_THRUST_LEVERS","CRJ_SHUTDOWN_CHECK_ANTIICE","CRJ_SHUTDOWN_CHECK_FUEL_PUMPS","CRJ_SHUTDOWN_CHECK_BEACON","CRJ_SHUTDOWN_CHECK_NOSEWHEEL","CRJ_TERMINATING_CHECK_CHOCKS_AND_BRAKES","CRJ_TERMINATING_CHECK_IRS","CRJ_TERMINATING_CHECK_EMERGENCY_LIGHTS","CRJ_TERMINATING_CHECK_ANTIICE","CRJ_TERMINATING_CHECK_HYDRAULIC_PUMPS","CRJ_TERMINATING_CHECK_EXTERNAL_LIGHTS","CRJ_TERMINATING_CHECK_APU","CRJ_TERMINATING_CHECK_BATTERY_MASTER","CRJ_TERMINATING_CHECK_COCKPIT_LIGHTS","crjExtItems","CRJEXT_PRE_FLIGHT_AIRCRAFT_EFB_SETUP","CRJEXT_ORIGINATING_CHECK_FMS_INIT_REMINDER","CRJEXT_BEFORE_START_CHECK_DOORS_CHOCKS","vatsimItems","VATSIM_METAR_ATIS_PRE_FLIGHT","VATSIM_FILE_FLIGHT_PLAN","VATSIM_REQUEST_INITIAL_CLEARANCE","VATSIM_DEPARTURE_SETTINGS","VATSIM_TAXI_CLEARANCE","VATSIM_TAXI_MODE_CHARLIE","VATSIM_TAKEOFF_CLEARANCE","VATSIM_DESCENT_CLEARANCE","VATSIM_APPROACH_CLEARANCE","VATSIM_LANDING_CLEARANCE","VATSIM_GOAROUND_ANNOUNCE","VATSIM_LANDING_CLEAR_OF_RUNWAY","VATSIM_DISCONNECT_GOODBYE","simulatorSetupItems","SIMSETUP_PLAN_FLIGHT","SIMSETUP_FLIGHT_TRACKING_START","SIMSETUP_FLIGHT_TRACKING_END","SIMSETUP_FLIGHT_RECORDING_START","SIMSETUP_FLIGHT_RECORDING_END","SIMSETUP_POST_FLIGHT_NOTES","ChecklistItems","commonLists","PRE_FLIGHT","SAFETY","CABIN_INSPECTION","ORIGINATING","BEFORE_ENGINE_START","ENGINE_START","AFTER_ENGINE_START","BEFORE_TAXI","TAXI","RUN_UP","BEFORE_TAKEOFF","TAKEOFF","AFTER_TAKEOFF_CLIMB","CLIMB","CRUISE","DESCENT","APPROACH","BEFORE_LANDING","LANDING","AFTER_LANDING","ALL_ENGINES_GO_AROUND","PARKING","SECURING","SHUTDOWN","TERMINATING","POST_FLIGHT","ChecklistLists","C172G1000ChecklistData","defaultFilters","C172SteamChecklistData","ExternalLink","href","children","noIcon","rel","LinkOutlined","CJ4ChecklistData","CRJChecklistData","ChecklistsData","ChecklistFiltersResults","INCLUDE","EXCLUDE","PASS","commonFiltersData","terminal","ChecklistFiltersData","levelToColorsMapping","critical","warning","info","CASMessageContainer","$level","borderRadius","CASMessage","C172ChecklistItemsData","C172G1000ChecklistItemsData","C172SteamChecklistItemsData","KeyboardInputSep","KeyboardInput","KeyboardInputs","inputs","inp","Vernacular","PFD_CJ4","DCP_CJ4","MFD_CJ4","CCP_CJ4","EP_CJ4","TP_CJ4","EICAS_CJ4","SFD_CJ4","FMS","SAT","OAT","QNH","APU","N1","N2","ITT","FADEC","VR","KIAS","AGL","cj4AntiIceRules","CJ4ChecklistItemsData","CJ4ExtChecklistItemsData","EICAS_CRJ","ACRJChecklistItemsData","ACRJExtChecklistItemsData","SimulatorSetupChecklistItemsData","VATSIMChecklistItemsData","ChecklistItemsData","ChecklistItemsNotImplemented","commonListsData","ChecklistListsData","commonTagsData","ChecklistTagsData","useChecklistFilteredLists","filterFN","defaultFiltersData","filterFNs","finalFilterResults","filteringResult","useChecklistFilterFunction","listNames","itemIncluded","useChecklist","filtersDataFN","listItems","checklistList","listItemsU","useChecklistData","resetChecklistCheckedItems","checklistListsData","ChecklistDisplay","timeoutID","setTimeout","Scroll","scroller","scrollTo","duration","smooth","offset","clearTimeout","useChecklistSelectedListScroll","ChecklistNotFound","Checklist","checklistsNames","checklistListNames","checklistFound","checklistListFound","useChecklistCheck","getWindowDimensions","window","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","ANTDFooter","Layout","Footer","GithubOutlined","LogoContainer","lineHeight","HeaderLogo","clickHandler","Navbar","mapping","pathname","url","isSelected","startsWith","useNavbarMenus","wtCJ4MenuItem","wtCJ4AntiIceItem","c172ChecklistMenuItem","c172G1000ChecklistMenuItem","crjChecklistMenuItem","otherMetarExplainerMenuItem","theme","SubMenu","Header","ANTDLayout","Content","LayoutBackground","background","minHeight","List","listStyleType","ListItem","MainPage","AirportIdentifierPropTypes","prettyArgs","airportCode","node","AirportIdentifierValue","propTypes","AirportIdentifierShort","AirportIdentifierRenderers","renderValue","renderTitle","renderShort","AltimeterPropTypes","altimeterUnitP","valueP","number","altimeterUnit","TokenTypes","NOT_RECOGNIZED","AIRPORT_IDENTIFIER","ALTIMETER_SETTING","CLOUD_COVERAGE","METAR_PREFIX","METAR_PREFIX_OTHER","METAR_TIME","MISSING_DATA","PRESENT_WEATHER","PREVAILING_VISIBILITY","REMARKS","RUNWAY_VISUAL_RANGE","TEMPERATURES","TREND","VERTICAL_VISIBILITY","WIND","WIND_SHEAR","RECENT_WEATHER","SEA_SURFACE","RUNWAY_STATE","COLOR_SYSTEMS","WindSpeedUnit","KNOTS","METERS_PER_SECOND","CloudLayerAmount","NSC","NCD","CLR","SKC","FEW","SCT","BKN","OVC","CloudTypes","CB","TCU","NOT_DESCRIBED","CloudLayerAltitude","BELOW","AltimeterUnit","INHG","HPA","AltimeterSetting","NOT_REPORTED","WindDirections","VRB","WindForce","Directions","N","NE","E","SE","S","SW","W","NW","NDV","PrevailingVisibility","CAVOK","TEN_K","MISSING","LESS_THAN_QUARTER_MILE","PrevailingVisibilityUnit","METERS","KILOMETERS","MILES","WeatherIntensity","LIGHT","HEAVY","WeatherProximity","VINCINITY","WeatherDescriptor","SHALLOW","PATCHES","PARTIAL","LOW_DRIFTING","BLOWING","SHOWER","THUNDERSTORM","FREEZING","WeatherPhenomena","DRIZZLE","RAIN","SNOW","SNOW_GRAINS","ICE_PELLETS","HAIL","SMALL_HAIL_SNOW","UNKNOWN_PRECIPITATION","MIST","FOG","SMOKE","VOLCANIC_HASH","DUST","SAND","HAZE","DUST_DEVILS","SQUALLS","FUNNEL_CLOUD","SANDSTORM","DUSTSTORM","NSW","RunwayVisualRangeQualifier","NONE","AT_LEAST","AT_MOST","WindShearRunway","ALL_RUNWAYS","SeaSurfaceInfoType","SURFACE_STATE","WAVE_HEIGHT","SeaSurfaceStateCode","CALM_GLASSY","CALM_RIPPLED","SMOOTH","SLIGHT","MODERATE","ROUGH","VERY_ROUGH","HIGH","VERY_HIGH","PHENOMENAL","RunwayDeposit","CLEAR_AND_DRY","DAMP","WET","RIME_AND_FROST","DRY_SNOW","WET_SNOW","SLUSH","ICE","COMPACTED_SNOW","FROZEN_RUTS","RunwayContaminationExtent","BELOW_TEN","TEN_TO_TWENTY_FIVE","TWENTY_FIVE_TO_FIFTY","ABOVE_FIFTY","UNKNOWN_RESERVED","RunwayContaminationDepth","TEN_CM","FIFTEEN_CM","TWENTY_CM","TWENTY_FIVE_CM","THIRTY_CM","THIRTY_FIVE_CM","FORTY_CM","NOT_OPERATIONAL","RunwaySurfaceFriction","BRAKING_ACTION_POOR","BRAKING_ACTION_MEDIUM_POOR","BRAKING_ACTION_MEDIUM","BRAKING_ACTION_MEDIUM_GOOD","BRAKING_ACTION_GOOD","UNRELIABLE","TrendType","NOSIG","BECOMING","TEMPORARY","TrendTimeType","FROM","UNTIL","AT","Temperatures","renderAltimeterValue","AltimeterShort","AltimeterRenderers","CloudCoveragePropTypes","altitudeP","amountP","cloudTypeP","amount","altitude","cloudType","renderAmount","renderAltitude","renderCloudType","CloudCoverageShort","renderAmountAltitude","CloudCoverageRenderers","ColorSystemsRenderers","args","array","any","prettyArgsOrdered","METARTimePropTypes","dayOfMonthP","hour","minutes","dayOfMonth","METARTimeShort","hourP","minutesP","METARTimeRenderers","MissingDataPropTypes","MissingDataShort","MissingDataValue","MissingDataRenderers","NotRecognizedPropTypes","NotRecognizedShort","NotRecognizedValue","NotRecognizedRenderers","PrefixPropTypes","PrefixShort","PrefixTitle","PrefixValue","PrefixRenderers","PresentWeatherPropTypes","intensityParts","descriptorParts","phenomenaParts","renderValues","parts","renderFN","contents","partData","argID","renderIntensity","intensityP","renderIntensities","renderProximity","proximityP","renderProximities","proximityParts","weatherPhenomenaInfo","link","renderWeatherPhenomena","phenomenaP","renderWeatherPhenomenons","mainPhenomena","slice","weatherDescriptorInfo","renderDescriptor","descriptorP","renderDescriptors","PresentWeatherShort","PresentWeatherRenderers","PrevailingVisibilityPropTypes","directionP","unitP","direction","renderVisibilityValue","renderDirection","renderNDV","PrevailingVisibilityShort","PrevailingVisibilityRenderers","RecentWeatherPropTypes","RecentWeatherShort","RecentWeatherRenderers","RemarksPropTypes","rmk","remarks","RemarksValue","RemarksRenderers","RunwayStatePropTypes","runwayP","depositP","extentP","depthP","frictionP","runway","deposit","extent","depth","friction","depositDescriptions","renderDeposit","contaminationExtentDescriptions","renderContaminationExtent","contaminationDepthDescriptions","renderContaminationDepth","desc","frictionDescriptions","renderFriction","frictionDesc","RunwayStateShort","RunwayStateRenderers","RunwayVisualRangePropTypes","qualifier","distance","distanceP","renderQualifier","qualifierP","RunwayVisualRangeShort","RunwayVisualRangeRenderers","SeaSurfacePropTypes","infoType","temperatureP","seaStateCodeP","waveHeightP","seaStateCode","waveHeight","TemperaturesPropTypes","oatP","dewPointP","oat","dewPoint","renderTemperature","tempP","temp","TemperaturesShort","seaStateCodeDescriptions","short","long","SeaSurfaceShort","codeDesc","SeaSurfaceRenderers","TemperaturesRenderers","TrendPropTypes","trendTypeP","timeParts","renderTimeParts","timeP","trendTimeType","TrendShort","trendType","TrendRenderers","VerticalVisibilityPropTypes","VerticalVisibilityShort","VerticalVisibilityRenderers","isCalm","bool","fromDirectionP","toDirectionP","forceP","gustsForceP","force","gustsForce","fromDirection","toDirection","renderForce","renderGustsForce","WindRenderers","WindShearPropTypes","renderRunway","WindShearShort","WindShearRenderers","TokenRenderers","isLocalServer","REACT_APP_IS_LOCAL_SERVER","MetarURLManager","metarData","useMetarURLConfig","initialValue","setInitialValue","lastValue","metarURLManager","fixAltimeterValue","fixCloudAltitude","createCloudDescriptorsToken","tokenType","buildVariableArgs","prefix","argsKey","countKey","partsKey","part","valueIdxKey","valueIdxKeyP","parsed","valueKey","valueKeyP","createPrefixToken","parseCOR","parser","completeMatch1","matchNextTokenAndForward","completeMatch","WeatherDescriptorPatterns","WeatherPhenomenaPatterns","weatherDescriptorMapping","MI","BC","PR","DR","BL","SH","TS","FZ","weatherPhenomenaMapping","DZ","RA","SN","SG","PL","GR","GS","UP","BR","FG","FU","VA","DU","SA","HZ","PO","SQ","FC","SS","DS","splitValuesIntoParts","valuesStr","parseValue","lengthOfValue","currentValue","x","substring","splitWeatherProximitiesIntoParts","buildDescriptorsArgs","splitWeatherDescriptorsIntoParts","buildPhenomenonsArgs","splitWeatherPhenomenonsIntoParts","createPresentWeatherToken","intensitiesData","proximityData","buildProximitiessArgs","descriptorsData","phenomenonsData","intensityArgs","proximityArgs","descriptorArgs","phenomenaArgs","parsePresentWeatherCombination","descriptorCount","phenomenaCount","groups","intensities","proximities","descriptors","phenomenons","fixPVValue","matchResult1","match","RegExp","whole","numerator","denominator","matchResult2","isWithoutUnit","createPrevailingVisibility","parseRecentWeatherCombination","depositMapping","contaminationExtentMapping","parseContaminationExtent","contaminationDepthMapping","parseContaminationDepth","surfaceFrictionMapping","parseSurfaceFriction","TemperaturePattern","fixTemp","stateCodesMapping","createSeaSurfaceToken","trendTypesMapping","BECMG","TEMPO","createTrendToken","timeData","timeArgs","context","uuidv4","parseTimeToken","parseFrom","parseUntil","parseAt","parseTimeInfo","timeParserFuncs","i","finished","j","fnResult","createVerticalVisibilityToken","fixForce","windDirectionsMapping","createWindToken","parseWindVariableDirection","allRwyValue","createWindShearTokens","ParserState","metar","originalMetar","tokens","skipWhitespace","pattern","matched","trim","matchAndForward","matched1","result1","matched2","result2","pushToken","prefixFunctions","completeMatch2","parsersFunctions","nscCompleteMatch","ncdCompleteMatch","clrCompleteMatch","skcCompleteMatch","simpleGroups","belowGroups","cloudTypeOnlyGroups","combinations","combination","cavokCompleteMatch","groups1","groups2","groups4","groups5","groups3","completeMatchNOSIG","completeMatchBecoming","completeMatchTemporary","vvAltGroups","noDataCompleteMatch","withGustsGroups","completeMatchAllRwy","rwyGroups","seaStateGroups","waveHeightGroups","colorData","split","splitValues","colorArgs","parseNextToken","parseToken","skipToken","METARDataValueContainer","alignItems","METARColumnContainer","METARDataValue","Arg","ArgComponents","textDecoration","$isEven","ContextColors","buildPrettyArgs","argName","Comp","DisplayInfo","tokenTypeRenderers","renderDescription","renderedValue","renderedTitle","renderedShort","renderedDescription","containerStyle","contentStyle","contextCounter","isFirstInContext","useShareableLinkHandler","getFullBaseURL","navigator","clipboard","writeText","then","notification","success","Metar","Form","useForm","form","setMetarData","explainButtonEnabled","setExplainButtonEnabled","updateExplainedButtonEnabledState","setFieldsValue","metarFieldData","metarDataChanged","setMetarDataChanged","onChangeMETAR","onFinish","parsedData","cleanIrrelevantCharacters","hasMoreToMatch","parseMETAR","currentContext","token","onClickShareableLink","shareableButtonDisabled","autoComplete","labelCol","wrapperCol","TextArea","htmlType","renderItem","action","itemsSet","setA","setB","elem","add","intersection","checkItem","uncheckItem","checklistListReducer","toggleGlobalConfig","reducers","combineReducers","createAppStore","middlewares","thunkMiddleware","logger","createStore","applyMiddleware","App","compose","Component","store","Styletron","enhance","exact","component","root","getElementById","createElement","ReactDOM","StrictMode"],"mappings":"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AAehM,8BACfgM,GAAe/L,wCACf+L,GAAenV,uCACfmV,GAAelV,oCACfkV,GAAejV,gCACfiV,GAAehV,sCAEnBrL,cAAe,CACXiiB,GAAerB,eAGvB,CACIzf,SAAU8gB,GAAerB,aACzBrgB,MAAO,CACH8f,GAAe/U,2BACf+U,GAAe9U,4BACf8U,GAAe9L,yCACf8L,GAAe7L,wCACf6L,GAAe5L,gDACf4L,GAAe3L,mCACf2L,GAAe1L,mCACf0L,GAAezL,mCACfyL,GAAexL,gDACfwL,GAAe7U,iCACf6U,GAAevL,qCACfuL,GAAe5U,+BACf4U,GAAe3U,4BACf2U,GAAe1U,gCACf0U,GAAezU,4BACfyU,GAAexU,8BACfwU,GAAevU,2BACfuU,GAAetU,6BAEnB/L,cAAe,CACXiiB,GAAepB,qBAGvB,CACI1f,SAAU8gB,GAAepB,mBACzBtgB,MAAO,CACH8f,GAAerU,0BACfqU,GAAepU,8BACfoU,GAAetL,2BACfsL,GAAerL,4CACfqL,GAAelU,mCACfkU,GAAenU,wBAEnBlM,cAAe,CACXiiB,GAAelB,OAGvB,CACI5f,SAAU8gB,GAAelB,KACzBxgB,MAAO,CACH8f,GAAejU,qBACfiU,GAAehU,wBACfgU,GAAe/T,uBACf+T,GAAe9T,oBACf8T,GAAe7T,wBACf6T,GAAe5T,iBACf4T,GAAe3T,kBAEnB1M,cAAe,CACXiiB,GAAejB,SAGvB,CACI7f,SAAU8gB,GAAejB,OACzBzgB,MAAO,CACH8f,GAAe1T,yBACf0T,GAAezT,uBACfyT,GAAexT,uBACfwT,GAAepL,sBACfoL,GAAevT,6BACfuT,GAAenL,mCACfmL,GAAelL,0BACfkL,GAAejL,kCACfiL,GAAehL,gCACfgL,GAAe/K,2CACf+K,GAAetT,yBACfsT,GAAerT,mBACfqT,GAAepT,yBACfoT,GAAenT,qBACfmT,GAAelT,6BACfkT,GAAe9K,6BACf8K,GAAe7K,gCACf6K,GAAe5K,8BACf4K,GAAejT,sBACfiT,GAAehT,sBACfgT,GAAe/S,sBACf+S,GAAe9S,sBACf8S,GAAe7S,wBACf6S,GAAe3K,kCACf2K,GAAe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B,aACzBrgB,MAAO,CACH8f,GAAe/U,2BACf+U,GAAe9U,4BACf8U,GAAe7U,iCACf6U,GAAe7O,sCACf6O,GAAe5U,+BACf4U,GAAe3U,4BACf2U,GAAe1U,gCACf0U,GAAezU,4BACfyU,GAAexU,8BACfwU,GAAevU,2BACfuU,GAAetU,6BAEnB/L,cAAe,CACXiiB,GAAepB,qBAGvB,CACI1f,SAAU8gB,GAAepB,mBACzBtgB,MAAO,CACH8f,GAAerU,0BACfqU,GAAepU,8BACfoU,GAAe5O,iCACf4O,GAAe3O,2CACf2O,GAAe1O,8BACf0O,GAAelU,mCACfkU,GAAezO,6BACfyO,GAAexO,kCACfwO,GAAenU,uBACfmU,GAAevO,wCACfuO,GAAetO,gCACfsO,GAAerO,0CAEnBhS,cAAe,CACXiiB,GAAelB,OAGvB,CACI5f,SAAU8gB,GAAelB,KACzBxgB,MAAO,CACH8f,GAAejU,qBACfiU,GAAehU,wBACfgU,GAAe/T,uBACf+T,GAAe9T,oBACf8T,GAAe7T,wBACf6T,GAAe5T,iBACf4T,GAAe3T,iBACf2T,GAAepO,gCACfoO,GAAenO,iCACfmO,GAAelO,wBAEnBnS,cAAe,CACXiiB,GAAejB,SAGvB,CACI7f,SAAU8gB,GAAejB,OACzBzgB,MAAO,CACH8f,GAAe1T,yBACf0T,GAAezT,uBACfyT,GAAexT,uBACfwT,GAAevT,6BACfuT,GAAejO,mCACfiO,GAAetT,yBACfsT,GAAerT,mBACfqT,GAAepT,yBACfoT,GAAenT,qBACfmT,GAAelT,6BACfkT,GAAehO,0BACfgO,GAAejT,sBACfiT,GAAehT,sBACfgT,GAAe/S,sBACf+S,GAAe9S,sBACf8S,GAAe7S,wBACf6S,GAAe/N,6BACf+N,GAAe9N,gCACf8N,GAAe7N,wBACf6N,GAAe5N,kCACf4N,GAAe5S,uBACf4S,GAAe3S,uBAEnB1N,cAAe,CACXiiB,GAAehB,iBAGvB,CACI9f,SAAU8gB,GAAehB,eACzB1gB,MAAO,CACH8f,GAAe3N,gCACf2N,GAAe1N,kCACf0N,GAAezN,wCACfyN,GAAexN,qCACfwN,GAAevN,mC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,GAAexd,2CAEnB7C,cAAe,CACXiiB,GAAerB,eAGvB,CACIzf,SAAU8gB,GAAerB,aACzBrgC,YACI,4FAEK,IAED,cAAC,GAAD,CAAc+hC,KAAK,8GAAnB,oCACC,IALL,6CASJ/hB,MAAO,CACH8f,GAAevd,2BACfud,GAAetd,qCACfsd,GAAerd,uCACfqd,GAAepd,0BACfod,GAAend,6BACfmd,GAAeld,uCACfkd,GAAejd,2CACfid,GAAehd,0CAEnBrD,cAAe,CACXiiB,GAAenB,cAGvB,CACI3f,SAAU8gB,GAAenB,YACzBvgB,MAAO,CACH8f,GAAe/c,gCACf+c,GAAe9c,uCACf8c,GAAe7c,wCACf6c,GAAe5c,sBACf4c,GAAe3c,qCACf2c,GAAe1c,iCACf0c,GAAezc,sBACfyc,GAAexc,yCACfwc,GAAevc,qCACfuc,GAAetc,6BACfsc,GAAerc,+BACfqc,GAAepc,6CACfoc,GAAenc,8BACfmc,GAAejB,0BACfiB,GAAelc,qCACfkc,GAAejc,4BACfic,GAAehc,wCAEnBrE,cAAe,CACXiiB,GAAelB,OAGvB,CACI5f,SAAU8gB,GAAelB,KACzBxgB,MAAO,CACH8f,GAAe/b,yBACf+b,GAAehB,sBACfgB,GAAef,yBACfe,GAAe9b,wBACf8b,GAAe7b,gCACf6b,GAAe5b,sBACf4b,GAAe3b,mCACf2b,GAAe1b,mCAEnB3E,cAAe,CACXiiB,GAAehB,iBAGvB,CACI9f,SAAU8gB,GAAehB,eACzB1gB,MAAO,CACH8f,GAAezb,+CACfyb,GAAexb,4CACfwb,GAAevb,iCACfub,GAAetb,6BACfsb,GAAerb,mCACfqb,GAAepb,+BACfob,GAAenb,iCACfmb,GAAelb,6BACfkb,GAAejb,qCACfib,GAAehb,kCACfgb,GAAe/a,sCACf+a,GAAe9a,qDACf8a,GAAe7a,6CACf6a,GAAe5a,+BACf4a,GAAe3a,mCACf2a,GAAelW,qCACfkW,GAAed,0BAEnBvf,cAAe,CACXiiB,GAAef,UAGvB,CACI/f,SAAU8gB,GAAef,QACzB3gB,MAAO,CACH8f,GAAe1a,sBACf0a,GAAeza,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Cf6I,GAAe5I,8BACf4I,GAAe3I,qBACf2I,GAAe1I,qCACf0I,GAAezI,kCACfyI,GAAexI,oCACfwI,GAAevI,mCACfuI,GAAetI,qCAEnB/X,cAAe,CACXiiB,GAAexB,mBAGvB,CACItf,SAAU8gB,GAAexB,iBACzBlgB,MAAO,CACH8f,GAAerI,sCACfqI,GAAepI,4CAEnBjY,cAAe,CACXiiB,GAAevB,cAGvB,CACIvf,SAAU8gB,GAAevB,YACzBngB,MAAO,CACH8f,GAAenI,kCACfmI,GAAelI,0CACfkI,GAAejI,6CACfiI,GAAehI,qCACfgI,GAAe/H,4CACf+H,GAAe9H,iCACf8H,GAAe7H,sCACf6H,GAAe5H,gCACf4H,GAAevB,2CACfuB,GAAe3H,kCACf2H,GAAe1H,sCACf0H,GAAezH,iCACfyH,GAAexH,2CACfwH,GAAevH,6CACfuH,GAAetH,oCACfsH,GAAerH,sCACfqH,GAAepH,uCACfoH,GAAenH,sCACfmH,GAAelH,iCACfkH,GAAejH,gCACfiH,GAAehH,6BACfgH,GAAe/G,0CACf+G,GAAe9G,wCACf8G,GAAe7G,sCACf6G,GAAe5G,qCACf4G,GAAe3G,4CACf2G,GAAe1G,+BACf0G,GAAezG,4BACfyG,GAAexG,iCACfwG,GAAevG,0CACfuG,GAAetG,sCAEnB/Z,cAAe,CACXiiB,GAAetB,sBAGvB,CACIxf,SAAU8gB,GAAetB,oBACzBpgB,MAAO,CACH8f,GAAerG,kCACfqG,GAAepG,yCACfoG,GAAenG,mCACfmG,GAAelG,kCACfkG,GAAejG,2BACfiG,GAAehG,2BACfgG,GAAe/F,8BACf+F,GAAe9F,oCACf8F,GAAe7F,wCACf6F,GAAetB,wCAEnB/e,cAAe,CACXiiB,GAAerB,eAGvB,CACIzf,SAAU8gB,GAAerB,aACzBrgB,MAAO,CACH8f,GAAe5F,uDACf4F,GAAe3F,+BACf2F,GAAe1F,qCACf0F,GAAezF,iCACfyF,GAAexF,kCACfwF,GAAevF,sCACfuF,GAAetF,2CACfsF,GAAerF,yCACfqF,GAAepF,mCAEnBjb,cAAe,CACXiiB,GAAepB,qBAGv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","file":"static/js/main.813f47dc.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Empty } from 'antd';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport const AntiIceAircraftNotFound = ({ aircraftName }) => {\n    const description = (\n        <>\n            Unknown aircraft &quot;\n            {aircraftName}\n            &quot;.\n            {' '}\n            <Link to=\"/\">Go Back</Link>\n            .\n        </>\n    );\n\n    return <Empty description={description} />;\n};\n\nAntiIceAircraftNotFound.propTypes = {\n    aircraftName: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport { Select } from 'antd';\nimport PropTypes from 'prop-types';\n\nconst { Option } = Select;\n\nexport const AntiIceConfigurationSelector = ({\n    currentConfiguration,\n    setCurrentConfiguration,\n    optionalModesOrder,\n    optionalModesMapping,\n}) => {\n    const hasMoreConfigs = optionalModesOrder.length !== 0;\n\n    const optionalModesOptions = optionalModesOrder.map((uid) => (\n        <Option key={uid} value={uid}>\n            {optionalModesMapping[uid].title}\n        </Option>\n    ));\n\n    return (\n        <Select\n            value={currentConfiguration}\n            onChange={setCurrentConfiguration}\n            disabled={!hasMoreConfigs}\n            style={{ width: 150 }}\n        >\n            <Option value=\"default\">default</Option>\n            {optionalModesOptions}\n        </Select>\n    );\n};\n\nAntiIceConfigurationSelector.propTypes = {\n    currentConfiguration: PropTypes.string.isRequired,\n    setCurrentConfiguration: PropTypes.func.isRequired,\n    optionalModesOrder: PropTypes.arrayOf(PropTypes.string).isRequired,\n    optionalModesMapping: PropTypes.objectOf(PropTypes.shape({\n        title: PropTypes.string.isRequired,\n    })).isRequired,\n};\n","import { styled } from 'styletron-react';\n\nexport const CenteringContainer = styled('div', {\n    display: 'flex',\n    justifyContent: 'center',\n});\n\nexport const RightJustifyingContainer = styled('div', {\n    display: 'flex',\n    justifyContent: 'flex-end',\n});\n","import React, { useMemo } from 'react';\n\nimport { Radio } from 'antd';\nimport PropTypes from 'prop-types';\n\nimport { CenteringContainer } from 'components/lib/CenteringContainer';\n\nexport const AntiIceMoistureSelector = ({ moisture, setMoisture }) => {\n    const [value, onChange] = useMemo(\n        () => [\n            moisture ? 'yes' : 'no',\n            (event) => setMoisture(event.target.value === 'yes'),\n        ],\n        [moisture, setMoisture],\n    );\n\n    return (\n        <CenteringContainer>\n            <Radio.Group\n                value={value}\n                buttonStyle=\"solid\"\n                onChange={onChange}\n            >\n                <Radio.Button value=\"yes\">Yes</Radio.Button>\n                <Radio.Button value=\"no\">No</Radio.Button>\n            </Radio.Group>\n        </CenteringContainer>\n    );\n};\n\nAntiIceMoistureSelector.propTypes = {\n    moisture: PropTypes.bool.isRequired,\n    setMoisture: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nimport { Col, Row } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useStyletron } from 'styletron-react';\n\nexport const AntiIceTableFootnote = ({ footnoteID, footnote }) => {\n    const [css] = useStyletron();\n\n    return (\n        <Row>\n            <Col span={1} className={css({ textAlign: 'right', paddingRight: '5px' })}>\n                <sup>{footnoteID}</sup>\n            </Col>\n            <Col span={23}>\n                {footnote}\n            </Col>\n        </Row>\n    );\n};\n\nAntiIceTableFootnote.propTypes = {\n    footnoteID: PropTypes.node.isRequired,\n    footnote: PropTypes.node.isRequired,\n};\n","import React from 'react';\n\nimport { styled } from 'styletron-react';\n\nimport { AntiIceTableFootnote } from 'components/anti-ice/AntiIceTableFootnote';\n\nconst FootnotesContainer = styled('div', {\n    marginTop: '10px',\n    marginBottom: '20px',\n    fontSize: '0.75em',\n});\n\nexport const AntiIceTableFootnotes = () => (\n    <FootnotesContainer>\n        <AntiIceTableFootnote\n            footnoteID={1}\n            footnote={(\n                <>\n                    This may be turned or or off depending on configuration. The state shown is the default\n                    mode this ice protection system should be in. See optional modes for more information on\n                    variations allowed for this setting.\n                </>\n            )}\n        />\n\n        <AntiIceTableFootnote\n            footnoteID={2}\n            footnote={(\n                <>\n                    This is the state for this specific configuration, and does not correspond to the default\n                    configuration.\n                </>\n            )}\n        />\n\n        <AntiIceTableFootnote\n            footnoteID={3}\n            footnote={(\n                <>\n                    This system is not implemented. State shown is the intended mode, but it may not be\n                    achieved in MSFS. See picture below for actual state possible in MSFS.\n                </>\n            )}\n        />\n    </FootnotesContainer>\n);\n","import { styled } from 'styletron-react';\n\nexport const NotImplementedContainer = styled('div', {\n    opacity: 0.5,\n});\n","const commonModeStates = Object.freeze({\n    ON: 'on',\n    OPTIONALLY_ON: 'optionally_on',\n    OPTIONALLY_OFF: 'optionally_off',\n    OFF: 'off',\n});\n\nexport const AntiIceModeStates = Object.freeze({\n    ...commonModeStates,\n});\n","export const isNullOrUndefined = (value) => value === null || value === undefined;\n\nexport const isNotNullOrUndefined = (value) => !isNullOrUndefined(value);\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\n\nconst transformTagsInit = (value) => {\n    const tags = isNotNullOrUndefined(value.tags) ? value.tags : [];\n\n    return {\n        ...value,\n        tags,\n    };\n};\n\nconst transformTagsMakeSet = (value) => ({\n    ...value,\n    tagsSet: new Set(value.tags),\n});\n\nconst transformValueBuilder = (transforms) => {\n    const allTransforms = [\n        transformTagsInit,\n        ...transforms,\n        transformTagsMakeSet,\n    ];\n\n    return (value) => {\n        let transformedValue = value;\n        allTransforms.forEach((transform) => {\n            transformedValue = transform(transformedValue);\n        });\n        return transformedValue;\n    };\n};\n\nexport const createTransformedMapping = (...transforms) => (values) => {\n    const result = {};\n    const transformValueFN = transformValueBuilder(transforms);\n\n    values.forEach((value) => {\n        if (value.uid in result) {\n            throw new Error(`Found data for \"${value.uid}\" twice.`);\n        }\n        result[value.uid] = transformValueFN(value);\n    });\n\n    return Object.freeze(result);\n};\n\nexport const createTransformedList = (...transforms) => {\n    const transformValueFN = transformValueBuilder(transforms);\n    return (values) => values.map(transformValueFN);\n};\n","import { AntiIceModeStates } from 'lib/anti-ice/data/modeStates';\nimport { createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst commonModeStatesData = createTransformedMapping()([\n    {\n        uid: AntiIceModeStates.ON,\n        label: 'ON',\n        color: '#1e8600',\n    },\n    {\n        uid: AntiIceModeStates.OPTIONALLY_ON,\n        label: 'OFF',\n        color: '#730505',\n        isOptional: true,\n    },\n    {\n        uid: AntiIceModeStates.OPTIONALLY_OFF,\n        label: 'ON',\n        color: '#135700',\n        isOptional: true,\n    },\n    {\n        uid: AntiIceModeStates.OFF,\n        label: 'OFF',\n        color: '#9d0f0f',\n    },\n]);\n\nexport const AntiIceModeStatesData = Object.freeze({\n    ...commonModeStatesData,\n});\n","const commonTags = Object.freeze({\n    NOT_IMPLEMENTED: 'not-implemented',\n});\n\nexport const AntiIceTags = Object.freeze({\n    ...commonTags,\n});\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\n\nexport const pick = (...args) => {\n    for (let idx = 0; idx < args.length; idx += 1) {\n        const arg = args[idx];\n\n        if (isNotNullOrUndefined(arg)) {\n            return arg;\n        }\n    }\n    return null;\n};\n","import React, { useMemo } from 'react';\n\nimport { Table, Tag, Typography } from 'antd';\nimport PropTypes from 'prop-types';\nimport { styled, useStyletron } from 'styletron-react';\n\nimport { AntiIceTableFootnotes } from 'components/anti-ice/AntiIceTableFootnotes';\nimport { CenteringContainer } from 'components/lib/CenteringContainer';\nimport { NotImplementedContainer } from 'components/lib/NotImplementedContainer';\nimport { AntiIceModeStates } from 'lib/anti-ice/data/modeStates';\nimport { AntiIceModeStatesData } from 'lib/anti-ice/data/modeStatesData';\nimport { AntiIceTags } from 'lib/anti-ice/data/tags';\nimport { pick } from 'lib/pick';\n\nconst { Title } = Typography;\n\nconst ImageContainer = styled('div', {\n    width: '800px',\n    height: '320px',\n    backgroundSize: '100%',\n});\n\nconst IPSColumn = ({ title, isNotImplemented }) => {\n    let result = title;\n    if (isNotImplemented) {\n        result = (\n            <NotImplementedContainer>\n                {result}\n                {' '}\n                <sup>3</sup>\n            </NotImplementedContainer>\n        );\n    }\n    return result;\n};\n\nIPSColumn.propTypes = {\n    title: PropTypes.string.isRequired,\n    isNotImplemented: PropTypes.bool.isRequired,\n};\n\nconst StateColumn = ({ state, isNotImplemented, isNonDefault }) => {\n    let result = (\n        <Tag color={state.color}>\n            {state.label}\n            {state.isOptional !== true ? null : (\n                <>\n                    {' '}\n                    <sup>1</sup>\n                </>\n            )}\n            {isNonDefault !== true ? null : (\n                <>\n                    {' '}\n                    <sup>2</sup>\n                </>\n            )}\n        </Tag>\n    );\n    if (isNotImplemented) {\n        result = (\n            <NotImplementedContainer>\n                {result}\n            </NotImplementedContainer>\n        );\n    }\n    return <CenteringContainer>{result}</CenteringContainer>;\n};\n\nStateColumn.propTypes = {\n    state: PropTypes.shape({\n        color: PropTypes.string.isRequired,\n        label: PropTypes.string.isRequired,\n        isOptional: PropTypes.bool,\n    }).isRequired,\n    isNotImplemented: PropTypes.bool.isRequired,\n    isNonDefault: PropTypes.bool.isRequired,\n};\n\nconst columns = [\n    {\n        title: 'Ice Protection System',\n        width: '90%',\n        render: IPSColumn,\n    },\n    {\n        title: 'State',\n        width: '10%',\n        render: StateColumn,\n    },\n];\n\nexport const AntiIceRecommendationDisplay = ({\n    currentConfiguration,\n    antiIceAircraftData,\n    recommendations,\n}) => {\n    const [css] = useStyletron();\n\n    const { states: defaultStates, optionalModesMapping } = recommendations;\n\n    const { states, image } = useMemo(\n        () => {\n            if (currentConfiguration === 'default') {\n                return {\n                    states: recommendations.states,\n                    image: recommendations.image,\n                };\n            }\n\n            const recs = pick(optionalModesMapping[currentConfiguration], {\n                states: {},\n                image: { path: '' },\n            });\n            return { states: recs.states, image: recs.image };\n        },\n        [currentConfiguration, recommendations],\n    );\n\n    const data = antiIceAircraftData.modesOrderData.map(\n        (value) => {\n            const state = pick(states[value.uid], AntiIceModeStates.OFF);\n            const defaultState = pick(defaultStates[value.uid], AntiIceModeStates.OFF);\n\n            return {\n                key: value.title,\n                title: value.title,\n                isNotImplemented: value.tagsSet.has(AntiIceTags.NOT_IMPLEMENTED),\n                isNonDefault: state !== defaultState,\n                state: AntiIceModeStatesData[state],\n            };\n        },\n    );\n\n    return (\n        <>\n            <Table\n                columns={columns}\n                dataSource={data}\n                size=\"small\"\n                pagination={{ position: ['none', 'none'] }}\n            />\n\n            <AntiIceTableFootnotes />\n\n            <Title level={5}>\n                Actual configuration as shown on tilt panel in MSFS:\n            </Title>\n\n            <CenteringContainer>\n                <ImageContainer\n                    className={css({\n                        backgroundImage: `url(${process.env.PUBLIC_URL}/${image.path})`,\n                    })}\n                />\n            </CenteringContainer>\n        </>\n    );\n};\n\nAntiIceRecommendationDisplay.propTypes = {\n    currentConfiguration: PropTypes.string.isRequired,\n    // eslint-disable-next-line react/forbid-prop-types\n    antiIceAircraftData: PropTypes.any.isRequired,\n    // eslint-disable-next-line react/forbid-prop-types\n    recommendations: PropTypes.any.isRequired,\n};\n","import React from 'react';\n\nimport { Slider } from 'antd';\nimport PropTypes from 'prop-types';\n\nexport const AntiIceTemperatureSelector = ({\n    temperature,\n    moisture,\n    sliderData: {\n        marks,\n        min,\n        max,\n        onChange,\n    },\n}) => (\n    <Slider\n        marks={marks}\n        included={false}\n        value={temperature}\n        min={min}\n        max={max}\n        onChange={onChange}\n        disabled={!moisture}\n        handleStyle={moisture ? undefined : { display: 'none' }}\n        tipFormatter={(value) => (\n            <>\n                {value}\n                &deg;C\n            </>\n        )}\n    />\n);\n\nAntiIceTemperatureSelector.propTypes = {\n    temperature: PropTypes.number.isRequired,\n    moisture: PropTypes.bool.isRequired,\n    sliderData: PropTypes.shape({\n        // eslint-disable-next-line react/forbid-prop-types\n        marks: PropTypes.any.isRequired,\n        min: PropTypes.number.isRequired,\n        max: PropTypes.number.isRequired,\n        onChange: PropTypes.func.isRequired,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\nimport PropTypes from 'prop-types';\n\nimport { isNotNullOrUndefined, isNullOrUndefined } from 'lib/isNullOrUndefined';\n\nexport const AntiIceTemperatureTitle = ({ temperature: { name, fullName, description } }) => {\n    let temperatureHelp = null;\n    if (isNotNullOrUndefined(fullName) || isNotNullOrUndefined(description)) {\n        temperatureHelp = (\n            <>\n                {isNullOrUndefined(fullName) ? null : (<strong>{fullName}</strong>)}\n                {isNullOrUndefined(description) ? null : (\n                    <>\n                        :\n                        {' '}\n                        {description}\n                    </>\n                )}\n            </>\n        );\n    }\n\n    return (\n        <strong>\n            Temperature (\n            {name}\n            {isNullOrUndefined(temperatureHelp) ? null : (\n                <>\n                    {' '}\n                    <Tooltip\n                        title={temperatureHelp}\n                        color=\"#3f3f3f\"\n                        placement=\"right\"\n                        overlayStyle={{ maxWidth: '50vw' }}\n                    >\n                        <QuestionCircleOutlined />\n                    </Tooltip>\n                </>\n            )}\n            )\n        </strong>\n    );\n};\n\nAntiIceTemperatureTitle.propTypes = {\n    temperature: PropTypes.shape({\n        name: PropTypes.node.isRequired,\n        fullName: PropTypes.node,\n        description: PropTypes.node,\n    }).isRequired,\n};\n","export const AntiIceAircrafts = Object.freeze({\n    WORKINGTITLE_CJ4: 'workingtitle-cj4',\n});\n","const cj4Images = Object.freeze({\n    CJ4_ALL_OFF: 'cj4-all-off',\n    CJ4_ENG_ONLY_ON: 'cj4-eng-only-on',\n    CJ4_PITOT_HEAT_ENG_ONLY_ON: 'cj4-pitot-heat-eng-only-on',\n    CJ4_PITOT_ON: 'cj4-pitot-on',\n    CJ4_PITOT_WING_ENG_ON: 'cj4-pitot-wing-eng-on',\n});\n\nexport const AntiIceImages = Object.freeze({\n    ...cj4Images,\n});\n","export const AntiIceOperationModes = Object.freeze({\n    GROUND_OPERATION: 'ground-operation',\n    IN_FLIGHT_OPERATION: 'in-flight-operation',\n});\n","const cj4IceProtectionSystemsModes = Object.freeze({\n    CJ4_WING_ENG_ANTI_ICE_MODE: 'cj4-wing-eng-anti-ice-mode',\n    CJ4_ENG_ONLY_ANTI_ICE_MODE: 'cj4-eng-only-anti-ice-mode',\n    CJ4_TAIL_DEICE_ANTI_ICE_MODE: 'cj4-tail-deice-anti-ice-mode',\n    CJ4_PITOT_STATIC_HEAT_ANTI_ICE_MODE: 'cj4-pitot-static-heat-anti-ice-mode',\n});\n\nexport const AntiIceSystemModes = Object.freeze({\n    ...cj4IceProtectionSystemsModes,\n});\n","import React from 'react';\n\nimport { styled } from 'styletron-react';\n\nimport { AntiIceAircrafts } from 'lib/anti-ice/data/aircrafts';\nimport { AntiIceImages } from 'lib/anti-ice/data/images';\nimport { AntiIceModeStates } from 'lib/anti-ice/data/modeStates';\nimport { AntiIceOperationModes } from 'lib/anti-ice/data/operationModes';\nimport { AntiIceSystemModes } from 'lib/anti-ice/data/systemModes';\nimport { createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst Strongish = styled('strong', { color: '#606060' });\n\nexport const AntiIceAircraftsData = createTransformedMapping()([\n    {\n        uid: AntiIceAircrafts.WORKINGTITLE_CJ4,\n        title: 'WorkingTitle CJ4',\n        modesOrder: [\n            AntiIceSystemModes.CJ4_PITOT_STATIC_HEAT_ANTI_ICE_MODE,\n            AntiIceSystemModes.CJ4_WING_ENG_ANTI_ICE_MODE,\n            AntiIceSystemModes.CJ4_ENG_ONLY_ANTI_ICE_MODE,\n            AntiIceSystemModes.CJ4_TAIL_DEICE_ANTI_ICE_MODE,\n        ],\n        operationModes: [\n            {\n                modeName: AntiIceOperationModes.GROUND_OPERATION,\n                defaultMode: {\n                    states: {},\n                    image: AntiIceImages.CJ4_ALL_OFF,\n                },\n                moistureHelp: (\n                    <>\n                        <Strongish>On the ground:</Strongish>\n                        {' '}\n                        Is there surface snow, slush, ice or standing water which may be ingested by engines or\n                        freeze sensors?\n                    </>\n                ),\n                temperature: {\n                    name: 'OAT',\n                    fullName: 'Outside Air Temperature',\n                    description: (\n                        <>\n                            The temperature of air around the aircraft. Can be found in METAR, ATIS, or should equal\n                            SAT as displayed on MFD on the ground.\n                        </>\n                    ),\n                },\n                limits: [\n                    {\n                        limit: 5,\n                        defaultMode: {\n                            states: {\n                                [AntiIceSystemModes.CJ4_ENG_ONLY_ANTI_ICE_MODE]: AntiIceModeStates.ON,\n                            },\n                            image: AntiIceImages.CJ4_ENG_ONLY_ON,\n                        },\n                    },\n                ],\n            },\n            {\n                modeName: AntiIceOperationModes.IN_FLIGHT_OPERATION,\n                moistureHelp: (\n                    <>\n                        <Strongish>In flight:</Strongish>\n                        {' '}\n                        Is there visible air moisture? Examples include clouds, fog with visibility of one mile or\n                        less, rain, snow, sleet, or ice crystals.\n                    </>\n                ),\n                temperature: {\n                    name: 'SAT',\n                    fullName: 'Static Air Temperature',\n                    description: (\n                        <>\n                            The temperature of undisturbed air around the aircraft, in other words, the temperature\n                            of air not affected by the aircraft moving through it. (friction, ...)\n                        </>\n                    ),\n                },\n                defaultMode: {\n                    states: {\n                        [AntiIceSystemModes.CJ4_PITOT_STATIC_HEAT_ANTI_ICE_MODE]: AntiIceModeStates.ON,\n                    },\n                    image: AntiIceImages.CJ4_PITOT_ON,\n                },\n                limits: [\n                    {\n                        limit: -40,\n                        description: (\n                            <>\n                                Below -40&deg;C, by default wing and engine anti-ice should be used. If it can be\n                                confirmed that there is no ice forming on the wings, wing anti-ice may be turned off\n                                and engine only anti-ice may be used instead.\n                            </>\n                        ),\n                        defaultMode: {\n                            states: {\n                                [AntiIceSystemModes.CJ4_WING_ENG_ANTI_ICE_MODE]: AntiIceModeStates.OPTIONALLY_OFF,\n                                [AntiIceSystemModes.CJ4_ENG_ONLY_ANTI_ICE_MODE]: AntiIceModeStates.OPTIONALLY_ON,\n                                [AntiIceSystemModes.CJ4_PITOT_STATIC_HEAT_ANTI_ICE_MODE]: AntiIceModeStates.ON,\n                            },\n                            image: AntiIceImages.CJ4_PITOT_WING_ENG_ON,\n                        },\n                        optionalModes: [\n                            {\n                                uid: 'no-ice-on-wings',\n                                title: 'no ice on wings',\n                                description: (\n                                    <>\n                                        <strong>Requirement:</strong>\n                                        {' '}\n                                        confirm that no ice is forming on wings. (visual check)\n                                    </>\n                                ),\n                                states: {\n                                    [AntiIceSystemModes.CJ4_ENG_ONLY_ANTI_ICE_MODE]: AntiIceModeStates.ON,\n                                    [AntiIceSystemModes.CJ4_PITOT_STATIC_HEAT_ANTI_ICE_MODE]: AntiIceModeStates.ON,\n                                },\n                                image: AntiIceImages.CJ4_PITOT_HEAT_ENG_ONLY_ON,\n                            },\n                        ],\n                    },\n                    {\n                        limit: -30,\n                        defaultMode: {\n                            states: {\n                                [AntiIceSystemModes.CJ4_WING_ENG_ANTI_ICE_MODE]: AntiIceModeStates.ON,\n                                [AntiIceSystemModes.CJ4_PITOT_STATIC_HEAT_ANTI_ICE_MODE]: AntiIceModeStates.ON,\n                            },\n                            image: AntiIceImages.CJ4_PITOT_WING_ENG_ON,\n                        },\n                    },\n                    {\n                        limit: 10,\n                        defaultMode: {\n                            states: {\n                                [AntiIceSystemModes.CJ4_WING_ENG_ANTI_ICE_MODE]: AntiIceModeStates.ON,\n                                [AntiIceSystemModes.CJ4_TAIL_DEICE_ANTI_ICE_MODE]: AntiIceModeStates.ON,\n                                [AntiIceSystemModes.CJ4_PITOT_STATIC_HEAT_ANTI_ICE_MODE]: AntiIceModeStates.ON,\n                            },\n                            image: AntiIceImages.CJ4_PITOT_WING_ENG_ON,\n                        },\n                    },\n                ],\n            },\n        ],\n    },\n]);\n","import { AntiIceSystemModes } from 'lib/anti-ice/data/systemModes';\nimport { AntiIceTags } from 'lib/anti-ice/data/tags';\nimport { createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst cj4SystemModesData = createTransformedMapping()([\n    {\n        uid: AntiIceSystemModes.CJ4_WING_ENG_ANTI_ICE_MODE,\n        title: 'Wing/Engine Anti-Ice',\n    },\n    {\n        uid: AntiIceSystemModes.CJ4_ENG_ONLY_ANTI_ICE_MODE,\n        title: 'Engine Only Anti-Ice',\n    },\n    {\n        uid: AntiIceSystemModes.CJ4_TAIL_DEICE_ANTI_ICE_MODE,\n        title: 'Tail Deice',\n        tags: [AntiIceTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: AntiIceSystemModes.CJ4_PITOT_STATIC_HEAT_ANTI_ICE_MODE,\n        title: 'Pitot / Static Heat',\n    },\n]);\n\nexport const AntiIceSystemModesData = Object.freeze({\n    ...cj4SystemModesData,\n});\n","import React from 'react';\n\nimport { AntiIceOperationModes } from 'lib/anti-ice/data/operationModes';\nimport { createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst baseOperationModes = createTransformedMapping()([\n    {\n        uid: AntiIceOperationModes.GROUND_OPERATION,\n        title: 'Ground Operation',\n        description: (\n            <>\n                The following rules should be followed while taxiing after a landing, or before going into takeoff\n                mode. Switch to in-flight rules once preparing for take-off.\n            </>\n        ),\n    },\n    {\n        uid: AntiIceOperationModes.IN_FLIGHT_OPERATION,\n        title: 'In-Flight Operation',\n        description: (\n            <>\n                The following rules should be followed while taking-off, in flight and landing. Switch to ground\n                operation once clear of runway and taxiing back to parking.\n            </>\n        ),\n    },\n]);\n\nexport const AntiIceOperationModesData = Object.freeze({\n    ...baseOperationModes,\n});\n","import React, { useMemo } from 'react';\n\nimport { styled } from 'styletron-react';\n\nimport { AntiIceOperationModesData } from 'lib/anti-ice/data/operationModesData';\nimport { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { pick } from 'lib/pick';\n\nconst SliderTempLabel = styled('span', {\n    color: '#4d4d4d',\n});\n\nconst temperatureMargin = 30;\n\nexport const useAntiIceOperationModeData = ({\n    antiIceAircraftData,\n    selectedOperationModeName,\n    antiIceURLManager,\n}) => useMemo(\n    () => {\n        const baseData = AntiIceOperationModesData[selectedOperationModeName];\n\n        const aircraftOperationData = antiIceAircraftData.operationModes\n            .filter((v) => v.modeName === selectedOperationModeName)[0];\n\n        const temperatures = [];\n\n        antiIceAircraftData.operationModes.forEach((operationalMode) => {\n            pick(pick(operationalMode, {}).limits, [])\n                .filter((value) => isNotNullOrUndefined(value.limit))\n                .forEach((value) => { temperatures.push(value.limit); });\n        });\n\n        temperatures.sort();\n\n        const marks = {};\n\n        pick(pick(aircraftOperationData, {}).limits, [])\n            .filter((value) => isNotNullOrUndefined(value.limit))\n            .forEach((value) => {\n                marks[value.limit] = {\n                    label: (\n                        <SliderTempLabel>\n                            {value.limit}\n                            &deg;C\n                        </SliderTempLabel>\n                    ),\n                };\n            });\n\n        const hasTemperatures = temperatures.length !== 0;\n\n        const sliderData = {\n            marks,\n            min: hasTemperatures ? temperatures[0] - temperatureMargin : 0,\n            max: hasTemperatures ? temperatures[temperatures.length - 1] + temperatureMargin : 0,\n            onChange: (value) => antiIceURLManager.changeTemperature(value),\n        };\n\n        return {\n            ...baseData,\n            ...aircraftOperationData,\n            sliderData,\n        };\n    },\n    [selectedOperationModeName, antiIceAircraftData, antiIceURLManager],\n);\n","import { AntiIceImages } from 'lib/anti-ice/data/images';\nimport { createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst cj4ImagesData = createTransformedMapping()([\n    {\n        uid: AntiIceImages.CJ4_ALL_OFF,\n        path: 'images/workingtitle-cj4-anti-ice/ALL_OFF.jpg',\n    },\n    {\n        uid: AntiIceImages.CJ4_ENG_ONLY_ON,\n        path: 'images/workingtitle-cj4-anti-ice/ENG_ONLY_ON.jpg',\n    },\n    {\n        uid: AntiIceImages.CJ4_PITOT_HEAT_ENG_ONLY_ON,\n        path: 'images/workingtitle-cj4-anti-ice/PITOT_ENG_ONLY_ON.jpg',\n    },\n    {\n        uid: AntiIceImages.CJ4_PITOT_ON,\n        path: 'images/workingtitle-cj4-anti-ice/PITOT_ON.jpg',\n    },\n    {\n        uid: AntiIceImages.CJ4_PITOT_WING_ENG_ON,\n        path: 'images/workingtitle-cj4-anti-ice/PITOT_WING_ENG_ON.jpg',\n    },\n]);\n\nexport const AntiIceImagesData = Object.freeze({\n    ...cj4ImagesData,\n});\n","import { useMemo } from 'react';\n\nimport { AntiIceAircraftsData } from 'lib/anti-ice/data/aircraftsData';\nimport { AntiIceSystemModesData } from 'lib/anti-ice/data/systemModesData';\nimport { useAntiIceMenuItems } from 'lib/anti-ice/hooks/useAntiIceMenuItems';\nimport { useAntiIceOperationModeData } from 'lib/anti-ice/hooks/useAntiIceOperationModeData';\nimport { useAntiIceRecommendation } from 'lib/anti-ice/hooks/useAntiIceRecommendation';\n\nexport const useAntiIce = ({\n    aircraftName,\n    selectedOperationModeName,\n    moisture,\n    temperature,\n    antiIceURLManager,\n}) => {\n    const antiIceAircraftData = useMemo(\n        () => {\n            const baseData = AntiIceAircraftsData[aircraftName];\n\n            return {\n                ...baseData,\n                modesOrderData: baseData.modesOrder.map((uid) => AntiIceSystemModesData[uid]),\n            };\n        },\n        [aircraftName],\n    );\n\n    const menuItems = useAntiIceMenuItems({\n        antiIceAircraftData,\n        antiIceURLManager,\n    });\n\n    const operationModeData = useAntiIceOperationModeData({\n        antiIceAircraftData,\n        selectedOperationModeName,\n        antiIceURLManager,\n    });\n\n    const [setMoisture] = useMemo(\n        () => [\n            (value) => antiIceURLManager.changeMoisture(value),\n        ],\n        [antiIceURLManager],\n    );\n\n    const recommendations = useAntiIceRecommendation({\n        operationModeData,\n        moisture,\n        temperature,\n    });\n\n    return {\n        antiIceAircraftData,\n        operationModeData,\n        menuItems,\n        setMoisture,\n        recommendations,\n    };\n};\n","import { useMemo } from 'react';\n\nimport { AntiIceOperationModesData } from 'lib/anti-ice/data/operationModesData';\n\nexport const useAntiIceMenuItems = ({\n    antiIceURLManager,\n    antiIceAircraftData,\n}) => useMemo(\n    () => antiIceAircraftData.operationModes.map((v) => v.modeName).map((operationModeName) => {\n        const baseData = AntiIceOperationModesData[operationModeName];\n\n        return {\n            ...baseData,\n            key: baseData.uid,\n            selectMenu: () => {\n                antiIceURLManager.changeOperationMode(operationModeName);\n            },\n        };\n    }),\n    [antiIceAircraftData.operationModes, antiIceURLManager],\n);\n","import { useMemo } from 'react';\n\nimport { AntiIceImagesData } from 'lib/anti-ice/data/imagesData';\nimport { isNotNullOrUndefined, isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { pick } from 'lib/pick';\n\nexport const useAntiIceRecommendation = ({\n    operationModeData,\n    moisture,\n    temperature,\n}) => {\n    const { states, image, optionalModes } = useMemo(\n        () => {\n            const { defaultMode, limits } = operationModeData;\n\n            if (isNotNullOrUndefined(limits)) {\n                for (let idx = 0; moisture && idx < limits.length; idx += 1) {\n                    const omd = limits[idx];\n\n                    if (temperature < omd.limit) {\n                        return {\n                            states: omd.defaultMode.states,\n                            image: omd.defaultMode.image,\n                            optionalModes: pick(omd.optionalModes, []),\n                        };\n                    }\n                }\n            }\n\n            if (isNullOrUndefined(defaultMode)) {\n                return {\n                    states: {},\n                    image: null,\n                    optionalModes: [],\n                };\n            }\n\n            return {\n                states: defaultMode.states,\n                image: defaultMode.image,\n                optionalModes: [],\n            };\n        },\n        [operationModeData, moisture, temperature],\n    );\n\n    return useMemo(\n        () => {\n            const optionalModesOrder = [];\n            const optionalModesMapping = {};\n\n            optionalModes.forEach((value) => {\n                optionalModesOrder.push(value.uid);\n                optionalModesMapping[value.uid] = {\n                    ...value,\n                    image: AntiIceImagesData[value.image],\n                };\n            });\n\n            return ({\n                states,\n                image: pick(AntiIceImagesData[image], null),\n                optionalModesOrder,\n                optionalModesMapping,\n            });\n        },\n        [states, image, optionalModes],\n    );\n};\n","import React, { useEffect, useState } from 'react';\n\nimport {\n    Col, Empty, Menu, Row, Typography,\n} from 'antd';\nimport PropTypes from 'prop-types';\nimport { useStyletron } from 'styletron-react';\n\nimport { AntiIceConfigurationSelector } from 'components/anti-ice/AntiIceConfigurationSelector';\nimport { AntiIceMoistureSelector } from 'components/anti-ice/AntiIceMoistureSelector';\nimport { AntiIceRecommendationDisplay } from 'components/anti-ice/AntiIceRecommendationDisplay';\nimport { AntiIceTemperatureSelector } from 'components/anti-ice/AntiIceTemperatureSelector';\nimport { AntiIceTemperatureTitle } from 'components/anti-ice/AntiIceTemperatureTitle';\nimport { useAntiIce } from 'lib/anti-ice/hooks/useAntiIce';\n\nconst { Title } = Typography;\n\nexport const AntiIceDisplay = ({\n    aircraftName,\n    selectedOperationModeName,\n    moisture,\n    temperature,\n    antiIceURLManager,\n    operationModeFound,\n}) => {\n    const [css] = useStyletron();\n\n    const {\n        antiIceAircraftData,\n        menuItems,\n        operationModeData,\n        setMoisture,\n        recommendations,\n    } = useAntiIce({\n        aircraftName,\n        selectedOperationModeName,\n        moisture,\n        temperature,\n        antiIceURLManager,\n    });\n\n    const [currentConfiguration, setCurrentConfiguration] = useState('default');\n    const { optionalModesOrder, optionalModesMapping } = recommendations;\n\n    useEffect(\n        () => { setCurrentConfiguration('default'); },\n        [selectedOperationModeName, optionalModesOrder],\n    );\n\n    const menu = (\n        <Menu\n            selectedKeys={[selectedOperationModeName]}\n            className={css({ marginBottom: '20px' })}\n            mode=\"horizontal\"\n        >\n            {menuItems.map((v) => (\n                <Menu.Item key={v.key} onClick={v.selectMenu}>\n                    {v.title}\n                </Menu.Item>\n            ))}\n        </Menu>\n    );\n\n    if (!operationModeFound) {\n        return (\n            <>\n                <Title>{antiIceAircraftData.title}</Title>\n                {menu}\n                <Empty />\n            </>\n        );\n    }\n\n    return (\n        <>\n            <Title>{antiIceAircraftData.title}</Title>\n\n            {menu}\n\n            <Row className={css({ marginBottom: '20px' })}>\n                <Col span={21}>\n                    <strong>Is there water on the ground or in the air?</strong>\n                    <br />\n                    {operationModeData.moistureHelp}\n                </Col>\n                <Col span={3}>\n                    <AntiIceMoistureSelector moisture={moisture} setMoisture={setMoisture} />\n                </Col>\n            </Row>\n\n            <Row className={css({ marginBottom: '20px' })}>\n                <Col span={5}>\n                    <AntiIceTemperatureTitle temperature={operationModeData.temperature} />\n                </Col>\n                <Col span={19}>\n                    <AntiIceTemperatureSelector\n                        temperature={temperature}\n                        moisture={moisture}\n                        sliderData={operationModeData.sliderData}\n                    />\n                </Col>\n            </Row>\n\n            <Title level={5}>\n                Recommendation at\n                {' '}\n                {moisture ? (\n                    <>\n                        {temperature}\n                        &deg;C with moisture\n                    </>\n                ) : (\n                    <>\n                        any temperature without moisture\n                    </>\n                )}\n                {' '}\n                and\n                {' '}\n                <AntiIceConfigurationSelector\n                    currentConfiguration={currentConfiguration}\n                    setCurrentConfiguration={setCurrentConfiguration}\n                    optionalModesOrder={optionalModesOrder}\n                    optionalModesMapping={optionalModesMapping}\n                />\n                {' '}\n                configuration:\n            </Title>\n\n            <AntiIceRecommendationDisplay\n                currentConfiguration={currentConfiguration}\n                antiIceAircraftData={antiIceAircraftData}\n                recommendations={recommendations}\n            />\n        </>\n    );\n};\n\nAntiIceDisplay.propTypes = {\n    aircraftName: PropTypes.string.isRequired,\n    selectedOperationModeName: PropTypes.string.isRequired,\n    moisture: PropTypes.bool.isRequired,\n    temperature: PropTypes.number.isRequired,\n    // eslint-disable-next-line react/forbid-prop-types\n    antiIceURLManager: PropTypes.any.isRequired,\n    operationModeFound: PropTypes.bool.isRequired,\n};\n","import { styled, withStyle } from 'styletron-react';\n\nexport const ContentContainer = styled('div', {\n    padding: '0px 20px',\n    width: '100%',\n});\n\nexport const CenteredContentContainer = withStyle(ContentContainer, {\n    maxWidth: '1200px',\n    margin: 'auto',\n});\n","import { useMemo } from 'react';\n\nimport { useLocation } from 'react-router';\n\nexport const useQueryParams = () => {\n    const { search } = useLocation();\n    return useMemo(() => new URLSearchParams(search), [search]);\n};\n","export const ChecklistsWithNameAndListNameRoute = '/checklists/:checklistName/:checklistListName';\nexport const ChecklistsWithNameRoute = '/checklists/:checklistName';\nexport const AntiIceWithNameRoute = '/anti-ice/:aircraftName';\nexport const AntiIceWithNameAndOperationModeNameRoute = '/anti-ice/:aircraftName/:operationModeName';\nexport const MetarExplainerRoute = '/metar-explain';\n","import { useMemo } from 'react';\n\nimport { generatePath, useHistory, useParams } from 'react-router';\n\nimport { useQueryParams } from 'lib/hooks/useQueryParams';\nimport { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { pick } from 'lib/pick';\nimport { AntiIceWithNameAndOperationModeNameRoute, AntiIceWithNameRoute } from 'lib/routes';\n\nexport class AntiIceURLManager {\n    constructor({\n        history, aircraftName, operationModeName, moisture, temperature,\n    }) {\n        this.history = history;\n        this.aircraftName = aircraftName;\n        this.operationModeName = operationModeName;\n        this.moisture = moisture;\n        this.temperature = temperature;\n    }\n\n    changeOperationMode(operationModeName) {\n        this.pushURL(operationModeName, this.moisture, this.temperature);\n    }\n\n    changeTemperature(temperature) {\n        this.pushURL(this.operationModeName, this.moisture, temperature);\n    }\n\n    changeMoisture(moisture) {\n        this.pushURL(this.operationModeName, moisture, this.temperature);\n    }\n\n    pushURL(operationModeName, moisture, temperature) {\n        const baseURL = this.buildURL(operationModeName);\n        const urlParams = this.buildURLParams(moisture, temperature);\n\n        const fn = this.operationModeName === operationModeName\n            ? this.history.replace\n            : this.history.push;\n\n        if (urlParams !== '') {\n            fn(`${baseURL}?${urlParams}`);\n        } else {\n            fn(baseURL);\n        }\n    }\n\n    buildURL(operationModeName) {\n        if (isNotNullOrUndefined(operationModeName)) {\n            return generatePath(\n                AntiIceWithNameAndOperationModeNameRoute,\n                {\n                    aircraftName: this.aircraftName,\n                    operationModeName,\n                },\n            );\n        }\n\n        return generatePath(\n            AntiIceWithNameRoute,\n            {\n                aircraftName: this.aircraftName,\n            },\n        );\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    buildURLParams(moisture, temperature) {\n        const queryParams = new URLSearchParams();\n\n        if (isNotNullOrUndefined(moisture) && moisture) {\n            queryParams.set('moisture', '1');\n        }\n        if (isNotNullOrUndefined(temperature) && temperature !== 0) {\n            queryParams.set('temperature', temperature);\n        }\n        return queryParams.toString();\n    }\n}\n\nexport const useAntiIceURLConfig = () => {\n    const history = useHistory();\n    const queryParams = useQueryParams();\n    const { aircraftName, operationModeName } = useParams();\n\n    const [moisture, temperature] = useMemo(() => [\n        queryParams.get('moisture') === '1',\n        pick(queryParams.get('temperature'), 0),\n    ], [queryParams]);\n\n    const result = {\n        aircraftName: pick(aircraftName),\n        operationModeName: pick(operationModeName),\n        moisture,\n        temperature,\n    };\n\n    const antiIceURLManager = useMemo(\n        () => new AntiIceURLManager({ history, ...result }),\n        [history, result],\n    );\n\n    return { antiIceURLManager, ...result };\n};\n","import React from 'react';\n\nimport { AntiIceAircraftNotFound } from 'components/anti-ice/AntiIceAircraftNotFound';\nimport { AntiIceDisplay } from 'components/anti-ice/AntiIceDisplay';\nimport { CenteredContentContainer } from 'components/lib/CenteredContentContainer';\nimport { useAntiIceCheck } from 'lib/anti-ice/hooks/useAntiIceCheck';\nimport { useAntiIceURLConfig } from 'lib/anti-ice/hooks/useAntiIceURLConfig';\n\nexport const AntiIce = () => {\n    const {\n        aircraftName,\n        operationModeName,\n        moisture,\n        temperature,\n        antiIceURLManager,\n    } = useAntiIceURLConfig();\n\n    const {\n        aircraftFound,\n        operationModeFound,\n        selectedOperationModeName,\n    } = useAntiIceCheck({\n        aircraftName,\n        operationModeName,\n    });\n\n    return (\n        <CenteredContentContainer>\n            {!aircraftFound\n                ? <AntiIceAircraftNotFound aircraftName={aircraftName} />\n                : (\n                    <AntiIceDisplay\n                        aircraftName={aircraftName}\n                        selectedOperationModeName={selectedOperationModeName}\n                        moisture={moisture}\n                        temperature={temperature}\n                        antiIceURLManager={antiIceURLManager}\n                        operationModeFound={operationModeFound}\n                    />\n                )}\n        </CenteredContentContainer>\n    );\n};\n","import { useMemo } from 'react';\n\nimport { AntiIceAircrafts } from 'lib/anti-ice/data/aircrafts';\nimport { AntiIceAircraftsData } from 'lib/anti-ice/data/aircraftsData';\nimport { isNotNullOrUndefined, isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { pick } from 'lib/pick';\n\nexport const useAntiIceCheck = ({\n    aircraftName,\n    operationModeName,\n}) => {\n    const knownLists = useMemo(\n        () => {\n            const operationModes = (\n                pick(pick(AntiIceAircraftsData[aircraftName], {}).operationModes, [])\n                    .map((v) => v.modeName)\n            );\n\n            return {\n                aircraftNames: new Set(Object.values(AntiIceAircrafts)),\n                operationModesSet: new Set(operationModes),\n                operationModes,\n            };\n        },\n        [aircraftName],\n    );\n\n    const [aircraftFound, operationModeFound] = useMemo(\n        () => {\n            // eslint-disable-next-line no-shadow\n            const aircraftFound = knownLists.aircraftNames.has(aircraftName);\n\n            // eslint-disable-next-line no-shadow\n            const operationModeFound = (\n                isNullOrUndefined(operationModeName)\n                || knownLists.operationModesSet.has(operationModeName)\n            );\n\n            return [\n                aircraftFound,\n                aircraftFound && operationModeFound,\n            ];\n        },\n        [knownLists, aircraftName, operationModeName],\n    );\n\n    const selectedOperationModeName = useMemo(\n        () => {\n            if (!operationModeFound) {\n                return null;\n            }\n            if (isNotNullOrUndefined(operationModeName)) {\n                return operationModeName;\n            }\n            return pick(knownLists.operationModes[0]);\n        },\n        [operationModeFound, operationModeName],\n    );\n\n    return {\n        aircraftFound,\n        operationModeFound,\n        selectedOperationModeName,\n    };\n};\n","import { styled } from 'styletron-react';\n\nexport const Clearfix = styled('div', {\n    clear: 'both',\n});\n","import React from 'react';\n\nimport { List, Switch } from 'antd';\nimport PropTypes from 'prop-types';\nimport { styled } from 'styletron-react';\n\nimport { Clearfix } from 'components/lib/Clearfix';\n\nconst ChecklistConfigurationSwitchContainer = styled('div', {\n    width: '100%',\n});\n\nconst ChecklistConfigurationSwitchSwitchContainer = styled('div', {\n    float: 'right',\n    marginLeft: '20px',\n});\n\nexport const ChecklistConfigurationSwitch = ({\n    title, description, checked, onChange, onClick,\n}) => (\n    <List.Item>\n        <ChecklistConfigurationSwitchContainer>\n            <ChecklistConfigurationSwitchSwitchContainer>\n                <Switch checked={checked} onChange={onChange} onClick={onClick} />\n            </ChecklistConfigurationSwitchSwitchContainer>\n\n            <div>\n                <strong>\n                    {title}\n                    :\n                </strong>\n                {' '}\n                {description}\n            </div>\n            <Clearfix />\n        </ChecklistConfigurationSwitchContainer>\n    </List.Item>\n);\n\nChecklistConfigurationSwitch.propTypes = {\n    title: PropTypes.string.isRequired,\n    description: PropTypes.node.isRequired,\n    checked: PropTypes.bool.isRequired,\n    onChange: PropTypes.func,\n    onClick: PropTypes.func,\n};\n\nChecklistConfigurationSwitch.defaultProps = {\n    onChange: null,\n    onClick: null,\n};\n","import { useEffect, useMemo, useRef } from 'react';\n\nimport { isEqual } from 'lodash';\nimport { useSelector } from 'react-redux';\n\nconst useDeepDeps = (deps) => {\n    const isFirst = useRef(true);\n    const prevDeps = useRef(deps);\n    const counter = useRef(0);\n\n    return useMemo(() => {\n        const isFirstEffect = isFirst.current;\n        const isSame = prevDeps.current.every((obj, index) => isEqual(obj, deps[index]));\n\n        isFirst.current = false;\n        prevDeps.current = deps;\n\n        if (isFirstEffect || !isSame) {\n            counter.current += 1;\n        }\n\n        return counter.current;\n    }, deps);\n};\n\nexport const useDeepEffect = (fn, deps) => {\n    const counter = useDeepDeps(deps);\n    useEffect(fn, [counter]);\n};\n\nexport const useDeepMemo = (fn, deps) => {\n    const counter = useDeepDeps(deps);\n    return useMemo(fn, [counter]);\n};\n\nexport const useDeepSelector = (fn) => useSelector(fn, isEqual);\n","import { useMemo } from 'react';\n\nimport { generatePath, useHistory, useParams } from 'react-router';\n\nimport { useDeepMemo } from 'lib/hooks/deep';\nimport { useQueryParams } from 'lib/hooks/useQueryParams';\nimport { isNotNullOrUndefined, isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { pick } from 'lib/pick';\nimport { ChecklistsWithNameAndListNameRoute, ChecklistsWithNameRoute } from 'lib/routes';\n\nexport class ChecklistURLManager {\n    constructor({\n        history, checklistName, checklistListName, selectedFilters,\n    }) {\n        this.history = history;\n        this.checklistName = checklistName;\n        this.checklistListName = checklistListName;\n        this.selectedFilters = selectedFilters;\n    }\n\n    changeChecklistList(checklistListName) {\n        this.pushURL(checklistListName, this.selectedFilters);\n    }\n\n    addFilter(filterName) {\n        this.pushURL(this.checklistListName, [...this.selectedFilters, filterName]);\n    }\n\n    removeFilter(filterName) {\n        this.pushURL(this.checklistListName, this.selectedFilters.filter((v) => v !== filterName));\n    }\n\n    pushURL(checklistListName, filters) {\n        const baseURL = this.buildURL(checklistListName);\n        const urlParams = this.buildURLParams(filters);\n\n        if (urlParams !== '') {\n            this.history.push(`${baseURL}?${urlParams}`);\n        } else {\n            this.history.push(baseURL);\n        }\n    }\n\n    buildURL(checklistListName) {\n        if (isNotNullOrUndefined(checklistListName)) {\n            return generatePath(\n                ChecklistsWithNameAndListNameRoute,\n                {\n                    checklistName: this.checklistName,\n                    checklistListName,\n                },\n            );\n        }\n\n        return generatePath(\n            ChecklistsWithNameRoute,\n            {\n                checklistName: this.checklistName,\n            },\n        );\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    buildURLParams(filters) {\n        const queryParams = new URLSearchParams();\n        if (isNotNullOrUndefined(filters) && filters.length !== 0) {\n            filters.forEach((filterName) => queryParams.append('filter', filterName));\n        }\n        return queryParams.toString();\n    }\n}\n\nconst useSelectedFilters = () => {\n    const queryParams = useQueryParams();\n\n    return useMemo(() => {\n        const selectedFilters = queryParams.getAll('filter');\n        if (isNullOrUndefined(selectedFilters) || selectedFilters.length === 0) {\n            return [];\n        }\n        return selectedFilters;\n    }, [queryParams]);\n};\n\nexport const useChecklistURLConfig = () => {\n    const history = useHistory();\n    const { checklistName, checklistListName } = useParams();\n\n    const selectedFilters = useSelectedFilters();\n\n    const result = {\n        checklistName: pick(checklistName),\n        checklistListName: pick(checklistListName),\n        selectedFilters,\n    };\n\n    const checklistURLManager = useDeepMemo(\n        () => new ChecklistURLManager({ history, ...result }),\n        [history, result],\n    );\n\n    return { checklistURLManager, ...result };\n};\n","export const TOGGLE_LEFT_HANDED_MODE = 'TOGGLE_LEFT_HANDED_MODE';\nexport const TOGGLE_HIDE_TAGS_MODE = 'TOGGLE_HIDE_TAGS_MODE';\nexport const TOGGLE_HIDE_HELP_MODE = 'TOGGLE_HIDE_HELP_MODE';\nexport const TOGGLE_HIDE_SWITCHES_MODE = 'TOGGLE_HIDE_SWITCHES_MODE';\n\nexport const INITIALIZE_CHECKLIST = 'INITIALIZE_CHECKLIST';\nexport const TOGGLE_ITEM = 'TOGGLE_ITEM';\nexport const RESET_CHECKED_ITEMS = 'RESET_CHECKED_ITEMS';\nexport const RESET_LIST_CHECKED_ITEMS = 'RESET_LIST_CHECKED_ITEMS';\n\nexport const defaultChecklistListState = {\n    counters: {\n        listItemsChecked: {},\n        listItemsTotals: {},\n    },\n    checkedItems: [],\n};\n\nexport const defaultChecklistState = {\n    config: {\n        leftHandedMode: false,\n        hideTagsMode: false,\n        hideHelpMode: false,\n        hideSwitchesMode: false,\n    },\n    lists: {},\n};\n","import PropTypes from 'prop-types';\n\nimport { ChecklistURLManager } from 'lib/checklist/hooks/useChecklistURLConfig';\n\n// FIXME: complete these types.\n\nexport const ChecklistURLManagerPropTypes = PropTypes.oneOfType([\n    PropTypes.instanceOf(ChecklistURLManager),\n    PropTypes.shape({\n        changeChecklistList: PropTypes.func.isRequired,\n        addFilter: PropTypes.func.isRequired,\n        removeFilter: PropTypes.func.isRequired,\n    }),\n]);\n\nexport const ChecklistDataItemTagsPropTypes = PropTypes.shape({});\n\nexport const ChecklistDataPropTypes = PropTypes.shape({\n    selectableFilters: PropTypes.arrayOf(PropTypes.string).isRequired,\n    selectableFiltersData: PropTypes.shape.isRequired,\n});\n","import { pick } from 'lib/pick';\nimport { defaultChecklistListState, defaultChecklistState } from 'state/constants/checklist';\n\nexport const getChecklistGlobalConfig = (state) => pick(\n    state.checklist,\n    defaultChecklistState,\n).config;\n\nexport const getChecklistData = (state, checklistName) => pick(\n    state.checklist.lists[checklistName],\n    defaultChecklistListState,\n);\n\nexport const getChecklistListItemData = (state, checklistName, itemKey) => {\n    const { checkedItems } = getChecklistData(state, checklistName);\n\n    return {\n        isChecked: checkedItems.includes(itemKey),\n    };\n};\n\nexport const getChecklistListCountersData = (state, checklistName, checklistListName) => {\n    const { counters } = getChecklistData(state, checklistName);\n\n    return {\n        checkedCount: counters.listItemsChecked[checklistListName],\n        totalsCount: counters.listItemsTotals[checklistListName],\n    };\n};\n","import { useDeepSelector } from 'lib/hooks/deep';\nimport { getChecklistGlobalConfig } from 'state/readers/checklist';\n\nexport const useChecklistGlobalConfig = () => useDeepSelector(getChecklistGlobalConfig);\n","import { useMemo } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { useChecklistGlobalConfig } from 'lib/checklist/hooks/useChecklistGlobalConfig';\nimport {\n    toggleHideHelpMode,\n    toggleHideSwitchesMode,\n    toggleHideTagsMode,\n    toggleLeftHandedMode,\n} from 'state/actions/checklist';\n\nexport const useChecklistGlobalConfigWithTogglers = () => {\n    const dispatch = useDispatch();\n\n    const checklistConfig = useChecklistGlobalConfig();\n\n    const togglers = useMemo(\n        () => ({\n            leftHandedMode: () => dispatch(toggleLeftHandedMode()),\n            hideTagsMode: () => dispatch(toggleHideTagsMode()),\n            hideHelpMode: () => dispatch(toggleHideHelpMode()),\n            hideSwitchesMode: () => dispatch(toggleHideSwitchesMode()),\n        }),\n        [dispatch],\n    );\n\n    return { checklistConfig, togglers };\n};\n","import {\n    INITIALIZE_CHECKLIST,\n    RESET_CHECKED_ITEMS,\n    RESET_LIST_CHECKED_ITEMS, TOGGLE_HIDE_HELP_MODE, TOGGLE_HIDE_SWITCHES_MODE, TOGGLE_HIDE_TAGS_MODE,\n    TOGGLE_ITEM,\n    TOGGLE_LEFT_HANDED_MODE,\n} from 'state/constants/checklist';\n\nexport const initializeChecklist = (checklistName, checklistLists) => ({\n    type: INITIALIZE_CHECKLIST,\n    checklistName,\n    checklistLists,\n});\n\nexport const toggleItem = (checklistName, checklistListName, itemKey) => ({\n    type: TOGGLE_ITEM,\n    checklistName,\n    checklistListName,\n    itemKey,\n});\n\nexport const resetChecklistCheckedItems = (checklistName) => ({\n    type: RESET_CHECKED_ITEMS,\n    checklistName,\n});\n\nexport const resetChecklistListCheckedItems = (checklistName, checklistListName) => ({\n    type: RESET_LIST_CHECKED_ITEMS,\n    checklistName,\n    checklistListName,\n});\n\nexport const toggleLeftHandedMode = () => ({\n    type: TOGGLE_LEFT_HANDED_MODE,\n});\n\nexport const toggleHideTagsMode = () => ({\n    type: TOGGLE_HIDE_TAGS_MODE,\n});\n\nexport const toggleHideHelpMode = () => ({\n    type: TOGGLE_HIDE_HELP_MODE,\n});\n\nexport const toggleHideSwitchesMode = () => ({\n    type: TOGGLE_HIDE_SWITCHES_MODE,\n});\n","import { useMemo, useState } from 'react';\n\nexport const useBooleanToggle = (defaultValue) => {\n    const [value, setValue] = useState(defaultValue);\n\n    const [toggleOn, toggleOff] = useMemo(() => ([\n        () => { setValue(true); },\n        () => { setValue(false); },\n    ]), [setValue]);\n\n    const toggleValue = useMemo(\n        () => () => setValue(!value),\n        [value, setValue],\n    );\n\n    return {\n        value, toggleValue, toggleOn, toggleOff,\n    };\n};\n","import React, { useMemo } from 'react';\n\nimport { Button, List, Modal } from 'antd';\nimport PropTypes from 'prop-types';\n\nimport { ChecklistConfigurationSwitch } from 'components/checklists/ChecklistConfigurationSwitch';\nimport { ChecklistDataPropTypes, ChecklistURLManagerPropTypes } from 'components/checklists/propTypes';\nimport { useChecklistGlobalConfigWithTogglers } from 'lib/checklist/hooks/useChecklistGlobalConfigWithTogglers';\nimport { useBooleanToggle } from 'lib/hooks/useBooleanToggle';\n\nconst modalStyle = { maxWidth: '1000px' };\n\nexport const ChecklistConfigureButton = ({ checklistData, checklistURLManager, selectedFilters }) => {\n    const { selectableFilters: filters, selectableFiltersData: filtersData } = checklistData;\n\n    const selectedFiltersSet = useMemo(() => new Set(selectedFilters), [selectedFilters]);\n\n    const modalVisible = useBooleanToggle(false);\n\n    const { checklistConfig, togglers } = useChecklistGlobalConfigWithTogglers();\n\n    const filterItems = useMemo(() => {\n        const fn = (filterData) => {\n            const filterUID = filterData.uid;\n\n            const onChange = (checked) => {\n                if (checked) {\n                    checklistURLManager.addFilter(filterUID);\n                } else {\n                    checklistURLManager.removeFilter(filterUID);\n                }\n            };\n\n            return (\n                <ChecklistConfigurationSwitch\n                    key={filterUID}\n                    title={filterData.title}\n                    description={filterData.description}\n                    checked={selectedFiltersSet.has(filterUID)}\n                    onChange={onChange}\n                />\n            );\n        };\n\n        return filters\n            .map(((filterName) => filtersData[filterName]))\n            .map(fn);\n    }, [checklistURLManager, filters]);\n\n    return (\n        <>\n            <Button type=\"primary\" onClick={modalVisible.toggleOn}>Configure</Button>\n\n            <Modal\n                title=\"Configure\"\n                visible={modalVisible.value}\n                onOk={modalVisible.toggleOff}\n                onCancel={modalVisible.toggleOff}\n                cancelButtonProps={{ style: { display: 'none' } }}\n                maskClosable\n                width=\"90vw\"\n                style={modalStyle}\n            >\n                <List header={<strong>Interface</strong>}>\n                    <ChecklistConfigurationSwitch\n                        title=\"Left Handed Mode\"\n                        description=\"Move all checkmarks to the left side of the screen.\"\n                        checked={checklistConfig.leftHandedMode}\n                        onClick={togglers.leftHandedMode}\n                    />\n\n                    <ChecklistConfigurationSwitch\n                        title=\"Hide Tags Mode\"\n                        description=\"Hide all of the tags from the list.\"\n                        checked={checklistConfig.hideTagsMode}\n                        onClick={togglers.hideTagsMode}\n                    />\n\n                    <ChecklistConfigurationSwitch\n                        title=\"Hide Help Mode\"\n                        description=\"Hide all of the help info from the list.\"\n                        checked={checklistConfig.hideHelpMode}\n                        onClick={togglers.hideHelpMode}\n                    />\n\n                    <ChecklistConfigurationSwitch\n                        title=\"Hide Switches Mode\"\n                        description=\"Hide the toggleable switch from the list.\"\n                        checked={checklistConfig.hideSwitchesMode}\n                        onClick={togglers.hideSwitchesMode}\n                    />\n                </List>\n\n                {filterItems.length === 0 ? null : (\n                    <List header={<><strong>Filters</strong></>}>\n                        {filterItems}\n                    </List>\n                )}\n            </Modal>\n        </>\n    );\n};\n\nChecklistConfigureButton.propTypes = {\n    checklistData: ChecklistDataPropTypes.isRequired,\n    checklistURLManager: ChecklistURLManagerPropTypes.isRequired,\n    selectedFilters: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","export const DarkerGrey = 'rgb(45, 45, 45, .25)';\nexport const DarkGrey = 'rgb(54, 54, 54)';\nexport const Grey = 'rgb(159,159,159)';\nexport const LightGrey = 'rgb(227,227,227)';\nexport const DarkRed = 'rgb(180, 51, 51)';\n\nexport const LightBlueBGHover1 = 'rgba(108, 233, 255, 0.2)';\nexport const LightBlueBGHover2 = 'rgba(108, 233, 255, 0.1)';\n\nexport const LightGreenBG1 = 'rgba(108, 255, 108, 0.3)';\nexport const LightGreenBG2 = 'rgba(108, 255, 108, 0.1)';\n\nexport const LightGreenBGHover1 = 'rgba(108, 255, 108, 0.45)';\nexport const LightGreenBGHover2 = 'rgba(108, 255, 108, 0.35)';\n\nexport const DarkeningMask = 'rgba(0, 0, 0, 0.075)';\n","import React from 'react';\n\nimport { styled } from 'styletron-react';\n\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\n\nexport const VWSpace = styled('span', (props) => ({\n    width: isNullOrUndefined(props.$width) ? '1em' : props.$width,\n    display: 'inline-block',\n}));\n\nexport const ThickSpace = () => <VWSpace $width=\"1.15em\" />;\nexport const ThinSpace = () => <VWSpace $width=\".15em\" />;\n\nexport const VerticalSpace = styled('div', {\n    height: '20px',\n});\n","import React, { useMemo } from 'react';\n\nimport {\n    Affix, Button, Divider, Typography,\n} from 'antd';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { styled } from 'styletron-react';\n\nimport { ChecklistConfigureButton } from 'components/checklists/ChecklistConfigureButton';\nimport { ChecklistDataPropTypes, ChecklistURLManagerPropTypes } from 'components/checklists/propTypes';\nimport { Clearfix } from 'components/lib/Clearfix';\nimport { Grey } from 'components/lib/colors';\nimport { VWSpace } from 'components/lib/spaces';\nimport { useDocumentTitle } from 'lib/hooks/useDocumentTitle';\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\n\nconst { Title, Text } = Typography;\n\nconst ChecklistTitleContainer = styled('div', {\n    backgroundColor: 'white',\n    paddingTop: '10px',\n    borderBottom: `1px solid ${Grey}`,\n    marginBottom: '15px',\n    whiteSpace: 'nowrap',\n});\n\nconst ChecklistTitleButtonsContainer = styled('div', {\n    float: 'right',\n    padding: '10px',\n});\n\nconst titleStyle = {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    marginBottom: '0',\n};\n\nexport const ChecklistInfo = ({\n    checklistData,\n    checklistURLManager,\n    selectedFilters,\n    resetFullCallback,\n}) => {\n    const { title, description } = checklistData;\n\n    const resetChecklistSelectCallback = useMemo(\n        () => () => checklistURLManager.changeChecklistList(null),\n        [checklistURLManager],\n    );\n\n    useDocumentTitle({ title: `${title} Checklist - FlightSim Tools` });\n\n    return (\n        <>\n            <Affix offsetTop={0}>\n                <ChecklistTitleContainer>\n                    <ChecklistTitleButtonsContainer>\n                        <ChecklistConfigureButton\n                            checklistData={checklistData}\n                            checklistURLManager={checklistURLManager}\n                            selectedFilters={selectedFilters}\n                        />\n                        {' '}\n                        <Button type=\"danger\" onClick={resetFullCallback}>Reset All</Button>\n                    </ChecklistTitleButtonsContainer>\n                    <Title style={titleStyle}>\n                        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                        <Link onClick={resetChecklistSelectCallback}>&para;</Link>\n                        <VWSpace $width=\"16px\" />\n                        {title}\n                    </Title>\n                    <Clearfix />\n                </ChecklistTitleContainer>\n            </Affix>\n\n            {isNullOrUndefined(description) ? null : (\n                <>\n                    <Text>{description}</Text>\n                    <Divider />\n                </>\n            )}\n        </>\n    );\n};\n\nChecklistInfo.propTypes = {\n    checklistData: ChecklistDataPropTypes.isRequired,\n    checklistURLManager: ChecklistURLManagerPropTypes.isRequired,\n    selectedFilters: PropTypes.arrayOf(PropTypes.string).isRequired,\n    resetFullCallback: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\n\nexport const useDocumentTitle = ({ title }) => {\n    useEffect(\n        () => { document.title = title; },\n        [title],\n    );\n};\n","import { useDispatch } from 'react-redux';\n\nimport { useDeepMemo, useDeepSelector } from 'lib/hooks/deep';\nimport { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { resetChecklistListCheckedItems } from 'state/actions/checklist';\nimport { getChecklistListCountersData } from 'state/readers/checklist';\n\nexport const useChecklistListInfoData = ({\n    checklistData,\n    checklistName,\n    checklistListName,\n    checklistURLManager,\n}) => {\n    const dispatch = useDispatch();\n\n    const counters = useDeepSelector((state) => getChecklistListCountersData(state, checklistName, checklistListName));\n\n    return useDeepMemo(\n        () => {\n            const setActiveCallback = () => {\n                checklistURLManager.changeChecklistList(checklistListName);\n            };\n\n            const resetCallback = () => dispatch(resetChecklistListCheckedItems(\n                checklistName,\n                checklistListName,\n            ));\n\n            const { checkedCount, totalsCount } = counters;\n\n            let progressPercent = 0;\n            if (isNotNullOrUndefined(totalsCount)) {\n                if (totalsCount !== 0) {\n                    progressPercent = (checkedCount * 100) / totalsCount;\n                } else {\n                    progressPercent = 100;\n                }\n            }\n            progressPercent = progressPercent.toFixed(0);\n\n            return {\n                ...checklistData.listsData[checklistListName],\n                progressPercent,\n                setActiveCallback,\n                resetCallback,\n            };\n        },\n        [checklistData, dispatch, checklistURLManager, counters],\n    );\n};\n","import React from 'react';\n\nimport { Button, Progress, Typography } from 'antd';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { styled, useStyletron } from 'styletron-react';\n\nimport { ChecklistDataPropTypes, ChecklistURLManagerPropTypes } from 'components/checklists/propTypes';\nimport { Clearfix } from 'components/lib/Clearfix';\nimport { DarkerGrey } from 'components/lib/colors';\nimport { VWSpace } from 'components/lib/spaces';\nimport { useChecklistListInfoData } from 'lib/checklist/hooks/useChecklistListInfoData';\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\n\nconst { Title } = Typography;\n\nconst ChecklistListTitleContainer = styled('div', {\n    height: '30px',\n    borderBottom: `2px solid ${DarkerGrey}`,\n});\n\nconst ChecklistListInfoDescription = styled('div', {\n    padding: '0px 20px 10px 20px',\n});\n\nconst ChecklistListProgressContainer = styled('div', {\n    width: '200px',\n    float: 'right',\n    marginRight: '20px',\n});\n\nexport const ChecklistListInfo = ({\n    checklistData,\n    checklistName,\n    checklistListName,\n    checklistURLManager,\n}) => {\n    const [css] = useStyletron();\n\n    const {\n        title,\n        description,\n        progressPercent,\n        setActiveCallback,\n        resetCallback,\n    } = useChecklistListInfoData({\n        checklistData, checklistName, checklistListName, checklistURLManager,\n    });\n\n    return (\n        <>\n            <ChecklistListTitleContainer>\n                <Button\n                    type=\"danger\"\n                    onClick={resetCallback}\n                    className={css({ float: 'right' })}\n                    size=\"small\"\n                >\n                    Reset\n                </Button>\n                <ChecklistListProgressContainer>\n                    <Progress percent={progressPercent} size=\"small\" />\n                </ChecklistListProgressContainer>\n                <Title level={4}>\n                    {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                    <Link onClick={setActiveCallback}>&para;</Link>\n                    <VWSpace $width=\"1em\" />\n                    {title}\n                </Title>\n                <Clearfix />\n            </ChecklistListTitleContainer>\n\n            {isNullOrUndefined(description) ? null : (\n                <ChecklistListInfoDescription>\n                    {description}\n                </ChecklistListInfoDescription>\n            )}\n        </>\n\n    );\n};\n\nChecklistListInfo.propTypes = {\n    checklistData: ChecklistDataPropTypes.isRequired,\n    checklistURLManager: ChecklistURLManagerPropTypes.isRequired,\n    checklistName: PropTypes.string.isRequired,\n    checklistListName: PropTypes.string.isRequired,\n};\n","import { styled } from 'styletron-react';\n\nimport {\n    DarkeningMask,\n    DarkerGrey,\n    DarkGrey,\n    LightBlueBGHover1,\n    LightBlueBGHover2,\n    LightGreenBG1,\n    LightGreenBG2,\n    LightGreenBGHover1,\n    LightGreenBGHover2,\n} from 'components/lib/colors';\n\nconst checklistListItemBackground = (props) => {\n    if (props.$isNotImplemented || props.$isChecked) {\n        return props.$isOddItem ? LightGreenBG1 : LightGreenBG2;\n    }\n    return props.$isOddItem ? DarkeningMask : undefined;\n};\n\nconst checklistListItemHoverBackground = (props) => {\n    if (props.$isNotImplemented || props.$isChecked) {\n        return props.$isOddItem ? LightGreenBGHover1 : LightGreenBGHover2;\n    }\n    return props.$isOddItem ? LightBlueBGHover1 : LightBlueBGHover2;\n};\n\nexport const ChecklistListItemWrapper = styled('tbody', (props) => ({\n    padding: '0.3em',\n    backgroundColor: checklistListItemBackground(props),\n    opacity: props.$isNotImplemented ? '30%' : undefined,\n    borderBottom: `1px dashed ${DarkerGrey}`,\n    ':hover': { backgroundColor: checklistListItemHoverBackground(props) },\n}));\n\nexport const ChecklistListItemRow = styled('tr', {});\n\nexport const ChecklistListSubItemRow = styled('tr', (props) => ({\n    backgroundColor: !props.$isOddSubItem ? DarkeningMask : undefined,\n}));\n\nexport const ChecklistListItemTitle = styled('div', (props) => ({\n    fontSize: props.$isSubItemsList ? '.85em' : '1em',\n    fontWeight: 'bolder',\n    color: DarkGrey,\n}));\n\nexport const ChecklistListItemSubTitle = styled('div', {\n    fontWeight: 'bold',\n    fontSize: '.75em',\n    color: '#727272',\n});\n\nexport const ChecklistListItemState = styled('div', (props) => ({\n    textAlign: 'right',\n    fontSize: props.$isSubItemsList ? '.85em' : '1em',\n    fontWeight: 'bolder',\n    color: '#545454',\n    textTransform: 'uppercase',\n}));\n\nexport const ChecklistItemColumn = styled('td', (props) => ({\n    maxWidth: props.$fitToContent ? undefined : '100%',\n    width: props.$fitToContent ? '.0005%' : undefined,\n    whiteSpace: props.$fitToContent ? 'nowrap' : undefined,\n\n    paddingBottom: props.$isSubItemsList ? '2px' : '6px',\n    paddingTop: props.$isSubItemsList ? '2px' : '6px',\n    paddingLeft: props.$isFirst ? '6px' : undefined,\n    paddingRight: props.$isLast ? '6px' : '1em',\n}));\n\nexport const ChecklistSubItemsTable = styled('table', {\n    width: '100%',\n    opacity: '90%',\n});\n","import { styled } from 'styletron-react';\n\nexport const Monospaced = styled('span', {\n    fontFamily: 'Monaco',\n});\n","export const isEven = (value) => (value % 2) === 0;\nexport const isOdd = (value) => !isEven(value);\n\nexport const getOrdinalNumber = (value) => {\n    const valueI = 1 * value;\n\n    const unit = valueI % 10;\n    const decimal = valueI % 100;\n\n    if (unit === 1 && decimal !== 11) {\n        return `${valueI}st`;\n    }\n    if (unit === 2 && decimal !== 12) {\n        return `${valueI}nd`;\n    }\n    if (unit === 3 && decimal !== 13) {\n        return `${valueI}rd`;\n    }\n    return `${valueI}th`;\n};\n","import React from 'react';\n\nimport { QuestionCircleOutlined, UnorderedListOutlined } from '@ant-design/icons';\nimport { Modal, Typography } from 'antd';\nimport PropTypes from 'prop-types';\nimport { styled } from 'styletron-react';\n\nimport {\n    ChecklistItemColumn,\n    ChecklistListItemState,\n    ChecklistListItemTitle,\n    ChecklistListSubItemRow,\n    ChecklistSubItemsTable,\n} from 'components/checklists/formatting';\nimport { Monospaced } from 'components/lib/Monospaced';\nimport { VWSpace } from 'components/lib/spaces';\nimport { useBooleanToggle } from 'lib/hooks/useBooleanToggle';\nimport { isNotNullOrUndefined, isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { isOdd } from 'lib/numbers';\n\nconst ChecklistItemHelpWrapper = styled('span', {\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    cursor: 'pointer',\n});\n\nconst { Title } = Typography;\n\nconst modalStyle = {\n    maxWidth: '1000px',\n    maxHeight: '40vh',\n};\n\nconst modalBodyStyle = {\n    paddingTop: '10px',\n    paddingBottom: '10px',\n    maxHeight: '60vh',\n    overflowX: 'scroll',\n};\n\nconst cancelButtonProps = { style: { display: 'none' } };\n\nconst iconInvisibleStyle = { opacity: '0' };\n\nconst treeCharLastLeaf = <>&#x2517;&#x2501;</>; // ┗━\nconst treeCharLeaf = <>&#x2523;&#x2501;</>; // ┣━\nconst treeCharForward = <>&#x2503;&#x2003;</>; // ┃\nconst treeCharWhitespace = <>&#x2003;&#x2003;</>; // 2 em whitespace\n\nconst renderItemLevelTree = (levels) => levels.map(({ levelIdx, total }, idx) => {\n    const isFirst = idx === 0;\n    const isLeafLevel = idx === levels.length - 1;\n\n    const isLastLevel = levelIdx === total;\n    const levelHasOtherItem = !isLastLevel;\n\n    let treeChar = treeCharWhitespace;\n    if (!isLeafLevel && levelHasOtherItem) {\n        treeChar = treeCharForward;\n    } else if (isLeafLevel && levelHasOtherItem) {\n        treeChar = treeCharLeaf;\n    } else if (isLeafLevel) {\n        treeChar = treeCharLastLeaf;\n    }\n\n    return (\n    // eslint-disable-next-line react/no-array-index-key\n        <React.Fragment key={`level-${idx}-${levelIdx}-${total}`}>\n            {isFirst ? null : <VWSpace $width=\"4px\" />}\n            {treeChar}\n            <VWSpace $width=\"6px\" />\n        </React.Fragment>\n    );\n});\n\nconst buildSubItemKey = (levels) => levels.map(({ levelIdx }) => levelIdx).join('.');\n\nconst renderSubItems = (subItems, levels = []) => {\n    if (isNullOrUndefined(subItems) || subItems.length === 0) {\n        return [];\n    }\n\n    const result = [];\n    const subItemsLength = subItems.length - 1;\n\n    subItems.forEach((subItem, idx) => {\n        const subItemLevels = [...levels, { levelIdx: idx, total: subItemsLength }];\n\n        result.push({\n            key: buildSubItemKey(subItemLevels),\n            title: (\n                <>\n                    <Monospaced style={{ fontSize: '1em' }}>{renderItemLevelTree(subItemLevels)}</Monospaced>\n                    {subItem.title}\n                </>\n            ),\n            state: subItem.state,\n        });\n\n        result.push(...renderSubItems(subItem.subItems, subItemLevels));\n    });\n\n    return result;\n};\n\nexport const ChecklistListItemHelp = ({\n    title,\n    state,\n    moreInfoShort,\n    moreInfoLong,\n    subItems,\n}) => {\n    const modalVisible = useBooleanToggle(false);\n\n    const hasHelp = isNotNullOrUndefined(moreInfoShort) || isNotNullOrUndefined(moreInfoLong);\n    const hasSubItems = isNotNullOrUndefined(subItems) && subItems.length !== 0;\n\n    if (!hasHelp && !hasSubItems) {\n        return null;\n    }\n\n    const modalTitle = (\n        <>\n            <strong>Help:</strong>\n            {' '}\n            {title}\n            :\n            {' '}\n            {state}\n        </>\n    );\n\n    return (\n        <>\n            <ChecklistItemHelpWrapper onClick={modalVisible.toggleOn}>\n                <UnorderedListOutlined style={hasSubItems ? undefined : iconInvisibleStyle} />\n                <VWSpace $width=\".5em\" />\n                <QuestionCircleOutlined style={hasHelp ? undefined : iconInvisibleStyle} />\n            </ChecklistItemHelpWrapper>\n\n            <Modal\n                title={modalTitle}\n                visible={modalVisible.value}\n                onOk={modalVisible.toggleOff}\n                onCancel={modalVisible.toggleOff}\n                cancelButtonProps={cancelButtonProps}\n                width=\"80vw\"\n                style={modalStyle}\n                bodyStyle={modalBodyStyle}\n                maskClosable\n            >\n                {isNullOrUndefined(moreInfoShort) ? null : (\n                    <p>\n                        <strong>Help:</strong>\n                        {' '}\n                        {moreInfoShort}\n                    </p>\n                )}\n\n                {!hasSubItems ? null : (\n                    <p>\n                        <Title level={5}>Items</Title>\n                        <ChecklistSubItemsTable>\n                            <tbody>\n                                {renderSubItems(subItems).map((value, idx) => (\n                                    <ChecklistListSubItemRow\n                                        key={value.key}\n                                        $isSubItemsList\n                                        $isFirst={idx === 0}\n                                        $isOddSubItem={isOdd(idx)}\n                                    >\n                                        <ChecklistItemColumn $isFirst $isSubItemsList>\n                                            <ChecklistListItemTitle $isSubItemsList>\n                                                {value.title}\n                                            </ChecklistListItemTitle>\n                                        </ChecklistItemColumn>\n                                        <ChecklistItemColumn $isLast $fitToContent $isSubItemsList>\n                                            <ChecklistListItemState $isSubItemsList>\n                                                {value.state}\n                                            </ChecklistListItemState>\n                                        </ChecklistItemColumn>\n                                    </ChecklistListSubItemRow>\n                                ))}\n                            </tbody>\n                        </ChecklistSubItemsTable>\n                    </p>\n                )}\n\n                {isNullOrUndefined(moreInfoLong) ? null : (\n                    <p>\n                        <Title level={5}>Description</Title>\n                        {moreInfoLong}\n                    </p>\n                )}\n            </Modal>\n        </>\n    );\n};\n\nChecklistListItemHelp.propTypes = {\n    title: PropTypes.string.isRequired,\n    state: PropTypes.string.isRequired,\n    moreInfoShort: PropTypes.node,\n    moreInfoLong: PropTypes.node,\n    subItems: PropTypes.arrayOf(PropTypes.shape({})),\n};\n\nChecklistListItemHelp.defaultProps = {\n    moreInfoShort: null,\n    moreInfoLong: null,\n    subItems: null,\n};\n","import React from 'react';\n\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\nimport { Switch } from 'antd';\nimport PropTypes from 'prop-types';\n\nexport const ChecklistListItemSwitch = ({\n    isChecked,\n    isNotImplemented,\n}) => (\n    <Switch\n        checkedChildren={<CheckOutlined />}\n        unCheckedChildren={<CloseOutlined />}\n        checked={isChecked || isNotImplemented}\n        disabled={isNotImplemented}\n        size=\"small\"\n    />\n);\n\nChecklistListItemSwitch.propTypes = {\n    isChecked: PropTypes.bool.isRequired,\n    isNotImplemented: PropTypes.bool.isRequired,\n};\n","import React from 'react';\n\nimport { Tag } from 'antd';\nimport PropTypes from 'prop-types';\n\nimport { ChecklistDataItemTagsPropTypes } from 'components/checklists/propTypes';\nimport { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\n\nconst tagStyle = { fontFamily: 'Monaco', fontSize: '.8em' };\n\nexport const ChecklistListItemTags = ({\n    tagsData,\n}) => Array.from(tagsData)\n    .filter((tag) => !tag.hidden)\n    .map((tag) => (\n        <Tag key={tag.uid} color={tag.color} style={tagStyle}>\n            {isNotNullOrUndefined(tag.title) ? tag.title : tag.uid}\n        </Tag>\n    ));\n\nChecklistListItemTags.propTypes = {\n    tagsData: PropTypes.arrayOf(ChecklistDataItemTagsPropTypes).isRequired,\n};\n","export const ChecklistTags = Object.freeze({\n    OFFICIAL: 'official',\n    NOT_IMPLEMENTED: 'not-implemented',\n    EXTENSION: 'extension',\n\n    FIRST_FLIGHT_OF_DAY: 'first-flight-of-day',\n    IN_MEMORY_ITEM: 'in-memory-item',\n\n    CJ4: 'CJ4',\n    C172: 'C172',\n    C172_STEAM: 'C172_STEAM',\n    C172_G1000: 'C172_G1000',\n\n    CRJ: 'CRJ',\n\n    VATSIM: 'VATSIM',\n    SIMSETUP: 'SIMSETUP',\n});\n","// eslint-disable-next-line max-len\nexport const listItemKey = (checklistName, checklistListName, itemName) => `${checklistName}:${checklistListName}:${itemName}`;\n","import { useDispatch } from 'react-redux';\n\nimport { listItemKey } from 'lib/checklist/listItemKey';\nimport { useDeepMemo, useDeepSelector } from 'lib/hooks/deep';\nimport { toggleItem } from 'state/actions/checklist';\nimport { getChecklistListItemData } from 'state/readers/checklist';\n\nconst defaultData = {\n    isNotImplemented: false,\n};\n\nexport const useChecklistListItemData = ({\n    checklistData,\n    checklistName,\n    checklistListName,\n    itemName,\n}) => {\n    const dispatch = useDispatch();\n\n    const baseData = useDeepMemo(\n        () => ({\n            itemKey: listItemKey(checklistName, checklistListName, itemName),\n            ...checklistData.listItemsData[itemName],\n        }),\n        [checklistData, itemName],\n    );\n\n    const dynamicData = useDeepSelector((state) => getChecklistListItemData(state, checklistName, baseData.itemKey));\n\n    return useDeepMemo(\n        () => {\n            const toggleChecked = () => {\n                dispatch(toggleItem(checklistName, checklistListName, baseData.itemKey));\n            };\n\n            return ({\n                ...defaultData,\n                ...baseData,\n                ...dynamicData,\n\n                toggleChecked,\n            });\n        },\n        [baseData, dynamicData, dispatch],\n    );\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { ChecklistListItemHelp } from 'components/checklists/ChecklistListItemHelp';\nimport { ChecklistListItemSwitch } from 'components/checklists/ChecklistListItemSwitch';\nimport { ChecklistListItemTags } from 'components/checklists/ChecklistListItemTags';\nimport {\n    ChecklistItemColumn,\n    ChecklistListItemRow,\n    ChecklistListItemState,\n    ChecklistListItemSubTitle,\n    ChecklistListItemTitle,\n    ChecklistListItemWrapper,\n} from 'components/checklists/formatting';\nimport { ChecklistDataPropTypes } from 'components/checklists/propTypes';\nimport { ChecklistTags } from 'lib/checklist/data/tags';\nimport { useChecklistGlobalConfig } from 'lib/checklist/hooks/useChecklistGlobalConfig';\nimport { useChecklistListItemData } from 'lib/checklist/hooks/useChecklistListItemData';\n\nexport const ChecklistListItemDisplay = ({\n    checklistData,\n    checklistName,\n    checklistListName,\n    itemName,\n    isOddItem,\n}) => {\n    const {\n        title,\n        state,\n        tagsSet,\n        isChecked,\n        tagsData,\n        toggleChecked,\n        isNotImplemented,\n        moreInfoShort,\n        moreInfoLong,\n        subItems,\n    } = useChecklistListItemData({\n        checklistData,\n        checklistName,\n        checklistListName,\n        itemName,\n    });\n\n    const {\n        leftHandedMode,\n        hideTagsMode,\n        hideHelpMode,\n        hideSwitchesMode,\n    } = useChecklistGlobalConfig();\n\n    const subTitleItems = [];\n    if (tagsSet.has(ChecklistTags.FIRST_FLIGHT_OF_DAY)) {\n        subTitleItems.push('Only First Flight of the Day');\n    }\n\n    const switchColumn = hideSwitchesMode ? null : (\n        <ChecklistItemColumn $fitToContent $isFirst={leftHandedMode} $isLast={!leftHandedMode} onClick={toggleChecked}>\n            <ChecklistListItemSwitch isChecked={isChecked} isNotImplemented={isNotImplemented} />\n        </ChecklistItemColumn>\n    );\n\n    const rightColumn = leftHandedMode ? null : switchColumn;\n    const leftColumn = leftHandedMode ? switchColumn : null;\n\n    const isSwitchColumnFirst = leftHandedMode && !hideSwitchesMode;\n    const isTagsColumnFirst = !isSwitchColumnFirst;\n    const isTitleColumnFirst = !isSwitchColumnFirst && hideTagsMode;\n\n    const isSwitchColumnLast = !leftHandedMode && !hideSwitchesMode;\n    const isHelpColumnLast = !isSwitchColumnLast;\n    const isStateColumnLast = !isSwitchColumnLast && hideHelpMode;\n\n    return (\n        <ChecklistListItemWrapper $isChecked={isChecked} $isNotImplemented={isNotImplemented} $isOddItem={isOddItem}>\n            <ChecklistListItemRow>\n                {leftColumn}\n                {hideTagsMode ? null : (\n                    <ChecklistItemColumn $isFirst={isTagsColumnFirst} $fitToContent>\n                        <ChecklistListItemTags tagsData={tagsData} />\n                    </ChecklistItemColumn>\n                )}\n                <ChecklistItemColumn $isFirst={isTitleColumnFirst}>\n                    <ChecklistListItemTitle>\n                        {title}\n                    </ChecklistListItemTitle>\n                    {subTitleItems.length === 0 ? null : (\n                        <ChecklistListItemSubTitle>\n                            {subTitleItems.map((item, idx) => (\n                                // eslint-disable-next-line react/no-array-index-key\n                                <React.Fragment key={idx}>\n                                    {idx === 0 ? null : '; '}\n                                    {item}\n                                </React.Fragment>\n                            ))}\n                        </ChecklistListItemSubTitle>\n                    )}\n                </ChecklistItemColumn>\n                <ChecklistItemColumn $fitToContent $isLast={isStateColumnLast}>\n                    <ChecklistListItemState>\n                        {state}\n                    </ChecklistListItemState>\n                </ChecklistItemColumn>\n                {hideHelpMode ? null : (\n                    <ChecklistItemColumn $fitToContent $isLast={isHelpColumnLast}>\n                        <ChecklistListItemHelp\n                            title={title}\n                            state={state}\n                            moreInfoShort={moreInfoShort}\n                            moreInfoLong={moreInfoLong}\n                            subItems={subItems}\n                        />\n                    </ChecklistItemColumn>\n                )}\n                {rightColumn}\n            </ChecklistListItemRow>\n        </ChecklistListItemWrapper>\n    );\n};\n\nChecklistListItemDisplay.propTypes = {\n    checklistData: ChecklistDataPropTypes.isRequired,\n    checklistName: PropTypes.string.isRequired,\n    checklistListName: PropTypes.string.isRequired,\n    itemName: PropTypes.string.isRequired,\n    isOddItem: PropTypes.bool.isRequired,\n};\n","import React from 'react';\n\nimport { Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useStyletron } from 'styletron-react';\n\nexport const ChecklistNextListButton = ({ title, isEmergency, onClick }) => {\n    const [css] = useStyletron();\n\n    const classNames = css({\n        fontWeight: 'bold',\n        paddingLeft: '15px',\n        paddingRight: '15px',\n    });\n\n    const buttonType = isEmergency ? 'danger' : 'primary';\n\n    return (\n        <Button\n            className={classNames}\n            size=\"small\"\n            type={buttonType}\n            onClick={onClick}\n        >\n            Next:\n            {' '}\n            {title}\n        </Button>\n    );\n};\n\nChecklistNextListButton.propTypes = {\n    title: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n    isEmergency: PropTypes.bool,\n};\n\nChecklistNextListButton.defaultProps = {\n    isEmergency: false,\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { ChecklistNextListButton } from 'components/checklists/ChecklistNextListButton';\nimport { ChecklistDataPropTypes, ChecklistURLManagerPropTypes } from 'components/checklists/propTypes';\nimport { useChecklistListInfoData } from 'lib/checklist/hooks/useChecklistListInfoData';\n\nexport const ChecklistNextListButtonDisplay = ({\n    checklistData,\n    checklistName,\n    checklistListName,\n    checklistURLManager,\n}) => {\n    const {\n        title,\n        isEmergency,\n        setActiveCallback,\n    } = useChecklistListInfoData({\n        checklistData, checklistName, checklistListName, checklistURLManager,\n    });\n\n    return (\n        <ChecklistNextListButton\n            title={title}\n            isEmergency={isEmergency}\n            onClick={setActiveCallback}\n        />\n    );\n};\n\nChecklistNextListButtonDisplay.propTypes = {\n    checklistData: ChecklistDataPropTypes.isRequired,\n    checklistURLManager: ChecklistURLManagerPropTypes.isRequired,\n    checklistName: PropTypes.string.isRequired,\n    checklistListName: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport { Alert } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useStyletron } from 'styletron-react';\n\nexport const ChecklistProgressAlert = ({ progressPercent }) => {\n    const [css] = useStyletron();\n\n    const classNames = css({\n        paddingLeft: '10px',\n        paddingRight: '10px',\n        paddingTop: '1px',\n        paddingBottom: '1px',\n    });\n\n    const data = progressPercent === '100'\n        ? { alertType: 'success', title: 'Checklist finished.' }\n        : { alertType: 'warning', title: 'Checklist not finished.' };\n\n    return <Alert type={data.alertType} message={data.title} showIcon className={classNames} />;\n};\n\nChecklistProgressAlert.propTypes = {\n    progressPercent: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { ChecklistNextListButtonDisplay } from 'components/checklists/ChecklistNextListButtonDisplay';\nimport { ChecklistProgressAlert } from 'components/checklists/ChecklistProgressAlert';\nimport { ChecklistDataPropTypes, ChecklistURLManagerPropTypes } from 'components/checklists/propTypes';\nimport { RightJustifyingContainer } from 'components/lib/CenteringContainer';\nimport { useChecklistListInfoData } from 'lib/checklist/hooks/useChecklistListInfoData';\n\nexport const ChecklistNextListButtonsDisplay = ({\n    checklistData,\n    checklistName,\n    checklistListName,\n    checklistURLManager,\n}) => {\n    const { progressPercent, nextListNames } = useChecklistListInfoData({\n        checklistData, checklistName, checklistListName, checklistURLManager,\n    });\n\n    return (\n        <RightJustifyingContainer $style={{ marginTop: '15px', gap: '16px 16px' }}>\n            <ChecklistProgressAlert progressPercent={progressPercent} />\n\n            {nextListNames.map((nextListName) => (\n                <ChecklistNextListButtonDisplay\n                    key={nextListName}\n                    checklistData={checklistData}\n                    checklistName={checklistName}\n                    checklistListName={nextListName}\n                    checklistURLManager={checklistURLManager}\n                />\n            ))}\n        </RightJustifyingContainer>\n    );\n};\n\nChecklistNextListButtonsDisplay.propTypes = {\n    checklistData: ChecklistDataPropTypes.isRequired,\n    checklistURLManager: ChecklistURLManagerPropTypes.isRequired,\n    checklistName: PropTypes.string.isRequired,\n    checklistListName: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport Scroll from 'react-scroll';\nimport { styled } from 'styletron-react';\n\nimport { ChecklistListInfo } from 'components/checklists/ChecklistListInfo';\nimport { ChecklistListItemDisplay } from 'components/checklists/ChecklistListItemDisplay';\nimport { ChecklistNextListButtonsDisplay } from 'components/checklists/ChecklistNextListButtonsDisplay';\nimport { ChecklistDataPropTypes, ChecklistURLManagerPropTypes } from 'components/checklists/propTypes';\nimport { isOdd } from 'lib/numbers';\n\nconst ChecklistItemsTable = styled('table', { width: '100%' });\nconst ChecklistListContainer = styled('div', { marginBottom: '2em' });\n\nexport const ChecklistListDisplay = ({\n    checklistData,\n    checklistName,\n    checklistListName,\n    checklistURLManager,\n    items,\n}) => (\n    <Scroll.Element name={checklistListName}>\n        <ChecklistListContainer>\n            <ChecklistListInfo\n                checklistData={checklistData}\n                checklistName={checklistName}\n                checklistListName={checklistListName}\n                checklistURLManager={checklistURLManager}\n            />\n\n            <ChecklistItemsTable>\n                {items.map((itemName, idx) => (\n                    <ChecklistListItemDisplay\n                        key={`${checklistName}:${checklistListName}:${itemName}`}\n                        itemName={itemName}\n                        checklistName={checklistName}\n                        checklistListName={checklistListName}\n                        checklistData={checklistData}\n                        isOddItem={isOdd(idx)}\n                    />\n                ))}\n            </ChecklistItemsTable>\n\n            <ChecklistNextListButtonsDisplay\n                checklistData={checklistData}\n                checklistName={checklistName}\n                checklistListName={checklistListName}\n                checklistURLManager={checklistURLManager}\n            />\n        </ChecklistListContainer>\n    </Scroll.Element>\n);\n\nChecklistListDisplay.propTypes = {\n    checklistData: ChecklistDataPropTypes.isRequired,\n    checklistURLManager: ChecklistURLManagerPropTypes.isRequired,\n    checklistName: PropTypes.string.isRequired,\n    checklistListName: PropTypes.string.isRequired,\n    items: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import { pick } from 'lib/pick';\n\nexport const objectMap = (obj, callback) => {\n    const result = {};\n\n    Object.entries(obj).forEach((keyValue) => {\n        const [key, value] = keyValue;\n        result[key] = callback(value, key);\n    });\n    return result;\n};\n\nexport const objectFromList = (lst, callback) => {\n    const result = {};\n\n    pick(lst, []).forEach((lstValue) => {\n        const { key, value } = callback(lstValue);\n        result[key] = value;\n    });\n\n    return result;\n};\n","import { useDispatch } from 'react-redux';\n\nimport { listItemKey } from 'lib/checklist/listItemKey';\nimport { useDeepEffect, useDeepMemo } from 'lib/hooks/deep';\nimport { objectFromList } from 'lib/objects';\nimport { initializeChecklist } from 'state/actions/checklist';\n\nexport const useChecklistCountersInit = ({ checklistName, checklistData, filteredChecklistLists }) => {\n    const dispatch = useDispatch();\n\n    const initializeChecklistData = useDeepMemo(() => {\n        const { listItemsData } = checklistData;\n\n        return objectFromList(\n            filteredChecklistLists,\n            ({ items, listName }) => ({\n                key: listName,\n                value: items\n                    .filter((itemName) => !listItemsData[itemName].isNotImplemented)\n                    .map((itemName) => listItemKey(checklistName, listName, itemName)),\n            }),\n        );\n    }, [checklistData, filteredChecklistLists]);\n\n    useDeepEffect(() => {\n        dispatch(initializeChecklist(checklistName, initializeChecklistData));\n    }, [dispatch, checklistName, initializeChecklistData]);\n};\n","export const Checklists = Object.freeze({\n    WORKINGTITLE_CJ4: 'workingtitle-cj4',\n    C172_STEAM: 'c172-steam',\n    C172_G1000: 'c172-g1000',\n    AEROSOFT_CRJ: 'aerosoft-crj',\n});\n","const commonFilters = {\n    EXCLUDE_ALL_BUT_OFFICIAL: 'exclude-all-but-official',\n\n    INCLUDE_VATSIM_ITEMS: 'include-vatsim-items',\n\n    INCLUDE_EXTENSIONS: 'include-extensions',\n    EXCLUDE_EXTENSIONS: 'exclude-extensions',\n\n    INCLUDE_SIMSETUP_ITEMS: 'include-simsetup-items',\n\n    EXCLUDE_FIRST_FLIGHT_OF_DAY: 'exclude-first-flight-of-day',\n};\n\nexport const ChecklistFilters = Object.freeze({\n    ...commonFilters,\n});\n","const cj4Items = Object.freeze({\n    // Before Engine Start\n    CJ4_BEFORE_START_BATTERY_SWITCH: 'cj4-before-start-battery-switch',\n    CJ4_BEFORE_START_EMERGENCY_LIGHTS_SWITCH: 'cj4-before-start-emergency-lights-switch',\n    CJ4_BEFORE_START_STANDBY_FLIGHT_DISPLAY_SWITCH: 'cj4-before-start-standby-flight-display-switch',\n    CJ4_BEFORE_START_AVIONICS_SWITCH: 'cj4-before-start-avionics-switch',\n    CJ4_BEFORE_START_PARKING_BRAKES: 'cj4-before-start-parking-brakes',\n    CJ4_BEFORE_START_WHEEL_CHOCKS: 'cj4-before-start-wheel-chocks',\n    CJ4_BEFORE_START_CABIN_DOOR: 'cj4-before-start-cabin-door',\n    CJ4_BEFORE_START_PASSENGER_BRIEFING: 'cj4-before-start-passenger-briefing',\n    CJ4_BEFORE_START_PILOTS_SEATS_ADJUSTED: 'cj4-before-start-pilots-seats-adjusted',\n    CJ4_BEFORE_START_EXTERIOR_LIGHTS: 'cj4-before-start-exterior-lights',\n    CJ4_BEFORE_START_EICAS: 'cj4-before-start-eicas',\n    CJ4_BEFORE_START_FMS: 'cj4-before-start-fms',\n    CJ4_BEFORE_START_CLIMATE_CONTROL_SELECTOR: 'cj4-before-start-climate-control-selector',\n\n    // Engine Start\n    CJ4_ENGINE_START_THROTTLES: 'cj4-engine-start-throttles',\n    CJ4_ENGINE_START_STARTER_BUTTON_PUSH: 'cj4-engine-start-starter-button-push',\n    CJ4_ENGINE_START_RUNSTOP_BUTTON_TO_RUN: 'cj4-engine-start-runstop-button-to-run',\n    CJ4_ENGINE_START_ITT_RISE: 'cj4-engine-start-itt-rise',\n    CJ4_ENGINE_START_EICAS_CHECK: 'cj4-engine-start-eicas-check',\n    CJ4_ENGINE_START_OPPOSITE_ENGINE_START: 'cj4-engine-start-opposite-engine-start',\n    CJ4_ENGINE_START_EXTERNAL_POWER_DISCONNECT: 'cj4-engine-start-external-power-disconnect',\n    CJ4_ENGINE_START_ELECTRICAL_SYSTEM_CHECK: 'cj4-engine-start-electrical-system-check',\n\n    // Before Taxi\n    CJ4_BEFORE_TAXI_AVIONICS_SWITCH: 'cj4-before-taxi-avionics-switch',\n    CJ4_BEFORE_TAXI_CLIMATE_CONTROL_SWITCH: 'cj4-before-taxi-climate-control-switch',\n    CJ4_BEFORE_TAXI_PASSENGER_LIGHTS_SAFETY: 'cj4-before-taxi-passenger-lights-safety',\n    CJ4_BEFORE_TAXI_TRIMS: 'cj4-before-taxi-trims',\n    CJ4_BEFORE_TAXI_FLIGHT_CONTROLS_FREE: 'cj4-before-taxi-flight-controls-free',\n    CJ4_BEFORE_TAXI_SPEEDBRAKE_CHECK: 'cj4-before-taxi-speedbrake-check',\n    CJ4_BEFORE_TAXI_FLAPS: 'cj4-before-taxi-flaps',\n    CJ4_BEFORE_TAXI_HYDRAULIC_PRESSURE_CHECK: 'cj4-before-taxi-hydraulic-pressure-check',\n    CJ4_BEFORE_TAXI_ENGINE_ONLY_ANTI_ICE: 'cj4-before-taxi-engine-only-anti-ice',\n    CJ4_BEFORE_TAXI_TAKEOFF_DATA: 'cj4-before-taxi-takeoff-data',\n    CJ4_BEFORE_TAXI_AVIONICS_CHECK: 'cj4-before-taxi-avionics-check',\n    CJ4_BEFORE_TAXI_AUTOPILOT_CONNECT_DISCONNECT: 'cj4-before-taxi-autopilot-connect-disconnect',\n    CJ4_BEFORE_TAXI_ALTIMETER_SET: 'cj4-before-taxi-altimeter-set',\n    CJ4_BEFORE_TAXI_PRESSURIZATION_CHECK: 'cj4-before-taxi-pressurization-check',\n    CJ4_BEFORE_TAXI_EICAS_CHECK: 'cj4-before-taxi-eicas-check',\n    CJ4_BEFORE_TAXI_AFT_DIVIDER_DOORS_OPEN: 'cj4-before-taxi-aft-divider-doors-open',\n\n    // Taxi\n    CJ4_TAXI_EXTERIOR_LIGHTS: 'cj4-taxi-exterior-lights',\n    CJ4_TAXI_BRAKES_APPLIED: 'cj4-taxi-brakes-applied',\n    CJ4_TAXI_PARKING_BRAKE_RELEASED: 'cj4-taxi-parking-brake-released',\n    CJ4_TAXI_BRAKES_CHECK: 'cj4-taxi-brakes-check',\n    CJ4_TAXI_NOSE_WHEEL_STEERING_CHECK: 'cj4-taxi-nose-wheel-steering-check',\n    CJ4_TAXI_FLIGHT_INSTRUMENTS_CHECK: 'cj4-taxi-flight-instruments-check',\n\n    // Before Take-Off\n    CJ4_BEFORE_TAKEOFF_ICE_PROTECTION_SYSTEM_CHECK: 'cj4-before-takeoff-ice-protection-system-check',\n    CJ4_BEFORE_TAKEOFF_RUDDER_BIAS_SYSTEM_CHECK: 'cj4-before-takeoff-rudder-bias-system-check',\n    CJ4_BEFORE_TAKEOFF_SEATS_UPRIGHT: 'cj4-before-takeoff-seats-upright',\n    CJ4_BEFORE_TAKEOFF_FLAPS_SET: 'cj4-before-takeoff-flaps-set',\n    CJ4_BEFORE_TAKEOFF_SPEEDBRAKES_OFF: 'cj4-before-takeoff-speedbrakes-off',\n    CJ4_BEFORE_TAKEOFF_TRIMS_CHECK: 'cj4-before-takeoff-trims-check',\n    CJ4_BEFORE_TAKEOFF_CREW_BRIEFING: 'cj4-before-takeoff-crew-briefing',\n    CJ4_BEFORE_TAKEOFF_TCAS_TARA: 'cj4-before-takeoff-tcas-tara',\n    CJ4_BEFORE_TAKEOFF_RADAR_AS_REQUIRED: 'cj4-before-takeoff-radar-as-required',\n    CJ4_BEFORE_TAKEOFF_GA_BUTTON_PUSH: 'cj4-before-takeoff-ga-button-push',\n    CJ4_BEFORE_TAKEOFF_BATTERY_AMPS_CHECK: 'cj4-before-takeoff-battery-amps-check',\n    CJ4_BEFORE_TAKEOFF_ICE_PROTECTION_SYSTEM_AS_REQUIRED: 'cj4-before-takeoff-ice-protection-system-as-required',\n    CJ4_BEFORE_TAKEOFF_PITOT_STATIC_HEAT_BUTTONS: 'cj4-before-takeoff-pitot-static-heat-buttons',\n    CJ4_BEFORE_TAKEOFF_EICAS_CHECK: 'cj4-before-takeoff-eicas-check',\n    CJ4_BEFORE_TAKEOFF_EXTERIOR_LIGHTS: 'cj4-before-takeoff-exterior-lights',\n\n    // Takeoff\n    CJ4_TAKEOFF_THROTTLES: 'cj4-takeoff-throttles',\n    CJ4_TAKEOFF_N1_COMMAND_BUGS_GREEN: 'cj4-takeoff-n1-command-bugs-green',\n    CJ4_TAKEOFF_BRAKES_RELEASED: 'cj4-takeoff-brakes-released',\n    CJ4_TAKEOFF_CONTROL_WHEEL_ROTATE_AT_VR: 'cj4-takeoff-control-wheel-rotate-at-vr',\n\n    // After Takeoff\n    CJ4_AFTER_TAKEOFF_LANDING_GEAR_UP: 'cj4-after-takeoff-landing-gear-up',\n    CJ4_AFTER_TAKEOFF_FLAPS_0: 'cj4-after-takeoff-flaps-0',\n    CJ4_AFTER_TAKEOFF_THROTTLES_CLIMB: 'cj4-after-takeoff-throttles-climb',\n    CJ4_AFTER_TAKEOFF_YAW_DAMPER_ON: 'cj4-after-takeoff-yaw-damper-on',\n    CJ4_AFTER_TAKEOFF_AUTOPILOT_AS_REQUIRED: 'cj4-after-takeoff-autopilot-as-required',\n    CJ4_AFTER_TAKEOFF_ICE_PROTECTION_SYSTEM_CHECK: 'cj4-after-takeoff-ice-protection-system-check',\n    CJ4_AFTER_TAKEOFF_PASSENGER_LIGHTS_AS_REQUIRED: 'cj4-after-takeoff-passenger-lights-as-required',\n    CJ4_AFTER_TAKEOFF_EXTERIOR_LIGHTS: 'cj4-after-takeoff-exterior-lights',\n    CJ4_AFTER_TAKEOFF_PRESSURIZATION_CHECK: 'cj4-after-takeoff-pressurization-check',\n    CJ4_AFTER_TAKEOFF_ALTIMETERS_SET: 'cj4-after-takeoff-altimeters-set',\n\n    // Cruise\n    CJ4_CRUISE_THROTTLES: 'cj4-cruise-throttles',\n    CJ4_CRUISE_PRESSURIZATION: 'cj4-cruise-pressurization',\n    CJ4_CRUISE_ICE_PROTECTION_SYSTEMS: 'cj4-cruise-ice-protection-systems',\n\n    // Descent\n    CJ4_DESCENT_PRESSURIZATION: 'cj4-descent-pressurization',\n    CJ4_DESCENT_ICE_PROTECTION_SYSTEMS: 'cj4-descent-ice-protection-systems',\n    CJ4_DESCENT_ALTIMETERS: 'cj4-descent-altimeters',\n    CJ4_DESCENT_EXTERIOR_LIGHTS: 'cj4-descent-exterior-lights',\n\n    // Approach\n    CJ4_APPROACH_LANDING_DATA: 'cj4-approach-landing-data',\n    CJ4_APPROACH_CREW_BRIEFING: 'cj4-approach-crew-briefing',\n    CJ4_APPROACH_AVIONICS_FLIGHT_INSTRUMENTS: 'cj4-approach-avionics-flight-instruments',\n    CJ4_APPROACH_MINIMUMS: 'cj4-approach-minimums',\n    CJ4_APPROACH_FUEL_TRANSFER_SELECTOR: 'cj4-approach-fuel-transfer-selector',\n    CJ4_APPROACH_EXTERIOR_LIGHTS: 'cj4-approach-exterior-lights',\n    CJ4_APPROACH_ICE_PROTECTION_SYSTEMS: 'cj4-approach-ice-protection-systems',\n    CJ4_APPROACH_FLAPS: 'cj4-approach-flaps',\n    CJ4_APPROACH_PASSENGER_BRIEFING: 'cj4-approach-passenger-briefing',\n    CJ4_APPROACH_SEATS_UPRIGHT: 'cj4-approach-seats-upright',\n    CJ4_APPROACH_SEAT_BELTS: 'cj4-approach-seat-belts',\n    CJ4_APPROACH_PASSENGER_LIGHTS: 'cj4-approach-passenger-lights',\n    CJ4_APPROACH_PRESSURIZATION: 'cj4-approach-pressurization',\n\n    // Before Landing\n    CJ4_BEFORE_LANDING_LANDING_GEAR: 'cj4-before-landing-landing-gear',\n    CJ4_BEFORE_LANDING_FLAPS: 'cj4-before-landing-flaps',\n    CJ4_BEFORE_LANDING_SPEEDBRAKES_OFF: 'cj4-before-landing-speedbrakes-off',\n    CJ4_BEFORE_LANDING_AIRSPEED_VREF: 'cj4-before-landing-airspeed-vref',\n    CJ4_BEFORE_LANDING_AUTOPILOT_AND_YAW_DAMPER: 'cj4-before-landing-autopilot-and-yaw-damper',\n\n    // Landing\n    CJ4_LANDING_THROTTLES: 'cj4-landing-throttles',\n    CJ4_LANDING_BRAKES: 'cj4-landing-brakes',\n    CJ4_LANDING_GROUND_SPOILERS: 'cj4-landing-ground-spoilers',\n\n    // All Engine Go-Around\n    CJ4_GOAROUND_GA_BUTTON: 'cj4-goaround-ga-button',\n    CJ4_GOAROUND_THROTTLES_1: 'cj4-goaround-throttles-1',\n    CJ4_GOAROUND_PITCH_ATTITUDE: 'cj4-goaround-pitch-attitude',\n    CJ4_GOAROUND_FLAPS_1: 'cj4-goaround-flaps-1',\n    CJ4_GOAROUND_LANDING_GEAR: 'cj4-goaround-landing-gear',\n    CJ4_GOAROUND_FLAPS_2: 'cj4-goaround-flaps-2',\n    CJ4_GOAROUND_AIRSPEED: 'cj4-goaround-airspeed',\n    CJ4_GOAROUND_THROTTLES_2: 'cj4-goaround-throttles-2',\n    CJ4_GOAROUND_YAW_DAMPER: 'cj4-goaround-yaw-damper',\n    CJ4_GOAROUND_AUTOPILOT: 'cj4-goaround-autopilot',\n\n    // After Landing\n    CJ4_AFTER_LANDING_SPEEDBRAKES: 'cj4-after-landing-speedbrakes',\n    CJ4_AFTER_LANDING_FLAPS: 'cj4-after-landing-flaps',\n    CJ4_AFTER_LANDING_PITOT_STATIC_HEAT: 'cj4-after-landing-pitot-static-heat',\n    CJ4_AFTER_LANDING_ICE_PROTECTION_SYSTEMS: 'cj4-after-landing-ice-protection-systems',\n    CJ4_AFTER_LANDING_RADAR: 'cj4-after-landing-radar',\n    CJ4_AFTER_LANDING_EXTERIOR_LIGHTS: 'cj4-after-landing-exterior-lights',\n\n    // Shutdown\n    CJ4_SHUTDOWN_PARKING_BRAKE: 'cj4-shutdown-parking-brake',\n    CJ4_SHUTDOWN_EMERGENCY_LIGHTS: 'cj4-shutdown-emergency-lights',\n    CJ4_SHUTDOWN_STANDBY_FLIGHT_DISPLAY: 'cj4-shutdown-standby-flight-display',\n    CJ4_SHUTDOWN_AVIONICS_SWITCH: 'cj4-shutdown-avionics-switch',\n    CJ4_SHUTDOWN_CLIMATE_CONTROL_SELECTOR: 'cj4-shutdown-climate-control-selector',\n    CJ4_SHUTDOWN_ICE_PROTECTION_SYSTEMS: 'cj4-shutdown-ice-protection-systems',\n    CJ4_SHUTDOWN_THROTTLES: 'cj4-shutdown-throttles',\n    CJ4_SHUTDOWN_ENGINE_RUNSTOP_BUTTONS: 'cj4-shutdown-engine-runstop-buttons',\n    CJ4_SHUTDOWN_EXTERIOR_LIGHTS: 'cj4-shutdown-exterior-lights',\n    CJ4_SHUTDOWN_BATTERY_SWITCH: 'cj4-shutdown-battery-switch',\n    CJ4_SHUTDOWN_CONTROL_LOCK: 'cj4-shutdown-control-lock',\n    CJ4_SHUTDOWN_ENGINE_COVERS: 'cj4-shutdown-engine-covers',\n});\n\nconst cj4ExtItems = Object.freeze({\n    CJ4EXT_BEFORE_START_EXTERNAL_POWER: 'cj4ext-before-start-external-power',\n    CJ4EXT_BEFORE_TAKEOFF_RUNWAY_HEADING: 'cj4ext-before-takeoff-runway-heading',\n    CJ4EXT_DESCENT_INTERIOR_LIGHTS: 'cj4ext-descent-interior-lights',\n});\n\nconst c172Items = Object.freeze({\n    C172_PREFLIGHT_AIRCRAFT_DOCUMENTS: 'c172-preflight-aircraft-documents',\n    C172_PREFLIGHT_PARKING_BRAKE: 'c172-preflight-parking-brake',\n    C172_PREFLIGHT_IGNITION: 'c172-preflight-ignition',\n    C172_PREFLIGHT_AVIONICS_SWITCHES_OFF: 'c172-preflight-avionics-switches-off',\n    C172_PREFLIGHT_FUEL_QUANTITY: 'c172-preflight-fuel-quantity',\n    C172_PREFLIGHT_LOW_FUEL_ANNUNCIATORS: 'c172-preflight-low-fuel-annunciators',\n    C172_PREFLIGHT_STATIC_PRESSURE_ALT_SOURCE_VALVE: 'c172-preflight-static-pressure-alt-source-valve',\n    C172_PREFLIGHT_FUEL_SELECTOR: 'c172-preflight-fuel-selector',\n    C172_PREFLIGHT_PITOT_HEAT_ON: 'c172-preflight-pitot-heat-on',\n    C172_PREFLIGHT_PITOT_HEAT_OFF: 'c172-preflight-pitot-heat-off',\n\n    C172_BEFORE_START_PREFLIGHT_INSPECTION: 'c172-before-start-preflight-inspection',\n    C172_BEFORE_START_SEATS_BELTS: 'c172-before-start-seats-belts',\n    C172_BEFORE_START_ELECTRICAL_EQUIPMENT: 'c172-before-start-electrical-equipment',\n    C172_BEFORE_START_AVIONICS_SWITCHES: 'c172-before-start-avionics-switches',\n    C172_BEFORE_START_FUEL_SELECTOR: 'c172-before-start-fuel-selector',\n    C172_BEFORE_START_FUEL_SHUTOFF_VALVE: 'c172-before-start-fuel-shutoff-valve',\n\n    C172_ENGINE_START_THROTTLE: 'c172-engine-start-throttle',\n    C172_ENGINE_START_MIXTURE_1: 'c172-engine-start-mixture-1',\n    C172_ENGINE_START_PROPELLER_AREA: 'c172-engine-start-propeller-area',\n    C172_ENGINE_START_BEACON_LIGHT: 'c172-engine-start-beacon-light',\n    C172_ENGINE_START_MIXTURE_2: 'c172-engine-start-mixture-2',\n    C172_ENGINE_START_AUX_FUEL_PUMP: 'c172-engine-start-aux-fuel-pump',\n    C172_ENGINE_START_MIXTURE_3: 'c172-engine-start-mixture-3',\n    C172_ENGINE_START_FEET_BRAKES: 'c172-engine-start-feet-brakes',\n    C172_ENGINE_START_IGNITION: 'c172-engine-start-ignition',\n    C172_ENGINE_START_MIXTURE_4: 'c172-engine-start-mixture-4',\n\n    C172_AFTER_START_THROTTLE: 'c172-after-start-throttle',\n    C172_AFTER_START_OIL_PRESSURE: 'c172-after-start-oil-pressure',\n    C172_AFTER_START_FLAPS: 'c172-after-start-flaps',\n    C172_AFTER_START_AVIONICS_SWITCHES: 'c172-after-start-avionics-switches',\n\n    C172_TAXI_TAXI_LIGHT: 'c172-taxi-taxi-light',\n    C172_TAXI_LANDING_LIGHT: 'c172-taxi-landing-light',\n    C172_TAXI_STROBE_LIGHT: 'c172-taxi-strobe-light',\n    C172_TAXI_NAV_LIGHT: 'c172-taxi-nav-light',\n    C172_TAXI_PARKING_BRAKE: 'c172-taxi-parking-brake',\n    C172_TAXI_BRAKES: 'c172-taxi-brakes',\n    C172_TAXI_RUDDER: 'c172-taxi-rudder',\n\n    C172_RUNUP_PARKING_BRAKE: 'c172-runup-parking-brake',\n    C172_RUNUP_SEATS_BACKS: 'c172-runup-seats-backs',\n    C172_RUNUP_SEATS_BELTS: 'c172-runup-seats-belts',\n    C172_RUNUP_FLIGHT_CONTROLS_1: 'c172-runup-flight-controls-1',\n    C172_RUNUP_FUEL_QUANTITY: 'c172-runup-fuel-quantity',\n    C172_RUNUP_MIXTURE: 'c172-runup-mixture',\n    C172_RUNUP_FUEL_SELECTOR: 'c172-runup-fuel-selector',\n    C172_RUNUP_AUTOPILOT: 'c172-runup-autopilot',\n    C172_RUNUP_FLIGHT_CONTROLS_2: 'c172-runup-flight-controls-2',\n    C172_RUNUP_THROTTLE_1: 'c172-runup-throttle-1',\n    C172_RUNUP_MAGNETOS_1: 'c172-runup-magnetos-1',\n    C172_RUNUP_MAGNETOS_2: 'c172-runup-magnetos-2',\n    C172_RUNUP_MAGNETOS_3: 'c172-runup-magnetos-3',\n    C172_RUNUP_VACCUM_GAUGE: 'c172-runup-vaccum-gauge',\n    C172_RUNUP_ENGINE_IDLE: 'c172-runup-engine-idle',\n    C172_RUNUP_THROTTLE_2: 'c172-runup-throttle-2',\n\n    C172_BEFORE_TAKEOFF_FLAPS: 'c172-before-takeoff-flaps',\n    C172_BEFORE_TAKEOFF_CABIN_WINDOWS: 'c172-before-takeoff-cabin-windows',\n    C172_BEFORE_TAKEOFF_PARKING_BRAKE: 'c172-before-takeoff-parking-brake',\n\n    C172_TAKEOFF_FLAPS_1: 'c172-takeoff-flaps-1',\n    C172_TAKEOFF_THROTTLE: 'c172-takeoff-throttle',\n    C172_TAKEOFF_MIXTURE: 'c172-takeoff-mixture',\n    C172_TAKEOFF_AIRSPEED_INDICATOR: 'c172-takeoff-airspeed-indicator',\n    C172_TAKEOFF_LIFT_NOSEWHEEL: 'c172-takeoff-lift-nosewheel',\n    C172_TAKEOFF_INITIAL_CLIMB: 'c172-takeoff-initial-climb',\n    C172_TAKEOFF_FLAPS_2: 'c172-takeoff-flaps-2',\n\n    C172_CLIMB_AIRSPEED: 'c172-climb-airspeed',\n    C172_CLIMB_THROTTLE: 'c172-climb-throttle',\n    C172_CLIMB_MIXTURE_1: 'c172-climb-mixture-1',\n    C172_CLIMB_ENGINE_GAUGES: 'c172-climb-engine-gauges',\n    C172_CLIMB_TAXI_LANDING_LIGHTS: 'c172-climb-taxi-landing-lights',\n    C172_CLIMB_MIXTURE_2: 'c172-climb-mixture-2',\n\n    C172_CRUISE_POWER: 'c172-cruise-power',\n    C172_CRUISE_ELEVATOR_TRIM: 'c172-cruise-elevator-trim',\n    C172_CRUISE_MIXTURE: 'c172-cruise-mixture',\n    C172_CRUISE_ENGINE_GAUGES: 'c172-cruise-engine-gauges',\n\n    C172_DESCENT_POWER: 'c172-descent-power',\n    C172_DESCENT_MIXTURE: 'c172-descent-mixture',\n    C172_DESCENT_FUEL_SELECTOR: 'c172-descent-fuel-selector',\n    C172_DESCENT_FLAPS: 'c172-descent-flaps',\n\n    C172_BEFORE_LANDING_SEATS_BACKS: 'c172-before-landing-seats-backs',\n    C172_BEFORE_LANDING_SEATS_BELTS: 'c172-before-landing-seats-belts',\n    C172_BEFORE_LANDING_FUEL_SELECTOR: 'c172-before-landing-fuel-selector',\n    C172_BEFORE_LANDING_MIXTURE: 'c172-before-landing-mixture',\n    C172_BEFORE_LANDING_TAXI_LANDING_LIGHTS: 'c172-before-landing-taxi-landing-lights',\n    C172_BEFORE_LANDING_AUTOPILOT: 'c172-before-landing-autopilot',\n\n    C172_LANDING_FLAPS: 'c172-landing-flaps',\n    C172_LANDING_AIRSPEED: 'c172-landing-airspeed',\n    C172_LANDING_TOUCHDOWN: 'c172-landing-touchdown',\n    C172_LANDING_LANDING_ROLL: 'c172-landing-landing-roll',\n    C172_LANDING_BRAKING: 'c172-landing-braking',\n\n    C172_AFTER_LANDING_FLAPS: 'c172-after-landing-flaps',\n    C172_AFTER_LANDING_LANDING_LIGHT: 'c172-after-landing-landing-light',\n    C172_AFTER_LANDING_TAXI_LIGHT: 'c172-after-landing-taxi-light',\n    C172_AFTER_LANDING_STROBE_LIGHT: 'c172-after-landing-strobe-light',\n    C172_AFTER_LANDING_ELEVATOR_TRIM: 'c172-after-landing-elevator-trim',\n    C172_AFTER_LANDING_TRANSPONDER: 'c172-after-landing-transponder',\n\n    C172_PARKING_PARKING_BRAKE: 'c172-parking-parking-brake',\n    C172_PARKING_AVIONICS_SWITCHES: 'c172-parking-avionics-switches',\n    C172_PARKING_ENGINE_IDLE: 'c172-parking-engine-idle',\n    C172_PARKING_MAGNETOS: 'c172-parking-magnetos',\n    C172_PARKING_MIXTURE: 'c172-parking-mixture',\n\n    C172_SECURING_IGNITION: 'c172-securing-ignition',\n    C172_SECURING_LANDING_LIGHT: 'c172-securing-landing-light',\n    C172_SECURING_TAXI_LIGHT: 'c172-securing-taxi-light',\n    C172_SECURING_NAV_LIGHT: 'c172-securing-nav-light',\n    C172_SECURING_FUEL_SELECTOR: 'c172-securing-fuel-selector',\n});\n\nconst c172SteamItems = Object.freeze({\n    C172STEAM_PREFLIGHT_BATTERY_SWITCH_1: 'c172steam-preflight-battery-switch-1',\n    C172STEAM_PREFLIGHT_BATTERY_SWITCH_2: 'c172steam-preflight-battery-switch-2',\n    C172STEAM_PREFLIGHT_AVIONICS_SWITCHES_1: 'c172steam-preflight-avionics-switches-1',\n    C172STEAM_PREFLIGHT_AVIONICS_SWITCHES_2: 'c172steam-preflight-avionics-switches-2',\n    C172STEAM_PREFLIGHT_AVIONICS_COOLING_FAN: 'c172steam-preflight-avionics-cooling-fan',\n    C172STEAM_PREFLIGHT_ANNUNCIATOR_PANEL: 'c172steam-preflight-annunciator-panel',\n    C172STEAM_PREFLIGHT_FUEL_SHUTOFF_VALVE: 'c172steam-preflight-fuel-shutoff-valve',\n    C172STEAM_PREFLIGHT_FLAPS_DOWN: 'c172steam-preflight-flaps-down',\n    C172STEAM_PREFLIGHT_ELEVATOR_TRIM: 'c172steam-preflight-elevator-trim',\n\n    C172STEAM_ENGINE_START_BATTERY_SWITCH: 'c172steam-engine-start-battery-switch',\n\n    C172STEAM_AFTER_START_ALTERNATOR: 'c172steam-after-start-alternator',\n    C172STEAM_AFTER_START_ALTERNATOR_INDICATOR: 'c172steam-after-start-alternator-indicator',\n    C172STEAM_AFTER_START_ANMETER: 'c172steam-after-start-anmeter',\n    C172STEAM_AFTER_START_RADIOS: 'c172steam-after-start-radios',\n    C172STEAM_AFTER_START_TRANSPONDER: 'c172steam-after-start-transponder',\n    C172STEAM_AFTER_START_HEADING_INDICATOR: 'c172steam-after-start-heading-indicator',\n    C172STEAM_AFTER_START_ALTIMETER: 'c172steam-after-start-altimeter',\n    C172STEAM_AFTER_START_ALTITUDE_INDICATOR: 'c172steam-after-start-altitude-indicator',\n\n    C172STEAM_TAXI_TURN_COORDINATOR: 'c172steam-taxi-turn-coordinator',\n    C172STEAM_TAXI_HEADING_INDICATOR: 'c172steam-taxi-heading-indicator',\n    C172STEAM_TAXI_COMPASS: 'c172steam-taxi-compass',\n\n    C172STEAM_RUNUP_FLIGHT_INSTRUMENTS: 'c172steam-runup-flight-instruments',\n    C172STEAM_RUNUP_AUTOPILOT: 'c172steam-runup-autopilot',\n    C172STEAM_RUNUP_OIL_PRESSURE: 'c172steam-runup-oil-pressure',\n    C172STEAM_RUNUP_OIL_TEMPERATURE: 'c172steam-runup-oil-temperature',\n    C172STEAM_RUNUP_ANMETER: 'c172steam-runup-anmeter',\n    C172STEAM_RUNUP_ANNUNCIATOR_PANEL: 'c172steam-runup-annunciator-panel',\n\n    C172STEAM_BEFORE_TAKEOFF_RADIOS: 'c172steam-before-takeoff-radios',\n    C172STEAM_BEFORE_TAKEOFF_AVIONICS: 'c172steam-before-takeoff-avionics',\n    C172STEAM_BEFORE_TAKEOFF_NAV_GPS_SWITCH: 'c172steam-before-takeoff-nav-gps-switch',\n    C172STEAM_BEFORE_TAKEOFF_TRANSPONDER: 'c172steam-before-takeoff-transponder',\n    C172STEAM_BEFORE_TAKEOFF_AUTOPILOT: 'c172steam-before-takeoff-autopilot',\n    C172STEAM_BEFORE_TAKEOFF_ELEVATOR_TRIM: 'c172steam-before-takeoff-elevator-trim',\n\n    C172STEAM_TAKEOFF_ANNUNCIATORS: 'c172steam-takeoff-annunciators',\n\n    C172STEAM_CRUISE_FLIGHT_INSTRUMENTS: 'c172steam-cruise-flight-instruments',\n\n    C172STEAM_DESCENT_ALTIMETER: 'c172steam-descent-altimeter',\n    C172STEAM_DESCENT_NAV_GPS: 'c172steam-descent-nav-gps',\n\n    C172STEAM_PARKING_TRANSPONDER: 'c172steam-parking-transponder',\n\n    C172STEAM_SECURING_ALTERNATOR: 'c172steam-securing-alternator',\n    C172STEAM_SECURING_BATTERY: 'c172steam-securing-battery',\n});\n\nconst c172G1000Items = Object.freeze({\n    C172G1000_PREFLIGHT_MASTER_SWITCHES_1: 'c172g1000-preflight-master-switches-1',\n    C172G1000_PREFLIGHT_PFD: 'c172g1000-preflight-pfd',\n    C172G1000_PREFLIGHT_OIL_PRESSURE_ANNUNCIATOR: 'c172g1000-preflight-oil-pressure-annunciator',\n    C172G1000_PREFLIGHT_LOW_VACUUM_ANNUNCIATOR: 'c172g1000-preflight-low-vacuum-annunciator',\n    C172G1000_PREFLIGHT_AVIONICS_SWITCH_1_ON: 'c172g1000-preflight-avionics-switch-1-on',\n    C172G1000_PREFLIGHT_AVIONICS_SWITCH_1_FAN: 'c172g1000-preflight-avionics-switch-1-fan',\n    C172G1000_PREFLIGHT_AVIONICS_SWITCH_1_OFF: 'c172g1000-preflight-avionics-switch-1-off',\n    C172G1000_PREFLIGHT_AVIONICS_SWITCH_2_ON: 'c172g1000-preflight-avionics-switch-2-on',\n    C172G1000_PREFLIGHT_AVIONICS_SWITCH_2_FAN: 'c172g1000-preflight-avionics-switch-2-fan',\n    C172G1000_PREFLIGHT_AVIONICS_SWITCH_2_OFF: 'c172g1000-preflight-avionics-switch-2-off',\n    C172G1000_PREFLIGHT_LOW_VOLTS_ANNUNCIATOR: 'c172g1000-preflight-low-volts-annunciator',\n    C172G1000_PREFLIGHT_MASTER_SWITCHES_2: 'c172g1000-preflight-master-switches-2',\n    C172G1000_PREFLIGHT_ELEVATOR_TRIM: 'c172g1000-preflight-elevator-trim',\n\n    C172G1000_BEFORE_START_BRAKES: 'c172g1000-before-start-brakes',\n    C172G1000_BEFORE_START_CIRCUIT_BREAKERS: 'c172g1000-before-start-circuit-breakers',\n\n    C172G1000_ENGINE_START_STANDBY_BATT_TEST: 'c172g1000-engine-start-standby-batt-test',\n    C172G1000_ENGINE_START_STANDBY_BATT_ARM: 'c172g1000-engine-start-standby-batt-arm',\n    C172G1000_ENGINE_START_ENGINE_INDICATING_SYSTEM: 'c172g1000-engine-start-engine-indicating-system',\n    C172G1000_ENGINE_START_BUS_E_VOLTS: 'c172g1000-engine-start-bus-e-volts',\n    C172G1000_ENGINE_START_BUS_M_VOLTS: 'c172g1000-engine-start-bus-m-volts',\n    C172G1000_ENGINE_START_BATT_S_AMPS: 'c172g1000-engine-start-batt-s-amps',\n    C172G1000_ENGINE_START_STANDBY_BATT_ANNUNCIATOR: 'c172g1000-engine-start-standby-batt-annunciator',\n    C172G1000_ENGINE_START_MASTER_SWITCH: 'c172g1000-engine-start-master-switch',\n\n    C172G1000_AFTER_START_AMPS: 'c172g1000-after-start-amps',\n    C172G1000_AFTER_START_LOW_VOLTS_ANNUNCIATOR: 'c172g1000-after-start-low-volts-annunciator',\n\n    C172G1000_RUNUP_DOORS: 'c172g1000-runup-doors',\n    C172G1000_RUNUP_FLIGHT_INSTRUMENTS: 'c172g1000-runup-flight-instruments',\n    C172G1000_RUNUP_ALTIMETER: 'c172g1000-runup-altimeter',\n    C172G1000_RUNUP_STANDBY_ALTIMETER: 'c172g1000-runup-standby-altimeter',\n    C172G1000_RUNUP_ALTITUDE_SELECT: 'c172g1000-runup-altitude-select',\n    C172G1000_RUNUP_STANDBY_FLIGHT_INSTRUMENTS: 'c172g1000-runup-standby-flight-instruments',\n    C172G1000_RUNUP_AP_TRIM_DISC: 'c172g1000-runup-ap-trim-disc',\n    C172G1000_RUNUP_FLIGHT_DIRECTOR: 'c172g1000-runup-flight-director',\n    C172G1000_RUNUP_ELEVATOR_TRIM: 'c172g1000-runup-elevator-trim',\n    C172G1000_RUNUP_ENGINE_INDICATORS: 'c172g1000-runup-engine-indicators',\n    C172G1000_RUNUP_ANMETERS_VOLTMETERS: 'c172g1000-runup-anmeters-voltmeters',\n    C172G1000_RUNUP_ANNUNCIATORS: 'c172g1000-runup-annunciators',\n\n    C172G1000_BEFORE_TAKEOFF_COM_FREQS: 'c172g1000-before-takeoff-com-freqs',\n    C172G1000_BEFORE_TAKEOFF_NAV_FREQS: 'c172g1000-before-takeoff-nav-freqs',\n    C172G1000_BEFORE_TAKEOFF_FMS_GPS: 'c172g1000-before-takeoff-fms-gps',\n    C172G1000_BEFORE_TAKEOFF_TRANSPONDER: 'c172g1000-before-takeoff-transponder',\n    C172G1000_BEFORE_TAKEOFF_CDI_NAV_SOURCE: 'c172g1000-before-takeoff-cdi-nav-source',\n    C172G1000_BEFORE_TAKEOFF_CABIN_PWR: 'c172g1000-before-takeoff-cabin-pwr',\n\n    C172G1000_TAKEOFF_ANNUNCIATORS: 'c172g1000-takeoff-annunciators',\n\n    C172G1000_CRUISE_FMS_GPS: 'c172g1000-cruise-fms-gps',\n\n    C172G1000_DESCENT_ALTIMETER: 'c172g1000-descent-altimeter',\n    C172G1000_DESCENT_STANDBY_ALTIMETER: 'c172g1000-descent-standby-altimeter',\n    C172G1000_DESCENT_ALTITUDE_SELECT: 'c172g1000-descent-altitude-select',\n    C172G1000_DESCENT_CDI_NAV: 'c172g1000-descent-cdi-nav',\n    C172G1000_DESCENT_FMS_GPS: 'c172g1000-descent-fms-gps',\n\n    C172G1000_BEFORE_LANDING_CABIN_PWR: 'c172g1000-before-landing-cabin-pwr',\n\n    C172G1000_SECURING_MASTER_SWITCHES: 'c172g1000-securing-master-switches',\n    C172G1000_SECURING_STANDBY_BATT: 'c172g1000-securing-standby-batt',\n});\n\nconst crjItems = Object.freeze({\n    CRJ_SAFETY_CHECK_CIRCUIT_BREAKERS: 'crj_safety_check_circuit_breakers',\n    CRJ_SAFETY_CHECK_NOSEWHEEL: 'crj_safety_check_nosewheel',\n    CRJ_SAFETY_CHECK_HYDRAULIC_PUMPS_1: 'crj_safety_check_hydraulic_pumps_1',\n    CRJ_SAFETY_CHECK_LANDING_GEAR: 'crj_safety_check_landing_gear',\n    CRJ_SAFETY_CHECK_FLIGHT_SPOILER_LEVER: 'crj_safety_check_flight_spoiler_lever',\n    CRJ_SAFETY_CHECK_SLATS_FLAPS_LEVER: 'crj_safety_check_slats_flaps_lever',\n    CRJ_SAFETY_CHECK_RADAR: 'crj_safety_check_radar',\n    CRJ_SAFETY_CHECK_ADG_MANUAL_RELEASE: 'crj_safety_check_adg_manual_release',\n    CRJ_SAFETY_CHECK_EMERGENCY_FLAP_SWITCH: 'crj_safety_check_emergency_flap_switch',\n    CRJ_SAFETY_CHECK_BATTERY_MASTER_SWITCH: 'crj_safety_check_battery_master_switch',\n    CRJ_SAFETY_CHECK_APU: 'crj_safety_check_apu',\n    CRJ_SAFETY_CHECK_AC_ELECTRICS: 'crj_safety_check_ac_electrics',\n    CRJ_SAFETY_CHECK_IRS: 'crj_safety_check_irs',\n    CRJ_SAFETY_CHECK_EMERGENCY_EQUIPMENT: 'crj_safety_check_emergency_equipment',\n    CRJ_SAFETY_CHECK_GEAR_SAFETY_PINS: 'crj_safety_check_gear_safety_pins',\n    CRJ_SAFETY_CHECK_AIRPLANE_DOCUMENTS: 'crj_safety_check_airplane_documents',\n    CRJ_SAFETY_CHECK_HYDRAULIC_PUMPS_2: 'crj_safety_check_hydraulic_pumps_2',\n    CRJ_SAFETY_CHECK_FMS_INITIALIZATION: 'crj_safety_check_fms_initialization',\n\n    CRJ_CABIN_INSPECTION_CABIN_INSPECTION: 'crj_cabin_inspection_cabin_inspection',\n    CRJ_CABIN_INSPECTION_WALKAROUND_INSPECTION: 'crj_cabin_inspection_walkaround_inspection',\n\n    CRJ_ORIGINATING_CHECK_CREW_OXYGEN: 'crj_originating_check_crew_oxygen',\n    CRJ_ORIGINATING_CHECK_AUDIO_WARNING_PANEL: 'crj_originating_check_audio_warning_panel',\n    CRJ_ORIGINATING_CHECK_ELECTRICAL_POWER_PANEL: 'crj_originating_check_electrical_power_panel',\n    CRJ_ORIGINATING_CHECK_FIRE_DETECTION: 'crj_originating_check_fire_detection',\n    CRJ_ORIGINATING_CHECK_EXTERNAL_LIGHTS_PANEL: 'crj_originating_check_external_lights_panel',\n    CRJ_ORIGINATING_CHECK_FUEL_PANEL: 'crj_originating_check_fuel_panel',\n    CRJ_ORIGINATING_CHECK_BLEED_AIR_PANEL: 'crj_originating_check_bleed_air_panel',\n    CRJ_ORIGINATING_CHECK_APU_PANEL: 'crj_originating_check_apu_panel',\n    CRJ_ORIGINATING_CHECK_START_PANEL: 'crj_originating_check_start_panel',\n    CRJ_ORIGINATING_CHECK_HYDRAULIC_PANEL: 'crj_originating_check_hydraulic_panel',\n    CRJ_ORIGINATING_CHECK_ELT_SWITCH: 'crj_originating_check_elt_switch',\n    CRJ_ORIGINATING_CHECK_CABIN_PRESSURE_PANEL: 'crj_originating_check_cabin_pressure_panel',\n    CRJ_ORIGINATING_CHECK_AIR_CONDITIONING_PANEL: 'crj_originating_check_air_conditioning_panel',\n    CRJ_ORIGINATING_CHECK_ANTIICE_PANEL: 'crj_originating_check_antiice_panel',\n    CRJ_ORIGINATING_CHECK_WINDSHIELD_HEAT: 'crj_originating_check_windshield_heat',\n    CRJ_ORIGINATING_CHECK_EMERGENCY_LIGHTS: 'crj_originating_check_emergency_lights',\n    CRJ_ORIGINATING_CHECK_STANDBY_COMPASS: 'crj_originating_check_standby_compass',\n    CRJ_ORIGINATING_CHECK_STALL_TEST: 'crj_originating_check_stall_test',\n    CRJ_ORIGINATING_CHECK_NOSEWHEEL: 'crj_originating_check_nosewheel',\n    CRJ_ORIGINATING_CHECK_CLOCKS: 'crj_originating_check_clocks',\n    CRJ_ORIGINATING_CHECK_EFIS_CONTROL_PANELS: 'crj_originating_check_efis_control_panels',\n    CRJ_ORIGINATING_CHECK_INSTRUMENT_PANELS: 'crj_originating_check_instrument_panels',\n    CRJ_ORIGINATING_CHECK_EICAS_AND_STDBY: 'crj_originating_check_eicas_and_stdby',\n    CRJ_ORIGINATING_CHECK_UPPER_PEDESTAL: 'crj_originating_check_upper_pedestal',\n    CRJ_ORIGINATING_CHECK_THRUST_LEVER_QUADRANT: 'crj_originating_check_thrust_lever_quadrant',\n    CRJ_ORIGINATING_CHECK_AVIONICS: 'crj_originating_check_avionics',\n    CRJ_ORIGINATING_CHECK_TRIMS: 'crj_originating_check_trims',\n    CRJ_ORIGINATING_CHECK_YAW_DAMPER: 'crj_originating_check_yaw_damper',\n    CRJ_ORIGINATING_CHECK_SOURCE_SELECT_PANEL: 'crj_originating_check_source_select_panel',\n    CRJ_ORIGINATING_CHECK_LOWER_PEDESTAL: 'crj_originating_check_lower_pedestal',\n\n    CRJ_BEFORE_START_CHECK_PASS_SIGNS: 'crj_before_start_check_pass_signs',\n    CRJ_BEFORE_START_CHECK_LANDING_ELEVATION: 'crj_before_start_check_landing_elevation',\n    CRJ_BEFORE_START_CHECK_BOOST_PUMPS: 'crj_before_start_check_boost_pumps',\n    CRJ_BEFORE_START_CHECK_ALTIMETERS: 'crj_before_start_check_altimeters',\n    CRJ_BEFORE_START_CHECK_FMS: 'crj_before_start_check_fms',\n    CRJ_BEFORE_START_CHECK_IRS: 'crj_before_start_check_irs',\n    CRJ_BEFORE_START_CHECK_RADIOS: 'crj_before_start_check_radios',\n    CRJ_BEFORE_START_CHECK_TAKEOFF_DATA: 'crj_before_start_check_takeoff_data',\n    CRJ_BEFORE_START_CHECK_TAKEOFF_BRIEFING: 'crj_before_start_check_takeoff_briefing',\n\n    CRJ_CLEARED_TO_START_CHECK_PERSONAL_ELECTRONIC_DEVICES: 'crj_cleared_to_start_check_personal_electronic_devices',\n    CRJ_CLEARED_TO_START_CHECK_APU: 'crj_cleared_to_start_check_apu',\n    CRJ_CLEARED_TO_START_CHECK_ELECTRICS: 'crj_cleared_to_start_check_electrics',\n    CRJ_CLEARED_TO_START_CHECK_DOORS: 'crj_cleared_to_start_check_doors',\n    CRJ_CLEARED_TO_START_CHECK_BEACON: 'crj_cleared_to_start_check_beacon',\n    CRJ_CLEARED_TO_START_CHECK_FUEL_PUMPS: 'crj_cleared_to_start_check_fuel_pumps',\n    CRJ_CLEARED_TO_START_CHECK_HYDRAULIC_PUMPS: 'crj_cleared_to_start_check_hydraulic_pumps',\n    CRJ_CLEARED_TO_START_CHECK_PARKING_BRAKE: 'crj_cleared_to_start_check_parking_brake',\n    CRJ_CLEARED_TO_START_ENGINE_START: 'crj_cleared_to_start_engine_start',\n\n    CRJ_AFTER_START_CHECK_GENERATORS: 'crj_after_start_check_generators',\n    CRJ_AFTER_START_CHECK_BLEED_VALVES: 'crj_after_start_check_bleed_valves',\n    CRJ_AFTER_START_CHECK_PACKS: 'crj_after_start_check_packs',\n    CRJ_AFTER_START_CHECK_SYNOPTIC_PAGES: 'crj_after_start_check_synoptic_pages',\n    CRJ_AFTER_START_CHECK_APU: 'crj_after_start_check_apu',\n    CRJ_AFTER_START_CHECK_ANTIICE_PROBES: 'crj_after_start_check_antiice_probes',\n    CRJ_AFTER_START_CHECK_ANTIICE: 'crj_after_start_check_antiice',\n    CRJ_AFTER_START_CHECK_NOSEWHEEL: 'crj_after_start_check_nosewheel',\n\n    CRJ_TAXI_CHECK_SLATS_FLAPS: 'crj_taxi_check_slats_flaps',\n    CRJ_TAXI_CHECK_FLIGHT_CONTROLS: 'crj_taxi_check_flight_controls',\n    CRJ_TAXI_CHECK_TRIMS: 'crj_taxi_check_trims',\n    CRJ_TAXI_CHECK_THRUST_REVERSERS: 'crj_taxi_check_thrust_reversers',\n    CRJ_TAXI_CHECK_FLIGHT_INSTRUMENTS: 'crj_taxi_check_flight_instruments',\n    CRJ_TAXI_CHECK_BRAKE_TEMPS: 'crj_taxi_check_brake_temps',\n    CRJ_TAXI_CHECK_EXTERNAL_LIGHTS: 'crj_taxi_check_external_lights',\n\n    CRJ_BEFORE_TAKEOFF_CHECK_EXTERNAL_LIGHTS: 'crj_before_takeoff_check_external_lights',\n    CRJ_BEFORE_TAKEOFF_CHECK_FUEL_XFLOW: 'crj_before_takeoff_check_fuel_xflow',\n    CRJ_BEFORE_TAKEOFF_CHECK_FLIGHT_ATTENDANT: 'crj_before_takeoff_check_flight_attendant',\n    CRJ_BEFORE_TAKEOFF_CHECK_TRANSPONDER: 'crj_before_takeoff_check_transponder',\n    CRJ_BEFORE_TAKEOFF_CHECK_RADAR: 'crj_before_takeoff_check_radar',\n    CRJ_BEFORE_TAKEOFF_CHECK_CAS: 'crj_before_takeoff_check_cas',\n\n    CRJ_CLIMB_CHECK_FUEL_XFLOW: 'crj_climb_check_fuel_xflow',\n    CRJ_CLIMB_CHECK_BLEEDS_AND_APU: 'crj_climb_check_bleeds_and_apu',\n    CRJ_CLIMB_CHECK_THRUST_REVERSERS: 'crj_climb_check_thrust_reversers',\n    CRJ_CLIMB_CHECK_CAS: 'crj_climb_check_cas',\n\n    CRJ_DESCENT_CHECK_LANDING_ELEVATION: 'crj_descent_check_landing_elevation',\n    CRJ_DESCENT_CHECK_FUEL: 'crj_descent_check_fuel',\n    CRJ_DESCENT_CHECK_TCAS: 'crj_descent_check_tcas',\n    CRJ_DESCENT_CHECK_RADAR: 'crj_descent_check_radar',\n    CRJ_DESCENT_CHECK_CAS: 'crj_descent_check_cas',\n    CRJ_DESCENT_CHECK_LANDING_DATA: 'crj_descent_check_landing_data',\n    CRJ_DESCENT_CHECK_APPROACH_BRIEFING: 'crj_descent_check_approach_briefing',\n\n    CRJ_BEFORE_LANDING_CHECK_FLIGHT_ATTENDANT: 'crj_before_landing_check_flight_attendant',\n    CRJ_BEFORE_LANDING_CHECK_PASSENGER_SIGNS: 'crj_before_landing_check_passenger_signs',\n    CRJ_BEFORE_LANDING_CHECK_THRUST_REVERSERS: 'crj_before_landing_check_thrust_reversers',\n    CRJ_BEFORE_LANDING_CHECK_LANDING_GEAR: 'crj_before_landing_check_landing_gear',\n    CRJ_BEFORE_LANDING_CHECK_FLAPS: 'crj_before_landing_check_flaps',\n\n    CRJ_AFTER_LANDING_CHECK_APU: 'crj_after_landing_check_apu',\n    CRJ_AFTER_LANDING_CHECK_TRANSPONDER_RADAR: 'crj_after_landing_check_transponder_radar',\n    CRJ_AFTER_LANDING_CHECK_FLAPS: 'crj_after_landing_check_flaps',\n    CRJ_AFTER_LANDING_CHECK_EXTERNAL_LIGHTS: 'crj_after_landing_check_external_lights',\n    CRJ_AFTER_LANDING_CHECK_PROBES: 'crj_after_landing_check_probes',\n\n    CRJ_SHUTDOWN_CHECK_PARKING_BRAKE: 'crj_shutdown_check_parking_brake',\n    CRJ_SHUTDOWN_CHECK_SEAT_BELTS: 'crj_shutdown_check_seat_belts',\n    CRJ_SHUTDOWN_CHECK_THRUST_LEVERS: 'crj_shutdown_check_thrust_levers',\n    CRJ_SHUTDOWN_CHECK_ANTIICE: 'crj_shutdown_check_antiice',\n    CRJ_SHUTDOWN_CHECK_FUEL_PUMPS: 'crj_shutdown_check_fuel_pumps',\n    CRJ_SHUTDOWN_CHECK_BEACON: 'crj_shutdown_check_beacon',\n    CRJ_SHUTDOWN_CHECK_NOSEWHEEL: 'crj_shutdown_check_nosewheel',\n\n    CRJ_TERMINATING_CHECK_CHOCKS_AND_BRAKES: 'crj_terminating_check_chocks_and_brakes',\n    CRJ_TERMINATING_CHECK_IRS: 'crj_terminating_check_irs',\n    CRJ_TERMINATING_CHECK_EMERGENCY_LIGHTS: 'crj_terminating_check_emergency_lights',\n    CRJ_TERMINATING_CHECK_ANTIICE: 'crj_terminating_check_antiice',\n    CRJ_TERMINATING_CHECK_HYDRAULIC_PUMPS: 'crj_terminating_check_hydraulic_pumps',\n    CRJ_TERMINATING_CHECK_EXTERNAL_LIGHTS: 'crj_terminating_check_external_lights',\n    CRJ_TERMINATING_CHECK_APU: 'crj_terminating_check_apu',\n    CRJ_TERMINATING_CHECK_BATTERY_MASTER: 'crj_terminating_check_battery_master',\n    CRJ_TERMINATING_CHECK_COCKPIT_LIGHTS: 'crj_terminating_check_cockpit_lights',\n});\n\nconst crjExtItems = Object.freeze({\n    CRJEXT_PRE_FLIGHT_AIRCRAFT_EFB_SETUP: 'crjext_pre_flight_aircraft_efb_setup',\n    CRJEXT_ORIGINATING_CHECK_FMS_INIT_REMINDER: 'crjext_originating_check_fms_init_reminder',\n    CRJEXT_BEFORE_START_CHECK_DOORS_CHOCKS: 'crjext_before_start_check_doors_chocks',\n});\n\nconst vatsimItems = Object.freeze({\n    VATSIM_METAR_ATIS_PRE_FLIGHT: 'vatsim-metar-atis-pre-flight',\n    VATSIM_FILE_FLIGHT_PLAN: 'vatsim-file-flight-plan',\n    VATSIM_REQUEST_INITIAL_CLEARANCE: 'vatsim-request-initial-clearance',\n    VATSIM_DEPARTURE_SETTINGS: 'vatsim-departure-settings',\n    VATSIM_TAXI_CLEARANCE: 'vatsim-taxi-clearance',\n    VATSIM_TAXI_MODE_CHARLIE: 'vatsim-taxi-mode-charlie',\n    VATSIM_TAKEOFF_CLEARANCE: 'vatsim-takeoff-clearance',\n    VATSIM_DESCENT_CLEARANCE: 'vatsim-descent-clearance',\n    VATSIM_APPROACH_CLEARANCE: 'vatsim-approach-clearance',\n    VATSIM_LANDING_CLEARANCE: 'vatsim-landing-clearance',\n    VATSIM_GOAROUND_ANNOUNCE: 'vatsim-goaround-announce',\n    VATSIM_LANDING_CLEAR_OF_RUNWAY: 'vatsim-landing-clear-of-runway',\n    VATSIM_DISCONNECT_GOODBYE: 'vatsim-disconnect-goodbye',\n});\n\nconst simulatorSetupItems = Object.freeze({\n    SIMSETUP_PLAN_FLIGHT: 'simsetup-plan-flight',\n    SIMSETUP_FLIGHT_TRACKING_START: 'simsetup-flight-tracking-start',\n    SIMSETUP_FLIGHT_TRACKING_END: 'simsetup-flight-tracking-end',\n    SIMSETUP_FLIGHT_RECORDING_START: 'simsetup-flight-recording-start',\n    SIMSETUP_FLIGHT_RECORDING_END: 'simsetup-flight-recording-end',\n    SIMSETUP_POST_FLIGHT_NOTES: 'simsetup-post-flight-notes',\n});\n\nexport const ChecklistItems = Object.freeze({\n    ...cj4Items,\n    ...cj4ExtItems,\n    ...c172Items,\n    ...c172SteamItems,\n    ...c172G1000Items,\n    ...crjItems,\n    ...crjExtItems,\n    ...vatsimItems,\n    ...simulatorSetupItems,\n});\n","const commonLists = Object.freeze({\n    PRE_FLIGHT: 'pre-flight',\n    SAFETY: 'safety',\n    CABIN_INSPECTION: 'cabin-inspection',\n    ORIGINATING: 'originating',\n    BEFORE_ENGINE_START: 'before-engine-start',\n    ENGINE_START: 'engine-start',\n    AFTER_ENGINE_START: 'after-engine-start',\n    BEFORE_TAXI: 'before-taxi',\n    TAXI: 'taxi',\n    RUN_UP: 'run-up',\n    BEFORE_TAKEOFF: 'before-takeoff',\n    TAKEOFF: 'takeoff',\n    AFTER_TAKEOFF_CLIMB: 'after-takeoff-climb',\n    CLIMB: 'climb',\n    CRUISE: 'cruise',\n    DESCENT: 'descent',\n    APPROACH: 'approach',\n    BEFORE_LANDING: 'before-landing',\n    LANDING: 'landing',\n    AFTER_LANDING: 'after-landing',\n    ALL_ENGINES_GO_AROUND: 'all-engines-go-around',\n    PARKING: 'parking',\n    SECURING: 'securing',\n    SHUTDOWN: 'shutdown',\n    TERMINATING: 'terminating',\n    POST_FLIGHT: 'post-flight',\n});\n\nexport const ChecklistLists = Object.freeze({\n    ...commonLists,\n});\n","import { Checklists } from 'lib/checklist/data/checklists';\nimport { ChecklistFilters } from 'lib/checklist/data/filters';\nimport { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistLists } from 'lib/checklist/data/lists';\n\nexport const C172G1000ChecklistData = {\n    uid: Checklists.C172_G1000,\n    title: 'Cessna 172 Skyhawk (G1000)',\n    selectableFilters: [],\n    defaultFilters: [\n        ChecklistFilters.EXCLUDE_ALL_BUT_OFFICIAL,\n    ],\n    lists: [\n        {\n            listName: ChecklistLists.PRE_FLIGHT,\n            items: [\n                ChecklistItems.C172_PREFLIGHT_AIRCRAFT_DOCUMENTS,\n                ChecklistItems.C172_PREFLIGHT_PARKING_BRAKE,\n                ChecklistItems.C172_PREFLIGHT_IGNITION,\n                ChecklistItems.C172_PREFLIGHT_AVIONICS_SWITCHES_OFF,\n                ChecklistItems.C172G1000_PREFLIGHT_MASTER_SWITCHES_1,\n                ChecklistItems.C172G1000_PREFLIGHT_PFD,\n                ChecklistItems.C172_PREFLIGHT_FUEL_QUANTITY,\n                ChecklistItems.C172_PREFLIGHT_LOW_FUEL_ANNUNCIATORS,\n                // FIXME: These two annunciator checks only in G1000 official version?\n                ChecklistItems.C172G1000_PREFLIGHT_OIL_PRESSURE_ANNUNCIATOR,\n                ChecklistItems.C172G1000_PREFLIGHT_LOW_VACUUM_ANNUNCIATOR,\n                // FIXME: Translate to sublists.\n                ChecklistItems.C172G1000_PREFLIGHT_AVIONICS_SWITCH_1_ON,\n                ChecklistItems.C172G1000_PREFLIGHT_AVIONICS_SWITCH_1_FAN,\n                ChecklistItems.C172G1000_PREFLIGHT_AVIONICS_SWITCH_1_OFF,\n                ChecklistItems.C172G1000_PREFLIGHT_AVIONICS_SWITCH_2_ON,\n                ChecklistItems.C172G1000_PREFLIGHT_AVIONICS_SWITCH_2_FAN,\n                ChecklistItems.C172G1000_PREFLIGHT_AVIONICS_SWITCH_2_OFF,\n                ChecklistItems.C172_PREFLIGHT_PITOT_HEAT_ON,\n                ChecklistItems.C172_PREFLIGHT_PITOT_HEAT_OFF,\n                ChecklistItems.C172G1000_PREFLIGHT_LOW_VOLTS_ANNUNCIATOR,\n                ChecklistItems.C172G1000_PREFLIGHT_MASTER_SWITCHES_2,\n                ChecklistItems.C172G1000_PREFLIGHT_ELEVATOR_TRIM,\n                ChecklistItems.C172_PREFLIGHT_FUEL_SELECTOR,\n                ChecklistItems.C172_PREFLIGHT_STATIC_PRESSURE_ALT_SOURCE_VALVE,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_ENGINE_START,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_ENGINE_START,\n            items: [\n                ChecklistItems.C172_BEFORE_START_PREFLIGHT_INSPECTION,\n                ChecklistItems.C172_BEFORE_START_SEATS_BELTS,\n                ChecklistItems.C172G1000_BEFORE_START_BRAKES,\n                ChecklistItems.C172G1000_BEFORE_START_CIRCUIT_BREAKERS,\n                ChecklistItems.C172_BEFORE_START_ELECTRICAL_EQUIPMENT,\n                ChecklistItems.C172_BEFORE_START_AVIONICS_SWITCHES,\n                ChecklistItems.C172_BEFORE_START_FUEL_SELECTOR,\n                ChecklistItems.C172_BEFORE_START_FUEL_SHUTOFF_VALVE,\n            ],\n            nextListNames: [\n                ChecklistLists.ENGINE_START,\n            ],\n        },\n        {\n            listName: ChecklistLists.ENGINE_START,\n            items: [\n                ChecklistItems.C172_ENGINE_START_THROTTLE,\n                ChecklistItems.C172_ENGINE_START_MIXTURE_1,\n                ChecklistItems.C172G1000_ENGINE_START_STANDBY_BATT_TEST,\n                ChecklistItems.C172G1000_ENGINE_START_STANDBY_BATT_ARM,\n                ChecklistItems.C172G1000_ENGINE_START_ENGINE_INDICATING_SYSTEM,\n                ChecklistItems.C172G1000_ENGINE_START_BUS_E_VOLTS,\n                ChecklistItems.C172G1000_ENGINE_START_BUS_M_VOLTS,\n                ChecklistItems.C172G1000_ENGINE_START_BATT_S_AMPS,\n                ChecklistItems.C172G1000_ENGINE_START_STANDBY_BATT_ANNUNCIATOR,\n                ChecklistItems.C172_ENGINE_START_PROPELLER_AREA,\n                ChecklistItems.C172G1000_ENGINE_START_MASTER_SWITCH,\n                ChecklistItems.C172_ENGINE_START_BEACON_LIGHT,\n                ChecklistItems.C172_ENGINE_START_MIXTURE_2,\n                ChecklistItems.C172_ENGINE_START_AUX_FUEL_PUMP,\n                ChecklistItems.C172_ENGINE_START_MIXTURE_3,\n                ChecklistItems.C172_ENGINE_START_FEET_BRAKES,\n                ChecklistItems.C172_ENGINE_START_IGNITION,\n                ChecklistItems.C172_ENGINE_START_MIXTURE_4,\n            ],\n            nextListNames: [\n                ChecklistLists.AFTER_ENGINE_START,\n            ],\n        },\n        {\n            listName: ChecklistLists.AFTER_ENGINE_START,\n            items: [\n                ChecklistItems.C172_AFTER_START_THROTTLE,\n                ChecklistItems.C172_AFTER_START_OIL_PRESSURE,\n                ChecklistItems.C172G1000_AFTER_START_AMPS,\n                ChecklistItems.C172G1000_AFTER_START_LOW_VOLTS_ANNUNCIATOR,\n                ChecklistItems.C172_AFTER_START_AVIONICS_SWITCHES,\n                ChecklistItems.C172_AFTER_START_FLAPS,\n            ],\n            nextListNames: [\n                ChecklistLists.TAXI,\n            ],\n        },\n        {\n            listName: ChecklistLists.TAXI,\n            items: [\n                ChecklistItems.C172_TAXI_TAXI_LIGHT,\n                ChecklistItems.C172_TAXI_LANDING_LIGHT,\n                ChecklistItems.C172_TAXI_STROBE_LIGHT,\n                ChecklistItems.C172_TAXI_NAV_LIGHT,\n                ChecklistItems.C172_TAXI_PARKING_BRAKE,\n                ChecklistItems.C172_TAXI_BRAKES,\n                ChecklistItems.C172_TAXI_RUDDER,\n            ],\n            nextListNames: [\n                ChecklistLists.RUN_UP,\n            ],\n        },\n        {\n            listName: ChecklistLists.RUN_UP,\n            items: [\n                ChecklistItems.C172_RUNUP_PARKING_BRAKE,\n                ChecklistItems.C172_RUNUP_SEATS_BACKS,\n                ChecklistItems.C172_RUNUP_SEATS_BELTS,\n                ChecklistItems.C172G1000_RUNUP_DOORS,\n                ChecklistItems.C172_RUNUP_FLIGHT_CONTROLS_1,\n                ChecklistItems.C172G1000_RUNUP_FLIGHT_INSTRUMENTS,\n                ChecklistItems.C172G1000_RUNUP_ALTIMETER,\n                ChecklistItems.C172G1000_RUNUP_STANDBY_ALTIMETER,\n                ChecklistItems.C172G1000_RUNUP_ALTITUDE_SELECT,\n                ChecklistItems.C172G1000_RUNUP_STANDBY_FLIGHT_INSTRUMENTS,\n                ChecklistItems.C172_RUNUP_FUEL_QUANTITY,\n                ChecklistItems.C172_RUNUP_MIXTURE,\n                ChecklistItems.C172_RUNUP_FUEL_SELECTOR,\n                ChecklistItems.C172_RUNUP_AUTOPILOT,\n                ChecklistItems.C172_RUNUP_FLIGHT_CONTROLS_2,\n                ChecklistItems.C172G1000_RUNUP_AP_TRIM_DISC,\n                ChecklistItems.C172G1000_RUNUP_FLIGHT_DIRECTOR,\n                ChecklistItems.C172G1000_RUNUP_ELEVATOR_TRIM,\n                ChecklistItems.C172_RUNUP_THROTTLE_1,\n                ChecklistItems.C172_RUNUP_MAGNETOS_1,\n                ChecklistItems.C172_RUNUP_MAGNETOS_2,\n                ChecklistItems.C172_RUNUP_MAGNETOS_3,\n                ChecklistItems.C172_RUNUP_VACCUM_GAUGE,\n                ChecklistItems.C172G1000_RUNUP_ENGINE_INDICATORS,\n                ChecklistItems.C172G1000_RUNUP_ANMETERS_VOLTMETERS,\n                ChecklistItems.C172G1000_RUNUP_ANNUNCIATORS,\n                ChecklistItems.C172_RUNUP_ENGINE_IDLE,\n                ChecklistItems.C172_RUNUP_THROTTLE_2,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_TAKEOFF,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_TAKEOFF,\n            items: [\n                ChecklistItems.C172G1000_BEFORE_TAKEOFF_COM_FREQS,\n                ChecklistItems.C172G1000_BEFORE_TAKEOFF_NAV_FREQS,\n                ChecklistItems.C172G1000_BEFORE_TAKEOFF_FMS_GPS,\n                ChecklistItems.C172G1000_BEFORE_TAKEOFF_TRANSPONDER,\n                ChecklistItems.C172G1000_BEFORE_TAKEOFF_CDI_NAV_SOURCE,\n                ChecklistItems.C172G1000_BEFORE_TAKEOFF_CABIN_PWR,\n                ChecklistItems.C172_BEFORE_TAKEOFF_FLAPS,\n                ChecklistItems.C172_BEFORE_TAKEOFF_CABIN_WINDOWS,\n                ChecklistItems.C172_BEFORE_TAKEOFF_PARKING_BRAKE,\n            ],\n            nextListNames: [\n                ChecklistLists.TAKEOFF,\n            ],\n        },\n        {\n            listName: ChecklistLists.TAKEOFF,\n            items: [\n                ChecklistItems.C172_TAKEOFF_FLAPS_1,\n                ChecklistItems.C172_TAKEOFF_THROTTLE,\n                ChecklistItems.C172_TAKEOFF_MIXTURE,\n                ChecklistItems.C172G1000_TAKEOFF_ANNUNCIATORS,\n                ChecklistItems.C172_TAKEOFF_AIRSPEED_INDICATOR,\n                ChecklistItems.C172_TAKEOFF_LIFT_NOSEWHEEL,\n                ChecklistItems.C172_TAKEOFF_INITIAL_CLIMB,\n                ChecklistItems.C172_TAKEOFF_FLAPS_2,\n            ],\n            nextListNames: [\n                ChecklistLists.CLIMB,\n            ],\n        },\n        {\n            listName: ChecklistLists.CLIMB,\n            items: [\n                ChecklistItems.C172_CLIMB_AIRSPEED,\n                ChecklistItems.C172_CLIMB_THROTTLE,\n                ChecklistItems.C172_CLIMB_MIXTURE_1,\n                ChecklistItems.C172_CLIMB_ENGINE_GAUGES,\n                ChecklistItems.C172_CLIMB_TAXI_LANDING_LIGHTS,\n                ChecklistItems.C172_CLIMB_MIXTURE_2,\n            ],\n            nextListNames: [\n                ChecklistLists.CRUISE,\n            ],\n        },\n        {\n            listName: ChecklistLists.CRUISE,\n            items: [\n                ChecklistItems.C172_CRUISE_POWER,\n                ChecklistItems.C172_CRUISE_ELEVATOR_TRIM,\n                ChecklistItems.C172_CRUISE_MIXTURE,\n                ChecklistItems.C172_CRUISE_ENGINE_GAUGES,\n                ChecklistItems.C172G1000_CRUISE_FMS_GPS,\n            ],\n            nextListNames: [\n                ChecklistLists.DESCENT,\n            ],\n        },\n        {\n            listName: ChecklistLists.DESCENT,\n            items: [\n                ChecklistItems.C172_DESCENT_POWER,\n                ChecklistItems.C172_DESCENT_MIXTURE,\n                ChecklistItems.C172G1000_DESCENT_ALTIMETER,\n                ChecklistItems.C172G1000_DESCENT_STANDBY_ALTIMETER,\n                ChecklistItems.C172G1000_DESCENT_ALTITUDE_SELECT,\n                ChecklistItems.C172G1000_DESCENT_CDI_NAV,\n                ChecklistItems.C172G1000_DESCENT_FMS_GPS,\n                ChecklistItems.C172_DESCENT_FUEL_SELECTOR,\n                ChecklistItems.C172_DESCENT_FLAPS,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_LANDING,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_LANDING,\n            items: [\n                ChecklistItems.C172_BEFORE_LANDING_SEATS_BACKS,\n                ChecklistItems.C172_BEFORE_LANDING_SEATS_BELTS,\n                ChecklistItems.C172_BEFORE_LANDING_FUEL_SELECTOR,\n                ChecklistItems.C172_BEFORE_LANDING_MIXTURE,\n                ChecklistItems.C172_BEFORE_LANDING_TAXI_LANDING_LIGHTS,\n                ChecklistItems.C172_BEFORE_LANDING_AUTOPILOT,\n                ChecklistItems.C172G1000_BEFORE_LANDING_CABIN_PWR,\n            ],\n            nextListNames: [\n                ChecklistLists.LANDING,\n            ],\n        },\n        {\n            listName: ChecklistLists.LANDING,\n            items: [\n                ChecklistItems.C172_LANDING_FLAPS,\n                ChecklistItems.C172_LANDING_AIRSPEED,\n                ChecklistItems.C172_LANDING_TOUCHDOWN,\n                ChecklistItems.C172_LANDING_LANDING_ROLL,\n                ChecklistItems.C172_LANDING_BRAKING,\n            ],\n            nextListNames: [\n                ChecklistLists.AFTER_LANDING,\n            ],\n        },\n        {\n            listName: ChecklistLists.AFTER_LANDING,\n            items: [\n                ChecklistItems.C172_AFTER_LANDING_FLAPS,\n                ChecklistItems.C172_AFTER_LANDING_LANDING_LIGHT,\n                ChecklistItems.C172_AFTER_LANDING_TAXI_LIGHT,\n                ChecklistItems.C172_AFTER_LANDING_STROBE_LIGHT,\n                ChecklistItems.C172_AFTER_LANDING_ELEVATOR_TRIM,\n                ChecklistItems.C172_AFTER_LANDING_TRANSPONDER,\n            ],\n            nextListNames: [\n                ChecklistLists.PARKING,\n            ],\n        },\n        {\n            listName: ChecklistLists.PARKING,\n            items: [\n                ChecklistItems.C172_PARKING_PARKING_BRAKE,\n                ChecklistItems.C172_PARKING_AVIONICS_SWITCHES,\n                ChecklistItems.C172_PARKING_ENGINE_IDLE,\n                ChecklistItems.C172_PARKING_MAGNETOS,\n                ChecklistItems.C172_PARKING_MIXTURE,\n            ],\n            nextListNames: [\n                ChecklistLists.SECURING,\n            ],\n        },\n        {\n            listName: ChecklistLists.SECURING,\n            items: [\n                ChecklistItems.C172_SECURING_IGNITION,\n                ChecklistItems.C172_SECURING_LANDING_LIGHT,\n                ChecklistItems.C172_SECURING_TAXI_LIGHT,\n                ChecklistItems.C172_SECURING_NAV_LIGHT,\n                ChecklistItems.C172G1000_SECURING_MASTER_SWITCHES,\n                ChecklistItems.C172G1000_SECURING_STANDBY_BATT,\n                ChecklistItems.C172_SECURING_FUEL_SELECTOR,\n            ],\n        },\n    ],\n};\n","import { Checklists } from 'lib/checklist/data/checklists';\nimport { ChecklistFilters } from 'lib/checklist/data/filters';\nimport { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistLists } from 'lib/checklist/data/lists';\n\nexport const C172SteamChecklistData = {\n    uid: Checklists.C172_STEAM,\n    title: 'Cessna 172 Skyhawk (Steam Gauges)',\n    selectableFilters: [],\n    defaultFilters: [\n        ChecklistFilters.EXCLUDE_ALL_BUT_OFFICIAL,\n    ],\n    lists: [\n        {\n            listName: ChecklistLists.PRE_FLIGHT,\n            items: [\n                ChecklistItems.C172_PREFLIGHT_AIRCRAFT_DOCUMENTS,\n                ChecklistItems.C172_PREFLIGHT_PARKING_BRAKE,\n                ChecklistItems.C172_PREFLIGHT_IGNITION,\n                ChecklistItems.C172_PREFLIGHT_AVIONICS_SWITCHES_OFF,\n                ChecklistItems.C172STEAM_PREFLIGHT_BATTERY_SWITCH_1,\n                ChecklistItems.C172_PREFLIGHT_FUEL_QUANTITY,\n                ChecklistItems.C172_PREFLIGHT_LOW_FUEL_ANNUNCIATORS,\n                ChecklistItems.C172STEAM_PREFLIGHT_AVIONICS_SWITCHES_1,\n                ChecklistItems.C172STEAM_PREFLIGHT_AVIONICS_COOLING_FAN,\n                ChecklistItems.C172STEAM_PREFLIGHT_AVIONICS_SWITCHES_2,\n                ChecklistItems.C172_PREFLIGHT_STATIC_PRESSURE_ALT_SOURCE_VALVE,\n                ChecklistItems.C172STEAM_PREFLIGHT_ANNUNCIATOR_PANEL,\n                ChecklistItems.C172_PREFLIGHT_FUEL_SELECTOR,\n                ChecklistItems.C172STEAM_PREFLIGHT_FUEL_SHUTOFF_VALVE,\n                ChecklistItems.C172STEAM_PREFLIGHT_FLAPS_DOWN,\n                ChecklistItems.C172_PREFLIGHT_PITOT_HEAT_ON,\n                ChecklistItems.C172_PREFLIGHT_PITOT_HEAT_OFF,\n                ChecklistItems.C172STEAM_PREFLIGHT_BATTERY_SWITCH_2,\n                ChecklistItems.C172STEAM_PREFLIGHT_ELEVATOR_TRIM,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_ENGINE_START,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_ENGINE_START,\n            items: [\n                ChecklistItems.C172_BEFORE_START_PREFLIGHT_INSPECTION,\n                ChecklistItems.C172_BEFORE_START_SEATS_BELTS,\n                ChecklistItems.C172_BEFORE_START_ELECTRICAL_EQUIPMENT,\n                ChecklistItems.C172_BEFORE_START_AVIONICS_SWITCHES,\n                ChecklistItems.C172_BEFORE_START_FUEL_SELECTOR,\n                ChecklistItems.C172_BEFORE_START_FUEL_SHUTOFF_VALVE,\n            ],\n            nextListNames: [\n                ChecklistLists.ENGINE_START,\n            ],\n        },\n        {\n            listName: ChecklistLists.ENGINE_START,\n            items: [\n                ChecklistItems.C172_ENGINE_START_THROTTLE,\n                ChecklistItems.C172_ENGINE_START_MIXTURE_1,\n                ChecklistItems.C172_ENGINE_START_PROPELLER_AREA,\n                ChecklistItems.C172STEAM_ENGINE_START_BATTERY_SWITCH,\n                ChecklistItems.C172_ENGINE_START_BEACON_LIGHT,\n                ChecklistItems.C172_ENGINE_START_MIXTURE_2,\n                ChecklistItems.C172_ENGINE_START_AUX_FUEL_PUMP,\n                ChecklistItems.C172_ENGINE_START_MIXTURE_3,\n                ChecklistItems.C172_ENGINE_START_FEET_BRAKES,\n                ChecklistItems.C172_ENGINE_START_IGNITION,\n                ChecklistItems.C172_ENGINE_START_MIXTURE_4,\n            ],\n            nextListNames: [\n                ChecklistLists.AFTER_ENGINE_START,\n            ],\n        },\n        {\n            listName: ChecklistLists.AFTER_ENGINE_START,\n            items: [\n                ChecklistItems.C172_AFTER_START_THROTTLE,\n                ChecklistItems.C172_AFTER_START_OIL_PRESSURE,\n                ChecklistItems.C172STEAM_AFTER_START_ALTERNATOR,\n                ChecklistItems.C172STEAM_AFTER_START_ALTERNATOR_INDICATOR,\n                ChecklistItems.C172STEAM_AFTER_START_ANMETER,\n                ChecklistItems.C172_AFTER_START_AVIONICS_SWITCHES,\n                ChecklistItems.C172STEAM_AFTER_START_RADIOS,\n                ChecklistItems.C172STEAM_AFTER_START_TRANSPONDER,\n                ChecklistItems.C172_AFTER_START_FLAPS,\n                ChecklistItems.C172STEAM_AFTER_START_HEADING_INDICATOR,\n                ChecklistItems.C172STEAM_AFTER_START_ALTIMETER,\n                ChecklistItems.C172STEAM_AFTER_START_ALTITUDE_INDICATOR,\n            ],\n            nextListNames: [\n                ChecklistLists.TAXI,\n            ],\n        },\n        {\n            listName: ChecklistLists.TAXI,\n            items: [\n                ChecklistItems.C172_TAXI_TAXI_LIGHT,\n                ChecklistItems.C172_TAXI_LANDING_LIGHT,\n                ChecklistItems.C172_TAXI_STROBE_LIGHT,\n                ChecklistItems.C172_TAXI_NAV_LIGHT,\n                ChecklistItems.C172_TAXI_PARKING_BRAKE,\n                ChecklistItems.C172_TAXI_BRAKES,\n                ChecklistItems.C172_TAXI_RUDDER,\n                ChecklistItems.C172STEAM_TAXI_TURN_COORDINATOR,\n                ChecklistItems.C172STEAM_TAXI_HEADING_INDICATOR,\n                ChecklistItems.C172STEAM_TAXI_COMPASS,\n            ],\n            nextListNames: [\n                ChecklistLists.RUN_UP,\n            ],\n        },\n        {\n            listName: ChecklistLists.RUN_UP,\n            items: [\n                ChecklistItems.C172_RUNUP_PARKING_BRAKE,\n                ChecklistItems.C172_RUNUP_SEATS_BACKS,\n                ChecklistItems.C172_RUNUP_SEATS_BELTS,\n                ChecklistItems.C172_RUNUP_FLIGHT_CONTROLS_1,\n                ChecklistItems.C172STEAM_RUNUP_FLIGHT_INSTRUMENTS,\n                ChecklistItems.C172_RUNUP_FUEL_QUANTITY,\n                ChecklistItems.C172_RUNUP_MIXTURE,\n                ChecklistItems.C172_RUNUP_FUEL_SELECTOR,\n                ChecklistItems.C172_RUNUP_AUTOPILOT,\n                ChecklistItems.C172_RUNUP_FLIGHT_CONTROLS_2,\n                ChecklistItems.C172STEAM_RUNUP_AUTOPILOT,\n                ChecklistItems.C172_RUNUP_THROTTLE_1,\n                ChecklistItems.C172_RUNUP_MAGNETOS_1,\n                ChecklistItems.C172_RUNUP_MAGNETOS_2,\n                ChecklistItems.C172_RUNUP_MAGNETOS_3,\n                ChecklistItems.C172_RUNUP_VACCUM_GAUGE,\n                ChecklistItems.C172STEAM_RUNUP_OIL_PRESSURE,\n                ChecklistItems.C172STEAM_RUNUP_OIL_TEMPERATURE,\n                ChecklistItems.C172STEAM_RUNUP_ANMETER,\n                ChecklistItems.C172STEAM_RUNUP_ANNUNCIATOR_PANEL,\n                ChecklistItems.C172_RUNUP_ENGINE_IDLE,\n                ChecklistItems.C172_RUNUP_THROTTLE_2,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_TAKEOFF,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_TAKEOFF,\n            items: [\n                ChecklistItems.C172STEAM_BEFORE_TAKEOFF_RADIOS,\n                ChecklistItems.C172STEAM_BEFORE_TAKEOFF_AVIONICS,\n                ChecklistItems.C172STEAM_BEFORE_TAKEOFF_NAV_GPS_SWITCH,\n                ChecklistItems.C172STEAM_BEFORE_TAKEOFF_TRANSPONDER,\n                ChecklistItems.C172STEAM_BEFORE_TAKEOFF_AUTOPILOT,\n                ChecklistItems.C172STEAM_BEFORE_TAKEOFF_ELEVATOR_TRIM,\n                ChecklistItems.C172_BEFORE_TAKEOFF_FLAPS,\n                ChecklistItems.C172_BEFORE_TAKEOFF_CABIN_WINDOWS,\n                ChecklistItems.C172_BEFORE_TAKEOFF_PARKING_BRAKE,\n            ],\n            nextListNames: [\n                ChecklistLists.TAKEOFF,\n            ],\n        },\n        {\n            listName: ChecklistLists.TAKEOFF,\n            items: [\n                ChecklistItems.C172_TAKEOFF_FLAPS_1,\n                ChecklistItems.C172_TAKEOFF_THROTTLE,\n                ChecklistItems.C172_TAKEOFF_MIXTURE,\n                ChecklistItems.C172STEAM_TAKEOFF_ANNUNCIATORS,\n                ChecklistItems.C172_TAKEOFF_AIRSPEED_INDICATOR,\n                ChecklistItems.C172_TAKEOFF_LIFT_NOSEWHEEL,\n                ChecklistItems.C172_TAKEOFF_INITIAL_CLIMB,\n                ChecklistItems.C172_TAKEOFF_FLAPS_2,\n            ],\n            nextListNames: [\n                ChecklistLists.CLIMB,\n            ],\n        },\n        {\n            listName: ChecklistLists.CLIMB,\n            items: [\n                ChecklistItems.C172_CLIMB_AIRSPEED,\n                ChecklistItems.C172_CLIMB_THROTTLE,\n                ChecklistItems.C172_CLIMB_MIXTURE_1,\n                ChecklistItems.C172_CLIMB_ENGINE_GAUGES,\n                ChecklistItems.C172_CLIMB_TAXI_LANDING_LIGHTS,\n                ChecklistItems.C172_CLIMB_MIXTURE_2,\n            ],\n            nextListNames: [\n                ChecklistLists.CRUISE,\n            ],\n        },\n        {\n            listName: ChecklistLists.CRUISE,\n            items: [\n                ChecklistItems.C172_CRUISE_POWER,\n                ChecklistItems.C172_CRUISE_ELEVATOR_TRIM,\n                ChecklistItems.C172_CRUISE_MIXTURE,\n                ChecklistItems.C172_CRUISE_ENGINE_GAUGES,\n                ChecklistItems.C172STEAM_CRUISE_FLIGHT_INSTRUMENTS,\n            ],\n            nextListNames: [\n                ChecklistLists.DESCENT,\n            ],\n        },\n        {\n            listName: ChecklistLists.DESCENT,\n            items: [\n                ChecklistItems.C172_DESCENT_POWER,\n                ChecklistItems.C172_DESCENT_MIXTURE,\n                ChecklistItems.C172STEAM_DESCENT_ALTIMETER,\n                ChecklistItems.C172STEAM_DESCENT_NAV_GPS,\n                ChecklistItems.C172_DESCENT_FUEL_SELECTOR,\n                ChecklistItems.C172_DESCENT_FLAPS,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_LANDING,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_LANDING,\n            items: [\n                ChecklistItems.C172_BEFORE_LANDING_SEATS_BACKS,\n                ChecklistItems.C172_BEFORE_LANDING_SEATS_BELTS,\n                ChecklistItems.C172_BEFORE_LANDING_FUEL_SELECTOR,\n                ChecklistItems.C172_BEFORE_LANDING_MIXTURE,\n                ChecklistItems.C172_BEFORE_LANDING_TAXI_LANDING_LIGHTS,\n                ChecklistItems.C172_BEFORE_LANDING_AUTOPILOT,\n            ],\n            nextListNames: [\n                ChecklistLists.LANDING,\n            ],\n        },\n        {\n            listName: ChecklistLists.LANDING,\n            items: [\n                ChecklistItems.C172_LANDING_FLAPS,\n                ChecklistItems.C172_LANDING_AIRSPEED,\n                ChecklistItems.C172_LANDING_TOUCHDOWN,\n                ChecklistItems.C172_LANDING_LANDING_ROLL,\n                ChecklistItems.C172_LANDING_BRAKING,\n            ],\n            nextListNames: [\n                ChecklistLists.AFTER_LANDING,\n            ],\n        },\n        {\n            listName: ChecklistLists.AFTER_LANDING,\n            items: [\n                ChecklistItems.C172_AFTER_LANDING_FLAPS,\n                ChecklistItems.C172_AFTER_LANDING_LANDING_LIGHT,\n                ChecklistItems.C172_AFTER_LANDING_TAXI_LIGHT,\n                ChecklistItems.C172_AFTER_LANDING_STROBE_LIGHT,\n                ChecklistItems.C172_AFTER_LANDING_ELEVATOR_TRIM,\n                ChecklistItems.C172_AFTER_LANDING_TRANSPONDER,\n            ],\n            nextListNames: [\n                ChecklistLists.PARKING,\n            ],\n        },\n        {\n            listName: ChecklistLists.PARKING,\n            items: [\n                ChecklistItems.C172_PARKING_PARKING_BRAKE,\n                ChecklistItems.C172STEAM_PARKING_TRANSPONDER,\n                ChecklistItems.C172_PARKING_AVIONICS_SWITCHES,\n                ChecklistItems.C172_PARKING_ENGINE_IDLE,\n                ChecklistItems.C172_PARKING_MAGNETOS,\n                ChecklistItems.C172_PARKING_MIXTURE,\n            ],\n            nextListNames: [\n                ChecklistLists.SECURING,\n            ],\n        },\n        {\n            listName: ChecklistLists.SECURING,\n            items: [\n                ChecklistItems.C172_SECURING_IGNITION,\n                ChecklistItems.C172_SECURING_LANDING_LIGHT,\n                ChecklistItems.C172_SECURING_TAXI_LIGHT,\n                ChecklistItems.C172_SECURING_NAV_LIGHT,\n                ChecklistItems.C172STEAM_SECURING_ALTERNATOR,\n                ChecklistItems.C172STEAM_SECURING_BATTERY,\n                ChecklistItems.C172_SECURING_FUEL_SELECTOR,\n            ],\n        },\n    ],\n};\n","import React from 'react';\n\nimport { LinkOutlined } from '@ant-design/icons';\nimport PropTypes from 'prop-types';\n\nexport const ExternalLink = ({ href, children, noIcon }) => (\n    <a href={href} target=\"_blank\" rel=\"noreferrer\">\n        {children}\n        {noIcon ? null : (\n            <>\n                {' '}\n                <LinkOutlined />\n            </>\n        )}\n    </a>\n);\n\nExternalLink.propTypes = {\n    href: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n    noIcon: PropTypes.bool,\n};\n\nExternalLink.defaultProps = {\n    noIcon: false,\n};\n","import React from 'react';\n\nimport { ExternalLink } from 'components/lib/ExternalLink';\nimport { Checklists } from 'lib/checklist/data/checklists';\nimport { ChecklistFilters } from 'lib/checklist/data/filters';\nimport { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistLists } from 'lib/checklist/data/lists';\n\nexport const CJ4ChecklistData = {\n    uid: Checklists.WORKINGTITLE_CJ4,\n    title: 'WorkingTitle CJ4',\n    description: (\n        <p>\n            This is an interactive checklist for the\n            {' '}\n            <ExternalLink href=\"https://www.workingtitle.aero/packages/cj4/\">WorkingTitle CJ4</ExternalLink>\n            {' '}\n            airplane in Microsoft Flight Simulator 2020. It is recommended to read the\n            {' '}\n            {/* eslint-disable-next-line max-len */}\n            <ExternalLink href=\"https://docs.google.com/document/d/1qzxPMTSQRkvau8QOi7xUqNvjx9rbww_qHlso5AT5OnI/edit\">Operator&apos;s Guide</ExternalLink>\n            {' '}\n            and at least understand the name of various cockpit elements in order to follow steps\n            of this checklist.\n        </p>\n    ),\n    selectableFilters: [\n        ChecklistFilters.INCLUDE_EXTENSIONS,\n        ChecklistFilters.INCLUDE_VATSIM_ITEMS,\n        ChecklistFilters.INCLUDE_SIMSETUP_ITEMS,\n    ],\n    defaultFilters: [\n        ChecklistFilters.EXCLUDE_ALL_BUT_OFFICIAL,\n    ],\n    lists: [\n        {\n            listName: ChecklistLists.PRE_FLIGHT,\n            items: [\n                ChecklistItems.VATSIM_METAR_ATIS_PRE_FLIGHT,\n                ChecklistItems.SIMSETUP_PLAN_FLIGHT,\n                ChecklistItems.VATSIM_FILE_FLIGHT_PLAN,\n                ChecklistItems.SIMSETUP_FLIGHT_TRACKING_START,\n                ChecklistItems.SIMSETUP_FLIGHT_RECORDING_START,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_ENGINE_START,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_ENGINE_START,\n            items: [\n                ChecklistItems.CJ4_BEFORE_START_BATTERY_SWITCH,\n                ChecklistItems.CJ4_BEFORE_START_EMERGENCY_LIGHTS_SWITCH,\n                ChecklistItems.CJ4_BEFORE_START_STANDBY_FLIGHT_DISPLAY_SWITCH,\n                ChecklistItems.CJ4_BEFORE_START_AVIONICS_SWITCH,\n                ChecklistItems.CJ4EXT_BEFORE_START_EXTERNAL_POWER,\n                ChecklistItems.VATSIM_REQUEST_INITIAL_CLEARANCE,\n                ChecklistItems.CJ4_BEFORE_START_PARKING_BRAKES,\n                ChecklistItems.CJ4_BEFORE_START_WHEEL_CHOCKS,\n                ChecklistItems.CJ4_BEFORE_START_CABIN_DOOR,\n                ChecklistItems.CJ4_BEFORE_START_PASSENGER_BRIEFING,\n                ChecklistItems.CJ4_BEFORE_START_PILOTS_SEATS_ADJUSTED,\n                ChecklistItems.CJ4_BEFORE_START_EXTERIOR_LIGHTS,\n                ChecklistItems.CJ4_BEFORE_START_EICAS,\n                ChecklistItems.CJ4_BEFORE_START_FMS,\n                ChecklistItems.CJ4_BEFORE_START_CLIMATE_CONTROL_SELECTOR,\n            ],\n            nextListNames: [\n                ChecklistLists.ENGINE_START,\n            ],\n        },\n        {\n            listName: ChecklistLists.ENGINE_START,\n            description: (\n                <>\n                    Engine Start procedure is described in detail in the\n                    {' '}\n                    {/* eslint-disable-next-line max-len */}\n                    <ExternalLink href=\"https://docs.google.com/document/d/1qzxPMTSQRkvau8QOi7xUqNvjx9rbww_qHlso5AT5OnI/edit#heading=h.180d15le0pjm\">WorkingTitle CJ4 Guide</ExternalLink>\n                    {' '}\n                    under NORMAL PROCEDURES &gt; ENGINE START.\n                </>\n            ),\n            items: [\n                ChecklistItems.CJ4_ENGINE_START_THROTTLES,\n                ChecklistItems.CJ4_ENGINE_START_STARTER_BUTTON_PUSH,\n                ChecklistItems.CJ4_ENGINE_START_RUNSTOP_BUTTON_TO_RUN,\n                ChecklistItems.CJ4_ENGINE_START_ITT_RISE,\n                ChecklistItems.CJ4_ENGINE_START_EICAS_CHECK,\n                ChecklistItems.CJ4_ENGINE_START_OPPOSITE_ENGINE_START,\n                ChecklistItems.CJ4_ENGINE_START_EXTERNAL_POWER_DISCONNECT,\n                ChecklistItems.CJ4_ENGINE_START_ELECTRICAL_SYSTEM_CHECK,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_TAXI,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_TAXI,\n            items: [\n                ChecklistItems.CJ4_BEFORE_TAXI_AVIONICS_SWITCH,\n                ChecklistItems.CJ4_BEFORE_TAXI_CLIMATE_CONTROL_SWITCH,\n                ChecklistItems.CJ4_BEFORE_TAXI_PASSENGER_LIGHTS_SAFETY,\n                ChecklistItems.CJ4_BEFORE_TAXI_TRIMS,\n                ChecklistItems.CJ4_BEFORE_TAXI_FLIGHT_CONTROLS_FREE,\n                ChecklistItems.CJ4_BEFORE_TAXI_SPEEDBRAKE_CHECK,\n                ChecklistItems.CJ4_BEFORE_TAXI_FLAPS,\n                ChecklistItems.CJ4_BEFORE_TAXI_HYDRAULIC_PRESSURE_CHECK,\n                ChecklistItems.CJ4_BEFORE_TAXI_ENGINE_ONLY_ANTI_ICE,\n                ChecklistItems.CJ4_BEFORE_TAXI_TAKEOFF_DATA,\n                ChecklistItems.CJ4_BEFORE_TAXI_AVIONICS_CHECK,\n                ChecklistItems.CJ4_BEFORE_TAXI_AUTOPILOT_CONNECT_DISCONNECT,\n                ChecklistItems.CJ4_BEFORE_TAXI_ALTIMETER_SET,\n                ChecklistItems.VATSIM_DEPARTURE_SETTINGS,\n                ChecklistItems.CJ4_BEFORE_TAXI_PRESSURIZATION_CHECK,\n                ChecklistItems.CJ4_BEFORE_TAXI_EICAS_CHECK,\n                ChecklistItems.CJ4_BEFORE_TAXI_AFT_DIVIDER_DOORS_OPEN,\n            ],\n            nextListNames: [\n                ChecklistLists.TAXI,\n            ],\n        },\n        {\n            listName: ChecklistLists.TAXI,\n            items: [\n                ChecklistItems.CJ4_TAXI_EXTERIOR_LIGHTS,\n                ChecklistItems.VATSIM_TAXI_CLEARANCE,\n                ChecklistItems.VATSIM_TAXI_MODE_CHARLIE,\n                ChecklistItems.CJ4_TAXI_BRAKES_APPLIED,\n                ChecklistItems.CJ4_TAXI_PARKING_BRAKE_RELEASED,\n                ChecklistItems.CJ4_TAXI_BRAKES_CHECK,\n                ChecklistItems.CJ4_TAXI_NOSE_WHEEL_STEERING_CHECK,\n                ChecklistItems.CJ4_TAXI_FLIGHT_INSTRUMENTS_CHECK,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_TAKEOFF,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_TAKEOFF,\n            items: [\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_ICE_PROTECTION_SYSTEM_CHECK,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_RUDDER_BIAS_SYSTEM_CHECK,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_SEATS_UPRIGHT,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_FLAPS_SET,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_SPEEDBRAKES_OFF,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_TRIMS_CHECK,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_CREW_BRIEFING,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_TCAS_TARA,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_RADAR_AS_REQUIRED,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_GA_BUTTON_PUSH,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_BATTERY_AMPS_CHECK,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_ICE_PROTECTION_SYSTEM_AS_REQUIRED,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_PITOT_STATIC_HEAT_BUTTONS,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_EICAS_CHECK,\n                ChecklistItems.CJ4_BEFORE_TAKEOFF_EXTERIOR_LIGHTS,\n                ChecklistItems.CJ4EXT_BEFORE_TAKEOFF_RUNWAY_HEADING,\n                ChecklistItems.VATSIM_TAKEOFF_CLEARANCE,\n            ],\n            nextListNames: [\n                ChecklistLists.TAKEOFF,\n            ],\n        },\n        {\n            listName: ChecklistLists.TAKEOFF,\n            items: [\n                ChecklistItems.CJ4_TAKEOFF_THROTTLES,\n                ChecklistItems.CJ4_TAKEOFF_N1_COMMAND_BUGS_GREEN,\n                ChecklistItems.CJ4_TAKEOFF_BRAKES_RELEASED,\n                ChecklistItems.CJ4_TAKEOFF_CONTROL_WHEEL_ROTATE_AT_VR,\n            ],\n            nextListNames: [\n                ChecklistLists.AFTER_TAKEOFF_CLIMB,\n            ],\n        },\n        {\n            listName: ChecklistLists.AFTER_TAKEOFF_CLIMB,\n            items: [\n                ChecklistItems.CJ4_AFTER_TAKEOFF_LANDING_GEAR_UP,\n                ChecklistItems.CJ4_AFTER_TAKEOFF_FLAPS_0,\n                ChecklistItems.CJ4_AFTER_TAKEOFF_THROTTLES_CLIMB,\n                ChecklistItems.CJ4_AFTER_TAKEOFF_YAW_DAMPER_ON,\n                ChecklistItems.CJ4_AFTER_TAKEOFF_AUTOPILOT_AS_REQUIRED,\n                ChecklistItems.CJ4_AFTER_TAKEOFF_ICE_PROTECTION_SYSTEM_CHECK,\n                ChecklistItems.CJ4_AFTER_TAKEOFF_PASSENGER_LIGHTS_AS_REQUIRED,\n                ChecklistItems.CJ4_AFTER_TAKEOFF_EXTERIOR_LIGHTS,\n                ChecklistItems.CJ4_AFTER_TAKEOFF_PRESSURIZATION_CHECK,\n                ChecklistItems.CJ4_AFTER_TAKEOFF_ALTIMETERS_SET,\n            ],\n            nextListNames: [\n                ChecklistLists.CRUISE,\n            ],\n        },\n        {\n            listName: ChecklistLists.CRUISE,\n            items: [\n                ChecklistItems.CJ4_CRUISE_THROTTLES,\n                ChecklistItems.CJ4_CRUISE_PRESSURIZATION,\n                ChecklistItems.CJ4_CRUISE_ICE_PROTECTION_SYSTEMS,\n                ChecklistItems.VATSIM_DESCENT_CLEARANCE,\n            ],\n            nextListNames: [\n                ChecklistLists.DESCENT,\n            ],\n        },\n        {\n            listName: ChecklistLists.DESCENT,\n            items: [\n                ChecklistItems.CJ4_DESCENT_PRESSURIZATION,\n                ChecklistItems.CJ4_DESCENT_ICE_PROTECTION_SYSTEMS,\n                ChecklistItems.CJ4_DESCENT_ALTIMETERS,\n                ChecklistItems.CJ4_DESCENT_EXTERIOR_LIGHTS,\n                ChecklistItems.CJ4EXT_DESCENT_INTERIOR_LIGHTS,\n                ChecklistItems.VATSIM_APPROACH_CLEARANCE,\n            ],\n            nextListNames: [\n                ChecklistLists.APPROACH,\n            ],\n        },\n        {\n            listName: ChecklistLists.APPROACH,\n            items: [\n                ChecklistItems.CJ4_APPROACH_LANDING_DATA,\n                ChecklistItems.CJ4_APPROACH_CREW_BRIEFING,\n                ChecklistItems.CJ4_APPROACH_AVIONICS_FLIGHT_INSTRUMENTS,\n                ChecklistItems.CJ4_APPROACH_MINIMUMS,\n                ChecklistItems.CJ4_APPROACH_FUEL_TRANSFER_SELECTOR,\n                ChecklistItems.CJ4_APPROACH_EXTERIOR_LIGHTS,\n                ChecklistItems.CJ4_APPROACH_ICE_PROTECTION_SYSTEMS,\n                ChecklistItems.CJ4_APPROACH_FLAPS,\n                ChecklistItems.CJ4_APPROACH_PASSENGER_BRIEFING,\n                ChecklistItems.CJ4_APPROACH_SEATS_UPRIGHT,\n                ChecklistItems.CJ4_APPROACH_SEAT_BELTS,\n                ChecklistItems.CJ4_APPROACH_PASSENGER_LIGHTS,\n                ChecklistItems.CJ4_APPROACH_PRESSURIZATION,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_LANDING,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_LANDING,\n            items: [\n                ChecklistItems.CJ4_BEFORE_LANDING_LANDING_GEAR,\n                ChecklistItems.CJ4_BEFORE_LANDING_FLAPS,\n                ChecklistItems.CJ4_BEFORE_LANDING_SPEEDBRAKES_OFF,\n                ChecklistItems.CJ4_BEFORE_LANDING_AIRSPEED_VREF,\n                ChecklistItems.VATSIM_LANDING_CLEARANCE,\n                ChecklistItems.CJ4_BEFORE_LANDING_AUTOPILOT_AND_YAW_DAMPER,\n            ],\n            nextListNames: [\n                ChecklistLists.LANDING,\n            ],\n        },\n        {\n            listName: ChecklistLists.LANDING,\n            items: [\n                ChecklistItems.CJ4_LANDING_THROTTLES,\n                ChecklistItems.CJ4_LANDING_BRAKES,\n                ChecklistItems.CJ4_LANDING_GROUND_SPOILERS,\n            ],\n            nextListNames: [\n                ChecklistLists.ALL_ENGINES_GO_AROUND,\n                ChecklistLists.AFTER_LANDING,\n            ],\n        },\n        {\n            listName: ChecklistLists.ALL_ENGINES_GO_AROUND,\n            items: [\n                ChecklistItems.CJ4_GOAROUND_GA_BUTTON,\n                ChecklistItems.CJ4_GOAROUND_THROTTLES_1,\n                ChecklistItems.CJ4_GOAROUND_PITCH_ATTITUDE,\n                ChecklistItems.CJ4_GOAROUND_FLAPS_1,\n                ChecklistItems.CJ4_GOAROUND_LANDING_GEAR,\n                ChecklistItems.VATSIM_GOAROUND_ANNOUNCE,\n                ChecklistItems.CJ4_GOAROUND_FLAPS_2,\n                ChecklistItems.CJ4_GOAROUND_AIRSPEED,\n                ChecklistItems.CJ4_GOAROUND_THROTTLES_2,\n                ChecklistItems.CJ4_GOAROUND_YAW_DAMPER,\n                ChecklistItems.CJ4_GOAROUND_AUTOPILOT,\n            ],\n            nextListNames: [\n                ChecklistLists.APPROACH,\n            ],\n        },\n        {\n            listName: ChecklistLists.AFTER_LANDING,\n            items: [\n                ChecklistItems.CJ4_AFTER_LANDING_SPEEDBRAKES,\n                ChecklistItems.CJ4_AFTER_LANDING_FLAPS,\n                ChecklistItems.VATSIM_LANDING_CLEAR_OF_RUNWAY,\n                ChecklistItems.CJ4_AFTER_LANDING_PITOT_STATIC_HEAT,\n                ChecklistItems.CJ4_AFTER_LANDING_ICE_PROTECTION_SYSTEMS,\n                ChecklistItems.CJ4_AFTER_LANDING_RADAR,\n                ChecklistItems.CJ4_AFTER_LANDING_EXTERIOR_LIGHTS,\n            ],\n            nextListNames: [\n                ChecklistLists.SHUTDOWN,\n            ],\n        },\n        {\n            listName: ChecklistLists.SHUTDOWN,\n            items: [\n                ChecklistItems.CJ4_SHUTDOWN_PARKING_BRAKE,\n                ChecklistItems.VATSIM_DISCONNECT_GOODBYE,\n                ChecklistItems.CJ4_SHUTDOWN_EMERGENCY_LIGHTS,\n                ChecklistItems.CJ4_SHUTDOWN_STANDBY_FLIGHT_DISPLAY,\n                ChecklistItems.CJ4_SHUTDOWN_AVIONICS_SWITCH,\n                ChecklistItems.CJ4_SHUTDOWN_CLIMATE_CONTROL_SELECTOR,\n                ChecklistItems.CJ4_SHUTDOWN_ICE_PROTECTION_SYSTEMS,\n                ChecklistItems.CJ4_SHUTDOWN_THROTTLES,\n                ChecklistItems.CJ4_SHUTDOWN_ENGINE_RUNSTOP_BUTTONS,\n                ChecklistItems.CJ4_SHUTDOWN_EXTERIOR_LIGHTS,\n                ChecklistItems.CJ4_SHUTDOWN_BATTERY_SWITCH,\n                ChecklistItems.CJ4_SHUTDOWN_CONTROL_LOCK,\n                ChecklistItems.CJ4_SHUTDOWN_ENGINE_COVERS,\n            ],\n            nextListNames: [\n                ChecklistLists.POST_FLIGHT,\n            ],\n        },\n        {\n            listName: ChecklistLists.POST_FLIGHT,\n            items: [\n                ChecklistItems.SIMSETUP_FLIGHT_RECORDING_END,\n                ChecklistItems.SIMSETUP_FLIGHT_TRACKING_END,\n                ChecklistItems.SIMSETUP_POST_FLIGHT_NOTES,\n            ],\n        },\n    ],\n};\n","import React from 'react';\n\nimport { ExternalLink } from 'components/lib/ExternalLink';\nimport { Checklists } from 'lib/checklist/data/checklists';\nimport { ChecklistFilters } from 'lib/checklist/data/filters';\nimport { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistLists } from 'lib/checklist/data/lists';\n\nexport const CRJChecklistData = {\n    uid: Checklists.AEROSOFT_CRJ,\n    title: 'Aerosoft CRJ 550/700/900/1000',\n    description: (\n        <p>\n            The Aerosoft CRJ 550/700/900/1000 is a payware aircraft for Microsoft Flight Simulator which can be bought\n            {' '}\n            <ExternalLink href=\"https://www.aerosoft.com/en/microsoft-flight-simulator/msfs-aircraft/\">\n                on Aerosoft&apos;s official website\n            </ExternalLink>\n            {' '}\n            (available in various bundles). This checklist is a summary inspired by the official checklist and the\n            {' '}\n            <strong>must do</strong>\n            {' '}\n            tutorial released with the aircraft.\n        </p>\n    ),\n    selectableFilters: [\n        ChecklistFilters.EXCLUDE_EXTENSIONS,\n        ChecklistFilters.EXCLUDE_FIRST_FLIGHT_OF_DAY,\n    ],\n    defaultFilters: [\n        ChecklistFilters.INCLUDE_EXTENSIONS,\n        ChecklistFilters.EXCLUDE_ALL_BUT_OFFICIAL,\n    ],\n    lists: [\n        {\n            listName: ChecklistLists.PRE_FLIGHT,\n            items: [\n                ChecklistItems.CRJEXT_PRE_FLIGHT_AIRCRAFT_EFB_SETUP,\n            ],\n            nextListNames: [\n                ChecklistLists.SAFETY,\n            ],\n        },\n        {\n            listName: ChecklistLists.SAFETY,\n            items: [\n                ChecklistItems.CRJ_SAFETY_CHECK_CIRCUIT_BREAKERS,\n                ChecklistItems.CRJ_SAFETY_CHECK_NOSEWHEEL,\n                ChecklistItems.CRJ_SAFETY_CHECK_HYDRAULIC_PUMPS_1,\n                ChecklistItems.CRJ_SAFETY_CHECK_LANDING_GEAR,\n                ChecklistItems.CRJ_SAFETY_CHECK_FLIGHT_SPOILER_LEVER,\n                ChecklistItems.CRJ_SAFETY_CHECK_SLATS_FLAPS_LEVER,\n                ChecklistItems.CRJ_SAFETY_CHECK_RADAR,\n                ChecklistItems.CRJ_SAFETY_CHECK_ADG_MANUAL_RELEASE,\n                ChecklistItems.CRJ_SAFETY_CHECK_EMERGENCY_FLAP_SWITCH,\n                ChecklistItems.CRJ_SAFETY_CHECK_BATTERY_MASTER_SWITCH,\n                ChecklistItems.CRJ_SAFETY_CHECK_APU,\n                ChecklistItems.CRJ_SAFETY_CHECK_AC_ELECTRICS,\n                ChecklistItems.CRJ_SAFETY_CHECK_IRS,\n                ChecklistItems.CRJ_SAFETY_CHECK_EMERGENCY_EQUIPMENT,\n                ChecklistItems.CRJ_SAFETY_CHECK_GEAR_SAFETY_PINS,\n                ChecklistItems.CRJ_SAFETY_CHECK_AIRPLANE_DOCUMENTS,\n                ChecklistItems.CRJ_SAFETY_CHECK_HYDRAULIC_PUMPS_2,\n                ChecklistItems.CRJ_SAFETY_CHECK_FMS_INITIALIZATION,\n            ],\n            nextListNames: [\n                ChecklistLists.CABIN_INSPECTION,\n            ],\n        },\n        {\n            listName: ChecklistLists.CABIN_INSPECTION,\n            items: [\n                ChecklistItems.CRJ_CABIN_INSPECTION_CABIN_INSPECTION,\n                ChecklistItems.CRJ_CABIN_INSPECTION_WALKAROUND_INSPECTION,\n            ],\n            nextListNames: [\n                ChecklistLists.ORIGINATING,\n            ],\n        },\n        {\n            listName: ChecklistLists.ORIGINATING,\n            items: [\n                ChecklistItems.CRJ_ORIGINATING_CHECK_CREW_OXYGEN,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_AUDIO_WARNING_PANEL,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_ELECTRICAL_POWER_PANEL,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_FIRE_DETECTION,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_EXTERNAL_LIGHTS_PANEL,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_FUEL_PANEL,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_BLEED_AIR_PANEL,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_APU_PANEL,\n                ChecklistItems.CRJEXT_ORIGINATING_CHECK_FMS_INIT_REMINDER,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_START_PANEL,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_HYDRAULIC_PANEL,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_ELT_SWITCH,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_CABIN_PRESSURE_PANEL,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_AIR_CONDITIONING_PANEL,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_ANTIICE_PANEL,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_WINDSHIELD_HEAT,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_EMERGENCY_LIGHTS,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_STANDBY_COMPASS,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_STALL_TEST,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_NOSEWHEEL,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_CLOCKS,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_EFIS_CONTROL_PANELS,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_INSTRUMENT_PANELS,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_EICAS_AND_STDBY,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_UPPER_PEDESTAL,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_THRUST_LEVER_QUADRANT,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_AVIONICS,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_TRIMS,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_YAW_DAMPER,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_SOURCE_SELECT_PANEL,\n                ChecklistItems.CRJ_ORIGINATING_CHECK_LOWER_PEDESTAL,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_ENGINE_START,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_ENGINE_START,\n            items: [\n                ChecklistItems.CRJ_BEFORE_START_CHECK_PASS_SIGNS,\n                ChecklistItems.CRJ_BEFORE_START_CHECK_LANDING_ELEVATION,\n                ChecklistItems.CRJ_BEFORE_START_CHECK_BOOST_PUMPS,\n                ChecklistItems.CRJ_BEFORE_START_CHECK_ALTIMETERS,\n                ChecklistItems.CRJ_BEFORE_START_CHECK_FMS,\n                ChecklistItems.CRJ_BEFORE_START_CHECK_IRS,\n                ChecklistItems.CRJ_BEFORE_START_CHECK_RADIOS,\n                ChecklistItems.CRJ_BEFORE_START_CHECK_TAKEOFF_DATA,\n                ChecklistItems.CRJ_BEFORE_START_CHECK_TAKEOFF_BRIEFING,\n                ChecklistItems.CRJEXT_BEFORE_START_CHECK_DOORS_CHOCKS,\n            ],\n            nextListNames: [\n                ChecklistLists.ENGINE_START,\n            ],\n        },\n        {\n            listName: ChecklistLists.ENGINE_START,\n            items: [\n                ChecklistItems.CRJ_CLEARED_TO_START_CHECK_PERSONAL_ELECTRONIC_DEVICES,\n                ChecklistItems.CRJ_CLEARED_TO_START_CHECK_APU,\n                ChecklistItems.CRJ_CLEARED_TO_START_CHECK_ELECTRICS,\n                ChecklistItems.CRJ_CLEARED_TO_START_CHECK_DOORS,\n                ChecklistItems.CRJ_CLEARED_TO_START_CHECK_BEACON,\n                ChecklistItems.CRJ_CLEARED_TO_START_CHECK_FUEL_PUMPS,\n                ChecklistItems.CRJ_CLEARED_TO_START_CHECK_HYDRAULIC_PUMPS,\n                ChecklistItems.CRJ_CLEARED_TO_START_CHECK_PARKING_BRAKE,\n                ChecklistItems.CRJ_CLEARED_TO_START_ENGINE_START,\n            ],\n            nextListNames: [\n                ChecklistLists.AFTER_ENGINE_START,\n            ],\n        },\n        {\n            listName: ChecklistLists.AFTER_ENGINE_START,\n            items: [\n                ChecklistItems.CRJ_AFTER_START_CHECK_GENERATORS,\n                ChecklistItems.CRJ_AFTER_START_CHECK_BLEED_VALVES,\n                ChecklistItems.CRJ_AFTER_START_CHECK_PACKS,\n                ChecklistItems.CRJ_AFTER_START_CHECK_SYNOPTIC_PAGES,\n                ChecklistItems.CRJ_AFTER_START_CHECK_APU,\n                ChecklistItems.CRJ_AFTER_START_CHECK_ANTIICE_PROBES,\n                ChecklistItems.CRJ_AFTER_START_CHECK_ANTIICE,\n                ChecklistItems.CRJ_AFTER_START_CHECK_NOSEWHEEL,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_TAXI,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_TAXI,\n            items: [\n                ChecklistItems.CRJ_TAXI_CHECK_SLATS_FLAPS,\n                ChecklistItems.CRJ_TAXI_CHECK_FLIGHT_CONTROLS,\n                ChecklistItems.CRJ_TAXI_CHECK_TRIMS,\n                ChecklistItems.CRJ_TAXI_CHECK_THRUST_REVERSERS,\n                ChecklistItems.CRJ_TAXI_CHECK_EXTERNAL_LIGHTS,\n                ChecklistItems.CRJ_TAXI_CHECK_FLIGHT_INSTRUMENTS,\n                ChecklistItems.CRJ_TAXI_CHECK_BRAKE_TEMPS,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_TAKEOFF,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_TAKEOFF,\n            items: [\n                ChecklistItems.CRJ_BEFORE_TAKEOFF_CHECK_EXTERNAL_LIGHTS,\n                ChecklistItems.CRJ_BEFORE_TAKEOFF_CHECK_FUEL_XFLOW,\n                ChecklistItems.CRJ_BEFORE_TAKEOFF_CHECK_FLIGHT_ATTENDANT,\n                ChecklistItems.CRJ_BEFORE_TAKEOFF_CHECK_TRANSPONDER,\n                ChecklistItems.CRJ_BEFORE_TAKEOFF_CHECK_RADAR,\n                ChecklistItems.CRJ_BEFORE_TAKEOFF_CHECK_CAS,\n            ],\n            nextListNames: [\n                ChecklistLists.CLIMB,\n            ],\n        },\n        {\n            listName: ChecklistLists.CLIMB,\n            items: [\n                ChecklistItems.CRJ_CLIMB_CHECK_FUEL_XFLOW,\n                ChecklistItems.CRJ_CLIMB_CHECK_BLEEDS_AND_APU,\n                ChecklistItems.CRJ_CLIMB_CHECK_THRUST_REVERSERS,\n                ChecklistItems.CRJ_CLIMB_CHECK_CAS,\n            ],\n            nextListNames: [\n                ChecklistLists.DESCENT,\n            ],\n        },\n        {\n            listName: ChecklistLists.DESCENT,\n            items: [\n                ChecklistItems.CRJ_DESCENT_CHECK_LANDING_ELEVATION,\n                ChecklistItems.CRJ_DESCENT_CHECK_FUEL,\n                ChecklistItems.CRJ_DESCENT_CHECK_TCAS,\n                ChecklistItems.CRJ_DESCENT_CHECK_RADAR,\n                ChecklistItems.CRJ_DESCENT_CHECK_CAS,\n                ChecklistItems.CRJ_DESCENT_CHECK_LANDING_DATA,\n                ChecklistItems.CRJ_DESCENT_CHECK_APPROACH_BRIEFING,\n            ],\n            nextListNames: [\n                ChecklistLists.BEFORE_LANDING,\n            ],\n        },\n        {\n            listName: ChecklistLists.BEFORE_LANDING,\n            items: [\n                ChecklistItems.CRJ_BEFORE_LANDING_CHECK_FLIGHT_ATTENDANT,\n                ChecklistItems.CRJ_BEFORE_LANDING_CHECK_PASSENGER_SIGNS,\n                ChecklistItems.CRJ_BEFORE_LANDING_CHECK_THRUST_REVERSERS,\n                ChecklistItems.CRJ_BEFORE_LANDING_CHECK_LANDING_GEAR,\n                ChecklistItems.CRJ_BEFORE_LANDING_CHECK_FLAPS,\n            ],\n            nextListNames: [\n                ChecklistLists.AFTER_LANDING,\n            ],\n        },\n        {\n            listName: ChecklistLists.AFTER_LANDING,\n            items: [\n                ChecklistItems.CRJ_AFTER_LANDING_CHECK_APU,\n                ChecklistItems.CRJ_AFTER_LANDING_CHECK_TRANSPONDER_RADAR,\n                ChecklistItems.CRJ_AFTER_LANDING_CHECK_FLAPS,\n                ChecklistItems.CRJ_AFTER_LANDING_CHECK_EXTERNAL_LIGHTS,\n                ChecklistItems.CRJ_AFTER_LANDING_CHECK_PROBES,\n            ],\n            nextListNames: [\n                ChecklistLists.SHUTDOWN,\n            ],\n        },\n        {\n            listName: ChecklistLists.SHUTDOWN,\n            items: [\n                ChecklistItems.CRJ_SHUTDOWN_CHECK_PARKING_BRAKE,\n                ChecklistItems.CRJ_SHUTDOWN_CHECK_SEAT_BELTS,\n                ChecklistItems.CRJ_SHUTDOWN_CHECK_THRUST_LEVERS,\n                ChecklistItems.CRJ_SHUTDOWN_CHECK_ANTIICE,\n                ChecklistItems.CRJ_SHUTDOWN_CHECK_FUEL_PUMPS,\n                ChecklistItems.CRJ_SHUTDOWN_CHECK_BEACON,\n                ChecklistItems.CRJ_SHUTDOWN_CHECK_NOSEWHEEL,\n            ],\n            nextListNames: [\n                ChecklistLists.TERMINATING,\n            ],\n        },\n        {\n            listName: ChecklistLists.TERMINATING,\n            items: [\n                ChecklistItems.CRJ_TERMINATING_CHECK_CHOCKS_AND_BRAKES,\n                ChecklistItems.CRJ_TERMINATING_CHECK_IRS,\n                ChecklistItems.CRJ_TERMINATING_CHECK_EMERGENCY_LIGHTS,\n                ChecklistItems.CRJ_TERMINATING_CHECK_ANTIICE,\n                ChecklistItems.CRJ_TERMINATING_CHECK_HYDRAULIC_PUMPS,\n                ChecklistItems.CRJ_TERMINATING_CHECK_EXTERNAL_LIGHTS,\n                ChecklistItems.CRJ_TERMINATING_CHECK_APU,\n                ChecklistItems.CRJ_TERMINATING_CHECK_BATTERY_MASTER,\n                ChecklistItems.CRJ_TERMINATING_CHECK_COCKPIT_LIGHTS,\n            ],\n        },\n    ],\n};\n","import { C172G1000ChecklistData } from 'lib/checklist/data/checklistsData/c172g1000';\nimport { C172SteamChecklistData } from 'lib/checklist/data/checklistsData/c172steam';\nimport { CJ4ChecklistData } from 'lib/checklist/data/checklistsData/cj4';\nimport { CRJChecklistData } from 'lib/checklist/data/checklistsData/crj';\nimport { createTransformedMapping } from 'lib/checklist/data/transforms';\n\nexport const ChecklistsData = createTransformedMapping()([\n    CJ4ChecklistData,\n    C172SteamChecklistData,\n    C172G1000ChecklistData,\n    CRJChecklistData,\n]);\n","export const ChecklistFiltersResults = Object.freeze({\n    INCLUDE: 'include',\n    EXCLUDE: 'exclude',\n    PASS: 'pass',\n});\n","import React from 'react';\n\nimport { ChecklistFilters } from 'lib/checklist/data/filters';\nimport { ChecklistFiltersResults } from 'lib/checklist/data/filtersResults';\nimport { ChecklistTags } from 'lib/checklist/data/tags';\nimport { createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst commonFiltersData = createTransformedMapping()([\n    {\n        uid: ChecklistFilters.EXCLUDE_ALL_BUT_OFFICIAL,\n        title: 'Official Only',\n        description: (\n            <>\n                Exclude all items but official checklist items for this aircraft.\n            </>\n        ),\n        terminal: true,\n        fn: (item) => {\n            if (item.tagsSet.has(ChecklistTags.OFFICIAL)) {\n                return ChecklistFiltersResults.INCLUDE;\n            }\n            return ChecklistFiltersResults.EXCLUDE;\n        },\n    },\n    {\n        uid: ChecklistFilters.INCLUDE_VATSIM_ITEMS,\n        title: 'VATSIM',\n        description: (\n            <>\n                Include checklist items for VATSIM in relevant places. Note that this\n                only currently includes items that should happen on all flights, and\n                you should follow correct procedure depending on controller instructions.\n            </>\n        ),\n        fn: (item) => {\n            if (item.tagsSet.has(ChecklistTags.VATSIM)) {\n                return ChecklistFiltersResults.INCLUDE;\n            }\n            return ChecklistFiltersResults.PASS;\n        },\n    },\n    {\n        uid: ChecklistFilters.INCLUDE_EXTENSIONS,\n        title: 'Extensions',\n        description: (\n            <>\n                Include checklist items extending the official checklist for\n                things not addressed by the official checklist.\n            </>\n        ),\n        fn: (item) => {\n            if (item.tagsSet.has(ChecklistTags.EXTENSION)) {\n                return ChecklistFiltersResults.INCLUDE;\n            }\n            return ChecklistFiltersResults.PASS;\n        },\n    },\n    {\n        uid: ChecklistFilters.EXCLUDE_EXTENSIONS,\n        title: 'Extensions',\n        description: (\n            <>\n                Exclude checklist items extending the official checklist.\n            </>\n        ),\n        fn: (item) => {\n            if (item.tagsSet.has(ChecklistTags.EXTENSION)) {\n                return ChecklistFiltersResults.EXCLUDE;\n            }\n            return ChecklistFiltersResults.PASS;\n        },\n    },\n    {\n        uid: ChecklistFilters.INCLUDE_SIMSETUP_ITEMS,\n        title: 'Simulator Setup',\n        description: (\n            <>\n                Include checklist items related to setting up the simulator before\n                and after flight.\n            </>\n        ),\n        fn: (item) => {\n            if (item.tagsSet.has(ChecklistTags.SIMSETUP)) {\n                return ChecklistFiltersResults.INCLUDE;\n            }\n            return ChecklistFiltersResults.PASS;\n        },\n    },\n    {\n        uid: ChecklistFilters.EXCLUDE_FIRST_FLIGHT_OF_DAY,\n        title: 'First Flight of Day',\n        description: (\n            <>\n                Exclude checklist item relevant only for the first flight of the day.\n            </>\n        ),\n        fn: (item) => {\n            if (item.tagsSet.has(ChecklistTags.FIRST_FLIGHT_OF_DAY)) {\n                return ChecklistFiltersResults.EXCLUDE;\n            }\n            return ChecklistFiltersResults.PASS;\n        },\n    },\n]);\n\nexport const ChecklistFiltersData = Object.freeze({\n    ...commonFiltersData,\n});\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { styled } from 'styletron-react';\n\nimport { pick } from 'lib/pick';\n\nconst levelToColorsMapping = {\n    critical: '#ff3e3e',\n    warning: '#f5cd37',\n    info: '#2bc52d',\n    data: '#98f0ff',\n};\n\nconst CASMessageContainer = styled('span', (props) => ({\n    backgroundColor: '#1f1f1f',\n    fontFamily: 'Monaco',\n    color: pick(levelToColorsMapping[props.$level], '#fff'),\n    padding: '2px 5px',\n    fontSize: '.9em',\n    whiteSpace: 'nowrap',\n    borderRadius: '2px',\n}));\n\nexport const CASMessage = ({ children, level }) => (\n    <CASMessageContainer $level={level}>\n        {children}\n    </CASMessageContainer>\n);\n\nCASMessage.propTypes = {\n    level: PropTypes.oneOf(['critical', 'warning', 'info', 'data']),\n    children: PropTypes.node,\n};\n\nCASMessage.defaultProps = {\n    level: null,\n    children: null,\n};\n","import React from 'react';\n\nimport { CASMessage } from 'components/lib/CASMessage';\nimport { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistTags } from 'lib/checklist/data/tags';\nimport { createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst addC172Tags = (value) => ({\n    ...value,\n    tags: [...value.tags, ChecklistTags.OFFICIAL, ChecklistTags.C172],\n});\n\nexport const C172ChecklistItemsData = createTransformedMapping(addC172Tags)([\n    {\n        uid: ChecklistItems.C172_PREFLIGHT_AIRCRAFT_DOCUMENTS,\n        title: 'Aircraft Documents',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172_PREFLIGHT_PARKING_BRAKE,\n        title: 'Parking Brake',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172_PREFLIGHT_IGNITION,\n        title: 'Ignition',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172_PREFLIGHT_AVIONICS_SWITCHES_OFF,\n        title: 'Avionics Switches (BUS 1 and BUS 2)',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172_PREFLIGHT_FUEL_QUANTITY,\n        title: 'Fuel Quantity Indicators',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172_PREFLIGHT_LOW_FUEL_ANNUNCIATORS,\n        title: <>Low Fuel Annunciators</>,\n        state: 'OFF',\n        moreInfoShort: (\n            <>\n                Check that neither\n                {' '}\n                <CASMessage level=\"warning\">LOW FUEL L</CASMessage>\n                {' '}\n                or\n                {' '}\n                <CASMessage level=\"warning\">LOW FUEL R</CASMessage>\n                {' '}\n                annunciators are displayed in the CAS messages.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.C172_PREFLIGHT_STATIC_PRESSURE_ALT_SOURCE_VALVE,\n        title: 'Static Pressure Alt Source Valve',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172_PREFLIGHT_PITOT_HEAT_ON,\n        title: 'Pitot Heat',\n        state: 'ON, CHECK WORKING',\n    },\n    {\n        uid: ChecklistItems.C172_PREFLIGHT_PITOT_HEAT_OFF,\n        title: 'Pitot Heat',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172_PREFLIGHT_FUEL_SELECTOR,\n        title: 'Fuel Selector',\n        state: 'BOTH',\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_START_PREFLIGHT_INSPECTION,\n        title: 'Preflight Inspection',\n        state: 'COMPLETE',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_START_SEATS_BELTS,\n        title: 'Seats, Belts',\n        state: 'ADJUST AND LOCK',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_START_ELECTRICAL_EQUIPMENT,\n        title: 'Electrical Equipment',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_START_AVIONICS_SWITCHES,\n        title: 'Avionics Switches (BUS 1 and BUS 2)',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_START_FUEL_SELECTOR,\n        title: 'Fuel Selector',\n        state: 'BOTH',\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_START_FUEL_SHUTOFF_VALVE,\n        title: 'Fuel Shutoff Valve',\n        state: 'OPEN',\n    },\n    {\n        uid: ChecklistItems.C172_ENGINE_START_THROTTLE,\n        title: 'Throttle',\n        state: 'OPEN 1/4 INCH',\n    },\n    {\n        uid: ChecklistItems.C172_ENGINE_START_MIXTURE_1,\n        title: 'Mixture',\n        state: 'IDLE CUTOFF',\n    },\n    {\n        uid: ChecklistItems.C172_ENGINE_START_PROPELLER_AREA,\n        title: 'Propeller Area',\n        state: 'CLEAR',\n    },\n    {\n        uid: ChecklistItems.C172_ENGINE_START_BEACON_LIGHT,\n        title: 'Beacon Light',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172_ENGINE_START_MIXTURE_2,\n        title: 'Mixture',\n        state: 'RICH',\n    },\n    {\n        uid: ChecklistItems.C172_ENGINE_START_AUX_FUEL_PUMP,\n        title: 'AUX Fuel Pump',\n        state: 'ON 3-5 SECONDS, THEN OFF',\n    },\n    {\n        uid: ChecklistItems.C172_ENGINE_START_MIXTURE_3,\n        title: 'Mixture',\n        state: 'LEAN',\n    },\n    {\n        uid: ChecklistItems.C172_ENGINE_START_FEET_BRAKES,\n        title: 'Feet',\n        state: 'READY TO BRAKE',\n    },\n    {\n        uid: ChecklistItems.C172_ENGINE_START_IGNITION,\n        title: 'Ignition',\n        state: 'START',\n    },\n    {\n        uid: ChecklistItems.C172_ENGINE_START_MIXTURE_4,\n        title: 'Mixture',\n        state: 'RICH WHEN ENGINE STARTS',\n    },\n    {\n        uid: ChecklistItems.C172_AFTER_START_THROTTLE,\n        title: 'Throttle',\n        state: 'ADJUST 1000 RPM',\n    },\n    {\n        uid: ChecklistItems.C172_AFTER_START_OIL_PRESSURE,\n        title: 'Oil Pressure',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172_AFTER_START_AVIONICS_SWITCHES,\n        title: 'Avionics Switches (BUS 1 and BUS 2)',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172_AFTER_START_FLAPS,\n        title: 'Flaps',\n        state: 'UP',\n    },\n    {\n        uid: ChecklistItems.C172_TAXI_TAXI_LIGHT,\n        title: 'Taxi Light',\n        state: 'AS REQUIRED',\n    },\n    {\n        uid: ChecklistItems.C172_TAXI_LANDING_LIGHT,\n        title: 'Landing Light',\n        state: 'AS REQUIRED',\n    },\n    {\n        uid: ChecklistItems.C172_TAXI_STROBE_LIGHT,\n        title: 'Strobe Light',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172_TAXI_NAV_LIGHT,\n        title: 'Navigation Lights',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172_TAXI_PARKING_BRAKE,\n        title: 'Parking Brake',\n        state: 'RELEASE',\n    },\n    {\n        uid: ChecklistItems.C172_TAXI_BRAKES,\n        title: 'Brakes',\n        state: 'TEST',\n    },\n    {\n        uid: ChecklistItems.C172_TAXI_RUDDER,\n        title: 'Rudder',\n        state: 'TEST',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_PARKING_BRAKE,\n        title: 'Parking Brake',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_SEATS_BACKS,\n        title: 'Pilot and Passenger Seat Backs',\n        state: 'MOST UPRIGHT POSITION',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_SEATS_BELTS,\n        title: 'Seats, Belts',\n        state: 'CHECK SECURE',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_FLIGHT_CONTROLS_1,\n        title: 'Flight Controls',\n        state: 'FREE AND CORRECT',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_FUEL_QUANTITY,\n        title: 'Fuel Quantity Indicators',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_MIXTURE,\n        title: 'Mixture',\n        state: 'RICH',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_FUEL_SELECTOR,\n        title: 'Fuel Selector',\n        state: 'BOTH',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_AUTOPILOT,\n        title: 'Autopilot',\n        state: 'ENGAGE',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_FLIGHT_CONTROLS_2,\n        title: 'Flight Controls',\n        state: 'MOVE AGAINST AP',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_THROTTLE_1,\n        title: 'Throttle',\n        state: 'SET 1800 RPM',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_MAGNETOS_1,\n        title: 'Magnetos',\n        state: '150 RPM MAX DECREASE',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_MAGNETOS_2,\n        title: 'Magnetos',\n        state: '50 RPM MAX DIFFERENCE',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_MAGNETOS_3,\n        title: 'Magnetos',\n        state: 'BOTH',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_VACCUM_GAUGE,\n        title: 'Vacuum Gauge',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_ENGINE_IDLE,\n        title: 'Engine Idle',\n        state: 'CHECK 600-650 RPM',\n    },\n    {\n        uid: ChecklistItems.C172_RUNUP_THROTTLE_2,\n        title: 'Throttle',\n        state: 'ADJUST 1000 RPM',\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_TAKEOFF_FLAPS,\n        title: 'Flaps',\n        state: '0-10 DEGREES',\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_TAKEOFF_CABIN_WINDOWS,\n        title: 'Cabin Windows',\n        state: 'CLOSED AND LOCKED',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_TAKEOFF_PARKING_BRAKE,\n        title: 'Parking Brake',\n        state: 'RELEASE',\n    },\n    {\n        uid: ChecklistItems.C172_TAKEOFF_FLAPS_1,\n        title: 'Flaps',\n        state: '0-10 DEGREES',\n    },\n    {\n        uid: ChecklistItems.C172_TAKEOFF_THROTTLE,\n        title: 'Throttle',\n        state: 'FULL, 2300 RPM MINIMUM',\n    },\n    {\n        uid: ChecklistItems.C172_TAKEOFF_MIXTURE,\n        title: 'Mixture',\n        state: 'RICH',\n    },\n    {\n        uid: ChecklistItems.C172_TAKEOFF_AIRSPEED_INDICATOR,\n        title: 'Airspeed Indicator',\n        state: 'CHECK WORKING',\n    },\n    {\n        uid: ChecklistItems.C172_TAKEOFF_LIFT_NOSEWHEEL,\n        title: 'Lift Nosewheel',\n        state: '55 KIAS',\n    },\n    {\n        uid: ChecklistItems.C172_TAKEOFF_INITIAL_CLIMB,\n        title: 'Initial Climb',\n        state: '70-80 KIAS',\n    },\n    {\n        uid: ChecklistItems.C172_TAKEOFF_FLAPS_2,\n        title: 'Flaps',\n        state: 'UP ABOVE 300 FT AGL',\n    },\n    {\n        uid: ChecklistItems.C172_CLIMB_AIRSPEED,\n        title: 'Airspeed',\n        state: '70-85 KIAS',\n    },\n    {\n        uid: ChecklistItems.C172_CLIMB_THROTTLE,\n        title: 'Throttle',\n        state: 'FULL',\n    },\n    {\n        uid: ChecklistItems.C172_CLIMB_MIXTURE_1,\n        title: 'Mixture',\n        state: 'RICH',\n    },\n    {\n        uid: ChecklistItems.C172_CLIMB_ENGINE_GAUGES,\n        title: 'Engine Gauges',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172_CLIMB_TAXI_LANDING_LIGHTS,\n        title: 'Taxi And Landing Lights',\n        state: 'OFF ABOVE 1000 FT AGL',\n    },\n    {\n        uid: ChecklistItems.C172_CLIMB_MIXTURE_2,\n        title: 'Mixture',\n        state: 'LEAN ABOVE 3000 FT',\n    },\n    {\n        uid: ChecklistItems.C172_CRUISE_POWER,\n        title: 'Power',\n        state: '2100-2700 RPM, 75% POWER MAX',\n    },\n    {\n        uid: ChecklistItems.C172_CRUISE_ELEVATOR_TRIM,\n        title: 'Elevator Trim',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172_CRUISE_MIXTURE,\n        title: 'Mixture',\n        state: 'LEAN FOR ALTITUDE',\n    },\n    {\n        uid: ChecklistItems.C172_CRUISE_ENGINE_GAUGES,\n        title: 'Engine Gauges',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172_DESCENT_POWER,\n        title: 'Power',\n        state: 'AS DESIRED',\n    },\n    {\n        uid: ChecklistItems.C172_DESCENT_MIXTURE,\n        title: 'Mixture',\n        state: 'ADJUST',\n    },\n    {\n        uid: ChecklistItems.C172_DESCENT_FUEL_SELECTOR,\n        title: 'Fuel Selector',\n        state: 'BOTH',\n    },\n    {\n        uid: ChecklistItems.C172_DESCENT_FLAPS,\n        title: 'Flaps',\n        state: 'AS REQUIRED',\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_LANDING_SEATS_BACKS,\n        title: 'Pilot and Passenger Seat Backs',\n        state: 'MOST UPRIGHT POSITION',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_LANDING_SEATS_BELTS,\n        title: 'Seats, Belts',\n        state: 'SECURED AND LOCKED',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_LANDING_FUEL_SELECTOR,\n        title: 'Fuel Selector',\n        state: 'BOTH',\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_LANDING_MIXTURE,\n        title: 'Mixture',\n        state: 'RICH',\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_LANDING_TAXI_LANDING_LIGHTS,\n        title: 'Taxi and Landing Lights',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172_BEFORE_LANDING_AUTOPILOT,\n        title: 'Autopilot',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172_LANDING_FLAPS,\n        title: 'Flaps',\n        state: 'DOWN',\n    },\n    {\n        uid: ChecklistItems.C172_LANDING_AIRSPEED,\n        title: 'Final Approach Airspeed',\n        state: '60-70 KIAS',\n    },\n    {\n        uid: ChecklistItems.C172_LANDING_TOUCHDOWN,\n        title: 'Touchdown',\n        state: 'MAIN FIRST',\n    },\n    {\n        uid: ChecklistItems.C172_LANDING_LANDING_ROLL,\n        title: 'Landing Roll',\n        state: 'LOWER NOSE GENTLY',\n    },\n    {\n        uid: ChecklistItems.C172_LANDING_BRAKING,\n        title: 'Braking',\n        state: 'MINIMUM REQUIRED',\n    },\n    {\n        uid: ChecklistItems.C172_AFTER_LANDING_FLAPS,\n        title: 'Flaps',\n        state: 'UP',\n    },\n    {\n        uid: ChecklistItems.C172_AFTER_LANDING_LANDING_LIGHT,\n        title: 'Landing Lights',\n        state: 'AS REQUIRED',\n    },\n    {\n        uid: ChecklistItems.C172_AFTER_LANDING_TAXI_LIGHT,\n        title: 'Taxi Lights',\n        state: 'AS REQUIRED',\n    },\n    {\n        uid: ChecklistItems.C172_AFTER_LANDING_STROBE_LIGHT,\n        title: 'Strobe Lights',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172_AFTER_LANDING_ELEVATOR_TRIM,\n        title: 'Elevator Trim',\n        state: 'RESET TO NEUTRAL',\n    },\n    {\n        uid: ChecklistItems.C172_AFTER_LANDING_TRANSPONDER,\n        title: 'Transponder',\n        state: 'STANDBY',\n    },\n    {\n        uid: ChecklistItems.C172_PARKING_PARKING_BRAKE,\n        title: 'Parking Brake',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172_PARKING_AVIONICS_SWITCHES,\n        title: 'Avionics Switches (BUS 1 and BUS 2)',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172_PARKING_ENGINE_IDLE,\n        title: 'Engine Idle',\n        state: 'CHECK 600-650 RPM',\n    },\n    {\n        uid: ChecklistItems.C172_PARKING_MAGNETOS,\n        title: 'Magnetos',\n        state: 'CUTOFF TEST',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.C172_PARKING_MIXTURE,\n        title: 'Mixture',\n        state: 'IDLE CUTOFF',\n    },\n    {\n        uid: ChecklistItems.C172_SECURING_IGNITION,\n        title: 'Ignition',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172_SECURING_LANDING_LIGHT,\n        title: 'Landing Light',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172_SECURING_TAXI_LIGHT,\n        title: 'Taxi Light',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172_SECURING_NAV_LIGHT,\n        title: 'Navigation Lights',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172_SECURING_FUEL_SELECTOR,\n        title: 'Fuel Selector',\n        state: 'LEFT OR RIGHT',\n    },\n]);\n","import { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistTags } from 'lib/checklist/data/tags';\nimport { createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst addC172G1000Tags = (value) => ({\n    ...value,\n    tags: [\n        ...value.tags,\n        ChecklistTags.OFFICIAL,\n        ChecklistTags.C172,\n        ChecklistTags.C172_G1000,\n    ],\n});\n\nexport const C172G1000ChecklistItemsData = createTransformedMapping(addC172G1000Tags)([\n    {\n        uid: ChecklistItems.C172G1000_PREFLIGHT_MASTER_SWITCHES_1,\n        title: 'Master Switches (ALT and BAT)',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172G1000_PREFLIGHT_PFD,\n        title: 'Primary Flight Display (PFD_CJ4)',\n        state: 'CHECK ON',\n    },\n    {\n        uid: ChecklistItems.C172G1000_PREFLIGHT_OIL_PRESSURE_ANNUNCIATOR,\n        title: 'Oil Pressure Annunciator',\n        state: 'CHECK ON',\n    },\n    {\n        uid: ChecklistItems.C172G1000_PREFLIGHT_LOW_VACUUM_ANNUNCIATOR,\n        title: 'Low Vacuum Annunciator',\n        state: 'CHECK ON',\n    },\n    {\n        uid: ChecklistItems.C172G1000_PREFLIGHT_AVIONICS_SWITCH_1_ON,\n        title: 'Avionics Switch (BUS 1)',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172G1000_PREFLIGHT_AVIONICS_SWITCH_1_FAN,\n        title: 'Forward Avionics Fan',\n        state: 'CHECK FAN IS HEARD',\n    },\n    {\n        uid: ChecklistItems.C172G1000_PREFLIGHT_AVIONICS_SWITCH_1_OFF,\n        title: 'Avionics Switch (BUS 1)',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172G1000_PREFLIGHT_AVIONICS_SWITCH_2_ON,\n        title: 'Avionics Switch (BUS 2)',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172G1000_PREFLIGHT_AVIONICS_SWITCH_2_FAN,\n        title: 'Aft Avionics Fan',\n        state: 'CHECK FAN IS HEARD',\n    },\n    {\n        uid: ChecklistItems.C172G1000_PREFLIGHT_AVIONICS_SWITCH_2_OFF,\n        title: 'Avionics Switch (BUS 2)',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172G1000_PREFLIGHT_LOW_VOLTS_ANNUNCIATOR,\n        title: 'Low Volts Annunciator',\n        state: 'CHECK ON',\n    },\n    {\n        uid: ChecklistItems.C172G1000_PREFLIGHT_MASTER_SWITCHES_2,\n        title: 'Master Switches (ALT and BAT)',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172G1000_PREFLIGHT_ELEVATOR_TRIM,\n        title: 'Elevator Trim',\n        state: 'TAKE-OFF POSITION',\n    },\n    {\n        uid: ChecklistItems.C172G1000_BEFORE_START_BRAKES,\n        title: 'Brakes',\n        state: 'TEST AND SET',\n    },\n    {\n        uid: ChecklistItems.C172G1000_BEFORE_START_CIRCUIT_BREAKERS,\n        title: 'Circuit Breakers',\n        state: 'ALL PUSHED',\n    },\n    {\n        uid: ChecklistItems.C172G1000_ENGINE_START_STANDBY_BATT_TEST,\n        title: 'Standby Battery Switch (STBY BATT)',\n        state: 'TEST, HOLD FOR 20 SEC',\n    },\n    {\n        uid: ChecklistItems.C172G1000_ENGINE_START_STANDBY_BATT_ARM,\n        title: 'Standby Battery Switch (STBY BATT)',\n        state: 'ARM, VERIFY PFD_CJ4 ON',\n    },\n    {\n        uid: ChecklistItems.C172G1000_ENGINE_START_ENGINE_INDICATING_SYSTEM,\n        title: 'Engine Indicating System',\n        state: 'CHECK PARAMETERS',\n    },\n    {\n        uid: ChecklistItems.C172G1000_ENGINE_START_BUS_E_VOLTS,\n        title: 'BUS E Volts',\n        state: 'CHECK 24 VOLS MINIMUM',\n    },\n    {\n        uid: ChecklistItems.C172G1000_ENGINE_START_BUS_M_VOLTS,\n        title: 'M BUS Volts',\n        state: 'CHECK 1.5 VOLTS OR LESS',\n    },\n    {\n        uid: ChecklistItems.C172G1000_ENGINE_START_BATT_S_AMPS,\n        title: 'Battery S Amps',\n        state: 'CHECK, VERIFY DISCHARGE',\n    },\n    {\n        uid: ChecklistItems.C172G1000_ENGINE_START_STANDBY_BATT_ANNUNCIATOR,\n        title: 'Standby Battery Annunciator',\n        state: 'CHECK ON',\n    },\n    {\n        uid: ChecklistItems.C172G1000_ENGINE_START_MASTER_SWITCH,\n        title: 'Master Switches (ALT and BAT)',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172G1000_AFTER_START_AMPS,\n        title: 'Amps (M BATT and BATT S)',\n        state: 'CHECK, VERIFY CHARGE SHOWN',\n    },\n    {\n        uid: ChecklistItems.C172G1000_AFTER_START_LOW_VOLTS_ANNUNCIATOR,\n        title: 'Low Volts Annunciator',\n        state: 'CHECK OFF',\n    },\n    {\n        uid: ChecklistItems.C172G1000_RUNUP_DOORS,\n        title: 'Doors',\n        state: 'CLOSED AND LOCKED',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.C172G1000_RUNUP_FLIGHT_INSTRUMENTS,\n        title: 'Flight Instruments (PFD_CJ4)',\n        state: 'CHECK NO RED X\\'s',\n    },\n    {\n        uid: ChecklistItems.C172G1000_RUNUP_ALTIMETER,\n        title: 'Altimeter (PFD_CJ4)',\n        state: 'SET BARO',\n    },\n    {\n        uid: ChecklistItems.C172G1000_RUNUP_STANDBY_ALTIMETER,\n        title: 'Standby Altimeter',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172G1000_RUNUP_ALTITUDE_SELECT,\n        title: 'ALT SEL',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172G1000_RUNUP_STANDBY_FLIGHT_INSTRUMENTS,\n        title: 'Standby Flight Instruments',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172G1000_RUNUP_AP_TRIM_DISC,\n        title: 'A/P Trim DISC Button',\n        state: 'PRESS',\n    },\n    {\n        uid: ChecklistItems.C172G1000_RUNUP_FLIGHT_DIRECTOR,\n        title: 'Flight Director',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172G1000_RUNUP_ELEVATOR_TRIM,\n        title: 'Elevator Trim',\n        state: 'SET FOR TAKEOFF',\n    },\n    {\n        uid: ChecklistItems.C172G1000_RUNUP_ENGINE_INDICATORS,\n        title: 'Engine Indicators',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172G1000_RUNUP_ANMETERS_VOLTMETERS,\n        title: 'Anmeters and Voltmeters',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172G1000_RUNUP_ANNUNCIATORS,\n        title: 'Annunciators',\n        state: 'CHECK NONE DISPLAYED',\n    },\n    {\n        uid: ChecklistItems.C172G1000_BEFORE_TAKEOFF_COM_FREQS,\n        title: 'COM Frequency(s)',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172G1000_BEFORE_TAKEOFF_NAV_FREQS,\n        title: 'NAV Frequency(s)',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172G1000_BEFORE_TAKEOFF_FMS_GPS,\n        title: 'FMS/GPS Flight PLan',\n        state: 'AS DESIRED',\n    },\n    {\n        uid: ChecklistItems.C172G1000_BEFORE_TAKEOFF_TRANSPONDER,\n        title: 'Transponder',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172G1000_BEFORE_TAKEOFF_CDI_NAV_SOURCE,\n        title: 'CDI Softkey',\n        state: 'SELECT NAV SOURCE',\n    },\n    {\n        uid: ChecklistItems.C172G1000_BEFORE_TAKEOFF_CABIN_PWR,\n        title: 'Cabin Power 12V Switch',\n        state: 'OFF',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.C172G1000_TAKEOFF_ANNUNCIATORS,\n        title: 'Annunciators',\n        state: 'CHECK NONE DISPLAYED',\n    },\n    {\n        uid: ChecklistItems.C172G1000_CRUISE_FMS_GPS,\n        title: 'FMS/GPS',\n        state: 'REVIEW AND BRIEF',\n    },\n    {\n        uid: ChecklistItems.C172G1000_DESCENT_ALTIMETER,\n        title: 'Altimeter (PFD_CJ4)',\n        state: 'SET BARO',\n    },\n    {\n        uid: ChecklistItems.C172G1000_DESCENT_STANDBY_ALTIMETER,\n        title: 'Standby Altimeter',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172G1000_DESCENT_ALTITUDE_SELECT,\n        title: 'ALT SEL',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172G1000_DESCENT_CDI_NAV,\n        title: 'CDI Softkey',\n        state: 'SELECT NAV SOURCE',\n    },\n    {\n        uid: ChecklistItems.C172G1000_DESCENT_FMS_GPS,\n        title: 'FMS/GPS',\n        state: 'REVIEW AND BRIEF',\n    },\n    {\n        uid: ChecklistItems.C172G1000_BEFORE_LANDING_CABIN_PWR,\n        title: 'Cabin Power 12V Switch',\n        state: 'OFF',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.C172G1000_SECURING_MASTER_SWITCHES,\n        title: 'Master Switches (ALT and BAT)',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172G1000_SECURING_STANDBY_BATT,\n        title: 'Standby Battery Switch (STBY BATT)',\n        state: 'OFF',\n    },\n]);\n","import { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistTags } from 'lib/checklist/data/tags';\nimport { createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst addC172SteamTags = (value) => ({\n    ...value,\n    tags: [\n        ...value.tags,\n        ChecklistTags.OFFICIAL,\n        ChecklistTags.C172,\n        ChecklistTags.C172_STEAM,\n    ],\n});\n\nexport const C172SteamChecklistItemsData = createTransformedMapping(addC172SteamTags)([\n    {\n        uid: ChecklistItems.C172STEAM_PREFLIGHT_BATTERY_SWITCH_1,\n        title: 'Battery Switch',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_PREFLIGHT_BATTERY_SWITCH_2,\n        title: 'Battery Switch',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_PREFLIGHT_AVIONICS_SWITCHES_1,\n        title: 'Avionics Switches (BUS 1 and BUS 2)',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_PREFLIGHT_AVIONICS_SWITCHES_2,\n        title: 'Avionics Switches (BUS 1 and BUS 2)',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_PREFLIGHT_AVIONICS_COOLING_FAN,\n        title: 'Avionics Cooling Fan',\n        state: 'AUDIBLE',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_PREFLIGHT_ANNUNCIATOR_PANEL,\n        title: 'Annunciator Panel',\n        state: 'TEST',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_PREFLIGHT_FUEL_SHUTOFF_VALVE,\n        title: 'Fuel Shutoff Valve',\n        state: 'OPEN',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_PREFLIGHT_FLAPS_DOWN,\n        title: 'Flaps',\n        state: 'DOWN',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_PREFLIGHT_ELEVATOR_TRIM,\n        title: 'Elevator Trim',\n        state: 'NEUTRAL',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_ENGINE_START_BATTERY_SWITCH,\n        title: 'Battery Switch',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_AFTER_START_ALTERNATOR,\n        title: 'Alternator',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_AFTER_START_ALTERNATOR_INDICATOR,\n        title: 'Alternator Indicator',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_AFTER_START_ANMETER,\n        title: 'Anmeter',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_AFTER_START_RADIOS,\n        title: 'Radios',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_AFTER_START_TRANSPONDER,\n        title: 'Transponder',\n        state: 'STANDBY',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_AFTER_START_HEADING_INDICATOR,\n        title: 'Heading Indicator',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_AFTER_START_ALTIMETER,\n        title: 'Altimeter',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_AFTER_START_ALTITUDE_INDICATOR,\n        title: 'Altitude Indicator',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_TAXI_TURN_COORDINATOR,\n        title: 'Turn Coordinator',\n        state: 'CHECK WORKING',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_TAXI_HEADING_INDICATOR,\n        title: 'Heading Indicator',\n        state: 'CHECK WORKING',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_TAXI_COMPASS,\n        title: 'Compass',\n        state: 'CHECK WORKING',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_RUNUP_FLIGHT_INSTRUMENTS,\n        title: 'Flight Instruments',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_RUNUP_AUTOPILOT,\n        title: 'Autopilot',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_RUNUP_OIL_PRESSURE,\n        title: 'Oil Pressure',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_RUNUP_OIL_TEMPERATURE,\n        title: 'Oil Temperature',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_RUNUP_ANMETER,\n        title: 'Anmeter',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_RUNUP_ANNUNCIATOR_PANEL,\n        title: 'Annunciator Panel',\n        state: 'CLEAR',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_BEFORE_TAKEOFF_RADIOS,\n        title: 'Radios',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_BEFORE_TAKEOFF_AVIONICS,\n        title: 'Avionics',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_BEFORE_TAKEOFF_NAV_GPS_SWITCH,\n        title: 'NAV/GPS switch',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_BEFORE_TAKEOFF_TRANSPONDER,\n        title: 'Transponder',\n        state: 'ON ALT',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_BEFORE_TAKEOFF_AUTOPILOT,\n        title: 'Autopilot',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_BEFORE_TAKEOFF_ELEVATOR_TRIM,\n        title: 'Elevator Trim',\n        state: 'SET FOR TAKEOFF',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_TAKEOFF_ANNUNCIATORS,\n        title: 'Annunciator Panel',\n        state: 'CLEAR',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_CRUISE_FLIGHT_INSTRUMENTS,\n        title: 'Flight Instruments',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_DESCENT_ALTIMETER,\n        title: 'Altimeter Setting',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_DESCENT_NAV_GPS,\n        title: 'NAV/GPS Switch',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_PARKING_TRANSPONDER,\n        title: 'Transponder',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_SECURING_ALTERNATOR,\n        title: 'Alternator',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.C172STEAM_SECURING_BATTERY,\n        title: 'Battery Switch',\n        state: 'OFF',\n    },\n]);\n","import React from 'react';\n\nimport { styled } from 'styletron-react';\n\nimport { LightGrey } from 'components/lib/colors';\n\nconst KeyboardInputSep = styled('span', {\n    fontSize: '.8em',\n    fontWeight: 'bold',\n});\n\nconst KeyboardInput = styled('span', {\n    backgroundColor: LightGrey,\n    fontFamily: 'Monaco',\n    color: '#000',\n    padding: '2px 5px',\n    fontSize: '.9em',\n    whiteSpace: 'nowrap',\n    borderRadius: '2px',\n});\n\nexport const KeyboardInputs = ({ inputs }) => inputs.map((inp, idx) => (\n    <React.Fragment key={inp}>\n        {idx === 0 ? null : (\n            <KeyboardInputSep>\n                {' '}\n                &gt;\n                {' '}\n            </KeyboardInputSep>\n        )}\n        <KeyboardInput>{inp}</KeyboardInput>\n    </React.Fragment>\n));\n","import { withStyle } from 'styletron-react';\n\nimport { DarkRed } from 'components/lib/colors';\nimport { Monospaced } from 'components/lib/Monospaced';\n\nexport const Vernacular = withStyle(Monospaced, {\n    color: DarkRed,\n    cursor: 'help',\n    borderBottom: `1px dotted ${DarkRed}`,\n});\n","import React from 'react';\n\nimport { Vernacular } from 'components/lib/vernacular/Vernacular';\n\nexport const PFD_CJ4 = <Vernacular title=\"Primary Flight Display - Left Side Display\">PFD</Vernacular>;\nexport const DCP_CJ4 = <Vernacular title=\"Display Control Panel - Above PFD\">DCP</Vernacular>;\n\nexport const MFD_CJ4 = <Vernacular title=\"Multi Function Display - Right Side Display\">MFD</Vernacular>;\nexport const CCP_CJ4 = <Vernacular title=\"Cursor Control Panel - Button Panel below MFD\">CCP</Vernacular>;\n\nexport const EP_CJ4 = <Vernacular title=\"Electrical Panel - Panel Left of PFD\">Electrical Panel</Vernacular>;\nexport const TP_CJ4 = <Vernacular title=\"Tilt Panel - Panel Below PFD and MFD\">Tilt Panel</Vernacular>;\n\nexport const EICAS_CJ4 = <Vernacular title=\"Engine Indicating and Crew Alerting System - Top of MFD\">EICAS</Vernacular>;\nexport const SFD_CJ4 = <Vernacular title=\"Standby Flight Display\">SFD</Vernacular>;\n","import React from 'react';\n\nimport { Vernacular } from 'components/lib/vernacular/Vernacular';\n\nexport const FMS = <Vernacular title=\"FMS - Flight Management System\">FMS</Vernacular>;\n\nexport const SAT = <Vernacular title=\"SAT - Static Air Temperature\">SAT</Vernacular>;\nexport const OAT = <Vernacular title=\"OAT - Outside Air Temperature\">OAT</Vernacular>;\n\nexport const QNH = <Vernacular title=\"QNH - Barometric Pressure Setting (Sea-level)\">QNH</Vernacular>;\n\nexport const APU = <Vernacular title=\"Auxiliary Power Unit\">APU</Vernacular>;\n\nexport const N1 = (\n    <Vernacular title=\"N1 - Low Pressure Turbine/Compressor Spool Speed\">\n        N1\n    </Vernacular>\n);\n\nexport const N2 = (\n    <Vernacular title=\"N2 - High Pressure Turbine/Compressor Spool Speed\">\n        N2\n    </Vernacular>\n);\n\nexport const ITT = (\n    <Vernacular title=\"ITT - Inter-Turbine Temperature\">\n        ITT\n    </Vernacular>\n);\n\nexport const FADEC = (\n    <Vernacular title=\"FADEC - Full Authority Digital Engine Control\">\n        FADEC\n    </Vernacular>\n);\n\nexport const VR = (\n    <Vernacular title=\"VR - Rotation Speed\">VR</Vernacular>\n);\n\nexport const KIAS = (\n    <Vernacular title=\"KIAS - Knots of Indicated Air Speed\">\n        KIAS\n    </Vernacular>\n);\n\nexport const AGL = (\n    <Vernacular title=\"AGL - Above Ground Level\">\n        AGL\n    </Vernacular>\n);\n","import React from 'react';\n\nimport { Alert } from 'antd';\nimport { generatePath } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nimport { CASMessage } from 'components/lib/CASMessage';\nimport { ExternalLink } from 'components/lib/ExternalLink';\nimport { KeyboardInputs } from 'components/lib/KeyboardInputs';\nimport { Monospaced } from 'components/lib/Monospaced';\nimport {\n    CCP_CJ4, DCP_CJ4, EICAS_CJ4, EP_CJ4, MFD_CJ4, PFD_CJ4, SFD_CJ4, TP_CJ4,\n} from 'components/lib/vernacular/cj4';\nimport {\n    AGL,\n    FADEC,\n    FMS, ITT, KIAS, N1, N2, OAT, QNH, SAT, VR,\n} from 'components/lib/vernacular/common';\nimport { AntiIceAircrafts } from 'lib/anti-ice/data/aircrafts';\nimport { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistTags } from 'lib/checklist/data/tags';\nimport { createTransformedList, createTransformedMapping } from 'lib/checklist/data/transforms';\nimport { AntiIceWithNameRoute } from 'lib/routes';\n\nconst addCJ4Tags = (value) => ({\n    ...value,\n    tags: [ChecklistTags.OFFICIAL, ChecklistTags.CJ4, ...value.tags],\n});\n\nconst cj4AntiIceRules = (\n    <>\n        Anti-ice rules explained\n        {' '}\n        <Link\n            to={generatePath(AntiIceWithNameRoute, { aircraftName: AntiIceAircrafts.WORKINGTITLE_CJ4 })}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n        >\n            here\n        </Link>\n        .\n    </>\n);\n\nexport const CJ4ChecklistItemsData = createTransformedMapping(addCJ4Tags)([\n    {\n        uid: ChecklistItems.CJ4_BEFORE_START_BATTERY_SWITCH,\n        title: 'Battery Switch',\n        state: 'ON',\n        moreInfoLong: (\n            <>\n                Battery switch is the red switch located in the\n                {' '}\n                {EP_CJ4}\n                ,\n                and can be turned on by moving it in up position.\n                <br />\n                <br />\n                {MFD_CJ4}\n                {' '}\n                should turn on and show a few errors and warnings once battery is ON. Battery life is limited at 10\n                to 15 minutes so either engines must be started or ground power used pretty quickly.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_START_EMERGENCY_LIGHTS_SWITCH,\n        title: 'Emergency Lights Switch',\n        state: 'ARMED',\n        moreInfoLong: (\n            <>\n                Emergency Lights switch is in the\n                {' '}\n                {EP_CJ4}\n                {' '}\n                along with battery switch, on the second row\n                on the left. It can be armed by moving it in the up position. Warning\n                {' '}\n                <CASMessage level=\"warning\">EMER LIGHTS NOT ARMED</CASMessage>\n                {' '}\n                should disappear from\n                {' '}\n                {MFD_CJ4}\n                {' '}\n                after completing this step.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_START_STANDBY_FLIGHT_DISPLAY_SWITCH,\n        title: 'Standby Flight Display Switch',\n        state: 'ON',\n        moreInfoLong: (\n            <>\n                {SFD_CJ4}\n                {' '}\n                Switch is also in the\n                {' '}\n                {EP_CJ4}\n                , on the second row in the middle. It can be turned on by moving it in the up position.\n                {' '}\n                {SFD_CJ4}\n                {' '}\n                right of\n                {' '}\n                {MFD_CJ4}\n                , above landing gear state display, should turn ON.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_START_AVIONICS_SWITCH,\n        title: 'Avionics Switch',\n        state: 'DISPATCH',\n        moreInfoLong: (\n            <>\n                Avionics Switch is located in the electrical panel, on the second row on the right. It can be turned\n                into dispatch mode by moving it in the down position.\n                {' '}\n                {FMS}\n                {' '}\n                will start and\n                {' '}\n                <CASMessage level=\"warning\">BAT AMP</CASMessage>\n                {' '}\n                warning should flash on\n                {' '}\n                {MFD_CJ4}\n                {' '}\n                after this step.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_START_PARKING_BRAKES,\n        title: 'Parking Brake',\n        state: 'SET',\n        moreInfoShort: (\n            <>\n                Parking Brake is located below the\n                {' '}\n                {TP_CJ4}\n                , as a black and round pull handle. Parking brakes are set when the handle is fully extended.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_START_WHEEL_CHOCKS,\n        title: 'Wheel Chocks',\n        state: 'REMOVE',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_START_CABIN_DOOR,\n        title: 'Cabin Door',\n        state: 'CLOSED',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_START_PASSENGER_BRIEFING,\n        title: 'Passenger Briefing',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                Passenger briefing can be started using the\n                {' '}\n                {CCP_CJ4}\n                {' '}\n                below the\n                {' '}\n                {MFD_CJ4}\n                {' '}\n                with the\n                {' '}\n                <KeyboardInputs inputs={['PASS BRIEF']} />\n                {' '}\n                button (bottom right). Use one of the two available\n                {' '}\n                <CASMessage>TAKEOFF (LONG)</CASMessage>\n                {' '}\n                or\n                {' '}\n                <CASMessage>TAKEOFF (SHORT)</CASMessage>\n                {' '}\n                briefings depending on how familiar\n                your passengers are with flying.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_START_PILOTS_SEATS_ADJUSTED,\n        title: 'Seats / Belts / Pedals',\n        state: 'ADJUST / SECURE',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_START_EXTERIOR_LIGHTS,\n        title: 'Exterior Lights',\n        state: 'AS REQUIRED',\n        subItems: createTransformedList()([\n            {\n                title: 'BEACON',\n                state: 'ON',\n            },\n            {\n                title: 'NAV',\n                state: 'ON',\n            },\n            {\n                title: 'LOGO',\n                state: 'ON',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_START_EICAS,\n        title: 'EICAS',\n        state: 'CHECK',\n        moreInfoShort: (\n            <>\n                {EICAS_CJ4}\n                {' '}\n                on top of\n                {' '}\n                {MFD_CJ4}\n                {' '}\n                should be checked for all data to be GREEN.\n            </>\n        ),\n        subItems: createTransformedList()([\n            {\n                title: 'N1',\n                state: 'GREEN, 0',\n            },\n            {\n                title: 'N2',\n                state: 'GREEN, 0',\n            },\n            {\n                title: (<>Oil Temperature (OIL &deg;C)</>),\n                state: 'GREEN',\n            },\n            {\n                title: 'Oil Pressure (OIL PSI)',\n                state: 'GREEN, 0',\n            },\n            {\n                title: 'Trims',\n                state: 'GREEN',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_START_FMS,\n        title: 'FMS',\n        state: 'CHECK/SET',\n        subItems: createTransformedList()([\n            {\n                title: 'Configuration',\n                state: 'SET / CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: 'FMS / MFD Units',\n                        state: 'SET / CHECKED',\n                    },\n                ]),\n            },\n            {\n                title: 'Position Initialization',\n                state: 'COMPLETE',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                POS INIT Page (\n                                <KeyboardInputs inputs={['IDX', 'LSK 4 (POS INIT)']} />\n                                )\n                            </>\n                        ),\n                        state: 'OPEN',\n                    },\n                    {\n                        title: (\n                            <>\n                                GPS Position Copy (\n                                <KeyboardInputs inputs={['RSK 4 (SET POS TO GNSS)']} />\n                                )\n                            </>\n                        ),\n                        state: 'COMPLETE',\n                    },\n                    {\n                        title: (\n                            <>\n                                FMS Position (\n                                <KeyboardInputs inputs={['RSK 5 (SET POS)']} />\n                                )\n                            </>\n                        ),\n                        state: 'CHECKED',\n                    },\n                ]),\n            },\n            {\n                title: 'Flight Plan (1)',\n                state: 'SET / CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                SimBrief Direct Import (\n                                <KeyboardInputs\n                                    inputs={[\n                                        'IDX',\n                                        'NEXT',\n                                        'RSK 1 (ROUTE MENU)',\n                                        'LSK 3 (FPLN RECALL (SB))',\n                                    ]}\n                                />\n                                )\n                            </>\n                        ),\n                        state: 'AS DESIRED',\n                    },\n                    {\n                        title: (\n                            <>\n                                Flight Plan Page (\n                                <KeyboardInputs inputs={['FPLN']} />\n                                )\n                            </>\n                        ),\n                        state: 'OPEN',\n                    },\n                    {\n                        title: (\n                            <>\n                                Origin Airport (\n                                <KeyboardInputs inputs={['INPUT', 'LSK 1 (ORIGIN)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET / CHECKED',\n                    },\n                    {\n                        title: (\n                            <>\n                                Destination Airport (\n                                <KeyboardInputs inputs={['INPUT', 'RSK 1 (DEST)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET / CHECKED',\n                    },\n                ]),\n            },\n            {\n                title: 'Departure',\n                state: 'SET / CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Departure Page (\n                                <KeyboardInputs inputs={['DEP / ARR', '[opt] LSK 1 (DEP)']} />\n                                )\n                            </>\n                        ),\n                        state: 'AS DESIRED',\n                    },\n                    {\n                        title: (\n                            <>\n                                Departure Runway (\n                                <KeyboardInputs inputs={['RSK ? (Runways)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET / CHECKED',\n                    },\n                    {\n                        title: (\n                            <>\n                                Standard Instrument Departure (\n                                <KeyboardInputs inputs={['LSK ? (Departures)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET / CHECKED',\n                    },\n                    {\n                        title: (\n                            <>\n                                Transition (\n                                <KeyboardInputs inputs={['LSK ? (Trans)']} />\n                                )\n                            </>\n                        ),\n                        state: 'AS DESIRED',\n                    },\n                ]),\n            },\n            {\n                title: 'Flight Plan (2)',\n                state: 'SET / CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Flight Plan Page (\n                                <KeyboardInputs inputs={['FPLN']} />\n                                )\n                            </>\n                        ),\n                        state: 'OPEN',\n                    },\n                    {\n                        title: (\n                            <>\n                                Origin Runway (\n                                <KeyboardInputs inputs={['RSK 3 (ORIG RWY)']} />\n                                )\n                            </>\n                        ),\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: (\n                            <>\n                                VIA (\n                                <KeyboardInputs inputs={['LSK 4 (VIA)']} />\n                                )\n                            </>\n                        ),\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: (\n                            <>\n                                Flight Plan Legs (\n                                <KeyboardInputs inputs={['NEXT']} />\n                                )\n                            </>\n                        ),\n                        state: 'CHECKED',\n                    },\n                ]),\n            },\n            {\n                title: 'Arrival',\n                state: 'AS DESIRED',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Arrival Page (\n                                <KeyboardInputs inputs={['DEP / ARR', '[opt] DEP / ARR', '[opt] RSK 2 (ARR)']} />\n                                )\n                            </>\n                        ),\n                        state: 'AS DESIRED',\n                    },\n                    {\n                        title: (\n                            <>\n                                Arrival Approach (\n                                <KeyboardInputs inputs={['RSK ? (Approaches)']} />\n                                )\n                            </>\n                        ),\n                        state: 'AS DESIRED',\n                    },\n                    {\n                        title: (\n                            <>\n                                Standard Terminal Arrival Route (\n                                <KeyboardInputs inputs={['LSK ? (STARS)']} />\n                                )\n                            </>\n                        ),\n                        state: 'AS DESIRED',\n                    },\n                    {\n                        title: 'Transitions',\n                        state: 'AS DESIRED',\n                    },\n                ]),\n            },\n            {\n                title: 'Legs',\n                state: 'CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Legs Page (\n                                <KeyboardInputs inputs={['LEGS']} />\n                                )\n                            </>\n                        ),\n                        state: 'OPEN',\n                    },\n                    {\n                        title: 'All Waypoints',\n                        state: 'CHECKED',\n                    },\n                ]),\n            },\n            {\n                title: 'Performance Initialization',\n                state: 'COMPLETE',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Performance Initialization Page (\n                                <KeyboardInputs inputs={['PERF', 'LSK 1 (PERF INIT)']} />\n                                )\n                            </>\n                        ),\n                        state: 'OPEN',\n                        subItems: createTransformedList()([\n\n                        ]),\n                    },\n                    {\n                        title: (\n                            <>\n                                Zero Fuel Weight (\n                                <KeyboardInputs inputs={['PERF', 'RSK 3 (ZFW)']} />\n                                )\n                            </>),\n                        state: 'SET',\n                    },\n                ]),\n            },\n        ]),\n        moreInfoShort: (\n            <>\n                {FMS}\n                {' '}\n                should be checked and programmed at this point.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_START_CLIMATE_CONTROL_SELECTOR,\n        title: 'Climate Control Selector',\n        state: 'OFF',\n        moreInfoShort: (\n            <>\n                Climate Control Selector is in the middle of the\n                {' '}\n                {TP_CJ4}\n                . Turn it left to set it in OFF mode.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_ENGINE_START_THROTTLES,\n        title: 'Throttles',\n        state: 'IDLE',\n        moreInfoShort: (\n            <>\n                Before starting the engines, the throttles should be set all the way to idle, at their bottom\n                most position.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_ENGINE_START_STARTER_BUTTON_PUSH,\n        title: 'Engine Starter Button',\n        state: 'PUSH',\n        moreInfoShort: (\n            <>\n                Push the starter button located below the throttles for whichever side you would like to start\n                first. Alternating engine started first between trips to equalize engine running time is\n                recommended.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_ENGINE_START_RUNSTOP_BUTTON_TO_RUN,\n        title: 'Engine Run/Stop Button',\n        state: 'RUN',\n        moreInfoShort: (\n            <>\n                Push the Engine Run/Stop button behind the clear guard just above the throttles on the same side\n                without delay. Button should go from Blank to displaying RUN. Remember to close the guard again.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_ENGINE_START_ITT_RISE,\n        title: 'ITT',\n        state: 'CHECK FOR RISE',\n        moreInfoShort: (\n            <>\n                Monitor\n                {' '}\n                {N1}\n                {' '}\n                /\n                {' '}\n                {N2}\n                {' '}\n                /\n                {' '}\n                {ITT}\n                {' '}\n                within the\n                {' '}\n                {EICAS_CJ4}\n                . Starting sequence is managed by\n                {' '}\n                {FADEC}\n                {' '}\n                and simply needs to be monitored.\n            </>\n        ),\n        subItems: createTransformedList()([\n            {\n                title: (\n                    <>\n                        <CASMessage>STARTER</CASMessage>\n                        {' '}\n                        on\n                        {' '}\n                        {EICAS_CJ4}\n                    </>\n                ),\n                state: 'DISPLAYED',\n            },\n            {\n                title: (\n                    <>\n                        {N1}\n                        {' '}\n                        /\n                        {' '}\n                        {N2}\n                        {' '}\n                        on\n                        {' '}\n                        {EICAS_CJ4}\n                    </>\n                ),\n                state: 'RISING',\n            },\n            {\n                title: (\n                    <>\n                        <CASMessage level=\"info\">IGN</CASMessage>\n                        {' '}\n                        for\n                        {' '}\n                        {ITT}\n                    </>\n                ),\n                state: 'ON @ 12% N2',\n            },\n            {\n                title: (\n                    <>\n                        {N1}\n                        {' '}\n                        /\n                        {' '}\n                        {N2}\n                        {' '}\n                        /\n                        {' '}\n                        {ITT}\n                        {' '}\n                        on\n                        {' '}\n                        {EICAS_CJ4}\n                    </>\n                ),\n                state: 'RISING',\n            },\n            {\n                title: (\n                    <>\n                        <CASMessage level=\"info\">IGN</CASMessage>\n                        {' '}\n                        for\n                        {' '}\n                        {ITT}\n                    </>\n                ),\n                state: 'OFF',\n            },\n            {\n                title: (\n                    <>\n                        {N1}\n                        {' '}\n                        /\n                        {' '}\n                        {N2}\n                        {' '}\n                        /\n                        {' '}\n                        {ITT}\n                        {' '}\n                        on\n                        {' '}\n                        {EICAS_CJ4}\n                    </>\n                ),\n                state: 'STABLE',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_ENGINE_START_EICAS_CHECK,\n        title: 'EICAS',\n        state: 'CHECK',\n        moreInfoShort: (\n            <>\n                Indicators should settle around the following values. Every indicator should be green before moving\n                forward to second engine.\n                {' '}\n                {MFD_CJ4}\n                {' '}\n                warnings will only disappear after second engine is started.\n            </>\n        ),\n        subItems: createTransformedList()([\n            {\n                title: N1,\n                state: '24.5%',\n            },\n            {\n                title: N2,\n                state: '53.4%',\n            },\n            {\n                title: ITT,\n                state: <>600&deg;C</>,\n            },\n            {\n                title: 'Oil Pressure',\n                state: '70 PSI',\n            },\n            {\n                title: 'Oil Temperature',\n                state: <>MORE THAN 90&deg;C</>,\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_ENGINE_START_OPPOSITE_ENGINE_START,\n        title: 'Opposite Engine',\n        state: 'START',\n        moreInfoShort: (\n            <>\n                Repeat the process from the starter button push. After engine starts all warnings on\n                {' '}\n                {MFD_CJ4}\n                {' '}\n                should\n                disappear and more information should display regarding electrical systems, pressurization,\n                hydraulic pressure and fuel.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_ENGINE_START_EXTERNAL_POWER_DISCONNECT,\n        title: 'External Power',\n        state: 'DISCONNECTED',\n        moreInfoShort: (\n            <>\n                If external power was enabled, it should now be disconnected as all power should come from engines\n                at this stage. Battery AMP indicator should be -38 A if ground power is connected, or -22 A if it\n                is not.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_ENGINE_START_ELECTRICAL_SYSTEM_CHECK,\n        title: 'Electrical System',\n        state: 'CHECK',\n        moreInfoShort: (\n            <>\n                Check the electrical information on\n                {' '}\n                {MFD_CJ4}\n                {' '}\n                below\n                {' '}\n                {EICAS_CJ4}\n                {' '}\n                (or via\n                {' '}\n                <KeyboardInputs inputs={['SYS']} />\n                {' '}\n                key on\n                {' '}\n                {CCP_CJ4}\n                {' '}\n                if hidden).\n            </>\n        ),\n        subItems: createTransformedList()([\n            {\n                title: 'DC Electric',\n                state: 'CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Amperage',\n                        state: 'GREEN, +22 A',\n                    },\n                    {\n                        title: 'Voltage',\n                        state: 'GREEN, +29 V',\n                    },\n                ]),\n            },\n            {\n                title: 'Battery',\n                state: 'CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Amperage',\n                        state: 'GREEN, -22 A',\n                    },\n                    {\n                        title: 'Voltage',\n                        state: 'GREEN, +25 V',\n                    },\n                    {\n                        title: 'Temperature',\n                        state: 'GREEN',\n                    },\n                ]),\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_AVIONICS_SWITCH,\n        title: 'Avionics Switch',\n        state: 'ON',\n        moreInfoShort: (\n            <>\n                Avionics switch is in the eletrical panel left of\n                {' '}\n                {PFD_CJ4}\n                , on the second row on the right. Flick it\n                in the up position to switch from dispatch mode to on mode.\n                {' '}\n                {PFD_CJ4}\n                {' '}\n                should turn on after this step\n                is completed.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_CLIMATE_CONTROL_SWITCH,\n        title: 'Climate Control Selector',\n        state: 'NORM',\n        moreInfoShort: (\n            <>\n                Climate Control Selector is in the middle of the\n                {' '}\n                {TP_CJ4}\n                . Turn it right once for NORM mode to be enabled. Air conditioning fans should audibly\n                activate in the cabin.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_PASSENGER_LIGHTS_SAFETY,\n        title: 'Pass Lights Safety Button',\n        state: 'ON',\n        moreInfoShort: (\n            <>\n                Passenger safety and belts indicators should be turned on in the center console next to exterior\n                lights. Note that if passenger briefing is not finished, it will be interrupted by the safety light\n                announcement.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_TRIMS,\n        title: 'Trims',\n        state: 'CHECK/SET',\n        moreInfoShort: (\n            <>\n                Trims are indicated on the right side of the\n                {' '}\n                {EICAS_CJ4}\n                {' '}\n                on\n                {' '}\n                {MFD_CJ4}\n                . AIL is aileron trim, RUD is rudder trim and\n                ELEV is elevator trim (ND/NU is nose down/up respectively). For takeoff, trims should be in the green\n                area for each setting. They can be adjusted using controls below the throttles in the center console.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_FLIGHT_CONTROLS_FREE,\n        title: 'Flight Controls',\n        state: 'FREE/CORRECT',\n        moreInfoShort: (\n            <>\n                In exterior view, verify that controls are able to move all flight control surfaces (ailerons, rudders,\n                elevators).\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_SPEEDBRAKE_CHECK,\n        title: 'Speedbrakes / Ground Spoilers',\n        state: 'CHECK',\n        moreInfoShort: (\n            <>\n                Spoilers can be controlled in the center console left of throttles (or with\n                {' '}\n                <Monospaced>/</Monospaced>\n                {' '}\n                on numpad). Extend them 100% and check that they fully extend in exterior view, then retract them again.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_FLAPS,\n        title: 'Flaps',\n        state: 'CHECK/SET',\n        moreInfoShort: (\n            <>\n                Flaps can be controlled with the wing shaped control right of throttles. They have three settings: 0%,\n                15% and 35%. Extend flaps and check in exterior view that they are working, then retract them.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_HYDRAULIC_PRESSURE_CHECK,\n        title: 'Hydraulic Pressure',\n        state: 'CHECK',\n        moreInfoShort: (\n            <>\n                Check hydraulic pressure information on\n                {' '}\n                {MFD_CJ4}\n                {' '}\n                below\n                {' '}\n                {EICAS_CJ4}\n                {' '}\n                (or via\n                {' '}\n                <KeyboardInputs inputs={['SYS']} />\n                {' '}\n                key on\n                {' '}\n                {CCP_CJ4}\n                {' '}\n                if hidden). Hydraulic\n                pressure should be green and have a value of 3000 PSI.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_ENGINE_ONLY_ANTI_ICE,\n        title: 'Engine Only Anti-Ice',\n        state: 'AS REQUIRED',\n        moreInfoLong: (\n            <>\n                While on the ground, engine only anti-ice should be enabled when in icing condition but not until\n                engines have been on for at least 1 minute. Icing condition on ground exist when\n                {' '}\n                {OAT}\n                {' '}\n                or\n                {' '}\n                {SAT}\n                {' '}\n                is at\n                or below +5&deg;C and engine may ingest moisture such as snow, slush, or standing water.\n                <br />\n                <br />\n                Engine only anti-ice can be turned on with the buttons on\n                {' '}\n                {TP_CJ4}\n                {' '}\n                in anti-ice section, just below\n                {' '}\n                {CCP_CJ4}\n                . Current outside temperatures are visible at the very bottom of\n                {' '}\n                {MFD_CJ4}\n                .\n                {' '}\n                {cj4AntiIceRules}\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_TAKEOFF_DATA,\n        title: 'Takeoff Data',\n        state: 'CONFIRM/SET',\n        moreInfoShort: (\n            <>\n                Take-off data can be set on\n                {' '}\n                {FMS}\n                . Verify that speeds turn blue on\n                {' '}\n                {FMS}\n                {' '}\n                and are displayed on\n                {' '}\n                {PFD_CJ4}\n                {' '}\n                below speed tape indicator. Expect speeds between\n                90 and 140 knots.\n            </>\n        ),\n        subItems: createTransformedList()([\n            {\n                title: (\n                    <>\n                        Take-Off Performance Page 1 (\n                        <KeyboardInputs inputs={['PERF', 'LSK 3 (TAKEOFF)']} />\n                        )\n                    </>\n                ),\n                state: 'COMPLETE',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Runway (Right Side)',\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: (\n                            <>\n                                Wind (\n                                <KeyboardInputs inputs={['RSK 1 (WIND)']} />\n                                )\n                            </>\n                        ),\n                        state: 'AS DESIRED',\n                    },\n                    {\n                        title: (\n                            <>\n                                {OAT}\n                                {' '}\n                                (\n                                <KeyboardInputs inputs={['RSK 2 (OAT)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                {QNH}\n                                {' '}\n                                (\n                                <KeyboardInputs inputs={['RSK 3 (QNH)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Runway Condition\n                                {' '}\n                                (\n                                <KeyboardInputs inputs={['LSK 5 (RWY COND)']} />\n                                )\n                            </>\n                        ),\n                        state: 'CHECKED / SET',\n                    },\n                ]),\n            },\n            {\n                title: (\n                    <>\n                        Take-Off Performance Page 2 (\n                        <KeyboardInputs inputs={['NEXT']} />\n                        )\n                    </>\n                ),\n                state: 'COMPLETE',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Anti-Ice Setting\n                                {' '}\n                                (\n                                <KeyboardInputs inputs={['LSK 1 (A/I)']} />\n                                )\n                            </>\n                        ),\n                        state: 'CHECKED / SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Take-Off Flaps\n                                {' '}\n                                (\n                                <KeyboardInputs inputs={['LSK 2 (T/O FLAPS)']} />\n                                )\n                            </>\n                        ),\n                        state: 'CHECKED / SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                V-Speeds\n                                {' '}\n                                (\n                                <KeyboardInputs inputs={['RSK 6 (SEND)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SENT TO PFD',\n                    },\n                ]),\n            },\n            {\n                title: (\n                    <>\n                        V-Speeds on\n                        {' '}\n                        {PFD_CJ4}\n                    </>\n                ),\n                state: 'CHECKED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_AVIONICS_CHECK,\n        title: 'Avionics',\n        state: 'CHECK/SET',\n        subItems: createTransformedList()([\n            {\n                title: 'Altitude Selector: Initial Altitude',\n                state: 'SET',\n            },\n            {\n                title: 'Heading Bug: Runway Heading',\n                state: 'SET',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_AUTOPILOT_CONNECT_DISCONNECT,\n        title: 'Autopilot',\n        state: 'ENGAGE/DISCONNECT',\n        moreInfoShort: (\n            <Alert\n                type=\"warning\"\n                message={(\n                    <>\n                        <strong>Bug:</strong>\n                        {' '}\n                        <Monospaced>YD</Monospaced>\n                        {' '}\n                        does not remain\n                        {' '}\n                        <Monospaced>ON</Monospaced>\n                        {' '}\n                        with normal\n                        {' '}\n                        <Monospaced>AP</Monospaced>\n                        {' '}\n                        disconnect at the moment. Expected fixed in SU7.\n                    </>\n                )}\n            />\n        ),\n        subItems: createTransformedList()([\n            {\n                title: 'YD/AP Disc Bar Disconnect Test',\n                state: 'COMPLETE',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Autopilot (\n                                <KeyboardInputs inputs={['AP']} />\n                                )\n                            </>\n                        ),\n                        state: 'ENGAGED',\n                    },\n                    {\n                        title: (\n                            <>\n                                <CASMessage level=\"info\">AP</CASMessage>\n                                {' '}\n                                on\n                                {' '}\n                                {PFD_CJ4}\n                                {' '}\n                                (autopilot connected)\n                            </>\n                        ),\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: (\n                            <>\n                                Disc Bar Trigger (\n                                <KeyboardInputs inputs={['YD/AP Disc Bar']} />\n                                )\n                            </>\n                        ),\n                        state: 'COMPLETE',\n                    },\n                    {\n                        title: (\n                            <>\n                                {PFD_CJ4}\n                                {' '}\n                                autopilot mode clear\n                            </>\n                        ),\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: (\n                            <>\n                                Disc Bar Release (\n                                <KeyboardInputs inputs={['YD/AP Disc Bar']} />\n                                )\n                            </>\n                        ),\n                        state: 'COMPLETE',\n                    },\n                ]),\n            },\n            {\n                title: 'AP Button Disconnect Test',\n                state: 'COMPLETE',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Autopilot (\n                                <KeyboardInputs inputs={['AP']} />\n                                )\n                            </>\n                        ),\n                        state: 'ENGAGED',\n                    },\n                    {\n                        title: (\n                            <>\n                                <CASMessage level=\"info\">AP</CASMessage>\n                                {' '}\n                                on\n                                {' '}\n                                {PFD_CJ4}\n                                {' '}\n                                (autopilot connected)\n                            </>\n                        ),\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: (\n                            <>\n                                AP Disconnect (\n                                <KeyboardInputs inputs={['AP']} />\n                                )\n                            </>\n                        ),\n                        state: 'COMPLETE',\n                    },\n                    {\n                        title: (\n                            <>\n                                <CASMessage level=\"info\">YD</CASMessage>\n                                {' '}\n                                on\n                                {' '}\n                                {PFD_CJ4}\n                                {' '}\n                                (yaw damper connected)\n                            </>\n                        ),\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: (\n                            <>\n                                YD Disconnect (\n                                <KeyboardInputs inputs={['YD']} />\n                                )\n                            </>\n                        ),\n                        state: 'COMPLETE',\n                    },\n                    {\n                        title: (\n                            <>\n                                {PFD_CJ4}\n                                {' '}\n                                autopilot mode clear\n                            </>\n                        ),\n                        state: 'CHECKED',\n                    },\n                ]),\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_ALTIMETER_SET,\n        title: 'Altimeter',\n        state: 'SET / CHECKED',\n        moreInfoShort: (\n            <>\n                On\n                {' '}\n                {DCP_CJ4}\n                , turn the BARO button to set barometric pressure on\n                {' '}\n                {PFD_CJ4}\n                . Then move to standby flight display and use the rotary button on its bottom right to set\n                barometric pressure for standby display. Check\n                {' '}\n                {PFD_CJ4}\n                {' '}\n                and standby display barometric pressure and indicated altitude match.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_PRESSURIZATION_CHECK,\n        title: 'Pressurization',\n        state: 'VERIFY/SET',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_EICAS_CHECK,\n        title: 'EICAS',\n        state: 'CHECK',\n        moreInfoShort: (\n            <>\n                Verify\n                {' '}\n                {EICAS_CJ4}\n                {' '}\n                on\n                {' '}\n                {MFD_CJ4}\n                {' '}\n                for all green values and no warning or error message.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAXI_AFT_DIVIDER_DOORS_OPEN,\n        title: 'Aft Divider Doors',\n        state: 'Latched Open',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CJ4_TAXI_EXTERIOR_LIGHTS,\n        title: 'Exterior Lights',\n        state: 'AS REQUIRED',\n        subItems: createTransformedList()([\n            {\n                title: 'TAXI Light',\n                state: 'ON',\n            },\n            {\n                title: 'LANDING Light',\n                state: 'AS REQUIRED',\n            },\n            {\n                title: 'STROBE Light',\n                state: 'AS REQUIRED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_TAXI_BRAKES_APPLIED,\n        title: 'Brakes',\n        state: 'APPLY/HOLD',\n        moreInfoShort: (\n            <>\n                In order to control airplane on release of Parking Brake, apply brakes first.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_TAXI_PARKING_BRAKE_RELEASED,\n        title: 'Parking Brake',\n        state: 'RELEASE',\n        moreInfoShort: (\n            <>\n                Release parking brake by pushing the pull handle below\n                {' '}\n                {TP_CJ4}\n                {' '}\n                on the left all the way in.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_TAXI_BRAKES_CHECK,\n        title: 'Brakes',\n        state: 'CHECK',\n        moreInfoShort: (\n            <>\n                Increase throttles and release brakes to start moving forward, once moving, press brakes again and\n                check that airplane can stop.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_TAXI_NOSE_WHEEL_STEERING_CHECK,\n        title: 'Nosewheel Steering',\n        state: 'CHECK',\n        moreInfoShort: (\n            <>\n                Increase throttles again and release brakes. Use rudder input to turn slightly. The airplane should\n                turn easily even at very low speeds.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_TAXI_FLIGHT_INSTRUMENTS_CHECK,\n        title: 'Flight Instruments',\n        state: 'CHECK',\n        subItems: createTransformedList()([\n            {\n                title: 'Ground Speed (GS)',\n                state: 'POSITIVE',\n            },\n            {\n                title: 'Air Speed (AS)',\n                state: 'POSITIVE',\n            },\n            {\n                title: 'Roses',\n                state: 'MOVING',\n            },\n            {\n                title: 'Artificial Horizon',\n                state: 'CHECKED / LEVEL',\n            },\n            {\n                title: 'Altimeter',\n                state: 'CHECKED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_ICE_PROTECTION_SYSTEM_CHECK,\n        title: 'Ice Protection System',\n        state: 'CHECK',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n        moreInfoShort: (\n            <>\n                Not currently modelled. Wing and engine anti-ice systems require hot air from the engines. Procedure\n                here would be to spool engines\n                {' '}\n                {N2}\n                {' '}\n                to around 70% and turn on ice protection. The\n                {' '}\n                {EICAS_CJ4}\n                {' '}\n                would display\n                WING-ANTI-ICE-COLD warning message which should disappear within 2 minutes. This indicates\n                that wings/engine anti-ice is getting hot bleed air. Required for flying in icy conditions.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_RUDDER_BIAS_SYSTEM_CHECK,\n        title: 'Rudder Bias System',\n        state: 'CHECK',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n        moreInfoShort: (\n            <>\n                <strong>Not Implemented.</strong>\n                {' '}\n                When running on a single engine, Rudder Bias System compensates for the forces that would be required\n                to put in rudder pedals to control the aircraft. These forces cannot exceed 150 lbs (68 kg) nor\n                require to reduce engine power in order to maintain control at\n                {' '}\n                <ExternalLink href=\"https://en.wikipedia.org/wiki/Minimum_control_speeds\">\n                    V\n                    <sub>MC</sub>\n                </ExternalLink>\n                {' '}\n                by regulation. For this item, pilots would spool engines up separately and verify that they can feel\n                a push in the rudder pedals.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_SEATS_UPRIGHT,\n        title: 'Seats',\n        state: 'UPRIGHT/OUTBOARD',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_FLAPS_SET,\n        title: 'Flaps',\n        state: 'CHECK/SET',\n        moreInfoShort: (\n            <>\n                Verify on\n                {' '}\n                {EICAS_CJ4}\n                {' '}\n                that flaps are extended as configured in the TAKEOFF\n                performance page. This should generally be 15&deg;. Flaps are indicated\n                on on the right side of the\n                {' '}\n                {EICAS_CJ4}\n                {' '}\n                on top of\n                {' '}\n                {MFD_CJ4}\n                , just below trims.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_SPEEDBRAKES_OFF,\n        title: 'Speed Brakes',\n        state: '0%',\n        moreInfoShort: (\n            <>\n                Verify that speedbrakes are fully retracted and set to 0%.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_TRIMS_CHECK,\n        title: 'Trims (3)',\n        state: 'SET FOR TAKEOFF',\n        moreInfoShort: (\n            <>\n                On the top right section of the\n                {' '}\n                {MFD_CJ4}\n                .\n            </>\n        ),\n        subItems: createTransformedList()([\n            {\n                title: (\n                    <>\n                        Rudder Trim (\n                        <CASMessage>RUD</CASMessage>\n                        )\n                    </>\n                ),\n                state: 'GREEN',\n            },\n            {\n                title: (\n                    <>\n                        Aileron Trim (\n                        <CASMessage>AIL</CASMessage>\n                        )\n                    </>\n                ),\n                state: 'GREEN',\n            },\n            {\n                title: (\n                    <>\n                        Elevator Trim (\n                        <CASMessage>ELEV</CASMessage>\n                        )\n                    </>\n                ),\n                state: 'GREEN',\n            },\n        ]),\n    },\n    { // FIXME: Departure Briefing.\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_CREW_BRIEFING,\n        title: 'Crew Briefing',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                Review departure instructions and verify they are programmed in\n                {' '}\n                {FMS}\n                {' '}\n                as desired.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_TCAS_TARA,\n        title: 'TCAS',\n        state: 'TA/RA',\n        moreInfoShort: (\n            <>\n                In\n                {' '}\n                {FMS}\n                , set TCAS to mode TA/RA by clicking\n                {' '}\n                <KeyboardInputs inputs={['TUN', 'RSK 5 (TA/RA)']} />\n                . This turns mode C on for transponder, emitting altitude information.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_RADAR_AS_REQUIRED,\n        title: 'Radar',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                At this point it is allowed to enable radar (traffic, weather, terrain) as required for takeoff.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_GA_BUTTON_PUSH,\n        title: 'GA Button',\n        state: 'PUSH',\n        moreInfoShort: (\n            <>\n                Above\n                {' '}\n                {FMS}\n                /\n                {MFD_CJ4}\n                {' '}\n                right of\n                {' '}\n                {DCP_CJ4}\n                {' '}\n                there is a black button below the FIRE button which\n                enables Takeoff/Go Around mode. It should be pushed once and\n                {' '}\n                <CASMessage level=\"info\">TO TO</CASMessage>\n                {' '}\n                should display\n                on the autopilot line. Flight director should also display with intended pitch at\n                takeoff.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_BATTERY_AMPS_CHECK,\n        title: 'Battery Amps',\n        state: 'VERIFY 20 OR LESS',\n        moreInfoShort: (\n            <>\n                On the\n                {' '}\n                {EICAS_CJ4}\n                , or via the\n                {' '}\n                <KeyboardInputs inputs={['SYS']} />\n                {' '}\n                key on\n                {' '}\n                {CCP_CJ4}\n                , ensure that battery still has -20 or less amps.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_ICE_PROTECTION_SYSTEM_AS_REQUIRED,\n        title: 'Ice Protection Systems',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                Check temperatures and prepare for anti-ice procedure during takeoff. Enable anti-ice as required as\n                soon as necessary.\n                {' '}\n                {cj4AntiIceRules}\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_PITOT_STATIC_HEAT_BUTTONS,\n        title: 'Pitot/Static Heat Buttons',\n        state: 'ON',\n        moreInfoShort: (\n            <>\n                Pitot/Static Heat buttons are located in the Ice Protection section on the\n                {' '}\n                {TP_CJ4}\n                {' '}\n                under the\n                {' '}\n                {MFD_CJ4}\n                . They should be turned on before take-off and on for the whole flight.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_EXTERIOR_LIGHTS,\n        title: 'Exterior Lights',\n        state: 'AS REQUIRED',\n        subItems: createTransformedList()([\n            {\n                title: 'STROBE Lights',\n                state: 'ON',\n            },\n            {\n                title: 'LANDING Lights',\n                state: 'ON',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_TAKEOFF_EICAS_CHECK,\n        title: 'EICAS',\n        state: 'CHECK',\n        moreInfoShort: (\n            <>\n                Check\n                {' '}\n                {EICAS_CJ4}\n                {' '}\n                on top of\n                {' '}\n                {MFD_CJ4}\n                , verify all values are green.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_TAKEOFF_THROTTLES,\n        title: 'Throttles',\n        state: 'TAKEOFF',\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n        moreInfoShort: (\n            <>\n                To proceed with a rolling take-off, simply push throttles all the way to 100%. If doing a standing\n                start takeoff, maintain brake pressure until\n                {' '}\n                {N1}\n                {' '}\n                settles around the top of its range, in the green, and\n                release the brakes.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_TAKEOFF_N1_COMMAND_BUGS_GREEN,\n        title: 'N1 Command Bugs',\n        state: 'GREEN CHEVRON',\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n    },\n    {\n        uid: ChecklistItems.CJ4_TAKEOFF_BRAKES_RELEASED,\n        title: 'Brakes',\n        state: 'RELEASE',\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n    },\n    {\n        uid: ChecklistItems.CJ4_TAKEOFF_CONTROL_WHEEL_ROTATE_AT_VR,\n        title: 'Control Wheel',\n        state: 'ROTATE AT VR',\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n        moreInfoShort: (\n            <>\n                Monitor speed tape, once\n                {' '}\n                {VR}\n                {' '}\n                is reached, pull lightly on yoke and let\n                nose come up as speed picks up.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_TAKEOFF_LANDING_GEAR_UP,\n        title: 'Landing Gear',\n        state: 'UP',\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n        moreInfoShort: (\n            <>\n                Once airborne with positive rate of climb, pull landing gear up. It can be done using the\n                lever below\n                {' '}\n                {SFD_CJ4}\n                .\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_TAKEOFF_FLAPS_0,\n        title: 'Flaps',\n        state: <>0&deg;</>,\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n        moreInfoShort: (\n            <>\n                Retract flaps fully by using the handle to the right of throttle levers by pushing it forward.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_TAKEOFF_THROTTLES_CLIMB,\n        title: 'Throttles',\n        state: 'CLIMB',\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n        moreInfoShort: (\n            <>\n                Pull back throttles below the takeoff (TO) detent. This can be checked on the\n                {' '}\n                {EICAS_CJ4}\n                {' '}\n                near the\n                on the\n                {' '}\n                {N2}\n                {' '}\n                bars where indication should go from TO to CLB.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_TAKEOFF_YAW_DAMPER_ON,\n        title: 'Yaw Damper',\n        state: 'ON',\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n        moreInfoShort: (\n            <>\n                Yaw Damper can be enabled using the the button labelled\n                {' '}\n                <KeyboardInputs inputs={['YD']} />\n                {' '}\n                just left of the autopilot button. This step is not necessary if you intend to enable autopilot\n                immediately as yaw damper is enabled with\n                {' '}\n                <KeyboardInputs inputs={['AP']} />\n                .\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_TAKEOFF_AUTOPILOT_AS_REQUIRED,\n        title: 'Autopilot',\n        state: 'AS DESIRED',\n        moreInfoShort: (\n            <>\n                Autopilot may be enabled using the button labelled\n                {' '}\n                <KeyboardInputs inputs={['AP']} />\n                {' '}\n                on the autopilot row. If enabled, you should also select modes like heading.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_TAKEOFF_ICE_PROTECTION_SYSTEM_CHECK,\n        title: 'Ice Protection Systems',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                Keep monitoring conditions via temperatures at the bottom of\n                {' '}\n                {MFD_CJ4}\n                {' '}\n                and follow rules outlined under the Before Takeoff checklist.\n                {' '}\n                {cj4AntiIceRules}\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_TAKEOFF_PASSENGER_LIGHTS_AS_REQUIRED,\n        title: 'Pass Lights Buttons',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                Belt sign may be turned off above 10,000ft in non-turbulant air.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_TAKEOFF_EXTERIOR_LIGHTS,\n        title: 'Landing Lights Button',\n        state: 'AS REQUIRED',\n        subItems: createTransformedList()([\n            {\n                title: 'LANDING Light',\n                state: 'OFF ABOVE 10,000 FT',\n            },\n            {\n                title: 'STROBE Light',\n                state: 'OFF ABOVE 10,000 FT',\n            },\n            {\n                title: 'LOGO Light',\n                state: 'OFF ABOVE 10,000 FT',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_TAKEOFF_PRESSURIZATION_CHECK,\n        title: 'Pressurization',\n        state: 'CHECK',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_TAKEOFF_ALTIMETERS_SET,\n        title: 'Altimeters',\n        state: 'SET/CROSSCHECK',\n        moreInfoShort: (\n            <>\n                Take note of transition altitude at departure and click the\n                {' '}\n                <KeyboardInputs inputs={['BARO']} />\n                {' '}\n                rotary in the\n                {' '}\n                {DCP_CJ4}\n                {' '}\n                to switch to standard pressure. Easiest way to check is to verify that\n                {' '}\n                <CASMessage level=\"data\">STD</CASMessage>\n                {' '}\n                is displayed below the altitude tape or on the standby flight display.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_CRUISE_THROTTLES,\n        title: 'Throttles',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                During cruise, any throttle setting maybe be used within CRUISE or CLIMB detents. Pilot should modulate\n                throttling to maintain chosen cruising speed.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_CRUISE_PRESSURIZATION,\n        title: 'Pressurization',\n        state: 'CHECK',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CJ4_CRUISE_ICE_PROTECTION_SYSTEMS,\n        title: 'Ice Protection Systems',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                Continue to monitor icing condition during cruise.\n                {' '}\n                {cj4AntiIceRules}\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_DESCENT_PRESSURIZATION,\n        title: 'Pressurization',\n        state: 'VERIFY/SET LDG ELEV',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CJ4_DESCENT_ICE_PROTECTION_SYSTEMS,\n        title: 'Ice Protection Systems',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                Prepare for anti-ice procedure during descent and enable anti-ice protection systems as soon as\n                required.\n                {' '}\n                {cj4AntiIceRules}\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_DESCENT_ALTIMETERS,\n        title: 'Altimeters',\n        state: 'SET/CROSSCHECK',\n        moreInfoShort: (\n            <>\n                Preset\n                {' '}\n                <KeyboardInputs inputs={['BARO']} />\n                {' '}\n                for landing pressure and verify transition level, press\n                {' '}\n                <KeyboardInputs inputs={['BARO']} />\n                {' '}\n                to switch from standard to local pressure altitude at transition level. Once switched, configure\n                {' '}\n                {SFD_CJ4}\n                {' '}\n                and crosscheck altitude shown.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_DESCENT_EXTERIOR_LIGHTS,\n        title: 'Exterior Lights',\n        state: 'AS REQUIRED',\n        subItems: createTransformedList()([\n            {\n                title: 'LANDING Light',\n                state: 'ON BELOW 10,000 FT',\n            },\n            {\n                title: 'STROBE Light',\n                state: 'ON BELOW 10,000 FT',\n            },\n            {\n                title: 'LOGO Light',\n                state: 'ON BELOW 10,000 FT',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_APPROACH_LANDING_DATA,\n        title: 'Landing Data',\n        state: 'CONFIRM',\n        moreInfoShort: (\n            <>\n                Once approach and runway is confirmed, configure landing performance using wind, temperature and\n                pressure altitude found in latest METAR/ATIS.\n            </>\n        ),\n        subItems: createTransformedList()([\n            {\n                title: (\n                    <>\n                        Approach Performance Page 1 (\n                        <KeyboardInputs inputs={['PERF', 'RSK 3 (APPROACH)']} />\n                        )\n                    </>\n                ),\n                state: 'OPEN',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Runway (Right Side)',\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: (\n                            <>\n                                Wind (\n                                <KeyboardInputs inputs={['RSK 1 (WIND)']} />\n                                )\n                            </>\n                        ),\n                        state: 'AS DESIRED',\n                    },\n                    {\n                        title: (\n                            <>\n                                {OAT}\n                                {' '}\n                                (\n                                <KeyboardInputs inputs={['RSK 2 (OAT)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                {QNH}\n                                {' '}\n                                (\n                                <KeyboardInputs inputs={['RSK 3 (QNH)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Runway Condition\n                                {' '}\n                                (\n                                <KeyboardInputs inputs={['LSK 6 (RWY COND)']} />\n                                )\n                            </>\n                        ),\n                        state: 'CHECKED / SET',\n                    },\n                ]),\n            },\n            {\n                title: (\n                    <>\n                        Approach Performance Page 2 (\n                        <KeyboardInputs inputs={['NEXT']} />\n                        )\n                    </>\n                ),\n                state: 'COMPLETE',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Anti-Ice Setting\n                                {' '}\n                                (\n                                <KeyboardInputs inputs={['LSK 1 (A/I)']} />\n                                )\n                            </>\n                        ),\n                        state: 'CHECKED / SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Landing Factor\n                                {' '}\n                                (\n                                <KeyboardInputs inputs={['LSK 5 (LDG FACTOR)']} />\n                                )\n                            </>\n                        ),\n                        state: 'CHECKED / SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                V-Speeds\n                                {' '}\n                                (\n                                <KeyboardInputs inputs={['RSK 6 (SEND)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SENT TO PFD',\n                    },\n                ]),\n            },\n\n        ]),\n    },\n    { // FIXME: crew briefing\n        uid: ChecklistItems.CJ4_APPROACH_CREW_BRIEFING,\n        title: 'Crew Briefing',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                Review approach procedure and prepare all necessary charts for quick access. Review missed approach\n                procedure as well.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_APPROACH_AVIONICS_FLIGHT_INSTRUMENTS,\n        title: 'Avionics/Flight Instruments',\n        state: 'CHECK',\n    },\n    {\n        uid: ChecklistItems.CJ4_APPROACH_MINIMUMS,\n        title: 'Minimums',\n        state: 'SET',\n        moreInfoShort: (\n            <>\n                Minimums can be found on the final approach chart. The CJ4 is only allowed to do CAT I approach which\n                means full visibility is required below 200 ft\n                {' '}\n                {AGL}\n                . The chart should provide the right altitude, adding ground altitude.\n                <br />\n                <br />\n                Once determined, go to the\n                {' '}\n                {DCP_CJ4}\n                , press\n                {' '}\n                <KeyboardInputs inputs={['REFS MENU']} />\n                , scroll down to\n                {' '}\n                <CASMessage>MINIMUMS</CASMessage>\n                {' '}\n                &gt;\n                {' '}\n                <CASMessage>BARO</CASMessage>\n                {' '}\n                using the large\n                {' '}\n                <KeyboardInputs inputs={['MENU ADV']} />\n                {' '}\n                scroll wheel, then use the small scroll wheel on same knob to select the altitude and\n                then click it. Minimum altitude will display under the altitude tape, as well as make an audible\n                announcement upon landing.\n                <br />\n                <br />\n                Autopilot and yaw damper should be disconnected by the time minimums are reached.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_APPROACH_FUEL_TRANSFER_SELECTOR,\n        title: 'Fuel Transfer Selector',\n        state: 'OFF',\n        moreInfoShort: (\n            <>\n                Fuel selector is located on the\n                {' '}\n                {TP_CJ4}\n                {' '}\n                near the Climate control selector. Ensure that it is in the middle position (OFF).\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_APPROACH_EXTERIOR_LIGHTS,\n        title: 'Exterior Lights',\n        state: 'AS REQUIRED',\n        subItems: createTransformedList()([\n            {\n                title: 'LANDING Light',\n                state: 'ON',\n            },\n            {\n                title: 'STROBE Light',\n                state: 'ON',\n            },\n            {\n                title: 'LOGO Light',\n                state: 'ON',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_APPROACH_ICE_PROTECTION_SYSTEMS,\n        title: 'Ice Protection Systems',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                Once again, keep monitoring conditions for anti-ice protection requirements.\n                {' '}\n                {cj4AntiIceRules}\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_APPROACH_FLAPS,\n        title: 'Flaps',\n        state: <>15&deg;</>,\n        moreInfoShort: (\n            <>\n                Extend flaps to 15&deg; once below 200\n                {' '}\n                {KIAS}\n                . This can be done by setting the flaps lever, right of\n                throttles, in the middle position.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_APPROACH_PASSENGER_BRIEFING,\n        title: 'Passenger Briefing',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                Use the\n                {' '}\n                {CCP_CJ4}\n                {' '}\n                to select the passenger briefing announcement by pressing the\n                {' '}\n                <KeyboardInputs inputs={['PASS BRIEF']} />\n                {' '}\n                button, selecting\n                {' '}\n                <CASMessage>LANDING</CASMessage>\n                {' '}\n                briefing using the menu selector.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_APPROACH_SEATS_UPRIGHT,\n        title: 'Seats',\n        state: 'UPRIGHT AND OUTBOARD',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CJ4_APPROACH_SEAT_BELTS,\n        title: 'Seat Belts',\n        state: 'ADJUSTED/SECURE',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CJ4_APPROACH_PASSENGER_LIGHTS,\n        title: 'Pass Lights Safety Button',\n        state: 'ON',\n        subItems: createTransformedList()([\n            {\n                title: 'BELT Light',\n                state: 'ON',\n            },\n            {\n                title: 'SAFETY Light',\n                state: 'ON',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_APPROACH_PRESSURIZATION,\n        title: 'Pressurization',\n        state: '< 0.5 PSI BEFORE LDG',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_LANDING_LANDING_GEAR,\n        title: 'Landing Gear',\n        state: 'DOWN (3 GREEN)',\n        moreInfoShort: (\n            <>\n                Pull landing gear down using the lever below\n                {' '}\n                {SFD_CJ4}\n                , and verify that 3 green lights come on to confirm landing gear is deployed.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_LANDING_FLAPS,\n        title: 'Flaps',\n        state: <>35&deg;</>,\n        moreInfoShort: (\n            <>\n                Deploy flaps to 35&deg; once below 160\n                {' '}\n                {KIAS}\n                . This can be done using the flaps lever pulled towards the passenger cabin completely.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_LANDING_SPEEDBRAKES_OFF,\n        title: 'Speed Brakes',\n        state: '0%',\n        moreInfoShort: (\n            <>\n                Ensure speed brakes are fully retracted by checking they are set to 0% by their lever left of\n                throttles.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_LANDING_AIRSPEED_VREF,\n        title: 'Airspeed',\n        state: 'VREF',\n        moreInfoShort: (\n            <>\n                Reduce speed to VREF. This should be visible on the speed tape after the setting landing data\n                previously, and around 105-115 knot area.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_BEFORE_LANDING_AUTOPILOT_AND_YAW_DAMPER,\n        title: 'Autopilot and Yaw Damper',\n        state: 'DISENGAGE',\n        moreInfoShort: (\n            <>\n                Disengage Autopilot and Yaw Damper by using their respective buttons by 200 ft\n                {' '}\n                {AGL}\n                .\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_LANDING_THROTTLES,\n        title: 'Throttles',\n        state: 'IDLE',\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n        moreInfoShort: (\n            <>\n                Once passing the threshold of runway, pull throttles all the way back to idle.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_LANDING_BRAKES,\n        title: 'Brakes (After NLG Touchdown)',\n        state: 'APPLY',\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n        moreInfoShort: (\n            <>\n                Let the airplane&apos;s speed die down and the airplane not want to fly until the nose landing gear\n                (NLG) touches the ground. Apply brake pressure once nose landing gear as touched down.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_LANDING_GROUND_SPOILERS,\n        title: 'Ground Spoilers',\n        state: 'EXTEND',\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n        moreInfoShort: (\n            <>\n                Extend ground spoilers to help with braking power. Ground spoilers are effective only above 70% of\n                landing speed and help brake effectiveness when airplane is still settling between on ground and\n                flying.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_GOAROUND_GA_BUTTON,\n        title: 'GA Button',\n        state: 'PUSH',\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n        moreInfoShort: (\n            <>\n                Push GA button, which is located on the right side of\n                {' '}\n                {DCP_CJ4}\n                . It is the button below\n                {' '}\n                <KeyboardInputs inputs={['L ENG FIRE']} />\n                .\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_GOAROUND_THROTTLES_1,\n        title: 'Throttles',\n        state: 'TO',\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n        moreInfoShort: (\n            <>\n                Push throttles all the way up and past the takeoff detent.\n                {' '}\n                {MFD_CJ4}\n                {' '}\n                should display TO in the\n                {' '}\n                {EICAS_CJ4}\n                .\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_GOAROUND_PITCH_ATTITUDE,\n        title: 'Pitch Attitude',\n        state: <>7.5&deg; THEN AS REQD</>,\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n        moreInfoShort: (\n            <>\n                As speed permits, pitch the airplane up to 7.5&deg; to gain altitude, then as required.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_GOAROUND_FLAPS_1,\n        title: 'Flaps',\n        state: <>15&deg;</>,\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n    },\n    {\n        uid: ChecklistItems.CJ4_GOAROUND_LANDING_GEAR,\n        title: 'Landing Gear',\n        state: 'UP',\n        tags: [ChecklistTags.IN_MEMORY_ITEM],\n        moreInfoShort: (\n            <>\n                Once positive rate of ascent is confirmed, pull landing gear up.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_GOAROUND_FLAPS_2,\n        title: 'Flaps',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                Depending on intentions, you may have to go into cruise mode or approach mode again. This decides\n                whether to stay in flaps 15&deg; and go back to approach checklist which will bring us back to 35&deg;,\n                or remove flaps completely to fly to another airport.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_GOAROUND_AIRSPEED,\n        title: 'Airspeed',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                Follow any restrictions applied by ATC or through altitude speed restrictions. Fly as required.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_GOAROUND_THROTTLES_2,\n        title: 'Throttles',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                Reduce throttles according to desired airspeed within the CLIMB or CRUISE detent.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_GOAROUND_YAW_DAMPER,\n        title: 'Yaw Damper',\n        state: 'ON',\n        moreInfoShort: (\n            <>\n                Yaw Damper can be enabled using the the button labelled\n                {' '}\n                <KeyboardInputs inputs={['YD']} />\n                {' '}\n                just left of the autopilot button. This step is not necessary if you intend to enable autopilot\n                immediately as yaw damper is enabled with AP.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_GOAROUND_AUTOPILOT,\n        title: 'Autopilot',\n        state: 'AS DESIRED',\n        moreInfoShort: (\n            <>\n                Autopilot may be enabled using the\n                {' '}\n                <KeyboardInputs inputs={['AP']} />\n                {' '}\n                within the autopilot controls of cabin. Verify modes engaged before engaging autopilot to avoid any\n                unexpected hard turns or altitude changes.\n            </>\n        ),\n    },\n\n    {\n        uid: ChecklistItems.CJ4_AFTER_LANDING_SPEEDBRAKES,\n        title: 'Speed Brakes',\n        state: '0%',\n        moreInfoShort: (\n            <>\n                Clean speed brakes by setting them to 0%.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_LANDING_FLAPS,\n        title: 'Flaps',\n        state: <>0&deg;</>,\n        moreInfoShort: (\n            <>\n                Clean flaps by setting them to 0&deg; using the lever right side of throttles.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_LANDING_PITOT_STATIC_HEAT,\n        title: 'Pitot/Static Heat Buttons',\n        state: 'OFF',\n        moreInfoShort: (\n            <>\n                Once final taxi is started, Pitot/Static Heat may be turned off using the buttons on the\n                {' '}\n                {TP_CJ4}\n                {' '}\n                under the anti-ice area.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_LANDING_ICE_PROTECTION_SYSTEMS,\n        title: 'Ice Protection Systems',\n        state: 'OFF / AS REQUIRED',\n        moreInfoShort: (\n            <>\n                Ground operation for ice protection is resumed. At this point only engine anti-ice may be used if\n                {' '}\n                {OAT}\n                /\n                {SAT}\n                {' '}\n                is below +5&deg;C and there is visible moisture that may be ingested by engines. All other\n                ice protection systems must be turned off.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_LANDING_RADAR,\n        title: 'Radar',\n        state: 'STANDBY',\n        moreInfoShort: (\n            <>\n                After leaving runway, disables all terrain and weather radar from\n                {' '}\n                {PFD_CJ4}\n                {' '}\n                /\n                {' '}\n                {MFD_CJ4}\n                .\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_AFTER_LANDING_EXTERIOR_LIGHTS,\n        title: 'Exterior Lights',\n        state: 'AS REQUIRED',\n        subItems: createTransformedList()([\n            {\n                title: 'STROBE Lights',\n                state: 'AS REQUIRED',\n            },\n            {\n                title: 'LANDING Lights',\n                state: 'AS REQUIRED',\n            },\n            {\n                title: 'TAXI Lights',\n                state: 'ON',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CJ4_SHUTDOWN_PARKING_BRAKE,\n        title: 'Parking Brake',\n        state: 'SET/WHEELS CHOCKED',\n        moreInfoShort: (\n            <>\n                Set parking brakes by pulling the round handle under yoke fully out.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_SHUTDOWN_EMERGENCY_LIGHTS,\n        title: 'Emergency Lights Switch',\n        state: 'OFF',\n        moreInfoShort: (\n            <>\n                Under the electrical panel left of\n                {' '}\n                {PFD_CJ4}\n                , turn off Emergency Lights Switch on second row all the way\n                to the left by toggling it down.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_SHUTDOWN_STANDBY_FLIGHT_DISPLAY,\n        title: 'Standby Flight Display Switch',\n        state: 'OFF',\n        moreInfoShort: (\n            <>\n                Next to Emergency Lights Switch, in electrical panel, also toggle down the Standby Flight Display\n                switch.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_SHUTDOWN_AVIONICS_SWITCH,\n        title: 'Avionics Switch',\n        state: 'OFF',\n        moreInfoShort: (\n            <>\n                Turn avionics off by setting the Avionics switch in its middle position in the electrical panel, left\n                of\n                {' '}\n                {PFD_CJ4}\n                , rightmost switch of the second row.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_SHUTDOWN_CLIMATE_CONTROL_SELECTOR,\n        title: 'Climate Control Selector',\n        state: 'OFF',\n        moreInfoShort: (\n            <>\n                On the\n                {' '}\n                {TP_CJ4}\n                {' '}\n                towards the middle, set the Climate Control selector in its left position to turn\n                climate control off.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_SHUTDOWN_ICE_PROTECTION_SYSTEMS,\n        title: 'Ice Protection Systems (All)',\n        state: 'OFF',\n        moreInfoShort: (\n            <>\n                Turn off all ice protection systems, on the\n                {' '}\n                {TP_CJ4}\n                {' '}\n                under the anti ice section.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_SHUTDOWN_THROTTLES,\n        title: 'Throttles',\n        state: 'IDLE',\n        moreInfoShort: (\n            <>\n                Pull throttles all the way down to idle in preparation for engine shutdown.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_SHUTDOWN_ENGINE_RUNSTOP_BUTTONS,\n        title: 'Engine Run/Stop Buttons (Both)',\n        state: 'STOP',\n        moreInfoShort: (\n            <>\n                Hit each engine Run/Stop button once to toggle them in STOP mode and let the engines shut down. Those\n                are the buttons just above throttles displaying RUN as engine are running.\n                <br />\n                <br />\n                Note: MSFS screen for flight end should display after this step. You may click Continue to finish the\n                last two steps of this checklist.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_SHUTDOWN_EXTERIOR_LIGHTS,\n        title: 'Exterior Lights',\n        state: 'OFF',\n        moreInfoShort: (\n            <>\n                Turn all exterior lights off.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_SHUTDOWN_BATTERY_SWITCH,\n        title: 'Battery Switch',\n        state: 'OFF',\n        moreInfoShort: (\n            <>\n                Under the electrical panel left of\n                {' '}\n                {PFD_CJ4}\n                , turn the red Battery switch off by toggling it down.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4_SHUTDOWN_CONTROL_LOCK,\n        title: 'Control Lock',\n        state: 'AS REQUIRED',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CJ4_SHUTDOWN_ENGINE_COVERS,\n        title: 'Engine Covers (After Engine Cool)',\n        state: 'INSTALL',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n]);\n","import React from 'react';\n\nimport { CASMessage } from 'components/lib/CASMessage';\nimport { KeyboardInputs } from 'components/lib/KeyboardInputs';\nimport { MFD_CJ4 } from 'components/lib/vernacular/cj4';\nimport { FMS } from 'components/lib/vernacular/common';\nimport { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistTags } from 'lib/checklist/data/tags';\nimport { createTransformedList, createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst addCJ4EXTTags = (value) => ({\n    ...value,\n    tags: [...value.tags, ChecklistTags.CJ4, ChecklistTags.EXTENSION],\n});\n\nexport const CJ4ExtChecklistItemsData = createTransformedMapping(addCJ4EXTTags)([\n    {\n        uid: ChecklistItems.CJ4EXT_BEFORE_START_EXTERNAL_POWER,\n        title: 'External Power',\n        state: 'AS REQUIRED',\n        subItems: createTransformedList()([\n            {\n                title: (\n                    <>\n                        Ground Power (\n                        <KeyboardInputs\n                            inputs={['IDX', 'NEXT', 'LSK 3 (MOD SET)', 'LSK 4 (Ground Power Unit to ON)']}\n                        />\n                        )\n                    </>\n                ),\n                state: 'ON',\n            },\n            {\n                title: (\n                    <>\n                        <CASMessage level=\"warning\">BAT AMP</CASMessage>\n                        {' '}\n                        on\n                        {' '}\n                        {MFD_CJ4}\n                    </>\n                ),\n                state: 'NOT DISPLAYED',\n            },\n        ]),\n        moreInfoLong: (\n            <>\n                Battery life without another source of power is around 10 to 15 minutes. If\n                engines are expected to be started within that timeframe, this step is not\n                necessary, otherwise it should be done.\n                <br />\n                <br />\n                In real life, cost of renting ground power would have to be weighted against cost of\n                burning a bit more fuel on the ground before taxi and using the engines as a source of power.\n                <br />\n                <br />\n                External Power can be enabled on\n                {' '}\n                {FMS}\n                . Warning\n                {' '}\n                <CASMessage level=\"warning\">BAT AMP</CASMessage>\n                {' '}\n                should disappear from\n                {' '}\n                {MFD_CJ4}\n                . If batteries get low, then\n                {' '}\n                <CASMessage level=\"warning\">LOW VOLTAGE</CASMessage>\n                {' '}\n                warning will appear on\n                {' '}\n                {MFD_CJ4}\n                .\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4EXT_BEFORE_TAKEOFF_RUNWAY_HEADING,\n        title: 'Autopilot Heading Setting',\n        state: 'RUNWAY HEADING',\n        moreInfoShort: (\n            <>\n                Optionally, it can be a good idea to do takeoff with runway heading pre-programmed\n                into autopilot. This does not mean enabling heading mode, but simply set the heading\n                setting to the runway heading so that heading mode can easily be enabled after take-off\n                if necessary.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CJ4EXT_DESCENT_INTERIOR_LIGHTS,\n        title: 'Interior / Panel Lights',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                When starting descent above cloud layer, you should expect much lower light inside cockpit after\n                passing the cloud layer. Turn on Panel backlights using the middle rotary button just above the\n                exterior lights panel anti-clockwise.\n            </>\n        ),\n    },\n]);\n","import React from 'react';\n\nimport { Vernacular } from 'components/lib/vernacular/Vernacular';\n\nexport const EICAS_CRJ = (\n    <Vernacular title=\"Engine Indicating and Crew Alerting System - Two middle screens above FMS\">\n        EICAS\n    </Vernacular>\n);\n","import React from 'react';\n\nimport { CASMessage } from 'components/lib/CASMessage';\nimport { KeyboardInputs } from 'components/lib/KeyboardInputs';\nimport {\n    APU, ITT, N1, N2,\n} from 'components/lib/vernacular/common';\nimport { EICAS_CRJ } from 'components/lib/vernacular/crj';\nimport { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistTags } from 'lib/checklist/data/tags';\nimport { createTransformedList, createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst addCRJTags = (value) => ({\n    ...value,\n    tags: [...value.tags, ChecklistTags.CRJ, ChecklistTags.OFFICIAL],\n});\n\nexport const ACRJChecklistItemsData = createTransformedMapping(addCRJTags)([\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_CIRCUIT_BREAKERS,\n        title: 'Circuit Breakers',\n        state: 'CLOSED',\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_NOSEWHEEL,\n        title: 'Nose-Wheel Steering Switch',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_HYDRAULIC_PUMPS_1,\n        title: 'Hydraulic Pumps',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_LANDING_GEAR,\n        title: 'Landing Gear Lever',\n        state: 'DOWN',\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_FLIGHT_SPOILER_LEVER,\n        title: 'Flight Spoiler Lever',\n        state: 'RETRACTED',\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_SLATS_FLAPS_LEVER,\n        title: 'Slats / Flaps Lever',\n        state: 'SET',\n        moreInfoShort: (\n            <>\n                Lever should be set to the setting corresponding to the physical position of flaps and slats while in\n                cold and dark mode, to avoid any abrupt movement once hydraulics are turned on.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_RADAR,\n        title: 'Radar',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_ADG_MANUAL_RELEASE,\n        title: 'ADG Manual Release',\n        state: 'STOWED',\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_EMERGENCY_FLAP_SWITCH,\n        title: 'Emergency Flap Switch',\n        state: 'NORMAL',\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_BATTERY_MASTER_SWITCH,\n        title: 'Battery Master Switch',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_APU,\n        title: 'APU',\n        state: 'ON / OFF',\n        moreInfoShort: (\n            <>\n                {APU}\n                {' '}\n                must remain OFF until fire test is done in Originating check list for first flight of the day.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_AC_ELECTRICS,\n        title: 'AC Electrics',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                If\n                {' '}\n                {APU}\n                {' '}\n                was started, AC electrics can be established and verified in the\n                <KeyboardInputs inputs={['ELEC']} />\n                {' '}\n                page of the secondary\n                {' '}\n                {EICAS_CRJ}\n                .\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_IRS,\n        title: 'IRS',\n        state: 'NAV',\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_EMERGENCY_EQUIPMENT,\n        title: 'Emergency Equipment',\n        state: 'CHECKED',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_GEAR_SAFETY_PINS,\n        title: 'Gear and Safety Pins',\n        state: 'ON BOARD',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_AIRPLANE_DOCUMENTS,\n        title: 'Airplane Documents',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_HYDRAULIC_PUMPS_2,\n        title: 'Hydraulic 3A Pump',\n        state: 'ON / OFF',\n        moreInfoShort: (\n            <>\n                System 3 pumps are electric driven pumps when hydraulic pressure is necessary before engine start.\n                Can remain OFF in most cases at this point.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CRJ_SAFETY_CHECK_FMS_INITIALIZATION,\n        title: 'FMS Position Initialization',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                In order to align the IRS, position initialization should be done as soon as possible. This is only\n                possible at this stage if\n                {' '}\n                {APU}\n                {' '}\n                was started.\n            </>\n        ),\n        subItems: createTransformedList()([\n            {\n                title: (\n                    <>\n                        POS INIT Page (\n                        <KeyboardInputs\n                            inputs={[\n                                'INDEX',\n                                'LSK 2 (POS INIT)',\n                            ]}\n                        />\n                        )\n                    </>\n                ),\n                state: 'OPEN',\n            },\n            {\n                title: (\n                    <>\n                        Airport Reference (\n                        <KeyboardInputs\n                            inputs={[\n                                'KEYBOARD INPUT',\n                                'LSK 2 (AIRPORT)',\n                            ]}\n                        />\n                        )\n                    </>\n                ),\n                state: 'SET',\n            },\n            {\n                title: (\n                    <>\n                        Position (\n                        <KeyboardInputs\n                            inputs={[\n                                'NEXT PAGE',\n                                'LSK 2 (GNSS1 POS)',\n                                'PREV PAGE',\n                                'RSK 5 (SET POS)',\n                            ]}\n                        />\n                        )\n                    </>\n                ),\n                state: 'SET',\n            },\n            {\n                title: 'Position',\n                state: 'VERIFIED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_CABIN_INSPECTION_CABIN_INSPECTION,\n        title: 'Cabin Inspection',\n        state: 'ACCOMPLISH',\n        subItems: createTransformedList()([\n            {\n                title: 'Emergency Lights Switch',\n                state: 'ON',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                <CASMessage>EMER LTS ON</CASMessage>\n                                {' '}\n                                on secondary\n                                {' '}\n                                {EICAS_CRJ}\n                                {' '}\n                                (STAT page)\n                            </>\n                        ),\n                        state: 'DISPLAYED',\n                    },\n                ]),\n            },\n            {\n                title: 'NO SMOKING and SEAT BELT Signs',\n                state: 'AUTO',\n            },\n            {\n                title: 'Emergency Lights Switch',\n                state: 'OFF',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                <CASMessage>EMER LTS ON</CASMessage>\n                                {' '}\n                                on secondary\n                                {' '}\n                                {EICAS_CRJ}\n                                {' '}\n                                (STAT page)\n                            </>\n                        ),\n                        state: 'NOT DISPLAYED',\n                    },\n                    {\n                        title: (\n                            <>\n                                <CASMessage level=\"warning\">EMER LTS OFF</CASMessage>\n                                {' '}\n                                on primary\n                                {' '}\n                                {EICAS_CRJ}\n                            </>\n                        ),\n                        state: 'DISPLAYED',\n                    },\n                ]),\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_CABIN_INSPECTION_WALKAROUND_INSPECTION,\n        title: 'Walk-Around Inspection',\n        state: 'ACCOMPLISH',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_CREW_OXYGEN,\n        title: 'Crew Oxygen and Masks',\n        state: 'CHECKED',\n        tags: [ChecklistTags.FIRST_FLIGHT_OF_DAY],\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_AUDIO_WARNING_PANEL,\n        title: 'Audio Warning Panel',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_ELECTRICAL_POWER_PANEL,\n        title: 'Electrical Power Panel',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'All Generators Switches (ALL GEN)',\n                state: 'AUTO',\n            },\n            {\n                title: 'IDG Disc Switches',\n                state: 'GUARDED',\n            },\n            {\n                title: 'DC Service Switch',\n                state: 'OFF',\n            },\n            {\n                title: 'Battery Master',\n                state: 'ON',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_FIRE_DETECTION,\n        title: 'Fire Detection / FIREX Monitor Test',\n        state: 'COMPLETE',\n        tags: [ChecklistTags.FIRST_FLIGHT_OF_DAY],\n        subItems: createTransformedList()([\n            {\n                title: 'Fire Detection Monitor Button',\n                state: 'PRESS 2 SECONDS',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                {' '}\n                                <CASMessage level=\"info\">FIRE SYS OK</CASMessage>\n                                {' '}\n                                on secondary\n                                {' '}\n                                {EICAS_CRJ}\n                            </>\n                        ),\n                        state: 'DISPLAYED',\n                    },\n                ]),\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_EXTERNAL_LIGHTS_PANEL,\n        title: 'External Lights Panel',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'NAV Light',\n                state: 'ON',\n            },\n            {\n                title: 'Beacon Light',\n                state: 'OFF',\n            },\n            {\n                title: 'Strobe Light',\n                state: 'OFF',\n            },\n            {\n                title: 'Logo Lights',\n                state: 'ON',\n            },\n            {\n                title: 'Wing Inspection Light',\n                state: 'OFF',\n            },\n            {\n                title: 'Landing Lights',\n                state: 'OFF',\n            },\n            {\n                title: 'Taxi Lights',\n                state: 'OFF',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_FUEL_PANEL,\n        title: 'Fuel Panel',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_BLEED_AIR_PANEL,\n        title: 'Bleed Air Panel',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'Wing A/I Cross Bleed Switch',\n                state: 'NORMAL',\n            },\n            {\n                title: 'Bleed Valves Switch',\n                state: 'AUTO',\n            },\n            {\n                title: 'ISOL Switch',\n                state: 'OPEN', // FIXME: sub item help could be useful here.\n            },\n            {\n                title: 'Bleed Source Switch',\n                state: 'BOTH ENG',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_APU_PANEL,\n        title: 'APU Panel',\n        state: 'ON / OFF',\n        moreInfoShort: (\n            <>\n                If\n                {' '}\n                {APU}\n                {' '}\n                was not started before, it can now be safely started to supply power and bleed air to systems.\n            </>\n        ),\n        subItems: createTransformedList()([\n            {\n                title: 'PWR Fuel Switch',\n                state: 'PRESS',\n            },\n            {\n                title: 'START / STOP Switch',\n                state: 'START',\n            },\n            {\n                title: 'DC and AC Electrical Power',\n                state: 'CHECKED',\n            },\n            // FIXME: help items for sub items to explain \"as required\".\n            // {\n            //     title: 'Bleed Source Switch',\n            //     state: 'AS REQUIRED',\n            // },\n            // {\n            //     title: 'Bleed Valves Switch',\n            //     state: 'AS REQUIRED',\n            // },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_START_PANEL,\n        title: 'Start Panel',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'L ENG START and R ENG START Switches',\n                state: 'OFF',\n            },\n            {\n                title: 'IGNITION, CONT Switch',\n                state: 'OFF',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_HYDRAULIC_PANEL,\n        title: 'Hydraulic Panel',\n        state: 'CHECKED, AUTO, ON (3A)',\n        subItems: createTransformedList()([\n            {\n                title: 'All Hydraulic Switches',\n                state: 'OFF',\n            },\n            {\n                title: 'EICAS, HYD Synoptic Page',\n                state: 'SELECT',\n            },\n            {\n                title: 'STAB TRIM Switches',\n                state: 'OFF / DISENGAGE',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                <CASMessage level=\"warning\">STAB TRIM</CASMessage>\n                                {' '}\n                                on primary\n                                {' '}\n                                {EICAS_CRJ}\n                            </>\n                        ),\n                        state: 'DISPLAYED',\n                    },\n                ]),\n            },\n            {\n                title: 'Fluid Quantities',\n                state: 'CHECKED',\n            },\n            {\n                title: 'Pump 1, 3B and 2 Switches',\n                state: 'ON',\n            },\n            {\n                title: 'Hydraulic Pressures',\n                state: 'CHECKED',\n            },\n            {\n                title: 'EICAS, STAT Synoptic Page',\n                state: 'SELECT',\n            },\n            {\n                title: 'STAB TRIM Switches',\n                state: 'ENGAGE',\n            },\n            {\n                title: 'Pump 1, 3B and 2 Switches',\n                state: 'AUTO',\n            },\n            {\n                title: 'Pump 3A',\n                state: 'ON',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_ELT_SWITCH,\n        title: 'ELT Switch',\n        state: 'ARM / RESET',\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_CABIN_PRESSURE_PANEL,\n        title: 'Cabin Pressure Panel',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'EICAS, ECS Synoptic Page',\n                state: 'SELECT',\n            },\n            {\n                title: 'MAN ALT Switch',\n                state: 'CENTER POSITION',\n            },\n            {\n                title: 'EMER DEPRESS Switch',\n                state: 'OFF / GUARDED',\n            },\n            {\n                title: 'PRESS CONTROL Switch',\n                state: 'OFF / FLUSH',\n            },\n            {\n                title: 'MAN RATE Switch',\n                state: 'FULL DECR',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_AIR_CONDITIONING_PANEL,\n        title: 'Air Conditioning Panel',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'PACK Switches',\n                state: 'AUTO',\n            },\n            {\n                title: 'RECIRC FAN Switch',\n                state: 'ON',\n            },\n            {\n                title: 'Temperature Control Mode',\n                state: 'AUTO',\n            },\n            {\n                title: 'RAM AIR Switch',\n                state: 'OFF / GUARDED',\n            },\n            {\n                title: 'Aft Cargo',\n                state: 'AS REQUIRED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_ANTIICE_PANEL,\n        title: 'Anti-Ice Panel',\n        state: 'CHECKED / COMPLETE',\n        subItems: createTransformedList()([\n            {\n                title: 'EICAS, PRI and STAT Pages',\n                state: 'SELECT',\n            },\n            {\n                title: 'WING and COWL Anti-Ice Switches',\n                state: 'OFF',\n            },\n            {\n                title: 'DET TEST Switch',\n                state: 'PRESSED 2 SEC',\n                subItems: createTransformedList()([\n                    {\n                        title: 'ICE Switch Light',\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: (\n                            <>\n                                <CASMessage level=\"info\">ADS HEAT TEST OK</CASMessage>\n                                {' '}\n                                on secondary\n                                {' '}\n                                {EICAS_CRJ}\n                            </>\n                        ),\n                        state: 'CHECKED',\n                    },\n                ]),\n            },\n            {\n                title: 'DET TEST Switch',\n                state: 'PRESS / RESET',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_WINDSHIELD_HEAT,\n        title: 'Windshield Heat',\n        state: 'LOW',\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_EMERGENCY_LIGHTS,\n        title: 'Emergency Lights Switch',\n        state: 'ARMED',\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_STANDBY_COMPASS,\n        title: 'Standby Compass',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_STALL_TEST,\n        title: 'Stall Test',\n        state: 'COMPLETE',\n        tags: [ChecklistTags.FIRST_FLIGHT_OF_DAY],\n        subItems: createTransformedList()([\n            {\n                title: 'STALL PTCT, Pusher Switches',\n                state: 'ON',\n            },\n            {\n                title: 'STALL Switch',\n                state: 'PUSH, HOLD',\n                subItems: createTransformedList()([\n                    {\n                        title: 'INGITION, CONT Switch',\n                        state: 'ON',\n                    },\n                    {\n                        title: (\n                            <>\n                                <CASMessage>CONT IGNITION</CASMessage>\n                                {' '}\n                                on secondary\n                                {' '}\n                                {EICAS_CRJ}\n                            </>\n                        ),\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: 'STALL Switch',\n                        state: 'FLASHING',\n                    },\n                    {\n                        title: 'Stick Checker',\n                        state: 'ON',\n                    },\n                ]),\n            },\n            {\n                title: 'STALL Switch',\n                state: 'RELEASE',\n                subItems: createTransformedList()([\n                    {\n                        title: 'INGITION, CONT Switch',\n                        state: 'OFF',\n                    },\n                    {\n                        title: (\n                            <>\n                                <CASMessage>CONT IGNITION</CASMessage>\n                                {' '}\n                                on secondary\n                                {' '}\n                                {EICAS_CRJ}\n                            </>\n                        ),\n                        state: 'OFF',\n                    },\n                ]),\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_NOSEWHEEL,\n        title: 'Nose-Wheel Steering Switch',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_CLOCKS,\n        title: 'Clocks',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_EFIS_CONTROL_PANELS,\n        title: 'EFIS Control Panels',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'Display Control Switches',\n                state: 'MAP',\n            },\n            {\n                title: 'NAV Source',\n                state: 'FMS1',\n            },\n            {\n                title: 'BARO Switch',\n                state: 'SET',\n            },\n            {\n                title: 'Display Reversionary Selector',\n                state: 'NORM',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_INSTRUMENT_PANELS,\n        title: 'Instrument Panels',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'Primary Flight Display',\n                state: 'CHECKED',\n            },\n            {\n                title: 'Altimeter Readout',\n                state: 'CROSS-CHECKED',\n            },\n            {\n                title: 'Multifunction Display',\n                state: 'CHECKED',\n            },\n            {\n                title: 'Cockpit Voice Recorder',\n                state: 'TEST',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_EICAS_AND_STDBY,\n        title: 'EICAS and Standby Instruments',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'EICAS Primary Display',\n                state: 'CHECKED',\n            },\n            {\n                title: 'Standby Altimeters / Airspeed Indicator',\n                state: 'CROSS-CHECKED',\n            },\n            {\n                title: 'EICAS Secondary Display',\n                state: 'CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Brake Temperature',\n                        state: 'CHECKED',\n                    },\n                ]),\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_UPPER_PEDESTAL,\n        title: 'Upper Pedestal',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'MUTE HORN Switch',\n                state: 'GUARDED',\n            },\n            {\n                title: 'ANTI SKID Test',\n                state: 'COMPLETE',\n                subItems: createTransformedList()([\n                    {\n                        title: 'ANTI SKID Switch',\n                        state: 'ARMED',\n                    },\n                    {\n                        title: (\n                            <>\n                                <CASMessage level=\"warning\">A/SKID INBD</CASMessage>\n                                {' '}\n                                and\n                                <CASMessage level=\"warning\">A/SKID OUTBD</CASMessage>\n                                {' '}\n                                on secondary\n                                {' '}\n                                {EICAS_CRJ}\n                            </>\n                        ),\n                        state: 'NOT DISPLAYED',\n                    },\n                    {\n                        title: 'ANTI SKID Switch',\n                        state: 'OFF',\n                    },\n                    {\n                        title: (\n                            <>\n                                <CASMessage level=\"warning\">A/SKID INBD</CASMessage>\n                                {' '}\n                                and\n                                <CASMessage level=\"warning\">A/SKID OUTBD</CASMessage>\n                                {' '}\n                                on secondary\n                                {' '}\n                                {EICAS_CRJ}\n                            </>\n                        ),\n                        state: 'DISPLAYED',\n                    },\n                    {\n                        title: 'ANTI SKID Switch',\n                        state: 'ARMED',\n                    },\n                    {\n                        title: (\n                            <>\n                                <CASMessage level=\"warning\">A/SKID INBD</CASMessage>\n                                {' '}\n                                and\n                                <CASMessage level=\"warning\">A/SKID OUTBD</CASMessage>\n                                {' '}\n                                on secondary\n                                {' '}\n                                {EICAS_CRJ}\n                            </>\n                        ),\n                        state: 'NOT DISPLAYED',\n                    },\n                ]),\n            },\n            {\n                title: 'MLG BAY Over-Heat Test',\n                state: 'COMPLETE',\n                subItems: createTransformedList()([\n                    {\n                        title: 'MLG BAY OVHT Switch',\n                        state: 'HOLD',\n                        subItems: createTransformedList()([\n                            {\n                                title: (\n                                    <>\n                                        <CASMessage level=\"critical\">MLG BAY OVHT</CASMessage>\n                                        {' '}\n                                        on primary\n                                        {' '}\n                                        {EICAS_CRJ}\n                                    </>\n                                ),\n                                state: 'DISPLAYED',\n                            },\n                        ]),\n                    },\n                    {\n                        title: 'MLG TEST WARN FAIL Switch',\n                        state: 'HOLD',\n                        subItems: createTransformedList()([\n                            {\n                                title: (\n                                    <>\n                                        <CASMessage level=\"warning\">MLG OVHT FAIL</CASMessage>\n                                        {' '}\n                                        on primary\n                                        {' '}\n                                        {EICAS_CRJ}\n                                    </>\n                                ),\n                                state: 'DISPLAYED',\n                            },\n                        ]),\n                    },\n                ]),\n            },\n            {\n                title: 'Landing Gear Lever',\n                state: 'DOWN',\n            },\n            {\n                title: 'Engines Sync Switches',\n                state: 'N1 or N2',\n            },\n            {\n                title: 'Indicator Lights Switch (IND LTS)',\n                state: 'AS REQUIRED',\n            },\n            {\n                title: 'Ground Proximity Switches (GRND PROX)',\n                state: 'CHECKED, GUARDED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_THRUST_LEVER_QUADRANT,\n        title: 'Thrust Lever Quadrant',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'PITCH and ROLL DISC Handles',\n                state: 'IN / STOWED',\n            },\n            {\n                title: 'GND LIFT DUMPING Switch',\n                state: 'CHECK / AUTO',\n            },\n            {\n                title: 'Thrust Reverser Switches',\n                state: 'ARMED',\n            },\n            {\n                title: 'Thrust Levers',\n                state: 'CHECKED / SHUT OFF',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_AVIONICS,\n        title: 'Avionics / Radio Tuning Panels',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'TCAS Test',\n                state: 'COMPLETE',\n            },\n            {\n                title: 'RTU & FMS TUNE INHIBIT Switches',\n                state: 'OFF / FLUSH',\n            },\n            {\n                title: 'Back-Up Mode Selector Switch',\n                state: 'STBY',\n            },\n            {\n                title: 'DSPLAY FAN Switch',\n                state: 'NORM',\n            },\n            {\n                title: 'IRS Switch',\n                state: 'NAV',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_TRIMS,\n        title: 'Trims',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'STAB TRIM and MACH TRIM Switches',\n                state: 'ENGAGE',\n            },\n            {\n                title: 'Aileron and Rudder Trim (AIL, RUD)',\n                state: 'CHECKED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_YAW_DAMPER,\n        title: 'Yaw Damper',\n        state: 'ENGAGE',\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_SOURCE_SELECT_PANEL,\n        title: 'Source Select Panel',\n        state: 'NORM',\n    },\n    {\n        uid: ChecklistItems.CRJ_ORIGINATING_CHECK_LOWER_PEDESTAL,\n        title: 'Lower Pedestal',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'Parking Brake',\n                state: 'SET',\n            },\n            {\n                title: 'Landing Gear Manual Release Handle',\n                state: 'STOWED',\n            },\n            {\n                title: 'ADG Manual Deploy Handle',\n                state: 'STOWED',\n            },\n            {\n                title: 'Emergency Flap Switch (EMER Flap)',\n                state: 'NORMAL',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_START_CHECK_PASS_SIGNS,\n        title: 'Passenger Signs',\n        state: 'ON',\n        subItems: createTransformedList()([\n            {\n                title: 'No Smoking Sign (NO SMKG)',\n                state: 'ON',\n            },\n            {\n                title: 'Seat Belts Sign (SEAT BLTS)',\n                state: 'ON',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_START_CHECK_LANDING_ELEVATION,\n        title: 'Landing Elevation',\n        state: 'SET',\n        moreInfoShort: (\n            <>\n                This elevation should be set to the elevation of the field we will return to in case of an emergency\n                at take-off.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_START_CHECK_BOOST_PUMPS,\n        title: 'Boost Fuel Pumps',\n        state: 'ON / CHECKED',\n        moreInfoShort: (\n            <>\n                Center tank&apos;s quantity should not increase by more than 68 kg (150 lbs). Wait 10 minutes to verify\n                values.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_START_CHECK_ALTIMETERS,\n        title: 'Altimeters',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_START_CHECK_FMS,\n        title: 'FMS',\n        state: 'SET, CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: (\n                    <>\n                        Status Page (\n                        <KeyboardInputs inputs={['INDEX', 'LSK 1 (STATUS)']} />\n                        )\n                    </>\n                ),\n                state: 'CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Navigation Data',\n                        state: 'WORLD',\n                    },\n                    {\n                        title: 'Active Database Dates',\n                        state: 'ACCURATE',\n                    },\n                    {\n                        title: 'FMC Time',\n                        state: 'ACCURATE',\n                    },\n                ]),\n            },\n            {\n                title: (\n                    <>\n                        Position Initialization (\n                        <KeyboardInputs inputs={['RSK 6 (POS INIT)']} />\n                        )\n                    </>\n                ),\n                state: 'CHECKED',\n            },\n            {\n                title: (\n                    <>\n                        Flight Plan Init 1 (\n                        <KeyboardInputs inputs={['RSK 6 (FPLN)']} />\n                        )\n                    </>\n                ),\n                state: 'SET',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Origin Airport (\n                                <KeyboardInputs inputs={['INPUT', 'LSK 1 (ORIGIN)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Destination Airport (\n                                <KeyboardInputs inputs={['INPUT', 'RSK 1 (DEST)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Alternate Destination Airport (\n                                <KeyboardInputs inputs={['INPUT', 'RSK 2 (ALTN)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Flight Number (\n                                <KeyboardInputs inputs={['INPUT', 'RSK 5 (FLT NO)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Execute (\n                                <KeyboardInputs inputs={['EXEC']} />\n                                )\n                            </>\n                        ),\n                        state: 'COMPLETE',\n                    },\n                ]),\n            },\n            {\n                title: (\n                    <>\n                        Departure Init (\n                        <KeyboardInputs inputs={['DEP/ARR']} />\n                        )\n                    </>\n                ),\n                state: 'SET',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Departure Runway (\n                                <KeyboardInputs inputs={['RSK ?']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Standard Instrument Departure (\n                                <KeyboardInputs inputs={['LSK ?']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Transition (\n                                <KeyboardInputs inputs={['INPUT', 'RSK 2 (ALTN)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Execute (\n                                <KeyboardInputs inputs={['EXEC']} />\n                                )\n                            </>\n                        ),\n                        state: 'COMPLETE',\n                    },\n                ]),\n            },\n            {\n                title: (\n                    <>\n                        Flight Plan Init 2 (\n                        <KeyboardInputs inputs={['FPLN', 'NEXT PAGE']} />\n                        )\n                    </>\n                ),\n                state: 'SET',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Highways / Waypoints (\n                                <KeyboardInputs inputs={['LSK ? / RSK ?']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Execute (\n                                <KeyboardInputs inputs={['EXEC']} />\n                                )\n                            </>\n                        ),\n                        state: 'COMPLETE',\n                    },\n                ]),\n            },\n            {\n                title: (\n                    <>\n                        Legs Page (\n                        <KeyboardInputs inputs={['LEGS']} />\n                        )\n                    </>\n                ),\n                state: 'CHECKED',\n            },\n            {\n                title: (\n                    <>\n                        Performance Page (\n                        <KeyboardInputs inputs={['PERF']} />\n                        )\n                    </>\n                ),\n                state: 'SET',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Performance Init Page 1 (\n                                <KeyboardInputs inputs={['LSK 1 (PERF INIT)']} />\n                                )\n                            </>\n                        ),\n                        state: 'OPEN',\n                        subItems: createTransformedList()([\n                            {\n                                title: 'EFB: Copy Performance Init Data to FMS',\n                                state: 'SELECTED',\n                            },\n                            {\n                                title: 'FMS: Zero Fuel Weight, Fuel Weight',\n                                state: 'CHECKED',\n                            },\n                            {\n                                title: (\n                                    <>\n                                        Cruise Altitude (\n                                        <KeyboardInputs inputs={['RSK 1 (CRZ ALT)']} />\n                                        )\n                                    </>\n                                ),\n                                state: 'SET',\n                            },\n                            {\n                                title: (\n                                    <>\n                                        Alternate Cruise Altitude (\n                                        <KeyboardInputs inputs={['RSK 2 (ALTN CRZ ALT)']} />\n                                        )\n                                    </>\n                                ),\n                                state: 'SET',\n                            },\n                        ]),\n                    },\n                    {\n                        title: (\n                            <>\n                                Performance Init Page 2 (\n                                <KeyboardInputs inputs={['NEXT PAGE']} />\n                                )\n                            </>\n                        ),\n                        state: 'OPEN',\n                        subItems: createTransformedList()([\n                            {\n                                title: (\n                                    <>\n                                        ISA Dev (\n                                        <KeyboardInputs inputs={['LSK 2 (ISA DEV)']} />\n                                        )\n                                    </>\n                                ),\n                                state: 'SET',\n                            },\n                        ]),\n                    },\n                    {\n                        title: (\n                            <>\n                                Performance Init Page 3 (\n                                <KeyboardInputs inputs={['NEXT PAGE']} />\n                                )\n                            </>\n                        ),\n                        state: 'OPEN',\n                        subItems: createTransformedList()([\n                            {\n                                title: (\n                                    <>\n                                        Reserves Fuel (\n                                        <KeyboardInputs inputs={['LSK 1 (RESERVES)']} />\n                                        )\n                                    </>\n                                ),\n                                state: 'SET',\n                            },\n                            {\n                                title: (\n                                    <>\n                                        Taxi Fuel (\n                                        <KeyboardInputs inputs={['RSK 1 (TAXI FUEL)']} />\n                                        )\n                                    </>\n                                ),\n                                state: 'SET',\n                            },\n                        ]),\n                    },\n                    {\n                        title: (\n                            <>\n                                VNAV Climb Profile (\n                                <KeyboardInputs inputs={['LSK 6 (VNAV SETUP)']} />\n                                )\n                            </>\n                        ),\n                        state: 'OPEN',\n                        subItems: createTransformedList()([\n                            {\n                                title: (\n                                    <>\n                                        Transition Altitude (\n                                        <KeyboardInputs inputs={['RSK 1 (TRANS ALT)']} />\n                                        )\n                                    </>\n                                ),\n                                state: 'SET',\n                            },\n                        ]),\n                    },\n                ]),\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_START_CHECK_IRS,\n        title: 'IRS',\n        state: 'ALIGNED, NAV',\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_START_CHECK_RADIOS,\n        title: 'Radios and Nav Aids',\n        state: 'SET',\n        moreInfoShort: 'If any navigation aids (VORs) can be used on departure, they should be configured now.',\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_START_CHECK_TAKEOFF_DATA,\n        title: 'Take-Off Data',\n        state: 'SET',\n        subItems: createTransformedList()([\n            {\n                title: 'EFB: Take-Off Speeds',\n                state: 'SET ALL',\n            },\n            {\n                title: 'PFD: V Speeds',\n                state: 'AVAILABLE',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_START_CHECK_TAKEOFF_BRIEFING,\n        title: 'Take-Off Briefing',\n        state: 'COMPLETE',\n        // FIXME: create an abstract briefing\n    },\n    {\n        uid: ChecklistItems.CRJ_CLEARED_TO_START_CHECK_PERSONAL_ELECTRONIC_DEVICES,\n        title: 'Personal Electronic Devices',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_CLEARED_TO_START_CHECK_APU,\n        title: 'APU',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.CRJ_CLEARED_TO_START_CHECK_ELECTRICS,\n        title: 'Electrics',\n        state: 'CHECKED',\n        moreInfoShort: (\n            <>\n                Electric circuits can be checked on the ELEC page of the secondary\n                {' '}\n                {EICAS_CRJ}\n                .\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CRJ_CLEARED_TO_START_CHECK_DOORS,\n        title: 'Doors',\n        state: 'CLOSED / LOCKED',\n        moreInfoShort: (\n            <>\n                Door status can be checked on the DOORS page of the secondary\n                {' '}\n                {EICAS_CRJ}\n                .\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.CRJ_CLEARED_TO_START_CHECK_BEACON,\n        title: 'Beacon',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.CRJ_CLEARED_TO_START_CHECK_FUEL_PUMPS,\n        title: 'Fuel Pumps and Quantity',\n        state: 'ON, CHECKED',\n    },\n    {\n        uid: ChecklistItems.CRJ_CLEARED_TO_START_CHECK_HYDRAULIC_PUMPS,\n        title: 'Hydraulic Pumps',\n        state: 'AUTO / ON',\n    },\n    {\n        uid: ChecklistItems.CRJ_CLEARED_TO_START_CHECK_PARKING_BRAKE,\n        title: 'Parking Brake',\n        state: 'AS REQUIRED',\n    },\n    {\n        uid: ChecklistItems.CRJ_CLEARED_TO_START_ENGINE_START,\n        title: 'Engine Start',\n        state: 'COMPLETE',\n        subItems: createTransformedList()([\n            {\n                title: 'Right Engine Start',\n                state: 'COMPLETE',\n                subItems: createTransformedList()([\n                    {\n                        title: 'R ENG Start Button',\n                        state: 'PUSH',\n                    },\n                    {\n                        title: (\n                            <>\n                                {N2}\n                                {' '}\n                                Monitor\n                            </>\n                        ),\n                        state: '20%',\n                    },\n                    {\n                        title: 'Right Throttle Lever',\n                        state: 'IDLE',\n                    },\n                    {\n                        title: (\n                            <>\n                                {N1}\n                                {' '}\n                                = 20%,\n                                {' '}\n                                {N2}\n                                {' '}\n                                = 60%,\n                                {' '}\n                                {ITT}\n                                {' '}\n                                = 525&deg;C\n                            </>\n                        ),\n                        state: 'CHECKED',\n                    },\n                ]),\n            },\n            {\n                title: 'Fuel Feed Check Valve Test',\n                state: 'COMPLETE',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Fuel Page on\n                                {' '}\n                                {EICAS_CRJ}\n                                {' '}\n                                (\n                                <KeyboardInputs inputs={['FUEL']} />\n                                )\n                            </>\n                        ),\n                        state: 'OPEN',\n                    },\n                    {\n                        title: 'Fuel Boost Pumps',\n                        state: 'OFF, BOTH',\n                    },\n                    {\n                        title: (\n                            <>\n                                <CASMessage level=\"warning\">LEFT FUEL LO PRESS</CASMessage>\n                                {' '}\n                                on primary\n                                {' '}\n                                {EICAS_CRJ}\n                            </>\n                        ),\n                        state: 'DISPLAYED',\n                    },\n                    {\n                        title: 'Fuel Boost Pumps',\n                        state: 'ON, BOTH',\n                    },\n                ]),\n            },\n            {\n                title: 'Left Engine Start',\n                state: 'COMPLETE',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_AFTER_START_CHECK_GENERATORS,\n        title: 'Electrical Panel: Generators',\n        state: 'AUTO',\n    },\n    {\n        uid: ChecklistItems.CRJ_AFTER_START_CHECK_BLEED_VALVES,\n        title: 'Bleed Valves',\n        state: 'AUTO',\n    },\n    {\n        uid: ChecklistItems.CRJ_AFTER_START_CHECK_PACKS,\n        title: 'Packs',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.CRJ_AFTER_START_CHECK_SYNOPTIC_PAGES,\n        title: 'Synoptic Pages',\n        state: 'CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: (\n                    <>\n                        Hyrdaulic System Pages (\n                        <KeyboardInputs inputs={['HYD']} />\n                        )\n                    </>\n                ),\n                state: 'CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Hydraulic Pump 1A',\n                        state: 'GREEN',\n                    },\n                    {\n                        title: 'Hydraulic Pump 2A',\n                        state: 'GREEN',\n                    },\n                    {\n                        title: 'Hydraulic Pump 3A',\n                        state: 'GREEN',\n                    },\n                ]),\n            },\n            {\n                title: (\n                    <>\n                        Eletric System Pages (\n                        <KeyboardInputs inputs={['ELEC']} />\n                        )\n                    </>\n                ),\n                state: 'CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Generator 1',\n                        state: 'GREEN',\n                    },\n                    {\n                        title: 'Generator 2',\n                        state: 'GREEN',\n                    },\n                ]),\n            },\n            {\n                title: (\n                    <>\n                        Fuel System Page (\n                        <KeyboardInputs inputs={['FUEL']} />\n                        )\n                    </>\n                ),\n                state: 'CHECKED',\n            },\n            {\n                title: (\n                    <>\n                        Flight Control Surfaces Page (\n                        <KeyboardInputs inputs={['F/CTL']} />\n                        ), Flight Controls\n                    </>\n                ),\n                state: 'FREE AND MOVING',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_AFTER_START_CHECK_APU,\n        title: 'APU',\n        state: 'OFF',\n        subItems: createTransformedList()([\n            {\n                title: 'APU Start/Stop Switch',\n                state: 'PRESSED',\n            },\n            {\n                title: 'APU, PWR Fuel Switch',\n                state: 'PRESSED',\n            },\n            {\n                title: (\n                    <>\n                        Secondary\n                        {' '}\n                        {EICAS_CRJ}\n                        {' '}\n                        Page (\n                        <KeyboardInputs inputs={['STAT']} />\n                        ), APU DOOR CLSD\n                    </>\n                ),\n                state: 'CHECKED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_AFTER_START_CHECK_ANTIICE_PROBES,\n        title: 'Anti-Ice Probes',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.CRJ_AFTER_START_CHECK_ANTIICE,\n        title: 'Anti-Ice',\n        state: 'AS REQUIRED',\n    },\n    {\n        uid: ChecklistItems.CRJ_AFTER_START_CHECK_NOSEWHEEL,\n        title: 'Nose-Wheel Steering Switch',\n        state: 'ARMED',\n    },\n    {\n        uid: ChecklistItems.CRJ_TAXI_CHECK_SLATS_FLAPS,\n        title: 'Slats / Flaps',\n        state: 'SET, CHECKED',\n    },\n    {\n        uid: ChecklistItems.CRJ_TAXI_CHECK_FLIGHT_CONTROLS,\n        title: 'Flight Controls',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.CRJ_TAXI_CHECK_TRIMS,\n        title: 'Trims',\n        state: 'GREEN, CHECKED',\n        subItems: createTransformedList()([\n            {\n                title: 'Rudder Trim (RUD)',\n                state: 'GREEN',\n            },\n            {\n                title: 'Aileron Trim (AIL)',\n                state: 'GREEN',\n            },\n            {\n                title: 'Elevator Trim',\n                state: 'SET FOR TAKEOFF, GREEN',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_TAXI_CHECK_THRUST_REVERSERS,\n        title: 'Thrust Reversers',\n        state: 'ARMED',\n    },\n    {\n        uid: ChecklistItems.CRJ_TAXI_CHECK_EXTERNAL_LIGHTS,\n        title: 'External Lights',\n        state: 'AS REQUIRED',\n        subItems: createTransformedList()([\n            {\n                title: 'Taxi Lights (RECOG TAXI LTS)',\n                state: 'ON',\n            },\n            {\n                title: 'Strobe Lights (STROBE)',\n                state: 'AS REQUIRED',\n            },\n            {\n                title: 'Landing Lights (All LANDING LTS)',\n                state: 'AS REQUIRED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_TAXI_CHECK_FLIGHT_INSTRUMENTS,\n        title: 'Flight Instruments',\n        state: 'CHECKED', // FIXME: shared with other aircraft, check the roses rotate, speeds are indicated, ...\n    },\n    {\n        uid: ChecklistItems.CRJ_TAXI_CHECK_BRAKE_TEMPS,\n        title: 'Brake Temperatures',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_TAKEOFF_CHECK_EXTERNAL_LIGHTS,\n        title: 'External Lights',\n        state: 'ON',\n        subItems: createTransformedList()([\n            {\n                title: 'Strobe Lights (STROBE)',\n                state: 'ON',\n            },\n            {\n                title: 'Landing Lights (All LANDING LTS)',\n                state: 'ON',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_TAKEOFF_CHECK_FUEL_XFLOW,\n        title: 'Fuel Cross-Flow (XFLOW)',\n        state: 'MANUAL',\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_TAKEOFF_CHECK_FLIGHT_ATTENDANT,\n        title: 'Flight Attendants',\n        state: 'ADVISED',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_TAKEOFF_CHECK_TRANSPONDER,\n        title: 'Transponder / TCAS',\n        state: 'ON, SET',\n        moreInfoShort: 'Rotate ATC SEL in Radios section on Pedestal to 1.',\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_TAKEOFF_CHECK_RADAR,\n        title: 'Radar / Terrain Display',\n        state: 'SET',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_TAKEOFF_CHECK_CAS,\n        title: 'CAS',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.CRJ_CLIMB_CHECK_FUEL_XFLOW,\n        title: 'Fuel Cross-Flow (XFLOW)',\n        state: 'AUTO',\n    },\n    {\n        uid: ChecklistItems.CRJ_CLIMB_CHECK_BLEEDS_AND_APU,\n        title: 'Bleeds and APU',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.CRJ_CLIMB_CHECK_THRUST_REVERSERS,\n        title: 'Thrust Reversers',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_CLIMB_CHECK_CAS,\n        title: 'CAS',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.CRJ_DESCENT_CHECK_LANDING_ELEVATION,\n        title: 'Landing Elevation',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.CRJ_DESCENT_CHECK_FUEL,\n        title: 'Fuel',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.CRJ_DESCENT_CHECK_TCAS,\n        title: 'TCAS',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.CRJ_DESCENT_CHECK_RADAR,\n        title: 'Radar',\n        state: 'ON / OFF',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CRJ_DESCENT_CHECK_CAS,\n        title: 'CAS',\n        state: 'CHECKED',\n    },\n    {\n        uid: ChecklistItems.CRJ_DESCENT_CHECK_LANDING_DATA,\n        title: 'Landing Data',\n        state: 'SET',\n        subItems: createTransformedList()([\n            {\n                title: (\n                    <>\n                        Arrival Init (\n                        <KeyboardInputs inputs={['DEP/ARR']} />\n                        )\n                    </>\n                ),\n                state: 'SET',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Approach (\n                                <KeyboardInputs inputs={['RSK ?']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Standard Terminal Arrival Route (\n                                <KeyboardInputs inputs={['LSK ?']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Execute (\n                                <KeyboardInputs inputs={['EXEC']} />\n                                )\n                            </>\n                        ),\n                        state: 'COMPLETE',\n                    },\n                ]),\n            },\n            {\n                title: (\n                    <>\n                        Legs Page (\n                        <KeyboardInputs inputs={['LEGS']} />\n                        )\n                    </>\n                ),\n                state: 'CHECKED',\n            },\n            {\n                title: (\n                    <>\n                        VNAV Descent Profile (\n                        <KeyboardInputs inputs={['PERF', 'LSK 2 (VNAV SETUP)', 'NEXT PAGE', 'NEXT PAGE']} />\n                        )\n                    </>\n                ),\n                state: 'OPEN',\n                subItems: createTransformedList()([\n                    {\n                        title: (\n                            <>\n                                Transition Level (\n                                <KeyboardInputs inputs={['RSK 1 (TRANS FL)']} />\n                                )\n                            </>\n                        ),\n                        state: 'SET',\n                    },\n                    {\n                        title: (\n                            <>\n                                Execute (\n                                <KeyboardInputs inputs={['EXEC']} />\n                                )\n                            </>\n                        ),\n                        state: 'COMPLETE',\n                    },\n                ]),\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJ_DESCENT_CHECK_APPROACH_BRIEFING,\n        title: 'Approach Briefing',\n        state: 'COMPLETE',\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_LANDING_CHECK_FLIGHT_ATTENDANT,\n        title: 'Flight Attendants',\n        state: 'ADVISED',\n        tags: [ChecklistTags.NOT_IMPLEMENTED],\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_LANDING_CHECK_PASSENGER_SIGNS,\n        title: 'Passenger Signs',\n        state: 'ON',\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_LANDING_CHECK_THRUST_REVERSERS,\n        title: 'Thrust Reversers',\n        state: 'ARMED',\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_LANDING_CHECK_LANDING_GEAR,\n        title: 'Landing Gear',\n        state: 'DOWN',\n    },\n    {\n        uid: ChecklistItems.CRJ_BEFORE_LANDING_CHECK_FLAPS,\n        title: 'Flaps',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.CRJ_AFTER_LANDING_CHECK_APU,\n        title: 'APU',\n        state: 'ON / OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_AFTER_LANDING_CHECK_TRANSPONDER_RADAR,\n        title: 'Transponder / Radar',\n        state: 'STANDBY / OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_AFTER_LANDING_CHECK_FLAPS,\n        title: 'Flaps',\n        state: 'UP / ZERO',\n    },\n    {\n        uid: ChecklistItems.CRJ_AFTER_LANDING_CHECK_EXTERNAL_LIGHTS,\n        title: 'External Lights',\n        state: 'SET',\n    },\n    {\n        uid: ChecklistItems.CRJ_AFTER_LANDING_CHECK_PROBES,\n        title: 'Probes',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_SHUTDOWN_CHECK_PARKING_BRAKE,\n        title: 'Parking Brake',\n        state: 'ON / OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_SHUTDOWN_CHECK_SEAT_BELTS,\n        title: 'Seat Belts',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_SHUTDOWN_CHECK_THRUST_LEVERS,\n        title: 'Thrust Levers',\n        state: 'SHUT OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_SHUTDOWN_CHECK_ANTIICE,\n        title: 'Anti-Ice',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_SHUTDOWN_CHECK_FUEL_PUMPS,\n        title: 'Fuel Pumps',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_SHUTDOWN_CHECK_BEACON,\n        title: 'Beacon',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_SHUTDOWN_CHECK_NOSEWHEEL,\n        title: 'Nose-Wheel Steering Switch',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_TERMINATING_CHECK_CHOCKS_AND_BRAKES,\n        title: 'Chocks And Brakes',\n        state: 'IN / OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_TERMINATING_CHECK_IRS,\n        title: 'IRS',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_TERMINATING_CHECK_EMERGENCY_LIGHTS,\n        title: 'Emergency Lights Switch',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_TERMINATING_CHECK_ANTIICE,\n        title: 'Anti-Ice',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_TERMINATING_CHECK_HYDRAULIC_PUMPS,\n        title: 'Hydraulic Pumps',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_TERMINATING_CHECK_EXTERNAL_LIGHTS,\n        title: 'External Lights',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_TERMINATING_CHECK_APU,\n        title: 'APU',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_TERMINATING_CHECK_BATTERY_MASTER,\n        title: 'Battery Master Switch',\n        state: 'OFF',\n    },\n    {\n        uid: ChecklistItems.CRJ_TERMINATING_CHECK_COCKPIT_LIGHTS,\n        title: 'Cockpit Lights',\n        state: 'OFF',\n    },\n]);\n","import { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistTags } from 'lib/checklist/data/tags';\nimport { createTransformedList, createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst addCRJExtTags = (value) => ({\n    ...value,\n    tags: [...value.tags, ChecklistTags.CRJ, ChecklistTags.EXTENSION],\n});\n\nexport const ACRJExtChecklistItemsData = createTransformedMapping(addCRJExtTags)([\n    {\n        uid: ChecklistItems.CRJEXT_PRE_FLIGHT_AIRCRAFT_EFB_SETUP,\n        title: 'Aircraft Setup',\n        state: 'COMPLETE',\n        subItems: createTransformedList()([\n            {\n                title: 'Performance Tab',\n                state: 'COMPLETE',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Zero Fuel Weight (ZFW)',\n                        state: 'SET',\n                    },\n                    {\n                        title: 'Fuel',\n                        state: 'SET',\n                    },\n                    {\n                        title: 'SET PAYLOAD IN SIMULATOR',\n                        state: 'COMPLETE',\n                    },\n                ]),\n            },\n            {\n                title: 'Aircraft Tab',\n                state: 'COMPLETE',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Wheel Chocks',\n                        state: 'IN PLACE',\n                    },\n                    {\n                        title: 'Passenger Door',\n                        state: 'OPEN',\n                    },\n                    {\n                        title: 'Forward Cargo Door',\n                        state: 'OPEN',\n                    },\n                    {\n                        title: 'Aft Cargo Door',\n                        state: 'OPEN',\n                    },\n                    {\n                        title: 'Service Door',\n                        state: 'OPEN',\n                    },\n                ]),\n            },\n            {\n                title: 'Maintenance Tab',\n                state: 'CHECKED',\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.CRJEXT_ORIGINATING_CHECK_FMS_INIT_REMINDER,\n        title: 'FMS Position Initialization (Reminder)',\n        state: 'COMPLETE',\n    },\n    {\n        uid: ChecklistItems.CRJEXT_BEFORE_START_CHECK_DOORS_CHOCKS,\n        title: 'Doors / Chocks',\n        state: 'LOCKED / REMOVED',\n        subItems: createTransformedList()([\n            {\n                title: 'Passenger Door',\n                state: 'CLOSED',\n            },\n            {\n                title: 'Forward Cargo Door',\n                state: 'CLOSED',\n            },\n            {\n                title: 'Aft Cargo Door',\n                state: 'CLOSED',\n            },\n            {\n                title: 'Service Door',\n                state: 'CLOSED',\n            },\n            {\n                title: 'Wheel Chocks',\n                state: 'REMOVED',\n            },\n        ]),\n    },\n]);\n","import React from 'react';\n\nimport { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistTags } from 'lib/checklist/data/tags';\nimport { createTransformedList, createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst addSimSetupTags = (value) => ({\n    ...value,\n    tags: [...value.tags, ChecklistTags.SIMSETUP],\n});\n\nexport const SimulatorSetupChecklistItemsData = createTransformedMapping(addSimSetupTags)([\n    {\n        uid: ChecklistItems.SIMSETUP_PLAN_FLIGHT,\n        title: 'Flight Planning',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                Plan the full flight, expect to figure out the following information: departure and arrival airport,\n                type of flight, route including most likely departure and arrival procedure, time in flight and fuel\n                required. Tools such as Simbrief may be used to simplify this step.\n            </>\n        ),\n        subItems: createTransformedList()([\n            {\n                title: 'Airframe',\n                state: 'SET',\n            },\n            {\n                title: 'Route (1)',\n                state: 'SET',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Departure Airport',\n                        state: 'SET',\n                    },\n                    {\n                        title: 'Arrival Airport',\n                        state: 'SET',\n                    },\n                ]),\n            },\n            {\n                title: 'Departure',\n                state: 'SET',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Departure Runway Predicted (based on METAR/ATIS)',\n                        state: 'CHECKED / SET',\n                    },\n                    {\n                        title: 'Departure Time',\n                        state: 'CHECKED / SET',\n                    },\n                ]),\n            },\n            {\n                title: 'Arrival Airport',\n                state: 'SET',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Arrival Runway Predicted (based on METAR/ATIS)',\n                        state: 'CHECKED / SET',\n                    },\n                    {\n                        title: 'Scheduled Flight Time',\n                        state: 'CHECKED',\n                    },\n                ]),\n            },\n            {\n                title: 'Alternate Airport',\n                state: 'CHECKED / SET',\n            },\n            {\n                title: 'Route (2)',\n                state: 'CHECKED / SET',\n                subItems: createTransformedList()([\n                    {\n                        title: 'SID / STAR',\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: 'Route',\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: 'Distance Within Range',\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: 'Weather / Winds',\n                        state: 'CHECKED',\n                    },\n                ]),\n            },\n            {\n                title: 'OFP',\n                state: 'CHECKED',\n                subItems: createTransformedList()([\n                    {\n                        title: 'Call Sign / Registration / Aircraft Type',\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: 'Flight Level Steps',\n                        state: 'CHECKED',\n                    },\n                    {\n                        title: 'Fuel',\n                        state: 'CHECKED',\n                        subItems: createTransformedList()([\n                            {\n                                title: 'Taxi Fuel',\n                                state: 'CHECKED',\n                            },\n                            {\n                                title: 'Trip Fuel',\n                                state: 'CHECKED',\n                            },\n                            {\n                                title: 'Alternate Fuel',\n                                state: 'CHECKED',\n                            },\n                            {\n                                title: 'Reserves',\n                                state: 'CHECKED',\n                            },\n                            {\n                                title: 'Block Fuel',\n                                state: 'CHECKED',\n                            },\n                        ]),\n                    },\n                    {\n                        title: 'Weights',\n                        state: 'CHECKED',\n                        subItems: createTransformedList()([\n                            {\n                                title: 'TOW (Maximum / Estimated)',\n                                state: 'CHECKED',\n                            },\n                            {\n                                title: 'LAW (Maximum)',\n                                state: 'CHECKED',\n                            },\n                            {\n                                title: 'ZFW',\n                                state: 'CHECKED',\n                            },\n                        ]),\n                    },\n                    {\n                        title: 'Alternate',\n                        state: 'CHECKED',\n                        subItems: createTransformedList()([\n                            {\n                                title: 'Route',\n                                state: 'CHECKED',\n                            },\n                            {\n                                title: 'Flight Level',\n                                state: 'CHECKED',\n                            },\n                        ]),\n                    },\n                ]),\n            },\n        ]),\n    },\n    {\n        uid: ChecklistItems.SIMSETUP_FLIGHT_TRACKING_START,\n        title: 'Flight Logbook Tracking',\n        state: 'AS DESIRED',\n        moreInfoShort: (\n            <>\n                If you use a third party logbook program such as Volanta or SimToolkit Pro, start it up, add the route\n                to it and connect it to your simulator.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.SIMSETUP_FLIGHT_TRACKING_END,\n        title: 'Flight Tracking',\n        state: 'ENDED',\n        moreInfoShort: (\n            <>\n                If not done automatically, stop flight tracking in preferred program and review log entry.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.SIMSETUP_FLIGHT_RECORDING_START,\n        title: 'Flight Video Recording',\n        state: 'AS DESIRED',\n        moreInfoShort: (\n            <>\n                Optional. Start software in order to screen record flight and sound. This is very useful in order\n                to review flight for mistakes or potentially report issues with aircrafts/simulator.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.SIMSETUP_FLIGHT_RECORDING_END,\n        title: 'Flight Video Recording',\n        state: 'ENDED',\n        moreInfoShort: (\n            <>\n                If flight recording was started on video, stop recording.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.SIMSETUP_POST_FLIGHT_NOTES,\n        title: 'Flight Debrief Notes',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                In your chosen logbook, write down notes for the things that went well but more importantly the things\n                that did not go well and need to be reviewed. Improve every day!\n            </>\n        ),\n    },\n]);\n","import React from 'react';\n\nimport { Monospaced } from 'components/lib/Monospaced';\nimport { ChecklistItems } from 'lib/checklist/data/listItems';\nimport { ChecklistTags } from 'lib/checklist/data/tags';\nimport { createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst addVATSIMTags = (value) => ({\n    ...value,\n    tags: [...value.tags, ChecklistTags.VATSIM],\n});\n\nexport const VATSIMChecklistItemsData = createTransformedMapping(addVATSIMTags)([\n    {\n        uid: ChecklistItems.VATSIM_METAR_ATIS_PRE_FLIGHT,\n        title: 'Initial METAR/ATIS check',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                Check METAR and ATIS information for your origin and destination airport for flight planning purposes.\n                Try to figure out what the most likely runway to use will be, either by what ATIS specifies or by wind\n                direction in METAR.\n                <br />\n                <br />\n                Note that this is subject to change at any time and should simply be used as a starting point for\n                pre-flight planning purposes.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.VATSIM_FILE_FLIGHT_PLAN,\n        title: 'File Flight Plan',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                Using your VATSIM client, publish your flight plan on the network to help controllers and other pilots\n                navigate with you in the airspace. This is mandatory even if you are flying uncontrolled.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.VATSIM_REQUEST_INITIAL_CLEARANCE,\n        title: 'Initial Clearance',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                Initial clearance and engine start authorization should be requested from relevant controller.\n                Expected information: Clearance, Departure Procedure, Initial Altitude and Squawk Code.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.VATSIM_DEPARTURE_SETTINGS,\n        title: 'Departure Settings',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                Program all of the necessary settings provided during initial clearance into the autopilot and avionics.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.VATSIM_TAXI_CLEARANCE,\n        title: 'Taxi Clearance',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                Request taxi clearance from controller either before or after pushback depending on airport rules. If\n                pushback request is required, it will be done first with a direction to face. Another request after\n                pushback will be necessary.\n                <br />\n                <br />\n                Taxi instruction which includes ending point of current instructions and taxiway path to take. Take\n                note of path provided on paper, readback and then confirm using charts before taxiing. Checking\n                the charts before taxi request to have a rough idea of path is great help in doing this smoothly.\n                <br />\n                <br />\n                In uncontrolled airport, simply announce your taxi intentions and path on UNICOM, 122.8.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.VATSIM_TAXI_MODE_CHARLIE,\n        title: 'Transponder',\n        state: 'AS REQUIRED',\n        moreInfoShort: (\n            <>\n                Some airports require transponder to be in mode Charlie even during taxi. This is specified in the\n                ATIS. In this case, check that transponder is correctly set before starting your taxi.\n                <br />\n                <br />\n                CJ4: On FMS, check\n                {' '}\n                <Monospaced>TUN &gt; RSK 5 (TCAS MODE)</Monospaced>\n                {' '}\n                is set to\n                {' '}\n                <Monospaced>TA/RA</Monospaced>\n                {' '}\n                mode.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.VATSIM_TAKEOFF_CLEARANCE,\n        title: 'Takeoff Clearance',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                Controllers will generally give you clearance on their own to line up on runway and then takeoff. Make\n                sure to wait for such clearance. If frequency is quiet, you can also announce holding short of runway\n                once before takeoff runway checklist is finished and you are ready.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.VATSIM_DESCENT_CLEARANCE,\n        title: 'Descent Clearance',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                In controlled airspace you are likely to be given descent clearance without requesting it, but if you\n                are approaching your Top-Of-Descent (TOD), you may ask for level change.\n                <br />\n                <br />\n                In uncontrolled airspace, simply make sure there is no other aircraft around and below you before\n                starting your descent and monitor the situation using VATSpy or similar.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.VATSIM_APPROACH_CLEARANCE,\n        title: 'Approach Clearance',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                In controlled airspace, make sure to be cleared for an approach before starting it. You may request\n                approach clearance or failing that hold before starting approach.\n                <br />\n                <br />\n                For uncontrolled airspace, you should announce your approach on UNICOM (122.8) especially if other\n                pilots are at the same airport.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.VATSIM_LANDING_CLEARANCE,\n        title: 'Landing Clearance',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                In controlled airspace, make sure to be cleared for landing and are on the correct runway. This is\n                likely to happen without request, but you may confirm if it isn&apos;t. Go around might be necessary if\n                clearance is not provided.\n                <br />\n                <br />\n                For uncontrolled airspace, simply announce your landing intentions on UNICOM (122.8).\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.VATSIM_GOAROUND_ANNOUNCE,\n        title: 'Go-Around Announcement',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                Once the aircraft is climbing and stable, anounce to your controller that you are going around and\n                expect new instructions.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.VATSIM_LANDING_CLEAR_OF_RUNWAY,\n        title: 'Clear-Of-Runway Announcement',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                If you leave a runway after takeoff and controller does not immedately address you, you may anounce\n                clear of runway and specify taxiway. This is especially useful to higher level controllers like\n                approach as they may not be watching you land but might have someone queued behind you to land, who\n                might be waiting on clearance.\n                <br />\n                <br />\n                Expect: TAXI instructions to gate.\n            </>\n        ),\n    },\n    {\n        uid: ChecklistItems.VATSIM_DISCONNECT_GOODBYE,\n        title: 'Goodbye / Disconnect',\n        state: 'COMPLETE',\n        moreInfoShort: (\n            <>\n                If frequency is quiet, announce you are disconnecting and thank your controller!\n            </>\n        ),\n    },\n]);\n","import { C172ChecklistItemsData } from 'lib/checklist/data/listItemsData/c172';\nimport { C172G1000ChecklistItemsData } from 'lib/checklist/data/listItemsData/c172g1000';\nimport { C172SteamChecklistItemsData } from 'lib/checklist/data/listItemsData/c172steam';\nimport { CJ4ChecklistItemsData } from 'lib/checklist/data/listItemsData/cj4';\nimport { CJ4ExtChecklistItemsData } from 'lib/checklist/data/listItemsData/cj4ext';\nimport { ACRJChecklistItemsData } from 'lib/checklist/data/listItemsData/crj';\nimport { ACRJExtChecklistItemsData } from 'lib/checklist/data/listItemsData/crjext';\nimport { SimulatorSetupChecklistItemsData } from 'lib/checklist/data/listItemsData/simulatorSetup';\nimport { VATSIMChecklistItemsData } from 'lib/checklist/data/listItemsData/vatsim';\nimport { ChecklistTags } from 'lib/checklist/data/tags';\nimport { objectMap } from 'lib/objects';\n\nexport const ChecklistItemsData = Object.freeze({\n    ...CJ4ChecklistItemsData,\n    ...CJ4ExtChecklistItemsData,\n    ...C172ChecklistItemsData,\n    ...C172SteamChecklistItemsData,\n    ...C172G1000ChecklistItemsData,\n    ...ACRJChecklistItemsData,\n    ...ACRJExtChecklistItemsData,\n    ...VATSIMChecklistItemsData,\n    ...SimulatorSetupChecklistItemsData,\n});\n\nexport const ChecklistItemsNotImplemented = new Set(\n    Object\n        .entries(objectMap(ChecklistItemsData, (item) => item.tagsSet.has(ChecklistTags.NOT_IMPLEMENTED)))\n        .filter((keyValue) => keyValue[1])\n        .map((keyValue) => keyValue[0]),\n);\n","import { ChecklistLists } from 'lib/checklist/data/lists';\nimport { createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst commonListsData = createTransformedMapping()([\n    {\n        uid: ChecklistLists.PRE_FLIGHT,\n        title: 'Pre-Flight',\n    },\n    {\n        uid: ChecklistLists.CABIN_INSPECTION,\n        title: 'Cabin Inspection',\n    },\n    {\n        uid: ChecklistLists.SAFETY,\n        title: 'Safety',\n    },\n    {\n        uid: ChecklistLists.ORIGINATING,\n        title: 'Originating',\n    },\n    {\n        uid: ChecklistLists.BEFORE_ENGINE_START,\n        title: 'Before Engine Start',\n    },\n    {\n        uid: ChecklistLists.ENGINE_START,\n        title: 'Engine Start',\n    },\n    {\n        uid: ChecklistLists.AFTER_ENGINE_START,\n        title: 'After Engine Start',\n    },\n    {\n        uid: ChecklistLists.BEFORE_TAXI,\n        title: 'Before Taxi',\n    },\n    {\n        uid: ChecklistLists.TAXI,\n        title: 'Taxi',\n    },\n    {\n        uid: ChecklistLists.RUN_UP,\n        title: 'Run-Up',\n    },\n    {\n        uid: ChecklistLists.BEFORE_TAKEOFF,\n        title: 'Before Takeoff',\n    },\n    {\n        uid: ChecklistLists.TAKEOFF,\n        title: 'Takeoff',\n    },\n    {\n        uid: ChecklistLists.AFTER_TAKEOFF_CLIMB,\n        title: 'After Takeoff / Climb',\n    },\n    {\n        uid: ChecklistLists.CLIMB,\n        title: 'Climb',\n    },\n    {\n        uid: ChecklistLists.CRUISE,\n        title: 'Cruise',\n    },\n    {\n        uid: ChecklistLists.DESCENT,\n        title: 'Descent',\n    },\n    {\n        uid: ChecklistLists.APPROACH,\n        title: 'Approach',\n    },\n    {\n        uid: ChecklistLists.BEFORE_LANDING,\n        title: 'Before Landing',\n    },\n    {\n        uid: ChecklistLists.LANDING,\n        title: 'Landing',\n    },\n    {\n        uid: ChecklistLists.ALL_ENGINES_GO_AROUND,\n        title: 'All Engines Go Around',\n        isEmergency: true,\n    },\n    {\n        uid: ChecklistLists.AFTER_LANDING,\n        title: 'After Landing',\n    },\n    {\n        uid: ChecklistLists.PARKING,\n        title: 'Parking',\n    },\n    {\n        uid: ChecklistLists.SECURING,\n        title: 'Securing',\n    },\n    {\n        uid: ChecklistLists.SHUTDOWN,\n        title: 'Shutdown',\n    },\n    {\n        uid: ChecklistLists.POST_FLIGHT,\n        title: 'Post-Flight',\n    },\n    {\n        uid: ChecklistLists.TERMINATING,\n        title: 'Terminating',\n    },\n]);\n\nexport const ChecklistListsData = Object.freeze({\n    ...commonListsData,\n});\n","import { ChecklistTags } from 'lib/checklist/data/tags';\nimport { createTransformedMapping } from 'lib/checklist/data/transforms';\n\nconst commonTagsData = createTransformedMapping()([\n    {\n        uid: ChecklistTags.OFFICIAL,\n        hidden: true,\n    },\n    {\n        uid: ChecklistTags.NOT_IMPLEMENTED,\n        hidden: true,\n    },\n    {\n        uid: ChecklistTags.FIRST_FLIGHT_OF_DAY,\n        hidden: true,\n    },\n    {\n        uid: ChecklistTags.IN_MEMORY_ITEM,\n        title: 'MEM',\n        color: '#d36a15',\n    },\n    {\n        uid: ChecklistTags.EXTENSION,\n        title: 'EXT',\n        color: '#080f8d',\n    },\n    {\n        uid: ChecklistTags.CJ4,\n        color: '#9d0606',\n    },\n    {\n        uid: ChecklistTags.C172,\n        color: '#20603c',\n    },\n    {\n        uid: ChecklistTags.C172_STEAM,\n        title: 'Steam',\n        color: '#43a0da',\n    },\n    {\n        uid: ChecklistTags.C172_G1000,\n        title: 'G1000',\n        color: '#306a8d',\n    },\n    {\n        uid: ChecklistTags.VATSIM,\n        color: '#cbab00',\n    },\n    {\n        uid: ChecklistTags.SIMSETUP,\n        color: '#6d11d0',\n    },\n    {\n        uid: ChecklistTags.CRJ,\n        color: '#000',\n    },\n]);\n\nexport const ChecklistTagsData = Object.freeze({\n    ...commonTagsData,\n});\n","import { ChecklistFiltersResults } from 'lib/checklist/data/filtersResults';\nimport { useDeepMemo } from 'lib/hooks/deep';\nimport { pick } from 'lib/pick';\n\nconst useChecklistFilterFunction = ({ checklistData, selectedFilters }) => useDeepMemo(() => {\n    const selectedFiltersSet = new Set(pick(selectedFilters, []));\n\n    const {\n        selectableFilters,\n        selectableFiltersData,\n\n        defaultFilters,\n        defaultFiltersData,\n    } = checklistData;\n\n    const filterFNs = [];\n\n    // We add all selectable filters that are selected currently.\n    selectableFilters.forEach((filterName) => {\n        if (selectedFiltersSet.has(filterName)) {\n            filterFNs.push(selectableFiltersData[filterName].fn);\n        }\n    });\n\n    // We then add all default selected filters.\n    defaultFilters.forEach((filterName) => {\n        filterFNs.push(defaultFiltersData[filterName].fn);\n    });\n\n    const finalFilterResults = new Set([\n        ChecklistFiltersResults.INCLUDE,\n        ChecklistFiltersResults.EXCLUDE,\n    ]);\n\n    return (item) => {\n        let idx = 0;\n\n        for (; idx < filterFNs.length; idx += 1) {\n            const filteringResult = filterFNs[idx](item);\n\n            if (finalFilterResults.has(filteringResult)) {\n                return filteringResult;\n            }\n        }\n\n        // Most likely with have a terminal filter in the defaults, but if not\n        // what remains gets included.\n        return ChecklistFiltersResults.INCLUDE;\n    };\n}, [checklistData, selectedFilters]);\n\nexport const useChecklistFilteredLists = ({ checklistData, selectedFilters }) => {\n    const filterFN = useChecklistFilterFunction({ checklistData, selectedFilters });\n\n    return useDeepMemo(\n        () => {\n            const { listNames, listsData, listItemsData } = checklistData;\n\n            const itemIncluded = (itemName) => filterFN(listItemsData[itemName]) === ChecklistFiltersResults.INCLUDE;\n\n            return listNames\n                .map((listName) => ({\n                    listName,\n                    items: listsData[listName].items.filter(itemIncluded),\n                }))\n                .filter((value) => value.items.length > 0);\n        },\n        [checklistData, filterFN],\n    );\n};\n","import { useMemo } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { useChecklistCountersInit } from 'lib/checklist/hooks/useChecklistCountersInit';\nimport { useChecklistData } from 'lib/checklist/hooks/useChecklistData';\nimport { useChecklistFilteredLists } from 'lib/checklist/hooks/useChecklistFilteredLists';\nimport { resetChecklistCheckedItems } from 'state/actions/checklist';\n\nexport const useChecklist = ({\n    checklistName,\n    selectedFilters,\n}) => {\n    const dispatch = useDispatch();\n\n    const checklistData = useChecklistData({ checklistName });\n\n    const filteredChecklistLists = useChecklistFilteredLists({\n        checklistData,\n        selectedFilters,\n    });\n\n    useChecklistCountersInit({\n        checklistName,\n        filteredChecklistLists,\n        checklistData,\n    });\n\n    const [resetFullCallback] = useMemo(() => [\n        () => dispatch(resetChecklistCheckedItems(checklistName)),\n    ], [checklistName]);\n\n    return {\n        checklistData,\n        checklistListsData: filteredChecklistLists,\n        resetFullCallback,\n    };\n};\n","import { useMemo } from 'react';\n\nimport { ChecklistsData } from 'lib/checklist/data/checklistsData';\nimport { ChecklistFiltersData } from 'lib/checklist/data/filtersData';\nimport { ChecklistItemsData, ChecklistItemsNotImplemented } from 'lib/checklist/data/listItemsData';\nimport { ChecklistListsData } from 'lib/checklist/data/listsData';\nimport { ChecklistTagsData } from 'lib/checklist/data/tagsData';\nimport { objectFromList } from 'lib/objects';\nimport { pick } from 'lib/pick';\n\nexport const useChecklistData = ({ checklistName }) => useMemo(() => {\n    const baseData = ChecklistsData[checklistName];\n\n    const filtersDataFN = (filterName) => ({ key: filterName, value: ChecklistFiltersData[filterName] });\n\n    const selectableFiltersData = objectFromList(baseData.selectableFilters, filtersDataFN);\n    const defaultFiltersData = objectFromList(baseData.defaultFilters, filtersDataFN);\n\n    const listNames = [];\n    const listItems = [];\n\n    const listsData = objectFromList(baseData.lists, (checklistList) => {\n        const {\n            listName, description, items, nextListNames,\n        } = checklistList;\n\n        listNames.push(listName);\n        listItems.push(...items);\n\n        return {\n            key: listName,\n            value: {\n                ...ChecklistListsData[listName],\n\n                description: pick(description),\n                items: pick(items, []),\n                nextListNames: pick(nextListNames, []),\n            },\n        };\n    });\n\n    // Remove duplicates.\n    const listItemsU = Array.from(new Set(listItems));\n\n    const listItemsData = objectFromList(listItemsU, (itemName) => {\n        const item = ChecklistItemsData[itemName];\n        const isNotImplemented = ChecklistItemsNotImplemented.has(itemName);\n        const tagsData = Array.from(item.tags).map((tag) => ChecklistTagsData[tag]);\n\n        return {\n            key: itemName,\n            value: {\n                ...item,\n\n                tagsData,\n                isNotImplemented,\n            },\n        };\n    });\n\n    return {\n        title: baseData.title,\n        description: baseData.description,\n\n        selectableFilters: pick(baseData.selectableFilters, []),\n        defaultFilters: pick(baseData.defaultFilters, []),\n\n        selectableFiltersData,\n        defaultFiltersData,\n\n        listNames,\n        listsData,\n        listItemsData,\n    };\n}, [checklistName]);\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { ChecklistInfo } from 'components/checklists/ChecklistInfo';\nimport { ChecklistListDisplay } from 'components/checklists/ChecklistListDisplay';\nimport { CenteredContentContainer } from 'components/lib/CenteredContentContainer';\nimport { useChecklist } from 'lib/checklist/hooks/useChecklist';\nimport { useChecklistSelectedListScroll } from 'lib/checklist/hooks/useChecklistSelectedListScroll';\n\nexport const ChecklistDisplay = ({\n    checklistName,\n    checklistListName,\n    selectedFilters,\n    checklistURLManager,\n}) => {\n    const {\n        checklistData,\n        checklistListsData,\n        resetFullCallback,\n    } = useChecklist({\n        checklistName,\n        selectedFilters,\n    });\n\n    useChecklistSelectedListScroll({ checklistListName });\n\n    return (\n        <CenteredContentContainer>\n            {/* FIXME: Removing this for now, should only make it work on mobile? */}\n            {/* <BlockLockscreen /> */}\n\n            <ChecklistInfo\n                checklistData={checklistData}\n                checklistURLManager={checklistURLManager}\n                selectedFilters={selectedFilters}\n                resetFullCallback={resetFullCallback}\n            />\n\n            {checklistListsData.map(({ listName, items }) => (\n                <ChecklistListDisplay\n                    key={`${checklistName}:${listName}`}\n                    checklistListName={listName}\n                    checklistName={checklistName}\n                    checklistURLManager={checklistURLManager}\n                    checklistData={checklistData}\n                    items={items}\n                />\n            ))}\n        </CenteredContentContainer>\n    );\n};\n\nChecklistDisplay.propTypes = {\n    checklistName: PropTypes.string.isRequired,\n    checklistListName: PropTypes.string,\n    selectedFilters: PropTypes.arrayOf(PropTypes.string).isRequired,\n    // eslint-disable-next-line react/forbid-prop-types\n    checklistURLManager: PropTypes.object.isRequired,\n};\n\nChecklistDisplay.defaultProps = {\n    checklistListName: null,\n};\n","import { useEffect } from 'react';\n\nimport Scroll from 'react-scroll';\n\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\n\nexport const useChecklistSelectedListScroll = ({ checklistListName }) => useEffect(() => {\n    if (isNullOrUndefined(checklistListName)) {\n        return () => null;\n    }\n\n    const timeoutID = setTimeout(() => {\n        Scroll.scroller.scrollTo(checklistListName, {\n            duration: 400,\n            smooth: true,\n            offset: -100,\n        }, 75);\n    });\n\n    return () => clearTimeout(timeoutID);\n}, [checklistListName]);\n","import React from 'react';\n\nimport { Empty } from 'antd';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport const ChecklistNotFound = ({ checklistName }) => {\n    const description = (\n        <>\n            Unknown checklist\n            {' '}\n            <em>{checklistName}</em>\n            .\n            {' '}\n            <Link to=\"/\">Go Back</Link>\n            .\n        </>\n    );\n\n    return (\n        <>\n            <Empty description={description} />\n        </>\n    );\n};\n\nChecklistNotFound.propTypes = {\n    checklistName: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport { ChecklistDisplay } from 'components/checklists/ChecklistDisplay';\nimport { ChecklistNotFound } from 'components/checklists/ChecklistNotFound';\nimport { useChecklistCheck } from 'lib/checklist/hooks/useChecklistCheck';\nimport { useChecklistURLConfig } from 'lib/checklist/hooks/useChecklistURLConfig';\n\nexport const Checklist = () => {\n    const {\n        checklistName,\n        checklistListName,\n        selectedFilters,\n        checklistURLManager,\n    } = useChecklistURLConfig();\n\n    const { checklistFound } = useChecklistCheck({\n        checklistName,\n        checklistListName,\n    });\n\n    if (!checklistFound) {\n        return <ChecklistNotFound checklistName={checklistName} />;\n    }\n\n    return (\n        <ChecklistDisplay\n            checklistName={checklistName}\n            checklistListName={checklistListName}\n            selectedFilters={selectedFilters}\n            checklistURLManager={checklistURLManager}\n        />\n    );\n};\n","import { useMemo } from 'react';\n\nimport { Checklists } from 'lib/checklist/data/checklists';\nimport { ChecklistLists } from 'lib/checklist/data/lists';\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\n\nexport const useChecklistCheck = ({\n    checklistName,\n    checklistListName,\n}) => {\n    const knownLists = useMemo(() => ({\n        checklistsNames: new Set(Object.values(Checklists)),\n        checklistListNames: new Set(Object.values(ChecklistLists)),\n    }), []);\n\n    return useMemo(() => ({\n        checklistFound: knownLists.checklistsNames.has(checklistName),\n        checklistListFound: (\n            isNullOrUndefined(checklistListName)\n            || knownLists.checklistListNames.has(checklistListName)\n        ),\n    }), [checklistName, checklistListName]);\n};\n","import { useState, useEffect, useMemo } from 'react';\n\nimport { isNotNullOrUndefined, isNullOrUndefined } from 'lib/isNullOrUndefined';\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height,\n    };\n}\n\nexport const useWindowDimensions = () => {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, [setWindowDimensions]);\n\n    return windowDimensions;\n};\n\nexport const windowWidthCondition = (limit, result) => ({ limit, result });\nexport const windowWidthFinalCondition = (result) => ({ result });\n\nexport const useWindowWidthConditions = (conditions = []) => {\n    const { width } = useWindowDimensions();\n\n    const preparedConditions = useMemo(() => {\n        if (conditions.length === 0) {\n            throw new Error('Conditions provided are empty.');\n        }\n\n        const finalCondition = conditions[conditions.length - 1];\n        if (isNotNullOrUndefined(finalCondition.limit)) {\n            throw new Error('Final condition provided has a limit.');\n        }\n\n        const resultSizes = new Set();\n\n        conditions.forEach((value, idx) => {\n            if (idx < conditions.length - 1 && isNullOrUndefined(value.limit)) {\n                throw new Error(`Condition #${idx} provided does not have a limit.`);\n            }\n\n            if (isNullOrUndefined(value.result)) {\n                throw new Error(`Condition #${idx} provided does not have results.`);\n            }\n\n            resultSizes.add(value.result.length);\n        });\n\n        if (Array.from(resultSizes).length !== 1) {\n            throw new Error('Conditions have different sizes of results.');\n        }\n\n        const result = [...conditions].sort((a, b) => {\n            if (isNullOrUndefined(a.limit)) {\n                return 1;\n            }\n            if (isNullOrUndefined(b.limit)) {\n                return -1;\n            }\n            return a.limit - b.limit;\n        });\n\n        return result;\n    }, [conditions]);\n\n    return useMemo(() => {\n        let idx = 0;\n        for (; idx < preparedConditions.length - 1; idx += 1) {\n            if (width < preparedConditions[idx].limit) {\n                return preparedConditions[idx].result;\n            }\n        }\n        return preparedConditions[idx].result;\n    }, [width, preparedConditions]);\n};\n","import React from 'react';\n\nimport { GithubOutlined } from '@ant-design/icons';\nimport { Layout } from 'antd';\nimport { useStyletron } from 'styletron-react';\n\nimport { ExternalLink } from 'components/lib/ExternalLink';\nimport { useWindowDimensions } from 'lib/hooks/useWindowDimensions';\n\nconst ANTDFooter = Layout.Footer;\n\nexport const Footer = () => {\n    const [css] = useStyletron();\n\n    const { width } = useWindowDimensions();\n\n    return (\n        <ANTDFooter className={css({ textAlign: 'center' })}>\n            TOOLING AVAILABLE\n            {' '}\n            <strong>FOR FLIGHT SIMULATION ONLY</strong>\n            .\n            {width < 780 ? (<br />) : ' '}\n            DO NOT USE FOR REAL WORLD OPERATIONS.\n            {width < 970 ? (<br />) : (\n                <>\n                    {' '}\n                    &mdash;\n                    {' '}\n                </>\n            )}\n            <GithubOutlined />\n            {' '}\n            <ExternalLink href=\"https://github.com/fmichea/flightsim-tools\" noIcon>\n                Sources\n            </ExternalLink>\n            {' '}\n            or\n            {' '}\n            <ExternalLink href=\"https://github.com/fmichea/flightsim-tools/issues\" noIcon>\n                Report Issues\n            </ExternalLink>\n        </ANTDFooter>\n    );\n};\n\nFooter.propTypes = {};\n","import React, { useMemo } from 'react';\n\nimport { useHistory } from 'react-router';\nimport { styled } from 'styletron-react';\n\nconst logoSize = 48;\n\nconst LogoContainer = styled('div', {\n    float: 'left',\n    color: 'white',\n    margin: '8px 24px 8px 0',\n    height: `${logoSize}px`,\n    fontSize: '1.5em',\n    lineHeight: `${logoSize}px`,\n    fontWeight: 'bold',\n    verticalAlign: 'middle',\n    display: 'inline-block',\n    ':hover': {\n        color: 'rgba(255, 255, 255, .8)',\n    },\n});\n\nexport const HeaderLogo = () => {\n    const history = useHistory();\n\n    const clickHandler = useMemo(() => () => history.push('/'), [history]);\n\n    return <LogoContainer onClick={clickHandler}>FlightSim Tools</LogoContainer>;\n};\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useMemo } from 'react';\n\nimport { Menu } from 'antd';\nimport { useHistory, useLocation } from 'react-router';\n\nimport { AntiIceAircrafts } from 'lib/anti-ice/data/aircrafts';\nimport { Checklists } from 'lib/checklist/data/checklists';\nimport { objectMap } from 'lib/objects';\nimport { MetarExplainerRoute } from 'lib/routes';\n\nconst useNavbarMenus = (mapping) => {\n    const { pathname } = useLocation();\n    const history = useHistory();\n\n    const menuItems = useMemo(() => objectMap(mapping, (url) => ({\n        isSelected: pathname.startsWith(url),\n        props: {\n            key: url,\n            onClick: () => history.push(url),\n        },\n    })), [mapping, pathname]);\n\n    const selectedKeys = useMemo(\n        () => Object.values(menuItems)\n            .filter((value) => value.isSelected)\n            .map((value) => value.props.key),\n        [menuItems],\n    );\n\n    return { menuItems, selectedKeys };\n};\n\nexport const Navbar = () => {\n    const {\n        menuItems: {\n            wtCJ4MenuItem,\n            wtCJ4AntiIceItem,\n            c172ChecklistMenuItem,\n            c172G1000ChecklistMenuItem,\n            crjChecklistMenuItem,\n            otherMetarExplainerMenuItem,\n        },\n        selectedKeys,\n    } = useNavbarMenus({\n        wtCJ4MenuItem: `/checklists/${Checklists.WORKINGTITLE_CJ4}`,\n        wtCJ4AntiIceItem: `/anti-ice/${AntiIceAircrafts.WORKINGTITLE_CJ4}`,\n        c172ChecklistMenuItem: `/checklists/${Checklists.C172_STEAM}`,\n        c172G1000ChecklistMenuItem: `/checklists/${Checklists.C172_G1000}`,\n        crjChecklistMenuItem: `/checklists/${Checklists.AEROSOFT_CRJ}`,\n        otherMetarExplainerMenuItem: MetarExplainerRoute,\n    });\n\n    return (\n        <Menu theme=\"dark\" mode=\"horizontal\" selectedKeys={selectedKeys}>\n            <Menu.SubMenu key=\"wt-cj4-menu\" title=\"WorkingTitle CJ4\">\n                <Menu.Item {...wtCJ4MenuItem.props}>Checklist</Menu.Item>\n                <Menu.Item {...wtCJ4AntiIceItem.props}>Anti-Ice</Menu.Item>\n            </Menu.SubMenu>\n            <Menu.SubMenu key=\"c172-menu\" title=\"Cessna 172\">\n                <Menu.Item {...c172ChecklistMenuItem.props}>C172 (Steam Gauges) Checklist</Menu.Item>\n                <Menu.Item {...c172G1000ChecklistMenuItem.props}>C172 (G1000) Checklist</Menu.Item>\n            </Menu.SubMenu>\n            <Menu.SubMenu key=\"crj-menu\" title=\"Aerosoft CRJ\">\n                <Menu.Item {...crjChecklistMenuItem.props}>Checklist</Menu.Item>\n            </Menu.SubMenu>\n            <Menu.SubMenu key=\"other\" title=\"Other\">\n                <Menu.Item {...otherMetarExplainerMenuItem.props}>METAR Explainer</Menu.Item>\n            </Menu.SubMenu>\n        </Menu>\n    );\n};\n\nNavbar.propTypes = {};\n","import React from 'react';\n\nimport { Layout as ANTDLayout } from 'antd';\nimport PropTypes from 'prop-types';\nimport { styled, useStyletron } from 'styletron-react';\n\nimport { Footer } from 'components/layout/Footer';\nimport { HeaderLogo } from 'components/layout/HeaderLogo';\nimport { Navbar } from 'components/layout/Navbar';\nimport { CenteredContentContainer } from 'components/lib/CenteredContentContainer';\n\nconst { Header, Content } = ANTDLayout;\n\nconst LayoutBackground = styled('div', {\n    background: 'white',\n    padding: '24px',\n    minHeight: '360px',\n    width: '100%',\n    maxWidth: '1200px',\n    margin: 'auto',\n});\n\nexport const Layout = ({ children }) => {\n    const [css] = useStyletron();\n\n    return (\n        <ANTDLayout className={css({ minHeight: '100vh' })}>\n            <Header>\n                <CenteredContentContainer>\n                    <HeaderLogo />\n                    <Navbar />\n                </CenteredContentContainer>\n            </Header>\n\n            <Content className={css({ margin: '0 16px' })}>\n                <ANTDLayout>\n                    <LayoutBackground>{children}</LayoutBackground>\n                </ANTDLayout>\n            </Content>\n\n            <Footer />\n\n        </ANTDLayout>\n    );\n};\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n","import { styled } from 'styletron-react';\n\nexport const List = styled('ul', {\n    listStyleType: 'circle',\n});\n\nexport const ListItem = styled('li', {\n    marginLeft: '40px',\n    marginBottom: '4px',\n});\n","import React from 'react';\n\nimport { Col, Row, Typography } from 'antd';\n\nimport { List, ListItem } from 'components/lib/List';\n\nconst { Title } = Typography;\n\nexport const MainPage = () => (\n    <>\n        <Title>FlightSim Tools</Title>\n\n        <p>\n            This is just a set of tools that help me fly. Currently you will find checklists for aircrafts that I like,\n            and information for anti-ice for the CJ4. Here is a list of features that can be found for each.\n        </p>\n\n        <Row>\n            <Col span={12}>\n                <Title level={3}>Checklists</Title>\n\n                <List>\n                    <ListItem>\n                        <strong>Official Items:</strong>\n                        {' '}\n                        for each aircraft, by default, all the official items are included.\n                    </ListItem>\n\n                    <ListItem>\n                        <strong>Aircraft Extension Items:</strong>\n                        {' '}\n                        For some lists, extension items adding to the official checklist can be included within, using\n                        the Configure menu.\n                    </ListItem>\n\n                    <ListItem>\n                        <strong>VATSIM Items:</strong>\n                        {' '}\n                        For some lists, VATSIM items can be included within the checklists using the Configure menu.\n                    </ListItem>\n\n                    <ListItem>\n                        <strong>Easy Access to Next List:</strong>\n                        {' '}\n                        At the bottom of each list, access the next list that makes the most sense, even when two or\n                        more do.\n                    </ListItem>\n\n                    <ListItem>\n                        <strong>Small Screen Support:</strong>\n                        {' '}\n                        checklists layout changes as the screen gets smaller. Currently screens are supported down\n                        to iPad size.\n                    </ListItem>\n\n                    <ListItem>\n                        <strong>Left Handed Mode:</strong>\n                        {' '}\n                        Within configure, left handed mode can be enabled to move the switches to the left side of the\n                        screen, making it easier to manipulate item states left handed.\n                    </ListItem>\n                </List>\n            </Col>\n\n            <Col span={12}>\n                <Title level={3}>Anti-Ice</Title>\n\n                <List>\n                    <ListItem>\n                        <strong>Get Configuration:</strong>\n                        {' '}\n                        input current current moisture conditions, and temperature: get the right configuration to use\n                        and an explanation of why it may be configured as such.\n                    </ListItem>\n                </List>\n            </Col>\n        </Row>\n    </>\n);\n","import PropTypes from 'prop-types';\n\nexport const AirportIdentifierPropTypes = {\n    prettyArgs: PropTypes.shape({\n        airportCode: PropTypes.node.isRequired,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { AirportIdentifierPropTypes } from 'components/metar/renderers/airportIdentifier/propTypes';\n\nexport const AirportIdentifierValue = ({ prettyArgs: { airportCode } }) => <>{airportCode}</>;\n\nAirportIdentifierValue.propTypes = AirportIdentifierPropTypes;\n","import React from 'react';\n\nimport { AirportIdentifierPropTypes } from 'components/metar/renderers/airportIdentifier/propTypes';\n\nexport const AirportIdentifierShort = ({ prettyArgs: { airportCode } }) => (\n    <>\n        {airportCode}\n        {' '}\n        is the ICAO code of the airport for which this METAR was generated.\n    </>\n);\n\nAirportIdentifierShort.propTypes = AirportIdentifierPropTypes;\n","import React from 'react';\n\nimport { AirportIdentifierValue } from 'components/metar/renderers/airportIdentifier/AirportIdenfitierValue';\nimport { AirportIdentifierShort } from 'components/metar/renderers/airportIdentifier/AirportIdentifierShort';\n\nexport const AirportIdentifierRenderers = {\n    renderValue: AirportIdentifierValue,\n    renderTitle: () => <>Airport ICAO Code</>,\n    renderShort: AirportIdentifierShort,\n};\n","import PropTypes from 'prop-types';\n\nexport const AltimeterPropTypes = {\n    data: PropTypes.shape({\n        altimeterUnitP: PropTypes.string,\n        valueP: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    }).isRequired,\n\n    prettyArgs: PropTypes.shape({\n        altimeterUnit: PropTypes.node,\n        value: PropTypes.node,\n    }).isRequired,\n};\n","export const TokenTypes = Object.freeze({\n    NOT_RECOGNIZED: 'not-recognized',\n\n    AIRPORT_IDENTIFIER: 'airport-identifier',\n    ALTIMETER_SETTING: 'altimeter-setting',\n    CLOUD_COVERAGE: 'cloud-coverage',\n    METAR_PREFIX: 'metar-prefix',\n    METAR_PREFIX_OTHER: 'metar-prefix-other',\n    METAR_TIME: 'metar-time',\n    MISSING_DATA: 'missing-data',\n    PRESENT_WEATHER: 'present-weather',\n    PREVAILING_VISIBILITY: 'prevailing-visibility',\n    REMARKS: 'remarks',\n    RUNWAY_VISUAL_RANGE: 'runway-visual-range',\n    TEMPERATURES: 'temperatures',\n    TREND: 'trend',\n    VERTICAL_VISIBILITY: 'vertical-visibility',\n    WIND: 'wind',\n    WIND_SHEAR: 'wind-shear',\n    RECENT_WEATHER: 'recent-weather',\n    SEA_SURFACE: 'sea-surface',\n    RUNWAY_STATE: 'runway-state',\n    COLOR_SYSTEMS: 'color-systems',\n});\n\nexport const WindSpeedUnit = Object.freeze({\n    KNOTS: 'knots',\n    METERS_PER_SECOND: 'm/s',\n});\n\nexport const CloudLayerAmount = Object.freeze({\n    NSC: 'nil-significant-cloud',\n    NCD: 'no-cloud-description',\n    CLR: 'clear-12000',\n    SKC: 'sky-clear',\n\n    FEW: 'few',\n    SCT: 'scattered',\n    BKN: 'broken',\n    OVC: 'overcast',\n});\n\nexport const CloudTypes = Object.freeze({\n    CB: 'cumulonimbus',\n    TCU: 'towering-cumulonimbus',\n    NOT_DESCRIBED: 'not-described',\n});\n\nexport const CloudLayerAltitude = Object.freeze({\n    BELOW: 'below',\n});\n\nexport const AltimeterUnit = Object.freeze({\n    INHG: 'inHg',\n    HPA: 'hPA',\n});\n\nexport const AltimeterSetting = Object.freeze({\n    NOT_REPORTED: 'not-reported',\n});\n\nexport const WindDirections = Object.freeze({\n    VRB: 'variable',\n    NOT_REPORTED: 'not-reported',\n});\n\nexport const WindForce = Object.freeze({\n    NOT_REPORTED: 'not-reported',\n});\n\nexport const Directions = Object.freeze({\n    N: 'north',\n    NE: 'north-east',\n    E: 'east',\n    SE: 'south-east',\n    S: 'south',\n    SW: 'south-west',\n    W: 'west',\n    NW: 'north-west',\n\n    NDV: 'no-directional-variation',\n});\n\nexport const PrevailingVisibility = Object.freeze({\n    CAVOK: 'cavok',\n    TEN_K: '10k-or-better',\n    MISSING: 'missing',\n    LESS_THAN_QUARTER_MILE: 'less-than-quarter-mile',\n});\n\nexport const PrevailingVisibilityUnit = Object.freeze({\n    METERS: 'meters',\n    KILOMETERS: 'kilometers',\n    MILES: 'miles',\n});\n\nexport const WeatherIntensity = Object.freeze({\n    LIGHT: 'light',\n    HEAVY: 'heavy',\n});\n\nexport const WeatherProximity = Object.freeze({\n    VINCINITY: 'vincinity',\n});\n\nexport const WeatherDescriptor = Object.freeze({\n    SHALLOW: 'shallow',\n    PATCHES: 'patches',\n    PARTIAL: 'partial',\n    LOW_DRIFTING: 'low-drifting',\n    BLOWING: 'blowing',\n    SHOWER: 'shower',\n    THUNDERSTORM: 'thunderstorm',\n    FREEZING: 'freezing',\n});\n\nexport const WeatherPhenomena = Object.freeze({\n    // Precipitation\n    DRIZZLE: 'drizzle',\n    RAIN: 'rain',\n    SNOW: 'snow',\n    SNOW_GRAINS: 'snow-grains',\n    ICE_PELLETS: 'ice-pellets',\n    HAIL: 'hail',\n    SMALL_HAIL_SNOW: 'small-hail-snow',\n    UNKNOWN_PRECIPITATION: 'unknown-precipitation',\n\n    // Obscuration\n    MIST: 'mist',\n    FOG: 'fog',\n    SMOKE: 'smoke',\n    VOLCANIC_HASH: 'volcanic-hash',\n    DUST: 'widespread-dust',\n    SAND: 'sand',\n    HAZE: 'haze',\n\n    // Other\n    DUST_DEVILS: 'dust-devils',\n    SQUALLS: 'squalls',\n    FUNNEL_CLOUD: 'funnel-cloud',\n    SANDSTORM: 'sandstorm',\n    DUSTSTORM: 'duststorm',\n\n    NSW: 'no-significant-weather',\n});\n\nexport const RunwayVisualRangeQualifier = Object.freeze({\n    NONE: 'none',\n    AT_LEAST: 'at-least',\n    AT_MOST: 'at-most',\n});\n\nexport const WindShearRunway = Object.freeze({\n    ALL_RUNWAYS: 'all-runways',\n});\n\nexport const SeaSurfaceInfoType = Object.freeze({\n    SURFACE_STATE: 'surface-state',\n    WAVE_HEIGHT: 'wave-height',\n});\n\nexport const SeaSurfaceStateCode = Object.freeze({\n    CALM_GLASSY: 'calm-glassy', // 0\n    CALM_RIPPLED: 'calm-rippled', // 1\n    SMOOTH: 'smooth', // 2\n    SLIGHT: 'slight', // 3\n    MODERATE: 'moderate', // 4\n    ROUGH: 'rough', // 5\n    VERY_ROUGH: 'very-rough', // 6\n    HIGH: 'high', // 7\n    VERY_HIGH: 'very-high', // 8\n    PHENOMENAL: 'phenomenal', // 9\n});\n\nexport const RunwayDeposit = Object.freeze({\n    CLEAR_AND_DRY: 'clear-and-dry', // 0\n    DAMP: 'damp', // 1\n    WET: 'wet', // 2\n    RIME_AND_FROST: 'rime-and-frost', // 3\n    DRY_SNOW: 'dry-snow', // 4\n    WET_SNOW: 'wet-snow', // 5\n    SLUSH: 'slush', // 6\n    ICE: 'ice', // 7\n    COMPACTED_SNOW: 'compacted-snow', // 8\n    FROZEN_RUTS: 'frozen-ruts', // 9\n\n    NOT_REPORTED: 'not-reported', // /\n});\n\nexport const RunwayContaminationExtent = Object.freeze({\n    BELOW_TEN: 'below-ten', // 1\n    TEN_TO_TWENTY_FIVE: 'ten-to-twenty-five', // 2\n    TWENTY_FIVE_TO_FIFTY: 'twenty-five-to-fifty', // 5\n    ABOVE_FIFTY: 'above-fifty', // 9\n\n    NOT_REPORTED: 'not-reported', // /\n    UNKNOWN_RESERVED: 'unknown-reserved',\n});\n\nexport const RunwayContaminationDepth = Object.freeze({\n    TEN_CM: 'ten-cm', // 92\n    FIFTEEN_CM: 'fifteen-cm', // 93\n    TWENTY_CM: 'twenty-cm', // 94\n    TWENTY_FIVE_CM: 'twenty-five-cm', // 95\n    THIRTY_CM: 'thirty-cm', // 96\n    THIRTY_FIVE_CM: 'thirty-five-cm', // 97\n    FORTY_CM: 'forty-cm', // 98\n\n    NOT_OPERATIONAL: 'not-operational', // 99\n    NOT_REPORTED: 'not-reported', // //\n});\n\nexport const RunwaySurfaceFriction = Object.freeze({\n    BRAKING_ACTION_POOR: 'braking-action-poor', // 91\n    BRAKING_ACTION_MEDIUM_POOR: 'braking-action-medium-poor', // 92\n    BRAKING_ACTION_MEDIUM: 'braking-action-medium', // 93\n    BRAKING_ACTION_MEDIUM_GOOD: 'braking-action-medium-good', // 94\n    BRAKING_ACTION_GOOD: 'braking-action-good', // 95\n\n    UNRELIABLE: 'unreliable', // 99\n    UNKNOWN_RESERVED: 'unknown-reserved', // 96-98\n    NOT_REPORTED: 'not-reported', // //\n});\n\nexport const TrendType = Object.freeze({\n    NOSIG: 'no-significant-change',\n    BECOMING: 'becoming',\n    TEMPORARY: 'temporary',\n});\n\nexport const TrendTimeType = Object.freeze({\n    FROM: 'from',\n    UNTIL: 'until',\n    AT: 'at',\n});\n\nexport const Temperatures = Object.freeze({\n    NOT_REPORTED: 'not-reported',\n});\n","import React from 'react';\n\nimport { AltimeterPropTypes } from 'components/metar/renderers/altimeter/propTypes';\nimport { AltimeterSetting, AltimeterUnit } from 'lib/metar/enums';\n\nconst renderAltimeterUnit = (unit) => (unit === AltimeterUnit.HPA ? 'hectopascals' : 'inches of mercury');\n\nconst renderAltimeterValue = ({ valueP, value, altimeterUnitP }) => {\n    if (valueP === AltimeterSetting.NOT_REPORTED) {\n        return (\n            <>\n                but value could not be reported (\n                {value}\n                )\n            </>\n        );\n    }\n\n    return (\n        <>\n            and should be set to\n            {' '}\n            {valueP}\n            {' '}\n            {altimeterUnitP}\n            {' '}\n            (\n            {value}\n            )\n        </>\n    );\n};\n\nexport const AltimeterShort = ({\n    data: { altimeterUnitP, valueP },\n    prettyArgs: { altimeterUnit, value },\n}) => (\n    <>\n        Altimeter setting for airport is expressed in\n        {' '}\n        {renderAltimeterUnit(altimeterUnitP)}\n        {' '}\n        (\n        {altimeterUnit}\n        )\n        {' '}\n        {renderAltimeterValue({ valueP, value, altimeterUnitP })}\n    </>\n);\n\nAltimeterShort.propTypes = AltimeterPropTypes;\n","import React from 'react';\n\nimport { ThinSpace } from 'components/lib/spaces';\nimport { AltimeterPropTypes } from 'components/metar/renderers/altimeter/propTypes';\n\nexport const AltimeterValue = ({ prettyArgs: { altimeterUnit, value } }) => (\n    <>\n        {altimeterUnit}\n        <ThinSpace />\n        {value}\n    </>\n);\n\nAltimeterValue.propTypes = AltimeterPropTypes;\n","import React from 'react';\n\nimport { AltimeterShort } from 'components/metar/renderers/altimeter/AltimeterShort';\nimport { AltimeterValue } from 'components/metar/renderers/altimeter/AltimeterValue';\n\nexport const AltimeterRenderers = {\n    renderValue: AltimeterValue,\n    renderTitle: () => <>Altimeter Setting</>,\n    renderShort: AltimeterShort,\n};\n","import PropTypes from 'prop-types';\n\nexport const CloudCoveragePropTypes = {\n    data: PropTypes.shape({\n        altitudeP: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n        ]),\n        amountP: PropTypes.string.isRequired,\n        cloudTypeP: PropTypes.string,\n    }).isRequired,\n\n    prettyArgs: PropTypes.shape({\n        amount: PropTypes.node,\n        altitude: PropTypes.node,\n        cloudType: PropTypes.node,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { Monospaced } from 'components/lib/Monospaced';\nimport { CloudCoveragePropTypes } from 'components/metar/renderers/cloudCoverage/propTypes';\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { CloudLayerAltitude, CloudLayerAmount, CloudTypes } from 'lib/metar/enums';\n\nconst renderAmount = ({ amountP, amount }) => {\n    if (amountP === CloudLayerAmount.NSC) {\n        return (\n            <>\n                No significant cloud coverage was reported (\n                {amount}\n                {' '}\n                =\n                {' '}\n                <Monospaced>\n                    <strong>N</strong>\n                    il\n                    {' '}\n                    <strong>S</strong>\n                    ignificant\n                    {' '}\n                    <strong>C</strong>\n                    loud\n                </Monospaced>\n                )\n            </>\n        );\n    }\n\n    if (amountP === CloudLayerAmount.NCD) {\n        return (\n            <>\n                Automatic observing station was unable to report cloud coverage\n                {' '}\n                (\n                {amount}\n                )\n            </>\n        );\n    }\n\n    if (amountP === CloudLayerAmount.CLR) {\n        return (\n            <>\n                There are no visible clouds below 12000 ft (\n                {amount}\n                )\n            </>\n        );\n    }\n\n    if (amountP === CloudLayerAmount.SKC) {\n        return (\n            <>\n                Skies are clear (\n                {amount}\n                )\n            </>\n        );\n    }\n\n    switch (amountP) {\n    case CloudLayerAmount.FEW:\n        return (\n            <>\n                A few clouds covering up to 25% of the sky (\n                {amount}\n                ) was reported\n            </>\n        );\n\n    case CloudLayerAmount.SCT:\n        return (\n            <>\n                Scattered clouds covering 25 to 50% of the sky (\n                {amount}\n                ) was reported\n            </>\n        );\n\n    case CloudLayerAmount.BKN:\n        return (\n            <>\n                Broken clouds covering more than 50% of the sky (\n                {amount}\n                ) was reported\n            </>\n        );\n\n    case CloudLayerAmount.OVC:\n        return (\n            <>\n                Complete coverage of the sky by clouds (\n                {amount}\n                ) was reported\n            </>\n        );\n\n    default:\n        return <>FIXME</>;\n    }\n};\n\nconst renderAltitude = ({ altitudeP, altitude }) => {\n    if (isNullOrUndefined(altitudeP)) {\n        return null;\n    }\n\n    if (altitudeP === CloudLayerAltitude.BELOW) {\n        return (\n            <>\n                {' '}\n                below the reporting station (\n                {altitude}\n                )\n            </>\n        );\n    }\n\n    return (\n        <>\n            {' '}\n            at altitude of\n            {' '}\n            {altitudeP}\n            {' '}\n            ft (\n            {altitude}\n            )\n        </>\n    );\n};\nconst renderCloudType = ({ cloudTypeP, cloudType }) => {\n    if (isNullOrUndefined(cloudTypeP)) {\n        return null;\n    }\n\n    switch (cloudTypeP) {\n    case CloudTypes.CB:\n        return (\n            <>\n                Cumulonimbuses are reported (\n                {cloudType}\n                ).\n            </>\n        );\n\n    case CloudTypes.TCU:\n        return (\n            <>\n                Towering Cumulonimbuses are reported (\n                {cloudType}\n                ).\n            </>\n        );\n\n    case CloudTypes.NOT_DESCRIBED:\n        return (\n            <>\n                Cloud type could not be described by automated system (\n                {cloudType}\n                ).\n            </>\n        );\n\n    default:\n        return null;\n    }\n};\n\nexport const CloudCoverageShort = ({\n    data: { altitudeP, amountP, cloudTypeP },\n    prettyArgs: { amount, altitude, cloudType },\n}) => (\n    <>\n        {isNullOrUndefined(amountP) && isNullOrUndefined(altitudeP) ? null : (\n            <>\n                {renderAmount({ amountP, amount })}\n                {renderAltitude({ altitudeP, altitude })}\n                .\n                {isNullOrUndefined(cloudTypeP) ? null : ' '}\n            </>\n        )}\n        {renderCloudType({ cloudTypeP, cloudType })}\n    </>\n);\n\nCloudCoverageShort.propTypes = CloudCoveragePropTypes;\n","import React from 'react';\n\nimport { ThinSpace } from 'components/lib/spaces';\nimport { CloudCoveragePropTypes } from 'components/metar/renderers/cloudCoverage/propTypes';\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\n\nconst renderAmountAltitude = ({ amount, altitude }) => {\n    if (isNullOrUndefined(amount) && isNullOrUndefined(altitude)) {\n        return (\n            <>\n                &#47;&#47;&#47;\n                <ThinSpace />\n            </>\n        );\n    }\n    return (\n        <>\n            {amount}\n            {isNullOrUndefined(altitude) ? null : (\n                <>\n                    <ThinSpace />\n                    {altitude}\n                </>\n            )}\n        </>\n    );\n};\n\nexport const CloudCoverageValue = ({\n    prettyArgs: { amount, altitude, cloudType },\n}) => (\n    <>\n        {renderAmountAltitude({ amount, altitude })}\n        {isNullOrUndefined(cloudType) ? null : (\n            <>\n                <ThinSpace />\n                {cloudType}\n            </>\n        )}\n    </>\n);\n\nCloudCoverageValue.propTypes = CloudCoveragePropTypes;\n","import React from 'react';\n\nimport { CloudCoverageShort } from 'components/metar/renderers/cloudCoverage/CloudCoverageShort';\nimport { CloudCoverageValue } from 'components/metar/renderers/cloudCoverage/CloudCoverageValue';\n\nexport const CloudCoverageRenderers = {\n    renderValue: CloudCoverageValue,\n    renderTitle: () => <>Cloud Coverage</>,\n    renderShort: CloudCoverageShort,\n};\n","import React from 'react';\n\nimport { ColorSystemsShort } from 'components/metar/renderers/colorSystems/ColorSystemsShort';\nimport { ColorSystemsValue } from 'components/metar/renderers/colorSystems/ColorSystemsValue';\n\nexport const ColorSystemsRenderers = {\n    renderValue: ColorSystemsValue,\n    renderTitle: () => <>Color Systems</>,\n    renderShort: ColorSystemsShort,\n};\n","/* eslint-disable react/forbid-prop-types */\nimport PropTypes from 'prop-types';\n\nexport const ColorSystemsPropTypes = {\n    data: PropTypes.shape({\n        args: PropTypes.array.isRequired,\n    }).isRequired,\n\n    prettyArgs: PropTypes.any.isRequired,\n};\n","import React from 'react';\n\nimport { ThickSpace } from 'components/lib/spaces';\nimport { ColorSystemsPropTypes } from 'components/metar/renderers/colorSystems/propTypes';\n\nexport const ColorSystemsValue = ({ data: { args }, prettyArgs }) => {\n    const prettyArgsOrdered = args.map((value, idx) => (\n        <React.Fragment key={value}>\n            {idx === 0 ? null : <ThickSpace />}\n            {prettyArgs[value]}\n        </React.Fragment>\n    ));\n\n    return <>{prettyArgsOrdered}</>;\n};\n\nColorSystemsValue.propTypes = ColorSystemsPropTypes;\n","import React from 'react';\n\nexport const ColorSystemsShort = () => (\n    <>\n        Color codes defined at a local level. Refer to local METAR reference for explanation on the code&apos;s\n        meaning.\n    </>\n);\n","import PropTypes from 'prop-types';\n\nexport const METARTimePropTypes = {\n    data: PropTypes.shape({\n        dayOfMonthP: PropTypes.number.isRequired,\n        hour: PropTypes.string.isRequired,\n        minutes: PropTypes.string.isRequired,\n    }).isRequired,\n\n    prettyArgs: PropTypes.shape({\n        dayOfMonth: PropTypes.node.isRequired,\n        hour: PropTypes.node.isRequired,\n        minutes: PropTypes.node.isRequired,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { METARTimePropTypes } from 'components/metar/renderers/metarTime/propTypes';\nimport { getOrdinalNumber } from 'lib/numbers';\n\nexport const METARTimeShort = ({\n    data: { dayOfMonthP, hour: hourP, minutes: minutesP },\n    prettyArgs: { dayOfMonth, hour, minutes },\n}) => (\n    <>\n        METAR was generated on the\n        {' '}\n        {getOrdinalNumber(dayOfMonthP)}\n        {' '}\n        day of the month\n        (\n        {dayOfMonth}\n        ) at\n        {' '}\n        {hourP}\n        :\n        {minutesP}\n        {' '}\n        UTC time\n        (\n        {hour}\n        {' '}\n        {minutes}\n        ).\n    </>\n);\n\nMETARTimeShort.propTypes = METARTimePropTypes;\n","import React from 'react';\n\nimport { ThinSpace } from 'components/lib/spaces';\nimport { METARTimePropTypes } from 'components/metar/renderers/metarTime/propTypes';\n\nexport const METARTimeValue = ({ prettyArgs: { dayOfMonth, hour, minutes } }) => (\n    <>\n        {dayOfMonth}\n        <ThinSpace />\n        {hour}\n        <ThinSpace />\n        {minutes}\n        <ThinSpace />\n        Z\n    </>\n);\n\nMETARTimeValue.propTypes = METARTimePropTypes;\n","import React from 'react';\n\nimport { METARTimeShort } from 'components/metar/renderers/metarTime/METARTimeShort';\nimport { METARTimeValue } from 'components/metar/renderers/metarTime/METARTimeValue';\n\nexport const METARTimeRenderers = {\n    renderValue: METARTimeValue,\n    renderTitle: () => <>METAR Time</>,\n    renderShort: METARTimeShort,\n};\n","import PropTypes from 'prop-types';\n\nexport const MissingDataPropTypes = {\n    data: PropTypes.shape({\n        value: PropTypes.string,\n    }).isRequired,\n\n    prettyArgs: PropTypes.shape({\n        value: PropTypes.node,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { MissingDataPropTypes } from 'components/metar/renderers/missingData/propTypes';\n\nexport const MissingDataShort = ({ prettyArgs: { value } }) => (\n    <>\n        Information was missing or could not be reported by automated system. (\n        {value}\n        ).\n    </>\n);\n\nMissingDataShort.propTypes = MissingDataPropTypes;\n","import React from 'react';\n\nimport { MissingDataPropTypes } from 'components/metar/renderers/missingData/propTypes';\n\nexport const MissingDataValue = ({ prettyArgs: { value } }) => <>{value}</>;\n\nMissingDataValue.propTypes = MissingDataPropTypes;\n","import React from 'react';\n\nimport { MissingDataShort } from 'components/metar/renderers/missingData/MissingDataShort';\nimport { MissingDataValue } from 'components/metar/renderers/missingData/MissingDataValue';\n\nexport const MissingDataRenderers = {\n    renderValue: MissingDataValue,\n    renderTitle: () => <>Missing Data</>,\n    renderShort: MissingDataShort,\n};\n","import PropTypes from 'prop-types';\n\nexport const NotRecognizedPropTypes = {\n    data: PropTypes.shape({\n        value: PropTypes.string,\n        message: PropTypes.string,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { NotRecognizedPropTypes } from 'components/metar/renderers/notRecognized/propTypes';\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\n\nexport const NotRecognizedShort = ({ data: { message } }) => (\n    isNullOrUndefined(message) ? null : <>{message}</>);\n\nNotRecognizedShort.propTypes = NotRecognizedPropTypes;\n","import React from 'react';\n\nimport { NotRecognizedPropTypes } from 'components/metar/renderers/notRecognized/propTypes';\n\nexport const NotRecognizedValue = ({ data: { value } }) => <>{value}</>;\n\nNotRecognizedValue.propTypes = NotRecognizedPropTypes;\n","import { NotRecognizedShort } from 'components/metar/renderers/notRecognized/NotRecognizedShort';\nimport { NotRecognizedValue } from 'components/metar/renderers/notRecognized/NotRecognizedValue';\n\nexport const NotRecognizedRenderers = {\n    renderValue: NotRecognizedValue,\n    renderShort: NotRecognizedShort,\n};\n","import PropTypes from 'prop-types';\n\nexport const PrefixPropTypes = {\n    data: PropTypes.shape({\n        value: PropTypes.string.isRequired,\n    }).isRequired,\n\n    prettyArgs: PropTypes.shape({\n        value: PropTypes.node.isRequired,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { PrefixPropTypes } from 'components/metar/renderers/prefix/propTypes';\n\nexport const PrefixShort = ({ data: { value } }) => {\n    if (value === 'SPECI' || value === 'METAR') {\n        return <>Optional prefix prepended to METAR data.</>;\n    }\n\n    if (value === 'AUTO') {\n        return <>This weather report was generated by automated systems.</>;\n    }\n\n    if (value === 'COR') {\n        return <>This weather report is a correction of a previous report.</>;\n    }\n\n    return null;\n};\n\nPrefixShort.propTypes = PrefixPropTypes;\n","import React from 'react';\n\nimport { PrefixPropTypes } from 'components/metar/renderers/prefix/propTypes';\n\nexport const PrefixTitle = ({ data: { value } }) => {\n    if (value === 'SPECI' || value === 'METAR') {\n        return <>METAR Prefix</>;\n    }\n\n    if (value === 'AUTO') {\n        return <>Automated Weather Report</>;\n    }\n\n    if (value === 'COR') {\n        return <>Correction</>;\n    }\n\n    return null;\n};\n\nPrefixTitle.propTypes = PrefixPropTypes;\n","import React from 'react';\n\nimport { PrefixPropTypes } from 'components/metar/renderers/prefix/propTypes';\n\nexport const PrefixValue = ({ prettyArgs: { value } }) => <>{value}</>;\n\nPrefixValue.propTypes = PrefixPropTypes;\n","import { PrefixShort } from 'components/metar/renderers/prefix/PrefixShort';\nimport { PrefixTitle } from 'components/metar/renderers/prefix/PrefixTitle';\nimport { PrefixValue } from 'components/metar/renderers/prefix/PrefixValue';\n\nexport const PrefixRenderers = {\n    renderValue: PrefixValue,\n    renderTitle: PrefixTitle,\n    renderShort: PrefixShort,\n};\n","import PropTypes from 'prop-types';\n\nexport const PresentWeatherPropTypes = {\n    data: PropTypes.shape({\n        // eslint-disable-next-line react/forbid-prop-types\n        args: PropTypes.array.isRequired,\n        // eslint-disable-next-line react/forbid-prop-types\n        intensityParts: PropTypes.array.isRequired,\n        // eslint-disable-next-line react/forbid-prop-types\n        descriptorParts: PropTypes.array.isRequired,\n        // eslint-disable-next-line react/forbid-prop-types\n        phenomenaParts: PropTypes.array.isRequired,\n    }).isRequired,\n\n    // eslint-disable-next-line react/forbid-prop-types\n    prettyArgs: PropTypes.any.isRequired,\n};\n","import React from 'react';\n\nimport { ExternalLink } from 'components/lib/ExternalLink';\nimport { PresentWeatherPropTypes } from 'components/metar/renderers/presentWeather/propTypes';\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport {\n    WeatherDescriptor, WeatherIntensity, WeatherPhenomena, WeatherProximity,\n} from 'lib/metar/enums';\nimport { pick } from 'lib/pick';\n\nconst renderValues = ({ parts, renderFN, prettyArgs }) => {\n    if (parts.length === 0) {\n        return null;\n    }\n\n    const contents = parts.map((partData, idx) => (\n        <React.Fragment key={partData.argID}>\n            {idx === 0 ? null : ', '}\n            {renderFN({ prettyArgs, ...partData })}\n        </React.Fragment>\n    ));\n\n    return (\n        <>\n            {' '}\n            {contents}\n        </>\n    );\n};\n\nconst renderIntensity = ({ intensityP, argID, prettyArgs }) => {\n    if (intensityP !== WeatherIntensity.VINCINITY) {\n        return (\n            <React.Fragment key={argID}>\n                {intensityP}\n                {' '}\n                (\n                {prettyArgs[argID]}\n                )\n            </React.Fragment>\n        );\n    }\n    return null;\n};\n\nconst renderIntensities = ({ intensityParts, prettyArgs }) => renderValues({\n    parts: intensityParts,\n    renderFN: renderIntensity,\n    prettyArgs,\n});\n\nconst renderProximity = ({ proximityP, argID, prettyArgs }) => {\n    if (proximityP === WeatherProximity.VINCINITY) {\n        return (\n            <>\n                in the vincinity of the airport (\n                {prettyArgs[argID]}\n                )\n            </>\n        );\n    }\n    return null;\n};\n\nconst renderProximities = ({ proximityParts, prettyArgs }) => renderValues({\n    parts: proximityParts,\n    renderFN: renderProximity,\n    prettyArgs,\n});\n\nconst weatherPhenomenaInfo = Object.freeze({\n    [WeatherPhenomena.SNOW_GRAINS]: {\n        title: 'snow grains',\n        link: 'https://en.wikipedia.org/wiki/Snow_grains',\n    },\n    [WeatherPhenomena.ICE_PELLETS]: {\n        title: 'ice pellets',\n        link: 'https://en.wikipedia.org/wiki/Ice_pellets',\n    },\n    [WeatherPhenomena.SMALL_HAIL_SNOW]: {\n        title: 'small hail and/or snow pellets',\n    },\n    [WeatherPhenomena.UNKNOWN_PRECIPITATION]: {\n        title: 'unknown precipitation',\n    },\n    [WeatherPhenomena.MIST]: {\n        title: 'mist',\n        link: 'https://en.wikipedia.org/wiki/Mist',\n    },\n    [WeatherPhenomena.FOG]: {\n        title: 'fog',\n        link: 'https://en.wikipedia.org/wiki/Fog',\n    },\n    [WeatherPhenomena.DUST]: {\n        title: 'widespread dust',\n    },\n    [WeatherPhenomena.VOLCANIC_HASH]: {\n        title: 'volcanic hash',\n    },\n    [WeatherPhenomena.HAZE]: {\n        title: 'haze',\n        link: 'https://en.wikipedia.org/wiki/Haze',\n    },\n    [WeatherPhenomena.DUST_DEVILS]: {\n        title: 'dust/sand whirls (dust devils)',\n        link: 'https://en.wikipedia.org/wiki/Dust_devil',\n    },\n    [WeatherPhenomena.SQUALLS]: {\n        title: 'squalls',\n        link: 'https://en.wikipedia.org/wiki/Squall',\n    },\n    [WeatherPhenomena.FUNNEL_CLOUD]: {\n        title: 'funnel clouds (tornado or watersprout)',\n        link: 'https://en.wikipedia.org/wiki/Funnel_cloud',\n    },\n    [WeatherPhenomena.DRIZZLE]: {\n        title: 'drizzle',\n        link: 'https://en.wikipedia.org/wiki/Drizzle',\n    },\n    [WeatherPhenomena.NSW]: {\n        title: 'no significant weather',\n    },\n});\n\nconst renderWeatherPhenomena = ({ phenomenaP, argID, prettyArgs }) => {\n    const info = pick(weatherPhenomenaInfo[phenomenaP], {\n        title: phenomenaP,\n        link: null,\n    });\n\n    return (\n        <>\n            {isNullOrUndefined(info.link) ? info.title : (\n                <ExternalLink href={info.link}>{info.title}</ExternalLink>\n            )}\n            {' '}\n            (\n            {prettyArgs[argID]}\n            )\n        </>\n    );\n};\n\nexport const renderWeatherPhenomenons = ({ phenomenaParts, prettyArgs }) => {\n    if (phenomenaParts.length === 0) {\n        return <>undescribed weather phenomenons</>;\n    }\n\n    const result = [];\n\n    const mainPhenomena = phenomenaParts[0];\n\n    result.push(\n        <React.Fragment key=\"first-value\">\n            {renderWeatherPhenomena({\n                ...mainPhenomena,\n                prettyArgs,\n            })}\n        </React.Fragment>,\n    );\n\n    if (phenomenaParts.length > 1) {\n        result.push(\n            <React.Fragment key=\"bouts\">\n                {' '}\n                mainly, with bouts of\n            </React.Fragment>,\n        );\n\n        result.push(\n            <React.Fragment key=\"values\">\n                {renderValues({\n                    parts: phenomenaParts.slice(1),\n                    renderFN: renderWeatherPhenomena,\n                    prettyArgs,\n                })}\n            </React.Fragment>,\n        );\n    }\n\n    return result;\n};\n\nconst weatherDescriptorInfo = Object.freeze({\n    [WeatherDescriptor.PATCHES]: {\n        title: 'patchy',\n    },\n    [WeatherDescriptor.PARTIAL]: {\n        title: 'partially covering airport',\n    },\n    [WeatherDescriptor.SHOWER]: {\n        title: 'coming in showers',\n    },\n    [WeatherDescriptor.THUNDERSTORM]: {\n        title: 'with thunderstorms',\n    },\n});\n\nconst renderDescriptor = ({ descriptorP, argID, prettyArgs }) => {\n    const info = pick(weatherDescriptorInfo[descriptorP], {\n        title: descriptorP,\n    });\n\n    return (\n        <>\n            {info.title}\n            {' '}\n            (\n            {prettyArgs[argID]}\n            )\n        </>\n    );\n};\n\nconst renderDescriptors = ({ descriptorParts, prettyArgs }) => renderValues({\n    parts: descriptorParts,\n    renderFN: renderDescriptor,\n    prettyArgs,\n});\n\nexport const PresentWeatherShort = ({\n    data,\n    prettyArgs,\n}) => {\n    const {\n        intensityParts,\n        proximityParts,\n        descriptorParts,\n        phenomenaParts,\n    } = data;\n\n    return (\n        <>\n            Weather report suggests\n            {renderIntensities({ intensityParts, prettyArgs })}\n            {' '}\n            {renderWeatherPhenomenons({ phenomenaParts, prettyArgs })}\n            {renderProximities({ proximityParts, prettyArgs })}\n            .\n            {descriptorParts.length === 0 ? null : (\n                <>\n                    {' '}\n                    Weather is described as\n                    {renderDescriptors({ descriptorParts, prettyArgs })}\n                    .\n                </>\n            )}\n        </>\n    );\n};\n\nPresentWeatherShort.propTypes = PresentWeatherPropTypes;\n","import React from 'react';\n\nimport { ThinSpace } from 'components/lib/spaces';\nimport { PresentWeatherPropTypes } from 'components/metar/renderers/presentWeather/propTypes';\n\nexport const PresentWeatherValue = ({ data: { args }, prettyArgs }) => {\n    const prettyArgsOrdered = args.map((value, idx) => (\n        <span key={`arg-${value}`}>\n            {idx === 0 ? null : <ThinSpace />}\n            {prettyArgs[value]}\n        </span>\n    ));\n\n    return <>{prettyArgsOrdered}</>;\n};\n\nPresentWeatherValue.propTypes = PresentWeatherPropTypes;\n","import React from 'react';\n\nimport { PresentWeatherShort } from 'components/metar/renderers/presentWeather/PresentWeatherShort';\nimport { PresentWeatherValue } from 'components/metar/renderers/presentWeather/PresentWeatherValue';\n\nexport const PresentWeatherRenderers = {\n    renderValue: PresentWeatherValue,\n    renderTitle: () => <>Present Weather</>,\n    renderShort: PresentWeatherShort,\n};\n","import PropTypes from 'prop-types';\n\nexport const PrevailingVisibilityPropTypes = {\n    data: PropTypes.shape({\n        valueP: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n        directionP: PropTypes.string,\n        unitP: PropTypes.string,\n    }).isRequired,\n\n    prettyArgs: PropTypes.shape({\n        value: PropTypes.node.isRequired,\n        direction: PropTypes.node,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { PrevailingVisibilityPropTypes } from 'components/metar/renderers/prevailingVisibility/propTypes';\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { Directions, PrevailingVisibility } from 'lib/metar/enums';\n\nconst renderVisibilityValue = (value, unitP) => {\n    if (value === PrevailingVisibility.CAVOK) {\n        return (\n            <>\n                at least 10 kilometers, with no clouds below 1500 meters and no significant\n                weather phenomena\n            </>\n        );\n    }\n\n    if (value === PrevailingVisibility.TEN_K) {\n        return (\n            <>10 kilometers</>\n        );\n    }\n\n    if (value === PrevailingVisibility.MISSING) {\n        return (\n            <>missing or cannot be assessed</>\n        );\n    }\n\n    if (value === PrevailingVisibility.LESS_THAN_QUARTER_MILE) {\n        return (\n            <>less than a quarter of a mile</>\n        );\n    }\n\n    return (\n        <>\n            {value}\n            {' '}\n            {unitP}\n        </>\n    );\n};\n\nconst renderDirection = ({ directionP, direction }) => {\n    if (isNullOrUndefined(directionP)) {\n        return null;\n    }\n\n    if (directionP === Directions.NDV) {\n        return null;\n    }\n\n    return (\n        <>\n            {' '}\n            coming from the\n            {' '}\n            {directionP}\n            {' '}\n            (\n            {direction}\n            )\n        </>\n    );\n};\n\nconst renderNDV = ({ directionP, direction }) => {\n    if (directionP !== Directions.NDV) {\n        return null;\n    }\n\n    return (\n        <>\n            {' '}\n            No directional information could be reported. (\n            {direction}\n            ).\n        </>\n    );\n};\n\nexport const PrevailingVisibilityShort = ({\n    data: { unitP, valueP, directionP },\n    prettyArgs: { value, direction },\n}) => (\n    <>\n        Horizontal visibility\n        {renderDirection({ directionP, direction })}\n        {' '}\n        is\n        {' '}\n        {renderVisibilityValue(valueP, unitP)}\n        {' '}\n        (\n        {value}\n        ).\n        {renderNDV({ directionP, direction })}\n    </>\n);\n\nPrevailingVisibilityShort.propTypes = PrevailingVisibilityPropTypes;\n","import React from 'react';\n\nimport { ThinSpace } from 'components/lib/spaces';\nimport { PrevailingVisibilityPropTypes } from 'components/metar/renderers/prevailingVisibility/propTypes';\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { PrevailingVisibilityUnit } from 'lib/metar/enums';\n\nexport const PrevailingVisibilityValue = ({\n    data: { unitP },\n    prettyArgs: { value, direction },\n}) => (\n    <>\n        {value}\n        {isNullOrUndefined(direction) ? null : (\n            <>\n                <ThinSpace />\n                {direction}\n            </>\n        )}\n        {unitP === PrevailingVisibilityUnit.MILES ? (\n            <>\n                <ThinSpace />\n                SM\n            </>\n        ) : null}\n        {unitP === PrevailingVisibilityUnit.KILOMETERS ? (\n            <>\n                <ThinSpace />\n                KM\n            </>\n        ) : null}\n    </>\n);\n\nPrevailingVisibilityValue.propTypes = PrevailingVisibilityPropTypes;\n","import React from 'react';\n\nimport { PrevailingVisibilityShort } from 'components/metar/renderers/prevailingVisibility/PrevailingVisibilityShort';\nimport { PrevailingVisibilityValue } from 'components/metar/renderers/prevailingVisibility/PrevailingVisibilityValue';\n\nexport const PrevailingVisibilityRenderers = {\n    renderValue: PrevailingVisibilityValue,\n    renderTitle: () => <>Prevailing Visibility</>,\n    renderShort: PrevailingVisibilityShort,\n};\n","import PropTypes from 'prop-types';\n\nexport const RecentWeatherPropTypes = {\n    data: PropTypes.shape({\n        // eslint-disable-next-line react/forbid-prop-types\n        args: PropTypes.array.isRequired,\n        // eslint-disable-next-line react/forbid-prop-types\n        phenomenaParts: PropTypes.array.isRequired,\n    }).isRequired,\n\n    // eslint-disable-next-line react/forbid-prop-types\n    prettyArgs: PropTypes.any.isRequired,\n};\n","import React from 'react';\n\nimport { renderWeatherPhenomenons } from 'components/metar/renderers/presentWeather/PresentWeatherShort';\nimport { RecentWeatherPropTypes } from 'components/metar/renderers/recentWeather/propTypes';\n\nexport const RecentWeatherShort = ({ data: { phenomenaParts }, prettyArgs }) => (\n    <>\n        Weather observed recently includes\n        {' '}\n        {renderWeatherPhenomenons({ phenomenaParts, prettyArgs })}\n        . This weather was not present at the time of observation, but is still relevant operationally (eg. potential\n        for wet runway).\n    </>\n);\n\nRecentWeatherShort.propTypes = RecentWeatherPropTypes;\n","import React from 'react';\n\nimport { ThinSpace } from 'components/lib/spaces';\nimport { RecentWeatherPropTypes } from 'components/metar/renderers/recentWeather/propTypes';\n\nexport const RecentWeatherValue = ({\n    data: { args },\n    prettyArgs,\n}) => {\n    const prettyArgsOrdered = args.map((value) => (\n        <React.Fragment key={value}>\n            <ThinSpace />\n            {prettyArgs[value]}\n        </React.Fragment>\n    ));\n\n    return (\n        <>\n            RE\n            {prettyArgsOrdered}\n        </>\n    );\n};\n\nRecentWeatherValue.propTypes = RecentWeatherPropTypes;\n","import React from 'react';\n\nimport { RecentWeatherShort } from 'components/metar/renderers/recentWeather/RecentWeatherShort';\nimport { RecentWeatherValue } from 'components/metar/renderers/recentWeather/RecentWeatherValue';\n\nexport const RecentWeatherRenderers = {\n    renderValue: RecentWeatherValue,\n    renderTitle: () => <>Recent Weather</>,\n    renderShort: RecentWeatherShort,\n};\n","import PropTypes from 'prop-types';\n\nexport const RemarksPropTypes = {\n    prettyArgs: PropTypes.shape({\n        rmk: PropTypes.node,\n        remarks: PropTypes.node,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { RemarksPropTypes } from 'components/metar/renderers/remarks/propTypes';\n\nexport const RemarksValue = ({ prettyArgs: { rmk, remarks } }) => (\n    <>\n        {rmk}\n        {' '}\n        {remarks}\n    </>\n);\n\nRemarksValue.propTypes = RemarksPropTypes;\n","import React from 'react';\n\nimport { RemarksShort } from 'components/metar/renderers/remarks/RemarksShort';\nimport { RemarksValue } from 'components/metar/renderers/remarks/RemarksValue';\n\nexport const RemarksRenderers = {\n    renderValue: RemarksValue,\n    renderTitle: () => <>Remarks</>,\n    renderShort: RemarksShort,\n};\n","import React from 'react';\n\nexport const RemarksShort = () => (\n    <>\n        Remarks added and only defined on national level. These are not currently parsed.\n    </>\n);\n","import PropTypes from 'prop-types';\n\nexport const RunwayStatePropTypes = {\n    data: PropTypes.shape({\n        runwayP: PropTypes.number,\n        depositP: PropTypes.string,\n        extentP: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        depthP: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        frictionP: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    }).isRequired,\n\n    prettyArgs: PropTypes.shape({\n        runway: PropTypes.node,\n        deposit: PropTypes.node,\n        extent: PropTypes.node,\n        depth: PropTypes.node,\n        friction: PropTypes.node,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { ExternalLink } from 'components/lib/ExternalLink';\nimport { RunwayStatePropTypes } from 'components/metar/renderers/runwayState/propTypes';\nimport {\n    RunwayContaminationDepth,\n    RunwayContaminationExtent,\n    RunwayDeposit,\n    RunwaySurfaceFriction,\n} from 'lib/metar/enums';\nimport { pick } from 'lib/pick';\n\nconst depositDescriptions = {\n    [RunwayDeposit.CLEAR_AND_DRY]: 'clear and dry',\n    [RunwayDeposit.DAMP]: 'damp',\n    [RunwayDeposit.WET]: 'wet with water patches',\n    [RunwayDeposit.RIME_AND_FROST]: (\n        <>\n            covered with\n            <ExternalLink href=\"https://en.wikipedia.org/wiki/Rime_ice\">rime</ExternalLink>\n            {' '}\n            and frost\n        </>\n    ),\n    [RunwayDeposit.DRY_SNOW]: 'covered with dry snow',\n    [RunwayDeposit.WET_SNOW]: 'covered with wet snow',\n    [RunwayDeposit.SLUSH]: (\n        <>\n            covered with\n            <ExternalLink href=\"https://en.wikipedia.org/wiki/Slush\">slush</ExternalLink>\n        </>\n    ),\n    [RunwayDeposit.ICE]: 'icy',\n    [RunwayDeposit.COMPACTED_SNOW]: 'covered with compacted snow',\n    [RunwayDeposit.FROZEN_RUTS]: 'covered with frozen ruts',\n    [RunwayDeposit.NOT_REPORTED]: 'contaminated with unreported substance',\n};\n\nconst renderDeposit = ({ depositP, deposit }) => (\n    <>\n        {depositDescriptions[depositP]}\n        {' '}\n        (\n        {deposit}\n        )\n    </>\n);\n\nconst contaminationExtentDescriptions = {\n    [RunwayContaminationExtent.BELOW_TEN]: 'Below 10%',\n    [RunwayContaminationExtent.TEN_TO_TWENTY_FIVE]: 'Between 11 and 25%',\n    [RunwayContaminationExtent.TWENTY_FIVE_TO_FIFTY]: 'Between 26 and 50%',\n    [RunwayContaminationExtent.ABOVE_FIFTY]: 'Above 50%',\n    [RunwayContaminationExtent.NOT_REPORTED]: 'An unreported amount',\n    [RunwayContaminationExtent.UNKNOWN_RESERVED]: 'An unknown amount (reserved value)',\n};\n\nconst renderContaminationExtent = ({ extentP, extent }) => (\n    <>\n        {contaminationExtentDescriptions[extentP]}\n        {' '}\n        (\n        {extent}\n        )\n    </>\n);\n\nconst contaminationDepthDescriptions = {\n    [RunwayContaminationDepth.TEN_CM]: '10 centimeters deep',\n    [RunwayContaminationDepth.FIFTEEN_CM]: '15 centimeters deep',\n    [RunwayContaminationDepth.TWENTY_CM]: '20 centimeters deep',\n    [RunwayContaminationDepth.TWENTY_FIVE_CM]: '25 centimeters deep',\n    [RunwayContaminationDepth.THIRTY_CM]: '30 centimeters deep',\n    [RunwayContaminationDepth.THIRTY_FIVE_CM]: '35 centimeters deep',\n    [RunwayContaminationDepth.FORTY_CM]: 'more than 40 centimeters deep',\n    [RunwayContaminationDepth.NOT_OPERATIONAL]: 'of an unreported depth above operational constraints',\n    [RunwayContaminationDepth.NOT_REPORTED]: 'of an unreported depth',\n};\n\nconst renderContaminationDepth = ({ depthP, depth }) => {\n    const desc = pick(\n        contaminationDepthDescriptions[depthP],\n        <>\n            {depthP}\n            {' '}\n            millimeters deep\n        </>,\n    );\n\n    return (\n        <>\n            {desc}\n            {' '}\n            (\n            {depth}\n            )\n        </>\n    );\n};\n\nconst frictionDescriptions = {\n    [RunwaySurfaceFriction.BRAKING_ACTION_POOR]: 'Braking action is described as poor',\n    [RunwaySurfaceFriction.BRAKING_ACTION_MEDIUM_POOR]: 'Braking action is described as poor to medium',\n    [RunwaySurfaceFriction.BRAKING_ACTION_MEDIUM]: 'Braking action is described as medium',\n    [RunwaySurfaceFriction.BRAKING_ACTION_MEDIUM_GOOD]: 'Braking action is described as medium to good',\n    [RunwaySurfaceFriction.BRAKING_ACTION_GOOD]: 'Braking action is described as good',\n    [RunwaySurfaceFriction.UNRELIABLE]: 'Braking action reports are unreliable',\n    [RunwaySurfaceFriction.UNKNOWN_RESERVED]: 'Unknown reserved braking action value was used',\n    [RunwaySurfaceFriction.NOT_REPORTED]: 'Braking action could not reported or runway is not operational',\n};\n\nconst renderFriction = ({ frictionP, friction }) => {\n    const frictionDesc = pick(\n        frictionDescriptions[frictionP],\n        <>\n            Friction coefficient is\n            {' '}\n            {frictionP}\n            /1\n        </>,\n    );\n\n    return (\n        <>\n            {frictionDesc}\n            {' '}\n            (\n            {friction}\n            ).\n        </>\n    );\n};\n\nexport const RunwayStateShort = ({\n    data: {\n        runwayP,\n        depositP,\n        extentP,\n        depthP,\n        frictionP,\n    },\n    prettyArgs: {\n        runway,\n        deposit,\n        extent,\n        depth,\n        friction,\n    },\n}) => (\n    <>\n        {renderContaminationExtent({ extentP, extent })}\n        {' '}\n        of runway\n        {' '}\n        {runwayP}\n        {' '}\n        (\n        {runway}\n        ) is\n        {' '}\n        {renderDeposit({ depositP, deposit })}\n        . Coverage is\n        {' '}\n        {renderContaminationDepth({ depthP, depth })}\n        .\n        {' '}\n        {renderFriction({ frictionP, friction })}\n    </>\n);\n\nRunwayStateShort.propTypes = RunwayStatePropTypes;\n","import React from 'react';\n\nimport { ThinSpace } from 'components/lib/spaces';\nimport { RunwayStatePropTypes } from 'components/metar/renderers/runwayState/propTypes';\n\nexport const RunwayStateValue = ({\n    prettyArgs: {\n        runway, deposit, extent, depth, friction,\n    },\n}) => (\n    <>\n        R\n        <ThinSpace />\n        {runway}\n        <ThinSpace />\n        /\n        <ThinSpace />\n        {deposit}\n        <ThinSpace />\n        {extent}\n        <ThinSpace />\n        {depth}\n        <ThinSpace />\n        {friction}\n    </>\n);\n\nRunwayStateValue.propTypes = RunwayStatePropTypes;\n","import React from 'react';\n\nimport { RunwayStateShort } from 'components/metar/renderers/runwayState/RunwayStateShort';\nimport { RunwayStateValue } from 'components/metar/renderers/runwayState/RunwayStateValue';\n\nexport const RunwayStateRenderers = {\n    renderValue: RunwayStateValue,\n    renderTitle: () => <>State of Runway</>,\n    renderShort: RunwayStateShort,\n};\n","import PropTypes from 'prop-types';\n\nexport const RunwayVisualRangePropTypes = {\n    data: PropTypes.shape({\n        runway: PropTypes.string.isRequired,\n        qualifier: PropTypes.string,\n\n        distance: PropTypes.string.isRequired,\n        distanceP: PropTypes.number.isRequired,\n    }).isRequired,\n\n    prettyArgs: PropTypes.shape({\n        runway: PropTypes.node,\n        qualifier: PropTypes.node,\n        distance: PropTypes.node,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { RunwayVisualRangePropTypes } from 'components/metar/renderers/runwayVisualRange/propTypes';\nimport { RunwayVisualRangeQualifier } from 'lib/metar/enums';\n\nconst renderQualifier = ({ qualifierP, qualifier }) => {\n    if (qualifierP === RunwayVisualRangeQualifier.NONE) {\n        return null;\n    }\n\n    return (\n        <>\n            {' '}\n            {qualifierP === RunwayVisualRangeQualifier.AT_LEAST ? 'at least' : 'at most'}\n            {' '}\n            (\n            {qualifier}\n            )\n        </>\n    );\n};\n\nexport const RunwayVisualRangeShort = ({\n    data: { runway: runwayP, qualifierP, distanceP },\n    prettyArgs: { runway, qualifier, distance },\n}) => (\n    <>\n        Visual range for runway\n        {' '}\n        {runwayP}\n        {' '}\n        (\n        {runway}\n        ) is\n        {renderQualifier({ qualifierP, qualifier })}\n        {' '}\n        {distanceP}\n        {' '}\n        meters (\n        {distance}\n        ).\n    </>\n);\n\nRunwayVisualRangeShort.propTypes = RunwayVisualRangePropTypes;\n","import React from 'react';\n\nimport { ThinSpace } from 'components/lib/spaces';\nimport { RunwayVisualRangePropTypes } from 'components/metar/renderers/runwayVisualRange/propTypes';\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\n\nexport const RunwayVisualRangeValue = ({\n    prettyArgs: { runway, qualifier, distance },\n}) => (\n    <>\n        R\n        <ThinSpace />\n        {runway}\n        <ThinSpace />\n        /\n        {isNullOrUndefined(qualifier) ? null : (\n            <>\n                <ThinSpace />\n                {qualifier}\n            </>\n        )}\n        <ThinSpace />\n        {distance}\n    </>\n);\n\nRunwayVisualRangeValue.propTypes = RunwayVisualRangePropTypes;\n","import React from 'react';\n\nimport { RunwayVisualRangeShort } from 'components/metar/renderers/runwayVisualRange/RunwayVisualRangeShort';\nimport { RunwayVisualRangeValue } from 'components/metar/renderers/runwayVisualRange/RunwayVisualRangeValue';\n\nexport const RunwayVisualRangeRenderers = {\n    renderValue: RunwayVisualRangeValue,\n    renderTitle: () => <>Runway Visual Range</>,\n    renderShort: RunwayVisualRangeShort,\n};\n","import PropTypes from 'prop-types';\n\nexport const SeaSurfacePropTypes = {\n    data: PropTypes.shape({\n        infoType: PropTypes.string,\n\n        temperatureP: PropTypes.number.isRequired,\n        seaStateCodeP: PropTypes.string,\n        waveHeightP: PropTypes.number,\n    }).isRequired,\n\n    prettyArgs: PropTypes.shape({\n        temperature: PropTypes.node,\n        seaStateCode: PropTypes.node,\n        waveHeight: PropTypes.node,\n    }).isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const TemperaturesPropTypes = {\n    data: PropTypes.shape({\n        oatP: PropTypes.number.isRequired,\n        dewPointP: PropTypes.number.isRequired,\n    }).isRequired,\n\n    prettyArgs: PropTypes.shape({\n        oat: PropTypes.node,\n        dewPoint: PropTypes.node,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { TemperaturesPropTypes } from 'components/metar/renderers/temperatures/propTypes';\nimport { Temperatures } from 'lib/metar/enums';\n\nexport const renderTemperature = ({ tempP, temp }) => {\n    if (tempP === Temperatures.NOT_REPORTED) {\n        return (\n            <>\n                could not be reported (\n                {temp}\n                )\n            </>\n        );\n    }\n\n    return (\n        <>\n            is\n            {' '}\n            {tempP}\n            &deg;C (\n            {temp}\n            )\n        </>\n    );\n};\n\nexport const TemperaturesShort = ({\n    data: { oatP, dewPointP },\n    prettyArgs: { oat, dewPoint },\n}) => (\n    <>\n        Outside Air Temperature (OAT) at airport\n        {' '}\n        {renderTemperature({ tempP: oatP, temp: oat })}\n        {' '}\n        and Dew Point Temperature\n        {' '}\n        {renderTemperature({ tempP: dewPointP, temp: dewPoint })}\n        .\n    </>\n);\n\nTemperaturesShort.propTypes = TemperaturesPropTypes;\n","import React from 'react';\n\nimport { SeaSurfacePropTypes } from 'components/metar/renderers/seaSurface/propTypes';\nimport { renderTemperature } from 'components/metar/renderers/temperatures/TemperaturesShort';\nimport { SeaSurfaceInfoType, SeaSurfaceStateCode } from 'lib/metar/enums';\n\nconst seaStateCodeDescriptions = Object.freeze({\n    [SeaSurfaceStateCode.CALM_GLASSY]: {\n        short: <>calm (glassy)</>,\n        long: <>no waves</>,\n    },\n    [SeaSurfaceStateCode.CALM_RIPPLED]: {\n        short: <>calm (rippled)</>,\n        long: <>waves of height 10 centimeters or below in height</>,\n    },\n    [SeaSurfaceStateCode.SMOOTH]: {\n        short: <>smooth</>,\n        long: <>waves between 10 and 50 centimeters in height</>,\n    },\n    [SeaSurfaceStateCode.SLIGHT]: {\n        short: <>slight</>,\n        long: <>waves between 50 centimeters and 1.25 meters in height</>,\n    },\n    [SeaSurfaceStateCode.MODERATE]: {\n        short: <>moderate</>,\n        long: <>waves between 1.25 and 2.5 meters in height</>,\n    },\n    [SeaSurfaceStateCode.ROUGH]: {\n        short: <>rough</>,\n        long: <>waves between 2.5 and 4 meters in height</>,\n    },\n    [SeaSurfaceStateCode.VERY_ROUGH]: {\n        short: <>very rough</>,\n        long: <>waves between 4 and 6 meters in height</>,\n    },\n    [SeaSurfaceStateCode.HIGH]: {\n        short: <>high</>,\n        long: <>waves between 6 and 9 meters in height</>,\n    },\n    [SeaSurfaceStateCode.VERY_HIGH]: {\n        short: <>very high</>,\n        long: <>waves between 9 and 14 meters in height</>,\n    },\n    [SeaSurfaceStateCode.PHENOMENAL]: {\n        short: <>phenomenal</>,\n        long: <>waves over 14 meters high</>,\n    },\n});\n\nexport const SeaSurfaceShort = ({\n    data: {\n        infoType, temperatureP, seaStateCodeP, waveHeightP,\n    },\n    prettyArgs: { temperature, seaStateCode, waveHeight },\n}) => {\n    let info = null;\n\n    if (infoType === SeaSurfaceInfoType.WAVE_HEIGHT) {\n        info = (\n            <>\n                Wave height is\n                {' '}\n                {waveHeightP > 100 ? (\n                    <>\n                        {waveHeightP / 100}\n                        {' '}\n                        meters\n                    </>\n                ) : (\n                    <>\n                        {waveHeightP}\n                        {' '}\n                        centimeters\n                    </>\n                )}\n                {' '}\n                (\n                {waveHeight}\n                ).\n            </>\n        );\n    }\n\n    if (infoType === SeaSurfaceInfoType.SURFACE_STATE) {\n        const codeDesc = seaStateCodeDescriptions[seaStateCodeP];\n\n        info = (\n            <>\n                Sea activity is described as\n                {' '}\n                {codeDesc.short}\n                {' '}\n                with\n                {' '}\n                {codeDesc.long}\n                {' '}\n                (\n                {seaStateCode}\n                ).\n            </>\n        );\n    }\n\n    return (\n        <>\n            Sea surface water temperature\n            {' '}\n            {renderTemperature({ tempP: temperatureP, temp: temperature })}\n            .\n            {' '}\n            {info}\n        </>\n    );\n};\n\nSeaSurfaceShort.propTypes = SeaSurfacePropTypes;\n","import React from 'react';\n\nimport { ThinSpace } from 'components/lib/spaces';\nimport { SeaSurfacePropTypes } from 'components/metar/renderers/seaSurface/propTypes';\nimport { SeaSurfaceInfoType } from 'lib/metar/enums';\n\nexport const SeaSurfaceValue = ({\n    data: { infoType },\n    prettyArgs: { temperature, seaStateCode, waveHeight },\n}) => {\n    let info = null;\n\n    if (infoType === SeaSurfaceInfoType.SURFACE_STATE) {\n        info = (\n            <>\n                S\n                <ThinSpace />\n                {seaStateCode}\n            </>\n        );\n    }\n\n    if (infoType === SeaSurfaceInfoType.WAVE_HEIGHT) {\n        info = (\n            <>\n                H\n                <ThinSpace />\n                {waveHeight}\n            </>\n        );\n    }\n\n    return (\n        <>\n            W\n            <ThinSpace />\n            {temperature}\n            <ThinSpace />\n            /\n            <ThinSpace />\n            {info}\n        </>\n    );\n};\n\nSeaSurfaceValue.propTypes = SeaSurfacePropTypes;\n","import React from 'react';\n\nimport { SeaSurfaceShort } from 'components/metar/renderers/seaSurface/SeaSurfaceShort';\nimport { SeaSurfaceValue } from 'components/metar/renderers/seaSurface/SeaSurfaceValue';\n\nexport const SeaSurfaceRenderers = {\n    renderValue: SeaSurfaceValue,\n    renderTitle: () => <>Sea Surface Information</>,\n    renderShort: SeaSurfaceShort,\n};\n","import React from 'react';\n\nimport { TemperaturesShort } from 'components/metar/renderers/temperatures/TemperaturesShort';\nimport { TemperaturesValue } from 'components/metar/renderers/temperatures/TemperaturesValue';\n\nexport const TemperaturesRenderers = {\n    renderValue: TemperaturesValue,\n    renderTitle: () => <>Temperatures</>,\n    renderShort: TemperaturesShort,\n};\n","import React from 'react';\n\nimport { ThinSpace } from 'components/lib/spaces';\nimport { TemperaturesPropTypes } from 'components/metar/renderers/temperatures/propTypes';\n\nexport const TemperaturesValue = ({ prettyArgs: { oat, dewPoint } }) => (\n    <>\n        {oat}\n        <ThinSpace />\n        /\n        <ThinSpace />\n        {dewPoint}\n    </>\n);\n\nTemperaturesValue.propTypes = TemperaturesPropTypes;\n","/* eslint-disable react/forbid-prop-types */\nimport PropTypes from 'prop-types';\n\nexport const TrendPropTypes = {\n    data: PropTypes.shape({\n        trendTypeP: PropTypes.string.isRequired,\n        args: PropTypes.array.isRequired,\n        timeParts: PropTypes.array.isRequired,\n    }).isRequired,\n\n    prettyArgs: PropTypes.any.isRequired,\n};\n","import React from 'react';\n\nimport { TrendPropTypes } from 'components/metar/renderers/trend/propTypes';\nimport { TrendType } from 'lib/metar/enums';\n\nconst renderTimeParts = ({ timeParts, prettyArgs }) => {\n    const parts = timeParts.map(({ argID, timeP: { trendTimeType, hour, minutes } }, idx) => (\n        <React.Fragment key={argID}>\n            {idx === 0 ? null : ', '}\n            {trendTimeType}\n            {' '}\n            {hour}\n            :\n            {minutes}\n            {' '}\n            (\n            {prettyArgs[argID]}\n            )\n        </React.Fragment>\n    ));\n\n    return <>{parts}</>;\n};\n\nexport const TrendShort = ({ data: { trendTypeP, timeParts }, prettyArgs }) => {\n    if (trendTypeP === TrendType.NOSIG) {\n        return (\n            <>\n                No Significant Change is expected to occur. (\n                {prettyArgs.trendType}\n                )\n            </>\n        );\n    }\n\n    return (\n        <>\n            Weather conditions are expected to\n            {' '}\n            {trendTypeP === TrendType.BECOMING ? null : (\n                <>\n                    temporarily\n                    {' '}\n                </>\n            )}\n            change (\n            {prettyArgs.trendType}\n            ). Change is expected\n            {' '}\n            {renderTimeParts({ timeParts, prettyArgs })}\n            . All the following items with the same background are part of this trend change.\n        </>\n    );\n};\n\nTrendShort.propTypes = TrendPropTypes;\n","import React from 'react';\n\nimport { ThickSpace } from 'components/lib/spaces';\nimport { TrendPropTypes } from 'components/metar/renderers/trend/propTypes';\n\nexport const TrendValue = ({ data: { args }, prettyArgs }) => {\n    const prettyArgsOrdered = args.map((value, idx) => (\n        <span key={`arg-${value}`}>\n            {idx === 0 ? null : <ThickSpace />}\n            {prettyArgs[value]}\n        </span>\n    ));\n\n    return <>{prettyArgsOrdered}</>;\n};\n\nTrendValue.propTypes = TrendPropTypes;\n","import React from 'react';\n\nimport { TrendShort } from 'components/metar/renderers/trend/TrendShort';\nimport { TrendValue } from 'components/metar/renderers/trend/TrendValue';\n\nexport const TrendRenderers = {\n    renderValue: TrendValue,\n    renderTitle: () => <>Trend</>,\n    renderShort: TrendShort,\n};\n","import PropTypes from 'prop-types';\n\nexport const VerticalVisibilityPropTypes = {\n    data: PropTypes.shape({\n        altitudeP: PropTypes.number,\n    }).isRequired,\n\n    prettyArgs: PropTypes.shape({\n        altitude: PropTypes.node,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { VerticalVisibilityPropTypes } from 'components/metar/renderers/verticalVisibility/propTypes';\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\n\nexport const VerticalVisibilityShort = ({\n    data: { altitudeP },\n    prettyArgs: { altitude },\n}) => {\n    if (isNullOrUndefined(altitudeP)) {\n        return (\n            <>\n                Vertical visibility could not be assessed (\n                {altitude}\n                ).\n            </>\n        );\n    }\n\n    return (\n        <>\n            Vertical visibility is estimated to be\n            {' '}\n            {altitudeP}\n            {' '}\n            ft (\n            {altitude}\n            ).\n        </>\n    );\n};\n\nVerticalVisibilityShort.propTypes = VerticalVisibilityPropTypes;\n","import React from 'react';\n\nimport { ThinSpace } from 'components/lib/spaces';\nimport { VerticalVisibilityPropTypes } from 'components/metar/renderers/verticalVisibility/propTypes';\n\nexport const VerticalVisibilityValue = ({\n    prettyArgs: { altitude },\n}) => (\n    <>\n        VV\n        <ThinSpace />\n        {altitude}\n    </>\n);\nVerticalVisibilityValue.propTypes = VerticalVisibilityPropTypes;\n","import React from 'react';\n\nimport { VerticalVisibilityShort } from 'components/metar/renderers/verticalVisibility/VerticalVisibilityShort';\nimport { VerticalVisibilityValue } from 'components/metar/renderers/verticalVisibility/VerticalVisibilityValue';\n\nexport const VerticalVisibilityRenderers = {\n    renderValue: VerticalVisibilityValue,\n    renderTitle: () => <>Vertical Visibility</>,\n    renderShort: VerticalVisibilityShort,\n};\n","import React from 'react';\n\nimport { ThinSpace } from 'components/lib/spaces';\nimport { WindPropTypes } from 'components/metar/renderers/wind/propTypes';\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { WindDirections, WindForce } from 'lib/metar/enums';\n\nconst renderDirection = ({ directionP, direction }) => {\n    if (directionP === WindDirections.VRB) {\n        return (\n            <>\n                Wind is not coming from any particular direction (\n                {direction}\n                )\n            </>\n        );\n    }\n\n    if (directionP === WindDirections.NOT_REPORTED) {\n        return (\n            <>\n                Wind direction was not reported (\n                {direction}\n                )\n            </>\n        );\n    }\n\n    return (\n        <>\n            Wind is mainly coming from\n            {' '}\n            {directionP}\n            &deg; (\n            {direction}\n            )\n        </>\n    );\n};\n\nconst renderForce = ({\n    forceP, force, unitP, unit,\n}) => {\n    if (forceP === WindForce.NOT_REPORTED) {\n        return (\n            <>\n                Wind force could not be reported (\n                {force}\n                )\n            </>\n        );\n    }\n\n    return (\n        <>\n            It has an average speed of\n            {' '}\n            {forceP}\n            {' '}\n            {unitP}\n            {' '}\n            (\n            {force}\n            {' '}\n            {unit}\n            )\n        </>\n    );\n};\n\nconst renderGustsForce = ({\n    gustsForceP, gustsForce, unitP, unit,\n}) => {\n    if (isNullOrUndefined(gustsForce)) {\n        return null;\n    }\n\n    return (\n        <>\n            , with gusts of\n            {' '}\n            {gustsForceP}\n            {' '}\n            {unitP}\n            {' '}\n            (\n            {gustsForce}\n            {' '}\n            {unit}\n            )\n        </>\n    );\n};\n\nexport const WindShort = ({\n    data: {\n        isCalm, directionP, fromDirectionP, toDirectionP, forceP, gustsForceP, unitP,\n    },\n    prettyArgs: {\n        direction, force, gustsForce, unit, fromDirection, toDirection,\n    },\n}) => {\n    if (isCalm) {\n        return (\n            <>\n                Wind is noted as calm, with no particular direction or speed. (\n                {direction}\n                <ThinSpace />\n                {force}\n                <ThinSpace />\n                {unit}\n                )\n            </>\n        );\n    }\n\n    return (\n        <>\n            {renderDirection({ directionP, direction })}\n            {isNullOrUndefined(fromDirection) ? null : (\n                <>\n                    , with variations from\n                    {' '}\n                    {fromDirectionP}\n                    &deg; to\n                    {' '}\n                    {toDirectionP}\n                    &deg;\n                    {' '}\n                    (\n                    {fromDirection}\n                    {' '}\n                    and\n                    {' '}\n                    {toDirection}\n                    )\n                </>\n            )}\n            .\n            {' '}\n            {renderForce({\n                forceP, force, unitP, unit,\n            })}\n            {renderGustsForce({\n                gustsForceP, gustsForce, unitP, unit,\n            })}\n            .\n        </>\n    );\n};\n\nWindShort.propTypes = WindPropTypes;\n","import PropTypes from 'prop-types';\n\nexport const WindPropTypes = {\n    data: PropTypes.shape({\n        isCalm: PropTypes.bool.isRequired,\n        directionP: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.string,\n        ]),\n        fromDirectionP: PropTypes.number,\n        toDirectionP: PropTypes.number,\n        forceP: PropTypes.number.isRequired,\n        gustsForceP: PropTypes.number,\n        unitP: PropTypes.string.isRequired,\n    }).isRequired,\n\n    prettyArgs: PropTypes.shape({\n        direction: PropTypes.node,\n        force: PropTypes.node,\n        gustsForce: PropTypes.node,\n        unit: PropTypes.node,\n        fromDirection: PropTypes.node,\n        toDirection: PropTypes.node,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { WindShort } from 'components/metar/renderers/wind/WindShort';\nimport { WindValue } from 'components/metar/renderers/wind/WindValue';\n\nexport const WindRenderers = {\n    renderValue: WindValue,\n    renderTitle: () => <>Winds</>,\n    renderShort: WindShort,\n};\n","import React from 'react';\n\nimport { ThickSpace, ThinSpace } from 'components/lib/spaces';\nimport { WindPropTypes } from 'components/metar/renderers/wind/propTypes';\nimport { isNullOrUndefined } from 'lib/isNullOrUndefined';\n\nexport const WindValue = ({\n    prettyArgs: {\n        direction, force, gustsForce, unit, fromDirection, toDirection,\n    },\n}) => (\n    <>\n        {direction}\n        <ThinSpace />\n        {force}\n        <ThinSpace />\n        {isNullOrUndefined(gustsForce) ? null : (\n            <>\n                G\n                <ThinSpace />\n                {gustsForce}\n                <ThinSpace />\n            </>\n        )}\n        {unit}\n        {isNullOrUndefined(fromDirection) ? null : (\n            <>\n                <ThickSpace />\n                {fromDirection}\n                <ThinSpace />\n                V\n                <ThinSpace />\n                {toDirection}\n            </>\n        )}\n    </>\n);\n\nWindValue.propTypes = WindPropTypes;\n","import PropTypes from 'prop-types';\n\nexport const WindShearPropTypes = {\n    data: PropTypes.shape({\n        runwayP: PropTypes.string.isRequired,\n    }).isRequired,\n\n    prettyArgs: PropTypes.shape({\n        runway: PropTypes.node,\n    }).isRequired,\n};\n","import React from 'react';\n\nimport { WindShearPropTypes } from 'components/metar/renderers/windShear/propTypes';\nimport { WindShearRunway } from 'lib/metar/enums';\n\nexport const renderRunway = ({ runwayP, runway }) => {\n    if (runwayP === WindShearRunway.ALL_RUNWAYS) {\n        return (\n            <>\n                all runways (\n                {runway}\n                )\n            </>\n        );\n    }\n\n    return (\n        <>\n            runway\n            {' '}\n            {runwayP}\n            {' '}\n            (\n            {runway}\n            )\n        </>\n    );\n};\n\nexport const WindShearShort = ({ data: { runwayP }, prettyArgs: { runway } }) => (\n    <>\n        Wind shear reported for\n        {' '}\n        {renderRunway({ runwayP, runway })}\n        .\n    </>\n);\n\nWindShearShort.propTypes = WindShearPropTypes;\n","import React from 'react';\n\nimport { ThickSpace } from 'components/lib/spaces';\nimport { WindShearPropTypes } from 'components/metar/renderers/windShear/propTypes';\n\nexport const WindShearValue = ({ prettyArgs: { runway } }) => (\n    <>\n        WS\n        <ThickSpace />\n        {runway}\n    </>\n);\n\nWindShearValue.propTypes = WindShearPropTypes;\n","import React from 'react';\n\nimport { WindShearShort } from 'components/metar/renderers/windShear/WindShearShort';\nimport { WindShearValue } from 'components/metar/renderers/windShear/WindShearValue';\n\nexport const WindShearRenderers = {\n    renderValue: WindShearValue,\n    renderTitle: () => <>Wind Shear</>,\n    renderShort: WindShearShort,\n};\n","import { AirportIdentifierRenderers } from 'components/metar/renderers/airportIdentifier/renderers';\nimport { AltimeterRenderers } from 'components/metar/renderers/altimeter/renderers';\nimport { CloudCoverageRenderers } from 'components/metar/renderers/cloudCoverage/renderers';\nimport { ColorSystemsRenderers } from 'components/metar/renderers/colorSystems/renderers';\nimport { METARTimeRenderers } from 'components/metar/renderers/metarTime/renderers';\nimport { MissingDataRenderers } from 'components/metar/renderers/missingData/renderers';\nimport { NotRecognizedRenderers } from 'components/metar/renderers/notRecognized/renderers';\nimport { PrefixRenderers } from 'components/metar/renderers/prefix/renderers';\nimport { PresentWeatherRenderers } from 'components/metar/renderers/presentWeather/renderers';\nimport { PrevailingVisibilityRenderers } from 'components/metar/renderers/prevailingVisibility/renderers';\nimport { RecentWeatherRenderers } from 'components/metar/renderers/recentWeather/renderers';\nimport { RemarksRenderers } from 'components/metar/renderers/remarks/renderers';\nimport { RunwayStateRenderers } from 'components/metar/renderers/runwayState/renderers';\nimport { RunwayVisualRangeRenderers } from 'components/metar/renderers/runwayVisualRange/renderers';\nimport { SeaSurfaceRenderers } from 'components/metar/renderers/seaSurface/renderers';\nimport { TemperaturesRenderers } from 'components/metar/renderers/temperatures/renderers';\nimport { TrendRenderers } from 'components/metar/renderers/trend/renderers';\nimport { VerticalVisibilityRenderers } from 'components/metar/renderers/verticalVisibility/renderers';\nimport { WindRenderers } from 'components/metar/renderers/wind/renderers';\nimport { WindShearRenderers } from 'components/metar/renderers/windShear/renderers';\nimport { TokenTypes } from 'lib/metar/enums';\n\nexport const TokenRenderers = {\n    [TokenTypes.AIRPORT_IDENTIFIER]: AirportIdentifierRenderers,\n    [TokenTypes.ALTIMETER_SETTING]: AltimeterRenderers,\n    [TokenTypes.CLOUD_COVERAGE]: CloudCoverageRenderers,\n    [TokenTypes.COLOR_SYSTEMS]: ColorSystemsRenderers,\n    [TokenTypes.METAR_PREFIX]: PrefixRenderers,\n    [TokenTypes.METAR_PREFIX_OTHER]: PrefixRenderers,\n    [TokenTypes.METAR_TIME]: METARTimeRenderers,\n    [TokenTypes.MISSING_DATA]: MissingDataRenderers,\n    [TokenTypes.NOT_RECOGNIZED]: NotRecognizedRenderers,\n    [TokenTypes.PRESENT_WEATHER]: PresentWeatherRenderers,\n    [TokenTypes.PREVAILING_VISIBILITY]: PrevailingVisibilityRenderers,\n    [TokenTypes.RECENT_WEATHER]: RecentWeatherRenderers,\n    [TokenTypes.REMARKS]: RemarksRenderers,\n    [TokenTypes.RUNWAY_STATE]: RunwayStateRenderers,\n    [TokenTypes.RUNWAY_VISUAL_RANGE]: RunwayVisualRangeRenderers,\n    [TokenTypes.SEA_SURFACE]: SeaSurfaceRenderers,\n    [TokenTypes.TEMPERATURES]: TemperaturesRenderers,\n    [TokenTypes.TREND]: TrendRenderers,\n    [TokenTypes.VERTICAL_VISIBILITY]: VerticalVisibilityRenderers,\n    [TokenTypes.WIND]: WindRenderers,\n    [TokenTypes.WIND_SHEAR]: WindShearRenderers,\n};\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\n\nexport const isLocalServer = () => (\n    isNotNullOrUndefined(process.env.REACT_APP_IS_LOCAL_SERVER)\n    && process.env.REACT_APP_IS_LOCAL_SERVER !== ''\n);\n","import { useEffect, useMemo, useState } from 'react';\n\nimport { useHistory } from 'react-router';\n\nimport { useQueryParams } from 'lib/hooks/useQueryParams';\nimport { isLocalServer } from 'lib/isLocalServer';\nimport { pick } from 'lib/pick';\nimport { MetarExplainerRoute } from 'lib/routes';\n\nexport class MetarURLManager {\n    // eslint-disable-next-line class-methods-use-this\n    buildURL(metarData) {\n        const queryParams = new URLSearchParams();\n        queryParams.set('value', metarData);\n        return `${MetarExplainerRoute}?${queryParams.toString()}`;\n    }\n}\n\nconst defaultMETARData = () => {\n    if (isLocalServer()) {\n        return 'SPECI LUDO 211025Z 31015G27KT 280V350 '\n            + '4000 1400SW R24/P2000 +SHRA FEW005 '\n            + 'FEW010CB SCT018 BKN025 10/03 Q0995 '\n            + 'RERA WS R24 W19/S4 R24/451293 BECMG '\n            + 'FM1100 25035G50KT TEMPO AT1100 NSW '\n            + 'BLU YLO+ RMK A02 STUFF $';\n    }\n    return '';\n};\n\nexport const useMetarURLConfig = () => {\n    const queryParams = useQueryParams();\n    const history = useHistory();\n\n    const [initialValue, setInitialValue] = useState('');\n\n    const lastValue = useMemo(\n        () => pick(queryParams.get('value'), defaultMETARData()),\n        [queryParams],\n    );\n\n    useEffect(() => {\n        if (lastValue !== '') {\n            setInitialValue(lastValue);\n            history.replace(MetarExplainerRoute);\n        }\n    }, [lastValue]);\n\n    const metarURLManager = useMemo(() => new MetarURLManager(), []);\n\n    return { initialValue, metarURLManager };\n};\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { AltimeterUnit, AltimeterSetting, TokenTypes } from 'lib/metar/enums';\n\nconst fixAltimeterValue = (altimeterUnitP, value) => {\n    if (value === '////') {\n        return AltimeterSetting.NOT_REPORTED;\n    }\n    return altimeterUnitP === AltimeterUnit.INHG ? (value / 100) : 1 * value;\n};\n\nexport const parseAltimeter = (parser) => {\n    const { groups } = parser.matchNextTokenAndForward(\n        '(?<altimeterUnit>[QA])(?<value>([0-9]{4}|////))',\n    );\n\n    if (isNotNullOrUndefined(groups)) {\n        const { altimeterUnit, value } = groups;\n\n        const altimeterUnitP = altimeterUnit === 'A' ? AltimeterUnit.INHG : AltimeterUnit.HPA;\n\n        return {\n            tokenType: TokenTypes.ALTIMETER_SETTING,\n            args: ['altimeterUnit', 'value'],\n\n            altimeterUnit,\n            value,\n\n            altimeterUnitP,\n            valueP: fixAltimeterValue(altimeterUnitP, value),\n        };\n    }\n    return null;\n};\n","import { isNotNullOrUndefined, isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport {\n    CloudLayerAltitude, CloudLayerAmount, CloudTypes, TokenTypes,\n} from 'lib/metar/enums';\nimport { pick } from 'lib/pick';\n\nconst fixCloudAltitude = (altitude) => {\n    if (isNullOrUndefined(altitude)) {\n        return null;\n    }\n\n    if (altitude === '///') {\n        return CloudLayerAltitude.BELOW;\n    }\n\n    return altitude * 100; // feet\n};\n\nconst createCloudDescriptorsToken = (amount, { altitude, cloudType } = {}) => ({\n    tokenType: TokenTypes.CLOUD_COVERAGE,\n    args: ['amount', 'altitude', 'cloudType'],\n\n    amount,\n    altitude: pick(altitude),\n    cloudType: pick(cloudType === '' ? null : cloudType),\n\n    amountP: pick(CloudLayerAmount[amount]),\n    altitudeP: fixCloudAltitude(altitude),\n    cloudTypeP: pick(cloudType === '///' ? CloudTypes.NOT_DESCRIBED : null, CloudTypes[cloudType]),\n});\n\nexport const parseCloudDescriptors = (parser) => {\n    const { completeMatch: nscCompleteMatch } = parser.matchNextTokenAndForward('NSC');\n    if (isNotNullOrUndefined(nscCompleteMatch)) {\n        return createCloudDescriptorsToken(nscCompleteMatch);\n    }\n\n    const { completeMatch: ncdCompleteMatch } = parser.matchNextTokenAndForward('NCD');\n    if (isNotNullOrUndefined(ncdCompleteMatch)) {\n        return createCloudDescriptorsToken(ncdCompleteMatch);\n    }\n\n    const { completeMatch: clrCompleteMatch } = parser.matchNextTokenAndForward('CLR');\n    if (isNotNullOrUndefined(clrCompleteMatch)) {\n        return createCloudDescriptorsToken(clrCompleteMatch);\n    }\n\n    const { completeMatch: skcCompleteMatch } = parser.matchNextTokenAndForward('SKC');\n    if (isNotNullOrUndefined(skcCompleteMatch)) {\n        return createCloudDescriptorsToken(skcCompleteMatch);\n    }\n\n    const { groups: simpleGroups } = parser.matchNextTokenAndForward(\n        '(?<amount>FEW|SCT|BKN|OVC)(?<altitude>[0-9]{3})(?<cloudType>CB|TCU|///|)',\n    );\n    if (isNotNullOrUndefined(simpleGroups)) {\n        const { amount, altitude, cloudType } = simpleGroups;\n\n        return createCloudDescriptorsToken(\n            amount,\n            {\n                altitude,\n                cloudType,\n            },\n        );\n    }\n\n    const { groups: belowGroups } = parser.matchNextTokenAndForward(\n        '(?<amount>FEW|SCT|BKN|OVC)///(?<cloudType>CB|TCU|)',\n    );\n    if (isNotNullOrUndefined(belowGroups)) {\n        const { amount, cloudType } = belowGroups;\n\n        return createCloudDescriptorsToken(\n            amount,\n            {\n                altitude: '///',\n                cloudType,\n            },\n        );\n    }\n\n    const { groups: cloudTypeOnlyGroups } = parser.matchNextTokenAndForward(\n        '///(?<cloudType>CB|TCU)',\n    );\n    if (isNotNullOrUndefined(cloudTypeOnlyGroups)) {\n        const { cloudType } = cloudTypeOnlyGroups;\n\n        return createCloudDescriptorsToken(\n            null,\n            { cloudType },\n        );\n    }\n    return null;\n};\n","export const buildVariableArgs = (prefix, parts) => {\n    const argsKey = `${prefix}Args`;\n    const countKey = `${prefix}Count`;\n    const partsKey = `${prefix}Parts`;\n\n    const result = {\n        [argsKey]: [],\n        [countKey]: parts.length,\n        [partsKey]: [],\n    };\n\n    parts.forEach((part, idx) => {\n        const valueIdxKey = `${prefix}${idx}`;\n        const valueIdxKeyP = `${valueIdxKey}P`;\n\n        result[argsKey].push(valueIdxKey);\n        result[valueIdxKey] = part.value;\n        result[valueIdxKeyP] = part.parsed;\n\n        const valueKey = prefix;\n        const valueKeyP = `${valueKey}P`;\n\n        result[partsKey].push({\n            [valueKey]: part.value,\n            [valueKeyP]: part.parsed,\n            argID: valueIdxKey,\n        });\n    });\n    return result;\n};\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { TokenTypes } from 'lib/metar/enums';\nimport { pick } from 'lib/pick';\n\nconst createPrefixToken = (value, { tokenType } = {}) => ({\n    tokenType: pick(tokenType, TokenTypes.METAR_PREFIX),\n    args: ['value'],\n    value,\n});\n\nexport const skipMETARPrefix = (parser) => {\n    const { completeMatch: completeMatch1 } = parser.matchNextTokenAndForward('METAR');\n    if (isNotNullOrUndefined(completeMatch1)) {\n        return createPrefixToken(completeMatch1);\n    }\n\n    const { completeMatch: completeMatch2 } = parser.matchNextTokenAndForward('SPECI');\n    if (isNotNullOrUndefined(completeMatch2)) {\n        return createPrefixToken(completeMatch2);\n    }\n    return null;\n};\n\nexport const parseAirportICAOCode = (parser) => {\n    const { groups } = parser.matchNextTokenAndForward('(?<airportCode>[A-Z][A-Z0-9]{3})');\n\n    if (isNotNullOrUndefined(groups)) {\n        const { airportCode } = groups;\n\n        return {\n            tokenType: TokenTypes.AIRPORT_IDENTIFIER,\n            args: ['airportCode'],\n            airportCode,\n        };\n    }\n\n    return {\n        tokenType: TokenTypes.NOT_RECOGNIZED,\n        message: 'No airport ICAO code was found/recognized.',\n    };\n};\n\nexport const parseMETARTime = (parser) => {\n    const { groups } = parser.matchNextTokenAndForward(\n        '(?<dayOfMonth>[0-9]{2})(?<hour>[0-9]{2})(?<minutes>[0-9]{2})Z',\n    );\n\n    if (isNotNullOrUndefined(groups)) {\n        const { dayOfMonth, hour, minutes } = groups;\n\n        return {\n            tokenType: TokenTypes.METAR_TIME,\n            args: ['dayOfMonth', 'hour', 'minutes'],\n\n            dayOfMonth,\n            hour,\n            minutes,\n\n            dayOfMonthP: 1 * dayOfMonth,\n        };\n    }\n    return {\n        tokenType: TokenTypes.NOT_RECOGNIZED,\n        message: 'No METAR time was found/recognized.',\n    };\n};\n\nexport const parseAuto = (parser) => {\n    const { completeMatch } = parser.matchNextTokenAndForward('AUTO');\n\n    if (isNotNullOrUndefined(completeMatch)) {\n        return createPrefixToken(completeMatch, {\n            tokenType: TokenTypes.METAR_PREFIX_OTHER,\n        });\n    }\n    return null;\n};\n\nexport const parseNIL = (parser) => {\n    const { completeMatch } = parser.matchNextTokenAndForward('NIL');\n\n    if (isNotNullOrUndefined(completeMatch)) {\n        return createPrefixToken(completeMatch, {\n            tokenType: TokenTypes.METAR_PREFIX_OTHER,\n        });\n    }\n    return null;\n};\n\nexport const parseCOR = (parser) => {\n    const { completeMatch: completeMatch1 } = parser.matchNextTokenAndForward('COR');\n\n    if (isNotNullOrUndefined(completeMatch1)) {\n        return createPrefixToken(completeMatch1, {\n            tokenType: TokenTypes.METAR_PREFIX_OTHER,\n        });\n    }\n    return null;\n};\n","import {\n    WeatherDescriptor, WeatherIntensity, WeatherPhenomena, WeatherProximity,\n} from 'lib/metar/enums';\nimport { buildVariableArgs } from 'lib/metar/parsers/internal/varargs';\n\nexport const WeatherIntensityPatterns = '\\\\+|-';\nexport const WeatherProximityPatterns = 'VC';\nexport const WeatherDescriptorPatterns = 'MI|BC|PR|DR|BL|SH|TS|FZ';\nexport const WeatherPhenomenaPatterns = 'DZ|RA|SN|SG|PL|GR|GS|UP|BR|FG|FU|VA|DU|SA|HZ|PO|SQ|FC|SS|DS';\n\nconst weatherDescriptorMapping = Object.freeze({\n    MI: WeatherDescriptor.SHALLOW,\n    BC: WeatherDescriptor.PATCHES,\n    PR: WeatherDescriptor.PARTIAL,\n    DR: WeatherDescriptor.LOW_DRIFTING,\n    BL: WeatherDescriptor.BLOWING,\n    SH: WeatherDescriptor.SHOWER,\n    TS: WeatherDescriptor.THUNDERSTORM,\n    FZ: WeatherDescriptor.FREEZING,\n});\n\nconst weatherPhenomenaMapping = Object.freeze({\n    DZ: WeatherPhenomena.DRIZZLE,\n    RA: WeatherPhenomena.RAIN,\n    SN: WeatherPhenomena.SNOW,\n    SG: WeatherPhenomena.SNOW_GRAINS,\n    PL: WeatherPhenomena.ICE_PELLETS,\n    GR: WeatherPhenomena.HAIL,\n    GS: WeatherPhenomena.SMALL_HAIL_SNOW,\n    UP: WeatherPhenomena.UNKNOWN_PRECIPITATION,\n    BR: WeatherPhenomena.MIST,\n    FG: WeatherPhenomena.FOG,\n    FU: WeatherPhenomena.SMOKE,\n    VA: WeatherPhenomena.VOLCANIC_HASH,\n    DU: WeatherPhenomena.DUST,\n    SA: WeatherPhenomena.SAND,\n    HZ: WeatherPhenomena.HAZE,\n    PO: WeatherPhenomena.DUST_DEVILS,\n    SQ: WeatherPhenomena.SQUALLS,\n    FC: WeatherPhenomena.FUNNEL_CLOUD,\n    SS: WeatherPhenomena.SANDSTORM,\n    DS: WeatherPhenomena.DUSTSTORM,\n});\n\nconst splitValuesIntoParts = (valuesStr, parseValue, lengthOfValue) => {\n    const parts = [];\n\n    let currentValue = valuesStr;\n\n    while (currentValue.length !== 0) {\n        const x = currentValue.substring(0, lengthOfValue);\n\n        parts.push({\n            value: x,\n            parsed: parseValue(x),\n        });\n        currentValue = currentValue.substring(lengthOfValue);\n    }\n\n    return parts;\n};\n\nexport const buildIntensitiesArgs = (parts) => buildVariableArgs('intensity', parts);\n\nexport const splitWeatherItensitiesIntoParts = (valuesStr) => splitValuesIntoParts(\n    valuesStr,\n    (x) => {\n        if (x === '-') return WeatherIntensity.LIGHT;\n        if (x === '+') return WeatherIntensity.HEAVY;\n        return null;\n    },\n    1,\n);\n\nexport const buildProximitiessArgs = (parts) => buildVariableArgs('proximity', parts);\n\nexport const splitWeatherProximitiesIntoParts = (valuesStr) => splitValuesIntoParts(\n    valuesStr,\n    (x) => {\n        if (x === 'VC') return WeatherProximity.VINCINITY;\n        return null;\n    },\n    2,\n);\n\nexport const buildDescriptorsArgs = (parts) => buildVariableArgs('descriptor', parts);\n\nexport const splitWeatherDescriptorsIntoParts = (valuesStr) => splitValuesIntoParts(\n    valuesStr,\n    (x) => weatherDescriptorMapping[x],\n    2,\n);\n\nexport const buildPhenomenonsArgs = (parts) => buildVariableArgs('phenomena', parts);\n\nexport const splitWeatherPhenomenonsIntoParts = (valuesStr) => splitValuesIntoParts(\n    valuesStr,\n    (x) => weatherPhenomenaMapping[x],\n    2,\n);\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { TokenTypes, WeatherPhenomena } from 'lib/metar/enums';\nimport {\n    buildDescriptorsArgs,\n    buildIntensitiesArgs,\n    buildPhenomenonsArgs,\n    buildProximitiessArgs,\n    splitWeatherDescriptorsIntoParts,\n    splitWeatherItensitiesIntoParts,\n    splitWeatherPhenomenonsIntoParts,\n    splitWeatherProximitiesIntoParts,\n    WeatherDescriptorPatterns,\n    WeatherIntensityPatterns,\n    WeatherPhenomenaPatterns,\n    WeatherProximityPatterns,\n} from 'lib/metar/parsers/internal/weather';\nimport { pick } from 'lib/pick';\n\nconst createPresentWeatherToken = ({\n    intensityParts, proximityParts, descriptorParts, phenomenaParts,\n}) => {\n    const intensitiesData = buildIntensitiesArgs(pick(intensityParts, []));\n    const proximityData = buildProximitiessArgs(pick(proximityParts, []));\n    const descriptorsData = buildDescriptorsArgs(pick(descriptorParts, []));\n    const phenomenonsData = buildPhenomenonsArgs(pick(phenomenaParts, []));\n\n    return {\n        tokenType: TokenTypes.PRESENT_WEATHER,\n        args: [\n            ...intensitiesData.intensityArgs,\n            ...proximityData.proximityArgs,\n            ...descriptorsData.descriptorArgs,\n            ...phenomenonsData.phenomenaArgs,\n        ],\n\n        ...intensitiesData,\n        ...proximityData,\n        ...descriptorsData,\n        ...phenomenonsData,\n    };\n};\n\nconst parsePresentWeatherCombination = (parser, descriptorCount, phenomenaCount) => {\n    const { groups } = parser.matchNextTokenAndForward(\n        `(?<intensities>(${WeatherIntensityPatterns})*)`\n        + `(?<proximities>(${WeatherProximityPatterns})*)`\n        + `(?<descriptors>(${WeatherDescriptorPatterns})${descriptorCount})`\n        + `(?<phenomenons>(${WeatherPhenomenaPatterns})${phenomenaCount})`,\n    );\n\n    if (isNotNullOrUndefined(groups)) {\n        const {\n            intensities, proximities, descriptors, phenomenons,\n        } = groups;\n\n        return createPresentWeatherToken({\n            intensityParts: splitWeatherItensitiesIntoParts(intensities),\n            proximityParts: splitWeatherProximitiesIntoParts(proximities),\n            descriptorParts: splitWeatherDescriptorsIntoParts(descriptors),\n            phenomenaParts: splitWeatherPhenomenonsIntoParts(phenomenons),\n        });\n    }\n\n    return null;\n};\n\nexport const parsePresentWeather = (parser) => {\n    const { completeMatch } = parser.matchNextTokenAndForward('NSW');\n    if (isNotNullOrUndefined(completeMatch)) {\n        return createPresentWeatherToken({\n            phenomenaParts: [\n                {\n                    value: completeMatch,\n                    parsed: WeatherPhenomena.NSW,\n                },\n            ],\n        });\n    }\n\n    const combinations = [['+', '+'], ['*', '+'], ['+', '*']];\n\n    for (let idx = 0; idx < combinations.length; idx += 1) {\n        const combination = combinations[idx];\n        const result = parsePresentWeatherCombination(parser, combination[0], combination[1]);\n\n        if (isNotNullOrUndefined(result)) {\n            return result;\n        }\n    }\n\n    return null;\n};\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport {\n    Directions, PrevailingVisibility, PrevailingVisibilityUnit, TokenTypes,\n} from 'lib/metar/enums';\nimport { pick } from 'lib/pick';\n\nconst fixPVValue = (value) => {\n    if (value === '////') {\n        return PrevailingVisibility.MISSING;\n    }\n\n    if (value === 'CAVOK') {\n        return PrevailingVisibility.CAVOK;\n    }\n\n    if (value === '9999') {\n        return PrevailingVisibility.TEN_K;\n    }\n\n    if (value === 'M1/4') {\n        return PrevailingVisibility.LESS_THAN_QUARTER_MILE;\n    }\n\n    const matchResult1 = value.match(new RegExp('(?<whole>[0-9]+)\\\\s(?<numerator>[0-9]+)/(?<denominator>[0-9]+)'));\n    if (isNotNullOrUndefined(matchResult1)) {\n        const { whole, numerator, denominator } = matchResult1.groups;\n        return 1 * whole + numerator / denominator;\n    }\n\n    const matchResult2 = value.match(new RegExp('(?<numerator>[0-9]+)/(?<denominator>[0-9]+)'));\n    if (isNotNullOrUndefined(matchResult2)) {\n        const { numerator, denominator } = matchResult2.groups;\n        return numerator / denominator;\n    }\n\n    return 1 * value;\n};\n\nconst isWithoutUnit = (valueP) => valueP === PrevailingVisibility.MISSING || valueP === PrevailingVisibility.CAVOK;\n\nconst createPrevailingVisibility = (value, { direction, unit } = {}) => {\n    const valueP = fixPVValue(value);\n\n    return {\n        tokenType: TokenTypes.PREVAILING_VISIBILITY,\n        args: ['value', 'direction'],\n\n        value,\n        direction: direction === '' ? null : pick(direction),\n\n        valueP,\n        directionP: pick(Directions[direction]),\n        unitP: pick(unit, isWithoutUnit(valueP) ? null : PrevailingVisibilityUnit.METERS),\n    };\n};\n\nexport const parsePrevailingVisibility = (parser) => {\n    const { completeMatch: cavokCompleteMatch } = parser.matchNextTokenAndForward('CAVOK');\n    if (isNotNullOrUndefined(cavokCompleteMatch)) {\n        return createPrevailingVisibility(cavokCompleteMatch);\n    }\n\n    const { groups: groups1 } = parser.matchNextTokenAndForward('(?<distance>[0-9]{4})(?<direction>[A-Z]*)');\n    if (isNotNullOrUndefined(groups1)) {\n        const { distance, direction } = groups1;\n        return createPrevailingVisibility(distance, { direction });\n    }\n\n    const { groups: groups2 } = parser.matchNextTokenAndForward('(?<distance>[0-9]+(\\\\s[0-9]+)?(/[0-9]+)?)SM');\n    if (isNotNullOrUndefined(groups2)) {\n        const { distance } = groups2;\n        return createPrevailingVisibility(\n            distance,\n            { unit: PrevailingVisibilityUnit.MILES },\n        );\n    }\n\n    const { groups: groups4 } = parser.matchNextTokenAndForward('(?<distance>M1/4)SM');\n    if (isNotNullOrUndefined(groups4)) {\n        const { distance } = groups4;\n        return createPrevailingVisibility(\n            distance,\n            { unit: PrevailingVisibilityUnit.MILES },\n        );\n    }\n\n    const { groups: groups5 } = parser.matchNextTokenAndForward('(?<distance>////)SM');\n    if (isNotNullOrUndefined(groups5)) {\n        const { distance } = groups5;\n        return createPrevailingVisibility(\n            distance,\n            { unit: PrevailingVisibilityUnit.MILES },\n        );\n    }\n\n    const { groups: groups3 } = parser.matchNextTokenAndForward('(?<distance>[0-9]+(\\\\s[0-9]+)?(/[0-9]+)?)KM');\n    if (isNotNullOrUndefined(groups3)) {\n        const { distance } = groups3;\n        return createPrevailingVisibility(\n            distance,\n            { unit: PrevailingVisibilityUnit.KILOMETERS },\n        );\n    }\n\n    const { completeMatch: completeMatch2 } = parser.matchNextTokenAndForward('////');\n    if (isNotNullOrUndefined(completeMatch2)) {\n        return createPrevailingVisibility(completeMatch2);\n    }\n    return null;\n};\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { TokenTypes } from 'lib/metar/enums';\nimport {\n    buildDescriptorsArgs,\n    buildPhenomenonsArgs, splitWeatherDescriptorsIntoParts,\n    splitWeatherPhenomenonsIntoParts, WeatherDescriptorPatterns,\n    WeatherPhenomenaPatterns,\n} from 'lib/metar/parsers/internal/weather';\n\nconst parseRecentWeatherCombination = (parser, descriptorCount, phenomenaCount) => {\n    const { groups } = parser.matchNextTokenAndForward(\n        'RE'\n        + `(?<descriptors>(${WeatherDescriptorPatterns})${descriptorCount})`\n        + `(?<phenomenons>(${WeatherPhenomenaPatterns})${phenomenaCount})`,\n    );\n    if (isNotNullOrUndefined(groups)) {\n        const { descriptors, phenomenons } = groups;\n\n        const descriptorsData = buildDescriptorsArgs(splitWeatherDescriptorsIntoParts(descriptors));\n        const phenomenonsData = buildPhenomenonsArgs(splitWeatherPhenomenonsIntoParts(phenomenons));\n\n        return {\n            tokenType: TokenTypes.RECENT_WEATHER,\n            args: [\n                ...descriptorsData.descriptorArgs,\n                ...phenomenonsData.phenomenaArgs,\n            ],\n\n            ...descriptorsData,\n            ...phenomenonsData,\n        };\n    }\n\n    return null;\n};\n\nexport const parseRecentWeather = (parser) => {\n    const combinations = [['+', '+'], ['*', '+'], ['+', '*']];\n\n    for (let idx = 0; idx < combinations.length; idx += 1) {\n        const combination = combinations[idx];\n        const result = parseRecentWeatherCombination(parser, combination[0], combination[1]);\n\n        if (isNotNullOrUndefined(result)) {\n            return result;\n        }\n    }\n\n    return null;\n};\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport {\n    RunwayContaminationDepth, RunwayContaminationExtent, RunwayDeposit, RunwaySurfaceFriction, TokenTypes,\n} from 'lib/metar/enums';\nimport { pick } from 'lib/pick';\n\nconst depositMapping = [\n    RunwayDeposit.CLEAR_AND_DRY,\n    RunwayDeposit.DAMP,\n    RunwayDeposit.WET,\n    RunwayDeposit.RIME_AND_FROST,\n    RunwayDeposit.DRY_SNOW,\n    RunwayDeposit.WET_SNOW,\n    RunwayDeposit.SLUSH,\n    RunwayDeposit.ICE,\n    RunwayDeposit.COMPACTED_SNOW,\n    RunwayDeposit.FROZEN_RUTS,\n];\n\nconst parseDepositType = (value) => {\n    if (value === '/') {\n        return RunwayDeposit.NOT_REPORTED;\n    }\n    return depositMapping[1 * value];\n};\n\nconst contaminationExtentMapping = {\n    1: RunwayContaminationExtent.BELOW_TEN,\n    2: RunwayContaminationExtent.TEN_TO_TWENTY_FIVE,\n    5: RunwayContaminationExtent.TWENTY_FIVE_TO_FIFTY,\n    9: RunwayContaminationExtent.ABOVE_FIFTY,\n};\n\nconst parseContaminationExtent = (value) => {\n    if (value === '/') {\n        return RunwayContaminationExtent.NOT_REPORTED;\n    }\n\n    return pick(\n        contaminationExtentMapping[1 * value],\n        RunwayContaminationExtent.UNKNOWN_RESERVED,\n    );\n};\n\nconst contaminationDepthMapping = {\n    92: RunwayContaminationDepth.TEN_CM,\n    93: RunwayContaminationDepth.FIFTEEN_CM,\n    94: RunwayContaminationDepth.TWENTY_CM,\n    95: RunwayContaminationDepth.TWENTY_FIVE_CM,\n    96: RunwayContaminationDepth.THIRTY_CM,\n    97: RunwayContaminationDepth.THIRTY_FIVE_CM,\n    98: RunwayContaminationDepth.FORTY_CM,\n    99: RunwayContaminationDepth.NOT_OPERATIONAL,\n};\n\nconst parseContaminationDepth = (value) => {\n    if (value === '//') {\n        return RunwayContaminationDepth.NOT_REPORTED;\n    }\n\n    const valueI = 1 * value;\n    return pick(contaminationDepthMapping[valueI], valueI);\n};\n\nconst surfaceFrictionMapping = {\n    91: RunwaySurfaceFriction.BRAKING_ACTION_POOR,\n    92: RunwaySurfaceFriction.BRAKING_ACTION_MEDIUM_POOR,\n    93: RunwaySurfaceFriction.BRAKING_ACTION_MEDIUM,\n    94: RunwaySurfaceFriction.BRAKING_ACTION_MEDIUM_GOOD,\n    95: RunwaySurfaceFriction.BRAKING_ACTION_GOOD,\n\n    96: RunwaySurfaceFriction.UNKNOWN_RESERVED,\n    97: RunwaySurfaceFriction.UNKNOWN_RESERVED,\n    98: RunwaySurfaceFriction.UNKNOWN_RESERVED,\n\n    99: RunwaySurfaceFriction.UNRELIABLE,\n};\n\nconst parseSurfaceFriction = (value) => {\n    if (value === '//') {\n        return RunwaySurfaceFriction.NOT_REPORTED;\n    }\n\n    const valueI = 1 * value;\n    return pick(surfaceFrictionMapping[valueI], valueI / 100);\n};\n\nexport const parseRunwayState = (parser) => {\n    const { groups } = parser.matchNextTokenAndForward(\n        'R(?<runway>[0-9]{2})/(?<deposit>([0-9]|/))(?<extent>([0-9]|/))'\n        + '(?<depth>([0-9]{2}|//))(?<friction>([0-9]{2}|//))',\n    );\n\n    if (isNotNullOrUndefined(groups)) {\n        const {\n            runway, deposit, extent, depth, friction,\n        } = groups;\n\n        return {\n            tokenType: TokenTypes.RUNWAY_STATE,\n            args: ['runway', 'deposit', 'extent', 'depth', 'friction'],\n\n            runway,\n            deposit,\n            extent,\n            depth,\n            friction,\n\n            runwayP: runway,\n            depositP: parseDepositType(deposit),\n            extentP: parseContaminationExtent(extent),\n            depthP: parseContaminationDepth(depth),\n            frictionP: parseSurfaceFriction(friction),\n        };\n    }\n\n    return null;\n};\n","import { Temperatures } from 'lib/metar/enums';\n\nexport const TemperaturePattern = '(M?[0-9]{2}|//)';\n\nexport const fixTemp = (temp) => {\n    if (temp === '//') {\n        return Temperatures.NOT_REPORTED;\n    }\n    return temp[0] === 'M' ? -1 * temp.substring(1) : 1 * temp;\n};\n","import { isNotNullOrUndefined, isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { SeaSurfaceInfoType, SeaSurfaceStateCode, TokenTypes } from 'lib/metar/enums';\nimport { fixTemp, TemperaturePattern } from 'lib/metar/parsers/internal/temperatures';\nimport { pick } from 'lib/pick';\n\nconst stateCodesMapping = [\n    SeaSurfaceStateCode.CALM_GLASSY,\n    SeaSurfaceStateCode.CALM_RIPPLED,\n    SeaSurfaceStateCode.SMOOTH,\n    SeaSurfaceStateCode.SLIGHT,\n    SeaSurfaceStateCode.MODERATE,\n    SeaSurfaceStateCode.ROUGH,\n    SeaSurfaceStateCode.VERY_ROUGH,\n    SeaSurfaceStateCode.HIGH,\n    SeaSurfaceStateCode.VERY_HIGH,\n    SeaSurfaceStateCode.PHENOMENAL,\n];\n\nexport const createSeaSurfaceToken = (temperature, { seaStateCode, waveHeight }) => ({\n    tokenType: TokenTypes.SEA_SURFACE,\n    args: ['temperature', 'seaStateCode', 'waveHeight'],\n\n    infoType: (\n        isNullOrUndefined(waveHeight)\n            ? SeaSurfaceInfoType.SURFACE_STATE\n            : SeaSurfaceInfoType.WAVE_HEIGHT\n    ),\n\n    temperature,\n    seaStateCode: pick(seaStateCode),\n    waveHeight: pick(waveHeight),\n\n    temperatureP: fixTemp(temperature),\n    seaStateCodeP: isNullOrUndefined(seaStateCode) ? null : pick(stateCodesMapping[1 * seaStateCode]),\n    waveHeightP: isNullOrUndefined(waveHeight) ? null : waveHeight * 10,\n});\n\nexport const parseSeaSurface = (parser) => {\n    const { groups: seaStateGroups } = parser.matchNextTokenAndForward(\n        `W(?<temperature>${TemperaturePattern})/S(?<seaStateCode>[0-9])`,\n    );\n    if (isNotNullOrUndefined(seaStateGroups)) {\n        const { temperature, seaStateCode } = seaStateGroups;\n        return createSeaSurfaceToken(temperature, { seaStateCode });\n    }\n\n    const { groups: waveHeightGroups } = parser.matchNextTokenAndForward(\n        `W(?<temperature>${TemperaturePattern})/H(?<waveHeight>[0-9]{3})`,\n    );\n    if (isNotNullOrUndefined(waveHeightGroups)) {\n        const { temperature, waveHeight } = waveHeightGroups;\n        return createSeaSurfaceToken(temperature, { waveHeight });\n    }\n\n    return null;\n};\n","import { v4 as uuidv4 } from 'uuid';\n\nimport { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { TokenTypes, TrendTimeType, TrendType } from 'lib/metar/enums';\nimport { buildVariableArgs } from 'lib/metar/parsers/internal/varargs';\nimport { pick } from 'lib/pick';\n\nconst trendTypesMapping = {\n    NOSIG: TrendType.NOSIG,\n    BECMG: TrendType.BECOMING,\n    TEMPO: TrendType.TEMPORARY,\n};\n\nconst createTrendToken = (trendType, { timeParts } = {}) => {\n    const timeData = buildVariableArgs('time', pick(timeParts, []));\n\n    return ({\n        tokenType: TokenTypes.TREND,\n        args: ['trendType', ...timeData.timeArgs],\n        context: uuidv4(),\n\n        trendType,\n        ...timeData,\n\n        trendTypeP: trendTypesMapping[trendType],\n    });\n};\n\nconst createHourMinutePart = (value, { trendTimeType, hour, minutes }) => {\n    const result = { trendTimeType, hour, minutes };\n    return { value, parsed: result };\n};\n\nconst parseTimeToken = (parser, prefix, trendTimeType) => {\n    const { completeMatch, groups } = parser.matchNextTokenAndForward(`${prefix}(?<hour>[0-9]{2})(?<minutes>[0-9]{2})`);\n    if (isNotNullOrUndefined(groups)) {\n        return createHourMinutePart(completeMatch, { trendTimeType, ...groups });\n    }\n\n    return null;\n};\n\nconst parseFrom = (parser) => parseTimeToken(parser, 'FM', TrendTimeType.FROM);\nconst parseUntil = (parser) => parseTimeToken(parser, 'TL', TrendTimeType.UNTIL);\nconst parseAt = (parser) => parseTimeToken(parser, 'AT', TrendTimeType.AT);\n\nconst parseTimeInfo = (parser) => {\n    const groups = [];\n\n    const timeParserFuncs = [\n        parseFrom,\n        parseUntil,\n        parseAt,\n    ];\n\n    // We expect potentially as many groups as there are functions.\n    for (let i = 0; i < timeParserFuncs.length; i += 1) {\n        let finished = false;\n\n        // We find the type of group by executing each function in order and take the first non-null result.\n        for (let j = 0; j < timeParserFuncs.length; j += 1) {\n            const fnResult = timeParserFuncs[j](parser);\n\n            if (isNotNullOrUndefined(fnResult)) {\n                groups.push(fnResult);\n                break;\n            }\n\n            finished = true;\n        }\n\n        if (finished) {\n            break;\n        }\n    }\n\n    return groups;\n};\n\nexport const parseTrend = (parser) => {\n    const { completeMatch: completeMatchNOSIG } = parser.matchNextTokenAndForward('NOSIG');\n    if (isNotNullOrUndefined(completeMatchNOSIG)) {\n        return createTrendToken(completeMatchNOSIG);\n    }\n\n    const { completeMatch: completeMatchBecoming } = parser.matchNextTokenAndForward('BECMG');\n    if (isNotNullOrUndefined(completeMatchBecoming)) {\n        return createTrendToken(completeMatchBecoming, {\n            timeParts: parseTimeInfo(parser),\n        });\n    }\n\n    const { completeMatch: completeMatchTemporary } = parser.matchNextTokenAndForward('TEMPO');\n    if (isNotNullOrUndefined(completeMatchTemporary)) {\n        return createTrendToken(completeMatchTemporary, {\n            timeParts: parseTimeInfo(parser),\n        });\n    }\n\n    return null;\n};\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { TokenTypes } from 'lib/metar/enums';\n\nconst createVerticalVisibilityToken = (altitude) => ({\n    tokenType: TokenTypes.VERTICAL_VISIBILITY,\n    args: ['altitude'],\n\n    altitude,\n    altitudeP: altitude === '///' ? null : altitude * 100,\n});\n\nexport const parseVerticalVisibility = (parser) => {\n    const { groups: vvAltGroups } = parser.matchNextTokenAndForward(\n        'VV(?<altitude>[0-9]{3})',\n    );\n    if (isNotNullOrUndefined(vvAltGroups)) {\n        return createVerticalVisibilityToken(vvAltGroups.altitude);\n    }\n\n    const { completeMatch: noDataCompleteMatch } = parser.matchNextTokenAndForward('VV///');\n    if (isNotNullOrUndefined(noDataCompleteMatch)) {\n        return createVerticalVisibilityToken('///');\n    }\n\n    return null;\n};\n","import { isNotNullOrUndefined, isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport {\n    TokenTypes, WindDirections, WindForce, WindSpeedUnit,\n} from 'lib/metar/enums';\nimport { pick } from 'lib/pick';\n\nconst fixForce = (force) => {\n    if (force === '//') {\n        return WindForce.NOT_REPORTED;\n    }\n    return force[0] === 'P' ? 100 + 1 * force.substring(1) : 1 * force;\n};\n\nconst windDirectionsMapping = {\n    VRB: WindDirections.VRB,\n    '///': WindDirections.NOT_REPORTED,\n};\n\nconst createWindToken = (direction, force, unit, { gustsForce, fromDirection, toDirection } = {}) => ({\n    tokenType: TokenTypes.WIND,\n\n    args: ['direction', 'force', 'gustsForce', 'unit', 'fromDirection', 'toDirection'],\n\n    direction,\n    force,\n    unit,\n    gustsForce: pick(gustsForce),\n    fromDirection: pick(fromDirection),\n    toDirection: pick(toDirection),\n\n    isCalm: direction === '000' && force === '00',\n\n    directionP: pick(windDirectionsMapping[direction], 1 * direction),\n    fromDirectionP: isNullOrUndefined(fromDirection) ? null : 1 * fromDirection,\n    toDirectionP: isNullOrUndefined(toDirection) ? null : 1 * toDirection,\n\n    forceP: fixForce(force),\n    gustsForceP: isNullOrUndefined(gustsForce) ? null : fixForce(gustsForce),\n    unitP: unit === 'KT' ? WindSpeedUnit.KNOTS : WindSpeedUnit.METERS_PER_SECOND,\n});\n\nconst parseWindVariableDirection = (parser) => {\n    const { groups } = parser.matchNextTokenAndForward(\n        '(?<fromDirection>[0-9]{3})V(?<toDirection>[0-9]{3})',\n    );\n\n    if (isNotNullOrUndefined(groups)) {\n        const { fromDirection, toDirection } = groups;\n        return { fromDirection, toDirection };\n    }\n    return {};\n};\n\nexport const parseWind = (parser) => {\n    const { groups: simpleGroups } = parser.matchNextTokenAndForward(\n        '(?<direction>(VRB|[0-9]{3}|///))(?<force>(P?[0-9]{2}|//))(?<unit>KT|MPS)',\n    );\n    if (isNotNullOrUndefined(simpleGroups)) {\n        const { direction, force, unit } = simpleGroups;\n        return createWindToken(\n            direction,\n            force,\n            unit,\n            parseWindVariableDirection(parser),\n        );\n    }\n\n    const { groups: withGustsGroups } = parser.matchNextTokenAndForward(\n        '(?<direction>(VRB|[0-9]{3}|///))(?<force>(P?[0-9]{2}|//))G(?<gustsForce>(P?[0-9]{2}|//))(?<unit>KT|MPS)',\n    );\n    if (isNotNullOrUndefined(withGustsGroups)) {\n        const {\n            direction, force, unit, gustsForce,\n        } = withGustsGroups;\n\n        return createWindToken(\n            direction,\n            force,\n            unit,\n            {\n                gustsForce,\n                ...parseWindVariableDirection(parser),\n            },\n        );\n    }\n\n    return null;\n};\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { TokenTypes, WindShearRunway } from 'lib/metar/enums';\n\nconst allRwyValue = 'ALL RWY';\n\nconst createWindShearTokens = (runway) => ({\n    tokenType: TokenTypes.WIND_SHEAR,\n    args: ['runway'],\n\n    runway,\n\n    runwayP: runway === allRwyValue ? WindShearRunway.ALL_RUNWAYS : runway.substring(1),\n});\n\nexport const parseWindShear = (parser) => {\n    const { completeMatch: completeMatchAllRwy } = parser.matchNextTokenAndForward('WS\\\\s+ALL\\\\s+RWY');\n    if (isNotNullOrUndefined(completeMatchAllRwy)) {\n        return createWindShearTokens(allRwyValue);\n    }\n\n    const { groups: rwyGroups } = parser.matchNextTokenAndForward('WS\\\\s+(?<runway>R[0-9]{2})');\n    if (isNotNullOrUndefined(rwyGroups)) {\n        return createWindShearTokens(rwyGroups.runway);\n    }\n\n    return null;\n};\n","import { isNotNullOrUndefined, isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { TokenTypes } from 'lib/metar/enums';\nimport { pick } from 'lib/pick';\n\nexport class ParserState {\n    constructor(metar) {\n        this.originalMetar = metar;\n        this.currentValue = metar;\n        this.context = null;\n\n        this.tokens = [];\n    }\n\n    hasMoreToMatch() {\n        this.skipWhitespace();\n        return this.currentValue.length !== 0;\n    }\n\n    matchAndForward(pattern) {\n        const result = this.currentValue.match(new RegExp(pattern));\n\n        if (isNullOrUndefined(result)) {\n            return { matched: false };\n        }\n\n        this.currentValue = this.currentValue.substring(\n            result.index + result[0].length,\n        );\n\n        return {\n            matched: true,\n            completeMatch: pick(result[0], '').trim(),\n            groups: pick(result.groups),\n        };\n    }\n\n    matchNextTokenAndForward(pattern) {\n        this.skipWhitespace();\n\n        const { matched: matched1, ...result1 } = this.matchAndForward(`^${pattern}$`);\n        if (matched1) {\n            return result1;\n        }\n\n        const { matched: matched2, ...result2 } = this.matchAndForward(`^${pattern}\\\\s`);\n        if (matched2) {\n            return result2;\n        }\n\n        return {};\n    }\n\n    skipWhitespace() {\n        this.matchAndForward('^\\\\s+');\n    }\n\n    skipToken() {\n        const { completeMatch } = this.matchNextTokenAndForward('[^\\\\s]+');\n\n        this.pushToken({\n            tokenType: TokenTypes.NOT_RECOGNIZED,\n            value: completeMatch,\n            message: 'Token was not recognized.',\n        });\n    }\n\n    pushToken(value) {\n        if (value.context !== undefined) {\n            this.context = value.context;\n        }\n\n        this.tokens.push({\n            context: pick(this.context),\n            ...value,\n        });\n    }\n\n    cleanIrrelevantCharacters() {\n        const result = this.currentValue.match(new RegExp('=+$'));\n        if (isNotNullOrUndefined(result)) {\n            this.currentValue = this.currentValue.substring(\n                0, this.currentValue.length - result[0].length,\n            );\n        }\n    }\n}\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { parseAltimeter } from 'lib/metar/parsers/altimeter';\nimport { parseCloudDescriptors } from 'lib/metar/parsers/cloudDescriptors';\nimport { parseColorSystems } from 'lib/metar/parsers/colorSystems';\nimport {\n    parseAirportICAOCode,\n    parseAuto,\n    parseMETARTime,\n    parseNIL,\n    parseCOR,\n    skipMETARPrefix,\n} from 'lib/metar/parsers/metarPrefixes';\nimport { parseMissingData } from 'lib/metar/parsers/missingData';\nimport { parsePresentWeather } from 'lib/metar/parsers/presentWeather';\nimport { parsePrevailingVisibility } from 'lib/metar/parsers/prevailingVisibility';\nimport { parseRecentWeather } from 'lib/metar/parsers/recentWeather';\nimport { parseRemarks } from 'lib/metar/parsers/remarks';\nimport { parseRunwayState } from 'lib/metar/parsers/runwayState';\nimport { parseRunwayVisualRange } from 'lib/metar/parsers/runwayVisualRange';\nimport { parseSeaSurface } from 'lib/metar/parsers/seaSurface';\nimport { parseTemperatures } from 'lib/metar/parsers/temperatures';\nimport { parseTrend } from 'lib/metar/parsers/trend';\nimport { parseVerticalVisibility } from 'lib/metar/parsers/verticalVisibility';\nimport { parseWind } from 'lib/metar/parsers/wind';\nimport { parseWindShear } from 'lib/metar/parsers/windShear';\nimport { ParserState } from 'lib/metar/parserState';\nimport { pick } from 'lib/pick';\n\nconst prefixFunctions = [\n    skipMETARPrefix,\n    parseCOR,\n    parseAirportICAOCode,\n    parseMETARTime,\n];\n\nconst parsersFunctions = [\n    parseCOR,\n    parseNIL,\n    parseAuto,\n\n    parseAltimeter,\n    parseCloudDescriptors,\n    parsePresentWeather,\n    parsePrevailingVisibility,\n    parseRemarks,\n    parseRunwayVisualRange,\n    parseTemperatures,\n    parseTrend,\n    parseVerticalVisibility,\n    parseWind,\n    parseRecentWeather,\n    parseWindShear,\n    parseSeaSurface,\n    parseRunwayState,\n    parseColorSystems,\n\n    parseMissingData,\n];\n\nconst parseToken = (parser) => {\n    for (let idx = 0; idx < parsersFunctions.length; idx += 1) {\n        const result = parsersFunctions[idx](parser);\n\n        if (isNotNullOrUndefined(result)) {\n            parser.pushToken(result);\n            return true;\n        }\n    }\n    return false;\n};\n\nconst parseNextToken = (parser) => {\n    if (parseToken(parser)) {\n        return;\n    }\n\n    parser.skipToken();\n};\n\nexport const parseMETAR = (value) => {\n    const parser = new ParserState(pick(value, ''));\n    parser.cleanIrrelevantCharacters();\n\n    prefixFunctions.forEach((fn) => {\n        if (!parser.hasMoreToMatch()) {\n            return;\n        }\n\n        const result = fn(parser);\n        if (isNotNullOrUndefined(result)) {\n            parser.pushToken(result);\n        }\n    });\n\n    while (parser.hasMoreToMatch()) {\n        parseNextToken(parser);\n    }\n\n    return parser.tokens;\n};\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { TokenTypes } from 'lib/metar/enums';\n\nexport const parseRemarks = (parser) => {\n    const { groups } = parser.matchAndForward('^RMK\\\\s+(?<remarks>[^]+)$');\n\n    if (isNotNullOrUndefined(groups)) {\n        const { remarks } = groups;\n\n        return {\n            tokenType: TokenTypes.REMARKS,\n            args: ['rmk', 'remarks'],\n            context: null,\n\n            rmk: 'RMK',\n            remarks,\n        };\n    }\n    return null;\n};\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { RunwayVisualRangeQualifier, TokenTypes } from 'lib/metar/enums';\n\nexport const parseRunwayVisualRange = (parser) => {\n    const { groups } = parser.matchNextTokenAndForward(\n        'R(?<runway>[0-9]{2})/(?<qualifier>M|P|)(?<distance>[0-9]{4})',\n    );\n    if (isNotNullOrUndefined(groups)) {\n        const { runway, qualifier, distance } = groups;\n\n        let qualifierP = RunwayVisualRangeQualifier.NONE;\n        if (qualifier === 'M') {\n            qualifierP = RunwayVisualRangeQualifier.AT_MOST;\n        } else if (qualifier === 'P') {\n            qualifierP = RunwayVisualRangeQualifier.AT_LEAST;\n        }\n\n        return {\n            tokenType: TokenTypes.RUNWAY_VISUAL_RANGE,\n            args: ['runway', 'qualifier', 'distance'],\n\n            runway,\n            qualifier: qualifier === '' ? null : qualifier,\n            distance,\n\n            qualifierP,\n            distanceP: 1 * distance,\n        };\n    }\n\n    return null;\n};\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { TokenTypes } from 'lib/metar/enums';\nimport { fixTemp, TemperaturePattern } from 'lib/metar/parsers/internal/temperatures';\n\nexport const parseTemperatures = (parser) => {\n    const { groups } = parser.matchNextTokenAndForward(\n        `(?<oat>${TemperaturePattern})/(?<dewPoint>${TemperaturePattern})`,\n    );\n\n    if (isNotNullOrUndefined(groups)) {\n        const { oat, dewPoint } = groups;\n\n        return {\n            tokenType: TokenTypes.TEMPERATURES,\n            args: ['oat', 'dewPoint'],\n\n            oat,\n            dewPoint,\n\n            oatP: fixTemp(oat),\n            dewPointP: fixTemp(dewPoint),\n        };\n    }\n    return null;\n};\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { TokenTypes } from 'lib/metar/enums';\nimport { buildVariableArgs } from 'lib/metar/parsers/internal/varargs';\n\nconst splitValues = (completeMatch) => completeMatch.trim().split(/\\s+/).map((value) => ({ value, parsed: value }));\n\nexport const parseColorSystems = (parser) => {\n    const { completeMatch } = parser.matchNextTokenAndForward('(((WHT|GRN|BLU|YLO|RED|BLACK)(\\\\+|-)?)\\\\s*)+');\n    if (isNotNullOrUndefined(completeMatch)) {\n        const colorData = buildVariableArgs('color', splitValues(completeMatch));\n        return {\n            tokenType: TokenTypes.COLOR_SYSTEMS,\n            args: [...colorData.colorArgs],\n\n            ...colorData,\n        };\n    }\n\n    return null;\n};\n","import { isNotNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { TokenTypes } from 'lib/metar/enums';\n\nexport const parseMissingData = (parser) => {\n    const { completeMatch } = parser.matchNextTokenAndForward('/+');\n\n    if (isNotNullOrUndefined(completeMatch)) {\n        return {\n            tokenType: TokenTypes.MISSING_DATA,\n            args: ['value'],\n            value: completeMatch,\n        };\n    }\n    return null;\n};\n","import React, { useEffect, useMemo, useState } from 'react';\n\nimport {\n    Button, Col, Form, Input, List, Row, Typography, Alert, notification,\n} from 'antd';\nimport PropTypes from 'prop-types';\nimport { styled, useStyletron, withStyle } from 'styletron-react';\n\nimport { CenteredContentContainer } from 'components/lib/CenteredContentContainer';\nimport { ExternalLink } from 'components/lib/ExternalLink';\nimport { Monospaced } from 'components/lib/Monospaced';\nimport { VerticalSpace, VWSpace } from 'components/lib/spaces';\nimport { TokenRenderers } from 'components/metar/renderers/mapping';\nimport { getFullBaseURL } from 'lib/getFullBaseURL';\nimport { isNotNullOrUndefined, isNullOrUndefined } from 'lib/isNullOrUndefined';\nimport { useMetarURLConfig } from 'lib/metar/hooks/useMetarURLConfig';\nimport { parseMETAR } from 'lib/metar/parser';\nimport { objectMap } from 'lib/objects';\nimport { pick } from 'lib/pick';\n\nconst { Title } = Typography;\n\nconst METARDataValueContainer = styled('div', {\n    display: 'flex',\n    alignItems: 'center', /* Vertical center alignment */\n    justifyContent: 'center', /* Horizontal center alignment */\n    height: '100%',\n    padding: '4px',\n});\n\nconst METARColumnContainer = styled('div', {\n    padding: '12px 0px',\n});\n\nconst METARDataValue = withStyle(Monospaced, {\n    fontSize: '1.2em',\n    fontWeight: 'bold',\n});\n\nconst Arg = withStyle(Monospaced, {\n    fontWeight: 'bold',\n});\n\nconst argWithColor = (color) => withStyle(Arg, (props) => ({\n    color,\n    textDecoration: props.$isEven ? undefined : 'underline',\n}));\n\nconst ArgComponents = [\n    '#2f66a9',\n    '#a9502f',\n    '#35771a',\n    '#a12fa9',\n    '#a9912f',\n    '#2fa98d',\n].map(argWithColor);\n\nconst ContextColors = [\n    'rgba(0,116,255,0.1)',\n    'rgba(255,135,0,0.15)',\n    'rgba(4,255,0,0.15)',\n];\n\nconst getArgumentComp = (idx) => ArgComponents[idx % ArgComponents.length];\n\nconst buildPrettyArgs = (data) => {\n    let counter = 0;\n    const result = {};\n\n    pick(data.args, []).forEach((argName) => {\n        const arg = data[argName];\n\n        if (isNullOrUndefined(arg)) {\n            return;\n        }\n\n        const Comp = getArgumentComp(counter);\n        result[argName] = <Comp $isEven={counter % 2 === 0}>{arg}</Comp>;\n        counter += 1;\n    });\n\n    return result;\n};\n\nconst DisplayInfo = ({ data }) => {\n    const [css] = useStyletron();\n\n    const prettyArgs = buildPrettyArgs(data);\n\n    const tokenTypeRenderers = pick(TokenRenderers[data.tokenType], {});\n\n    const result = {\n        renderValue: ({ data: { value } }) => <>{value}</>,\n        renderTitle: null,\n        renderShort: null,\n        renderDescription: null,\n        ...tokenTypeRenderers,\n    };\n\n    const {\n        renderedValue,\n        renderedTitle,\n        renderedShort,\n        renderedDescription,\n    } = objectMap(\n        {\n            renderedValue: result.renderValue,\n            renderedTitle: result.renderTitle,\n            renderedShort: result.renderShort,\n            renderedDescription: result.renderDescription,\n        },\n        (fn) => (isNullOrUndefined(fn) ? null : fn({ data, prettyArgs })),\n    );\n\n    let containerStyle = { width: '100%' };\n    let contentStyle = { padding: '0px 18px' };\n\n    if (isNotNullOrUndefined(data.context)) {\n        containerStyle = {\n            ...containerStyle,\n            backgroundColor: ContextColors[data.contextCounter % ContextColors.length],\n        };\n\n        if (!data.isFirstInContext) {\n            contentStyle = {\n                ...contentStyle,\n                backgroundColor: 'white',\n            };\n        }\n    }\n\n    return (\n        <div className={css(containerStyle)}>\n            <Row>\n                <Col span={6}>\n                    <METARColumnContainer>\n                        <METARDataValueContainer>\n                            <METARDataValue className=\"metar-data\">\n                                {renderedValue}\n                            </METARDataValue>\n                        </METARDataValueContainer>\n                    </METARColumnContainer>\n                </Col>\n\n                <Col span={18} className={css(contentStyle)}>\n                    <METARColumnContainer>\n                        {isNullOrUndefined(renderedTitle) ? null : (\n                            <Title level={5}>{renderedTitle}</Title>\n                        )}\n                        {isNullOrUndefined(renderedShort) ? null : (\n                            <>\n                                <strong>Short:</strong>\n                                {' '}\n                                {renderedShort}\n                            </>\n                        )}\n                    </METARColumnContainer>\n                </Col>\n            </Row>\n            {isNullOrUndefined(renderedDescription) ? null : (\n                <Row>\n                    <Col offset={6} span={18}>\n                        {renderedDescription}\n                    </Col>\n                </Row>\n            )}\n        </div>\n    );\n};\n\nDisplayInfo.propTypes = {\n    // eslint-disable-next-line react/forbid-prop-types\n    data: PropTypes.any.isRequired,\n};\n\nconst useShareableLinkHandler = ({ metarData, metarURLManager }) => useMemo(() => () => {\n    const url = `${getFullBaseURL()}${metarURLManager.buildURL(metarData)}`;\n\n    navigator.clipboard.writeText(url).then(() => {\n        notification.success({\n            message: 'Copy Successful',\n            description: 'A shareable link was successfully copied into your clipboard!',\n        });\n    });\n}, [metarURLManager, metarData]);\n\nexport const Metar = () => {\n    const [form] = Form.useForm();\n\n    // This is the data that was actually explained. Textarea content may be different if user changed it.\n    const [metarData, setMetarData] = useState('');\n\n    // This tracks whether there is data in the textarea, which enables the explain button.\n    const [explainButtonEnabled, setExplainButtonEnabled] = useState(false);\n\n    const updateExplainedButtonEnabledState = useMemo(\n        () => (value) => { setExplainButtonEnabled(value.replace(/\\s/g, '') !== ''); },\n        [setExplainButtonEnabled],\n    );\n\n    const { initialValue, metarURLManager } = useMetarURLConfig();\n\n    // Every time the state from the URL changes to a new value, we update current data. This is cleared\n    // automatically so this only happens when a shareable link is pasted.\n    useEffect(\n        () => {\n            form.setFieldsValue({ metarFieldData: initialValue });\n            setMetarData(initialValue);\n            updateExplainedButtonEnabledState(initialValue);\n        },\n        [initialValue],\n    );\n\n    // This helps track if the data in the textarea has changed, which disables the shareable link button\n    // until the metar is explained.\n    const [metarDataChanged, setMetarDataChanged] = useState(false);\n\n    // Whenever textarea data is changed, this event handler is called.\n    const onChangeMETAR = useMemo(\n        () => (event) => {\n            const metarFieldData = event.target.value;\n\n            setMetarDataChanged(metarData !== metarFieldData);\n            updateExplainedButtonEnabledState(metarFieldData);\n        },\n        [metarData, setMetarDataChanged],\n    );\n\n    // When Explain button is pressed, this event handler is called.\n    const onFinish = useMemo(() => ({ metarFieldData }) => {\n        setMetarData(metarFieldData);\n        setMetarDataChanged(false);\n    }, [setMetarData]);\n\n    // Data gets parsed every time it changes.\n    const parsedData = useMemo(() => {\n        const result = [];\n        const tokens = parseMETAR(metarData);\n\n        let currentContext = null;\n        let contextCounter = -1;\n\n        for (let idx = 0; idx < tokens.length; idx += 1) {\n            let isFirstInContext = false;\n            const token = tokens[idx];\n\n            if (currentContext !== token.context) {\n                currentContext = token.context;\n\n                contextCounter += 1;\n                isFirstInContext = true;\n            }\n\n            result.push({\n                ...token,\n\n                contextCounter,\n                isFirstInContext,\n            });\n        }\n\n        return result;\n    }, [metarData]);\n\n    // Handler for shareable button.\n    const onClickShareableLink = useShareableLinkHandler({ metarData, metarURLManager });\n\n    const shareableButtonDisabled = useMemo(\n        () => metarDataChanged || metarData === '',\n        [metarDataChanged, metarData],\n    );\n\n    return (\n        <CenteredContentContainer>\n            <Alert\n                message={(\n                    <>\n                        This is a new feature currently in testing stage (beta). It is based on the\n                        {' '}\n                        <ExternalLink href=\"https://library.wmo.int/doc_num.php?explnum_id=10474\">\n                            World Meteorogical Organization&apos;s METAR reference\n                        </ExternalLink>\n                        {' '}\n                        (\n                        <ExternalLink href=\"https://library.wmo.int/doc_num.php?explnum_id=10235\">\n                            Code Tables\n                        </ExternalLink>\n                        )\n                        . Please feel free to leave feedback on the\n                        {' '}\n                        <ExternalLink href=\"https://github.com/fmichea/flightsim-tools/issues\">\n                            issue tracker\n                        </ExternalLink>\n                        {' '}\n                        with improvement ideas or sample METAR that cannot be parsed, as this gets improved.\n                    </>\n                )}\n                type=\"warning\"\n            />\n\n            <VerticalSpace />\n\n            <Form\n                onFinish={onFinish}\n                autoComplete=\"off\"\n                form={form}\n                labelCol={{ span: 2 }}\n                wrapperCol={{ span: 22 }}\n            >\n                <Form.Item label=\"METAR\" name=\"metarFieldData\">\n                    <Input.TextArea onChange={onChangeMETAR} />\n                </Form.Item>\n\n                <Form.Item wrapperCol={{ offset: 2, span: 22 }}>\n                    <Button type=\"primary\" htmlType=\"submit\" disabled={!explainButtonEnabled}>\n                        Explain\n                    </Button>\n\n                    <VWSpace />\n\n                    <Button\n                        type=\"default\"\n                        htmlType=\"button\"\n                        onClick={onClickShareableLink}\n                        disabled={shareableButtonDisabled}\n                    >\n                        Copy Shareable Link\n                    </Button>\n                </Form.Item>\n            </Form>\n\n            <List\n                dataSource={parsedData}\n                renderItem={(item) => (\n                    <List.Item style={{ padding: '0' }}>\n                        <DisplayInfo data={item} />\n                    </List.Item>\n                )}\n            />\n        </CenteredContentContainer>\n    );\n};\n","import { isLocalServer } from 'lib/isLocalServer';\n\nexport const getFullBaseURL = () => {\n    let baseURL = 'https://fmichea.github.io';\n    if (isLocalServer()) {\n        baseURL = 'http://localhost:8081';\n    }\n    return `${baseURL}${process.env.PUBLIC_URL}/#`;\n};\n","import { listItemKey } from 'lib/checklist/listItemKey';\nimport { objectMap } from 'lib/objects';\nimport { intersection } from 'lib/sets';\nimport {\n    defaultChecklistListState,\n    defaultChecklistState,\n    INITIALIZE_CHECKLIST,\n    RESET_CHECKED_ITEMS,\n    RESET_LIST_CHECKED_ITEMS,\n    TOGGLE_HIDE_HELP_MODE, TOGGLE_HIDE_SWITCHES_MODE,\n    TOGGLE_HIDE_TAGS_MODE,\n    TOGGLE_ITEM,\n    TOGGLE_LEFT_HANDED_MODE,\n} from 'state/constants/checklist';\n\nconst initializeChecklist = (state, action) => {\n    const checkedItems = new Set(state.checkedItems);\n\n    return {\n        ...state,\n        counters: {\n            listItemsTotals: objectMap(action.checklistLists, (items) => items.length),\n            listItemsChecked: objectMap(action.checklistLists, (items) => {\n                const itemsSet = new Set(items);\n                return Array.from(intersection(itemsSet, checkedItems)).length;\n            }),\n        },\n    };\n};\n\nconst checkItem = (state, checklistListName, itemKey) => ({\n    ...state,\n    counters: {\n        ...state.counters,\n        listItemsChecked: {\n            ...state.counters.listItemsChecked,\n            [checklistListName]: state.counters.listItemsChecked[checklistListName] + 1,\n        },\n    },\n    checkedItems: [...state.checkedItems, itemKey],\n});\n\nconst uncheckItem = (state, checklistListName, itemKey) => ({\n    ...state,\n    counters: {\n        ...state.counters,\n        listItemsChecked: {\n            ...state.counters.listItemsChecked,\n            [checklistListName]: state.counters.listItemsChecked[checklistListName] - 1,\n        },\n    },\n    checkedItems: state.checkedItems.filter((item) => item !== itemKey),\n});\n\nconst checklistListReducer = (state = defaultChecklistListState, action) => {\n    switch (action.type) {\n    case INITIALIZE_CHECKLIST:\n        return initializeChecklist(state, action);\n\n    case RESET_CHECKED_ITEMS:\n        return {\n            ...state,\n            counters: {\n                ...state.counters,\n                listItemsChecked: objectMap(state.counters.listItemsChecked, () => 0),\n            },\n            checkedItems: [],\n        };\n\n    case RESET_LIST_CHECKED_ITEMS:\n        return {\n            ...state,\n            counters: {\n                ...state.counters,\n                listItemsChecked: objectMap(\n                    state.counters.listItemsChecked,\n                    (value, key) => (key === action.checklistListName ? 0 : value),\n                ),\n            },\n            checkedItems: state.checkedItems.filter((value) => !value.startsWith(listItemKey(\n                action.checklistName,\n                action.checklistListName,\n                '',\n            ))),\n        };\n\n    case TOGGLE_ITEM:\n        if (state.checkedItems.includes(action.itemKey)) {\n            return uncheckItem(state, action.checklistListName, action.itemKey);\n        }\n        return checkItem(state, action.checklistListName, action.itemKey);\n\n    default:\n        return state;\n    }\n};\n\nconst toggleGlobalConfig = (state, fn) => ({\n    ...state,\n    config: {\n        ...state.config,\n        ...fn(state.config),\n    },\n});\n\nexport const checklistReducer = (state = defaultChecklistState, action) => {\n    switch (action.type) {\n    case TOGGLE_LEFT_HANDED_MODE:\n        return toggleGlobalConfig(state, (config) => ({ leftHandedMode: !config.leftHandedMode }));\n\n    case TOGGLE_HIDE_TAGS_MODE:\n        return toggleGlobalConfig(state, (config) => ({ hideTagsMode: !config.hideTagsMode }));\n\n    case TOGGLE_HIDE_HELP_MODE:\n        return toggleGlobalConfig(state, (config) => ({ hideHelpMode: !config.hideHelpMode }));\n\n    case TOGGLE_HIDE_SWITCHES_MODE:\n        return toggleGlobalConfig(state, (config) => ({ hideSwitchesMode: !config.hideSwitchesMode }));\n\n    case INITIALIZE_CHECKLIST:\n    case TOGGLE_ITEM:\n    case RESET_CHECKED_ITEMS:\n    case RESET_LIST_CHECKED_ITEMS:\n        return {\n            ...state,\n            lists: {\n                ...state.lists,\n                [action.checklistName]: checklistListReducer(\n                    state.lists[action.checklistName],\n                    action,\n                ),\n            },\n        };\n\n    default:\n        return state;\n    }\n};\n","export const intersection = (setA, setB) => {\n    const result = new Set();\n\n    Array.from(setB).forEach((elem) => {\n        if (setA.has(elem)) {\n            result.add(elem);\n        }\n    });\n    return result;\n};\n","import { combineReducers } from 'redux';\n\nimport { checklistReducer } from 'state/reducers/checklist';\n\nexport const reducers = combineReducers({\n    checklist: checklistReducer,\n});\n","import { applyMiddleware, createStore } from 'redux';\nimport logger from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\n\nimport { isLocalServer } from 'lib/isLocalServer';\nimport { reducers } from 'state/reducers';\n\nexport const createAppStore = () => {\n    let middlewares = [thunkMiddleware];\n\n    if (isLocalServer()) {\n        middlewares = [...middlewares, logger];\n    }\n\n    return createStore(reducers, applyMiddleware(...middlewares));\n};\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\nimport { Route, Switch } from 'react-router';\nimport { HashRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { Client as Styletron } from 'styletron-engine-atomic';\nimport { Provider as StyletronProvider } from 'styletron-react';\n\nimport { AntiIce } from 'components/anti-ice/AntiIce';\nimport { Checklist } from 'components/checklists/Checklist';\nimport { Layout } from 'components/layout/Layout';\nimport { MainPage } from 'components/MainPage';\nimport { Metar } from 'components/metar/Metar';\nimport {\n    AntiIceWithNameAndOperationModeNameRoute,\n    AntiIceWithNameRoute,\n    ChecklistsWithNameAndListNameRoute,\n    ChecklistsWithNameRoute,\n    MetarExplainerRoute,\n} from 'lib/routes';\nimport { createAppStore } from 'state/store';\n\nconst AppLayout = () => (\n    <Layout>\n        <Switch>\n            <Route exact path={ChecklistsWithNameAndListNameRoute} component={Checklist} />\n            <Route exact path={ChecklistsWithNameRoute} component={Checklist} />\n            <Route exact path={AntiIceWithNameAndOperationModeNameRoute} component={AntiIce} />\n            <Route exact path={AntiIceWithNameRoute} component={AntiIce} />\n            <Route exact path={MetarExplainerRoute} component={Metar} />\n            <Route exact path=\"/\" component={MainPage} />\n        </Switch>\n    </Layout>\n);\n\nconst withRouter = () => (Component) => (props) => (\n    <HashRouter>\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n        <Component {...props} />\n    </HashRouter>\n);\n\nconst withStore = () => (Component) => (props) => (\n    <Provider store={createAppStore()}>\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n        <Component {...props} />\n    </Provider>\n);\n\nconst withStyletron = () => (Component) => (props) => (\n    <StyletronProvider value={new Styletron()}>\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n        <Component {...props} />\n    </StyletronProvider>\n);\n\nconst enhance = compose(\n    withRouter(),\n    withStore(),\n    withStyletron(),\n);\n\nexport const App = enhance(AppLayout);\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\n\nimport { App } from 'App';\n\nimport 'reset-css';\nimport 'antd/dist/antd.css';\n\nconst root = document.getElementById('root') || document.createElement('div');\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    root,\n);\n"],"sourceRoot":""}